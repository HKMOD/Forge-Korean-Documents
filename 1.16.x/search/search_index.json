{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0 \ubb38\uc11c \uc774\ub294 \ud55c\uad6d\uc5b4\ub85c \ubc88\uc5ed\ub41c \ube44\uacf5\uc2dd \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0 \ubb38\uc11c \uc785\ub2c8\ub2e4. \uc774\uacf3\uc758 \ubb38\uc11c\ub4e4\uc740 \uc624\uc9c1 \ud3ec\uc9c0\ub9cc \ub2e4\ub8f9\ub2c8\ub2e4. Java \uac00\uc774\ub4dc\uac00 \uc544\ub2d9\ub2c8\ub2e4 . \uae43\ud5d9 \uc5d0\uc11c \ubb38\uc11c\uc5d0 \uae30\uc5ec\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uacf3 \uc5d0\uc11c \uc6d0\ubcf8 \ud3ec\uc9c0 \ubb38\uc11c\ub97c \ucc38\uace0\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Home"},{"location":"#_1","text":"\uc774\ub294 \ud55c\uad6d\uc5b4\ub85c \ubc88\uc5ed\ub41c \ube44\uacf5\uc2dd \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0 \ubb38\uc11c \uc785\ub2c8\ub2e4. \uc774\uacf3\uc758 \ubb38\uc11c\ub4e4\uc740 \uc624\uc9c1 \ud3ec\uc9c0\ub9cc \ub2e4\ub8f9\ub2c8\ub2e4. Java \uac00\uc774\ub4dc\uac00 \uc544\ub2d9\ub2c8\ub2e4 . \uae43\ud5d9 \uc5d0\uc11c \ubb38\uc11c\uc5d0 \uae30\uc5ec\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uacf3 \uc5d0\uc11c \uc6d0\ubcf8 \ud3ec\uc9c0 \ubb38\uc11c\ub97c \ucc38\uace0\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0 \ubb38\uc11c"},{"location":"styleguide/","text":"\uc2a4\ud0c0\uc77c \uac00\uc774\ub4dc \uc774 \ubb38\uc11c\uc5d0 \uae30\uc5ec\ud558\ub294 \ubc29\ubc95 \uc774 \ubb38\uc11c\ub294 \ud3ec\uc9c0 \uacf5\uc2dd \ubb38\uc11c\uc758 \uc2a4\ud0c0\uc77c \uac00\uc774\ub4dc \ub77c\uc778\uc744 \ub530\ub974\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uadf8\ub807\uc9c0 \uc54a\uc740 \uc810\uc774 \uc788\ub2e4\uba74 \uc774\uc288 \uc81c\uae30\ud558\uc5ec \uc8fc\uc138\uc694. \uc774 \ubb38\uc11c\ub294 \uc124\uba85\uc801\uc73c\ub85c \uc791\uc131\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ubb34\uc5b8\uac00\ub97c \uc5b4\ub5bb\uac8c \ud558\ub294\uc9c0\ub97c \uc791\uc740 \ubd80\ubd84\uc73c\ub85c \ub098\ub204\uc5b4 \uc124\uba85\ud574\uc57c \ud569\ub2c8\ub2e4. \ud3ec\uc9c0\ub294 \uacf5\uc2dd\uc801\uc73c\ub85c \ubcf4\ub2e4 \ud3ec\uad04\uc801\uc778 \uc608\uc81c\ub4e4\uc744 \uc62c\ub824\ub193\uc744 \uc218 \uc788\ub294 \uc704\ud0a4\ub97c \ub530\ub85c \uc6b4\uc601\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubb38\uc11c\ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0\ub97c \uc0ac\uc6a9\ud574 \ubaa8\ub4dc\ub97c \uc5b4\ub5bb\uac8c \ub9cc\ub4e4 \uc218 \uc788\ub294\uc9c0 \uc54c\uace0 \uc2f6\uc740 \uc774\ub4e4\uc744 \uc704\ud55c \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 \uc774 \ubb38\uc11c\ub97c Java \uac1c\ubc1c \ubb38\uc11c \ud29c\ud1a0\ub9ac\uc5bc\ucc98\ub7fc \uc791\uc131\ud558\uc9c0 \ub9d0\uc544\uc8fc\uc138\uc694 - \uc774\ub294 \uc774\ubbf8 \ud074\ub798\uc2a4\uc640 \uac19\uc740 \uc5ec\ub7ec Java \uc758 \uae30\ubcf8 \uac1c\ub150\ub4e4\uc744 \uc774\ubbf8 \uc54c\uace0 \uc788\ub294 \uc0ac\ub78c\ub4e4\uc744 \uc704\ud55c \uac83\uc785\ub2c8\ub2e4. \uc11c\uc2dd Important \ub4e4\uc5ec\uc4f8\ub54c\ub294 \uaf2d tab \ub9d0\uace0 \ub744\uc5b4\uc4f0\uae30 2\ubc88 \uc744 \ud574\uc8fc\uc138\uc694. \ub9de\ucda4\ubc95, \ubb38\ubc95 \ub4f1\uc740 \ud45c\uc900\uc5b4\ub97c \uc0ac\uc6a9\ud558\uba70, \ucd95\uc57d\uc5b4\ubcf4\ub2e4 \ubd84\ub9ac\ub41c \ub2e8\uc5b4\ub4e4\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uc120\ud638\ud574 \uc8fc\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4. \ub610\ud55c -\uc74c, -\uadf8\ub7ec\ud568. \uc2dd\uc73c\ub85c \ub05d\ub0b4\uae30 \ubcf4\ub2e4\ub294 -\uc694. -\ub2e4. \ub85c \ubb38\uc7a5\uc744 \ub05d\ub0b4 \uc8fc\uc138\uc694. # \ub098 ## \ub300\uc2e0 = \ub610\ub294 _ \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc8fc\uc138\uc694. h3 \ub610\ub294 \uadf8 \ud558\uc704 \uad6c\ud68d \uc81c\ubaa9\uc5d0\ub294 ### \ub4f1\uc744 \uc0ac\uc6a9\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. \uc774 \ud398\uc774\uc9c0\uc758 \uc18c\uc2a4\uc5d0\ub294 = \uc640 _ \ub97c \uc0ac\uc6a9\ud558\ub294 \uc608\uc2dc\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. = \ub85c \ubc11\uc904\uc744 \uadf8\uc73c\uba74 h1 \uc81c\ubaa9\uc774, _ \ub85c \ubc11\uc904\uc744 \uadf8\uc73c\uba74 h2 \uc81c\ubaa9\uc774 \ub429\ub2c8\ub2e4. \ucf54\ub4dc \uc870\uac01 \uc678\ubd80\uc5d0 \uc788\ub294 \uba54\uc11c\ub4dc\ub098 \ud544\ub4dc\ub97c \ucc38\uc870\ud560 \ub54c\ub294 # \ub85c \uad6c\ubd84\ud574 \uc8fc\uc138\uc694(\uc608: \ud074\ub798\uc2a4\uc774\ub984#\uba54\uc11c\ub4dc\uc774\ub984 ). \ub0b4\ubd80 \ud074\ub798\uc2a4\ub4e4\uc740 $ \ub85c \uad6c\ubd84\ud558\uc5ec \uc8fc\uc138\uc694(\uc608: \ud074\ub798\uc2a4\uc774\ub984$\ub0b4\ubd80\ud074\ub798\uc2a4\uc774\ub984 ). \ub2e4\ub978 \ud398\uc774\uc9c0\ub85c \uc774\uc5b4\uc9c0\ub294 \ub9c1\ud06c\ub4e4\uc758 URL \uc740 \ud398\uc774\uc9c0 \ub9e8 \uc544\ub798\uc5d0 \uc9c0\uc815\ud574 \uc8fc\uc138\uc694. \ub2e4\ub978 \ubb38\uc11c \ud398\uc774\uc9c0\ub85c \uc774\uc5b4\uc9c0\ub294 \ub9c1\ud06c\ub4e4\uc740 \uc0c1\ub300 \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud574\uc11c \ucc38\uc870\ud574 \uc8fc\uc138\uc694. \uc900\uc218\uc0ac\ud56d ( !!! <type> \ub85c \ud45c\uae30\ud568)\uc740 \uae30\uc220 \ub41c \ub300\ub85c \ud3ec\ub9e4\ud305 \ub418\uc5b4\uc788\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4; \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ub80c\ub354\ub9c1\uc774 \uc774\uc0c1\ud558\uac8c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubb38\uc11c \uc2a4\ud0c0\uc77c \uac00\uc774\ub4dc"},{"location":"styleguide/#_1","text":"","title":"\uc2a4\ud0c0\uc77c \uac00\uc774\ub4dc"},{"location":"styleguide/#_2","text":"\uc774 \ubb38\uc11c\ub294 \ud3ec\uc9c0 \uacf5\uc2dd \ubb38\uc11c\uc758 \uc2a4\ud0c0\uc77c \uac00\uc774\ub4dc \ub77c\uc778\uc744 \ub530\ub974\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uadf8\ub807\uc9c0 \uc54a\uc740 \uc810\uc774 \uc788\ub2e4\uba74 \uc774\uc288 \uc81c\uae30\ud558\uc5ec \uc8fc\uc138\uc694. \uc774 \ubb38\uc11c\ub294 \uc124\uba85\uc801\uc73c\ub85c \uc791\uc131\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ubb34\uc5b8\uac00\ub97c \uc5b4\ub5bb\uac8c \ud558\ub294\uc9c0\ub97c \uc791\uc740 \ubd80\ubd84\uc73c\ub85c \ub098\ub204\uc5b4 \uc124\uba85\ud574\uc57c \ud569\ub2c8\ub2e4. \ud3ec\uc9c0\ub294 \uacf5\uc2dd\uc801\uc73c\ub85c \ubcf4\ub2e4 \ud3ec\uad04\uc801\uc778 \uc608\uc81c\ub4e4\uc744 \uc62c\ub824\ub193\uc744 \uc218 \uc788\ub294 \uc704\ud0a4\ub97c \ub530\ub85c \uc6b4\uc601\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubb38\uc11c\ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0\ub97c \uc0ac\uc6a9\ud574 \ubaa8\ub4dc\ub97c \uc5b4\ub5bb\uac8c \ub9cc\ub4e4 \uc218 \uc788\ub294\uc9c0 \uc54c\uace0 \uc2f6\uc740 \uc774\ub4e4\uc744 \uc704\ud55c \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 \uc774 \ubb38\uc11c\ub97c Java \uac1c\ubc1c \ubb38\uc11c \ud29c\ud1a0\ub9ac\uc5bc\ucc98\ub7fc \uc791\uc131\ud558\uc9c0 \ub9d0\uc544\uc8fc\uc138\uc694 - \uc774\ub294 \uc774\ubbf8 \ud074\ub798\uc2a4\uc640 \uac19\uc740 \uc5ec\ub7ec Java \uc758 \uae30\ubcf8 \uac1c\ub150\ub4e4\uc744 \uc774\ubbf8 \uc54c\uace0 \uc788\ub294 \uc0ac\ub78c\ub4e4\uc744 \uc704\ud55c \uac83\uc785\ub2c8\ub2e4.","title":"\uc774 \ubb38\uc11c\uc5d0 \uae30\uc5ec\ud558\ub294 \ubc29\ubc95"},{"location":"styleguide/#_3","text":"Important \ub4e4\uc5ec\uc4f8\ub54c\ub294 \uaf2d tab \ub9d0\uace0 \ub744\uc5b4\uc4f0\uae30 2\ubc88 \uc744 \ud574\uc8fc\uc138\uc694. \ub9de\ucda4\ubc95, \ubb38\ubc95 \ub4f1\uc740 \ud45c\uc900\uc5b4\ub97c \uc0ac\uc6a9\ud558\uba70, \ucd95\uc57d\uc5b4\ubcf4\ub2e4 \ubd84\ub9ac\ub41c \ub2e8\uc5b4\ub4e4\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uc120\ud638\ud574 \uc8fc\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4. \ub610\ud55c -\uc74c, -\uadf8\ub7ec\ud568. \uc2dd\uc73c\ub85c \ub05d\ub0b4\uae30 \ubcf4\ub2e4\ub294 -\uc694. -\ub2e4. \ub85c \ubb38\uc7a5\uc744 \ub05d\ub0b4 \uc8fc\uc138\uc694. # \ub098 ## \ub300\uc2e0 = \ub610\ub294 _ \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc8fc\uc138\uc694. h3 \ub610\ub294 \uadf8 \ud558\uc704 \uad6c\ud68d \uc81c\ubaa9\uc5d0\ub294 ### \ub4f1\uc744 \uc0ac\uc6a9\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. \uc774 \ud398\uc774\uc9c0\uc758 \uc18c\uc2a4\uc5d0\ub294 = \uc640 _ \ub97c \uc0ac\uc6a9\ud558\ub294 \uc608\uc2dc\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. = \ub85c \ubc11\uc904\uc744 \uadf8\uc73c\uba74 h1 \uc81c\ubaa9\uc774, _ \ub85c \ubc11\uc904\uc744 \uadf8\uc73c\uba74 h2 \uc81c\ubaa9\uc774 \ub429\ub2c8\ub2e4. \ucf54\ub4dc \uc870\uac01 \uc678\ubd80\uc5d0 \uc788\ub294 \uba54\uc11c\ub4dc\ub098 \ud544\ub4dc\ub97c \ucc38\uc870\ud560 \ub54c\ub294 # \ub85c \uad6c\ubd84\ud574 \uc8fc\uc138\uc694(\uc608: \ud074\ub798\uc2a4\uc774\ub984#\uba54\uc11c\ub4dc\uc774\ub984 ). \ub0b4\ubd80 \ud074\ub798\uc2a4\ub4e4\uc740 $ \ub85c \uad6c\ubd84\ud558\uc5ec \uc8fc\uc138\uc694(\uc608: \ud074\ub798\uc2a4\uc774\ub984$\ub0b4\ubd80\ud074\ub798\uc2a4\uc774\ub984 ). \ub2e4\ub978 \ud398\uc774\uc9c0\ub85c \uc774\uc5b4\uc9c0\ub294 \ub9c1\ud06c\ub4e4\uc758 URL \uc740 \ud398\uc774\uc9c0 \ub9e8 \uc544\ub798\uc5d0 \uc9c0\uc815\ud574 \uc8fc\uc138\uc694. \ub2e4\ub978 \ubb38\uc11c \ud398\uc774\uc9c0\ub85c \uc774\uc5b4\uc9c0\ub294 \ub9c1\ud06c\ub4e4\uc740 \uc0c1\ub300 \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud574\uc11c \ucc38\uc870\ud574 \uc8fc\uc138\uc694. \uc900\uc218\uc0ac\ud56d ( !!! <type> \ub85c \ud45c\uae30\ud568)\uc740 \uae30\uc220 \ub41c \ub300\ub85c \ud3ec\ub9e4\ud305 \ub418\uc5b4\uc788\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4; \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ub80c\ub354\ub9c1\uc774 \uc774\uc0c1\ud558\uac8c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc11c\uc2dd"},{"location":"advanced/accesstransformers/","text":"\uc811\uadfc \ubcc0\ud658\uc790 \uc811\uadfc \ubcc0\ud658\uc790 (AccessTransformer, AT\ub77c\uace0 \uc9e7\uac8c \ubd80\ub974\uae30\ub3c4 \ud569\ub2c8\ub2e4.)\ub294 \ud074\ub798\uc2a4, \uba54\uc11c\ub4dc, \ud544\ub4dc\uc758 \uac00\uc2dc\uc131\uc744 \ud655\ub300\uc2dc\ud0a4\uac70\ub098, final \ud0a4\uc6cc\ub4dc \uc720\ubb34 \uc5ec\ubd80\ub97c \ubcc0\uacbd\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud558\uc5ec \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc774 \uc811\uadfc \ubd88\uac00\ub2a5\ud55c \ud074\ub798\uc2a4 \uba64\ubc84\uc5d0 \uc811\uadfc\ud558\uace0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc774\uc5d0 \uad00\ud55c \uacf5\uc2dd \ud3ec\uc9c0 \ubb38\uc11c \ub97c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0 \uae43\ud5d9 \ud398\uc774\uc9c0\uc5d0\uc11c \ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AT \ucd94\uac00\ud558\uae30 \uc811\uadfc \ubcc0\ud658\uc790\ub97c \ubaa8\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740, build.gradle \uc5d0 \uc904 \ud558\ub098 \ucd94\uac00\ud558\ub294 \uac83 \ub9cc\ud07c \uac04\ub2e8\ud569\ub2c8\ub2e4: // \uc774 \ube14\ub85d\uc740 \ub9e4\ud551 \ucc44\ub110\uacfc \ubc84\uc804\uc744 \uc9c0\uc815\ud558\ub294 \uacf3\uc774\uae30\ub3c4 \ud569\ub2c8\ub2e4. minecraft { accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') } \uc811\uadfc \ubcc0\ud658\uc790\ub97c \ucd94\uac00\ud558\uac70\ub098 \uc218\uc815\ud558\uc2e0 \uc774\ud6c4, Gradle \ud504\ub85c\uc81d\ud2b8\ub97c \uc0c8\ub85c\uace0\uce68 \ud558\uc154\uc57c\ub9cc \uc811\uadfc \ubcc0\ud658\uc790\uac00 \uc801\uc6a9\ub429\ub2c8\ub2e4. \uac1c\ubc1c \ub3c4\uc911\uc5d0\ub294 \uc811\uadfc \uc81c\ud55c\uc790 \uc124\uc815 \ud30c\uc77c\uc774 \ud504\ub85c\uc81d\ud2b8 \uc5b4\ub514\uc5d0\ub098 \uc704\uce58\ud558\uc5ec\ub3c4 \uc0c1\uad00 \uc5c6\uc73c\ub098, \ubaa8\ub4dc\ub97c \uac1c\ubc1c\ud658\uacbd \ubc16\uc5d0\uc11c \ubd88\ub7ec\uc62c \ub54c\uc5d0\ub294 JAR \uc548\uc758 META-INF/accesstransformer.cfg \uc5d0 \uc704\uce58\ud558\uc5ec\uc57c\ub9cc \uc815\uc0c1\uc801\uc73c\ub85c \ubd88\ub7ec\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\uc11d # \ub85c \uc2dc\uc791\ud558\ub294 \uc904\uc740 \uc8fc\uc11d\uc73c\ub85c \ucc98\ub9ac\ub418\uba70 \ubb34\uc2dc\ub429\ub2c8\ub2e4. \uc811\uadfc \uc218\uc815\uc790 \uc811\uadfc \uc218\uc815\uc790\ub294 \ud0c0\uac9f\uc774 \uac00\uc9c0\uac8c \ub420 \uc0c8\ub85c\uc6b4 \uac00\uc2dc\uc131\uc744 \uc815\uc758\ud569\ub2c8\ub2e4. \uac00\uc2dc\uc131\uc744 \uae30\uc900\uc73c\ub85c \uc704\uc5d0\uc11c \uc544\ub798\ub85c \uc815\ub82c\ud558\uba74: public - \ud328\ud0a4\uc9c0 \uc548, \ub610\ub294 \ubc16\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \ud074\ub798\uc2a4\uc5d0\uc11c \uc811\uadfc\ud560 \uc218 \uc788\uc74c protected - \ud328\ud0a4\uc9c0 \uc548\uc5d0 \uc788\ub294 \ud074\ub798\uc2a4, \ub610\ub294 \uc790\uc2dd \ud074\ub798\uc2a4\uc5d0\uc11c\ub9cc \uc811\uadfc\ud560 \uc218 \uc788\uc74c default - \ud328\ud0a4\uc9c0 \ub0b4\ubd80\uc5d0 \uc788\ub294 \ud074\ub798\uc2a4\uc5d0\uc11c\ub9cc \uc811\uadfc\ud560 \uc218 \uc788\uc74c private - \ud074\ub798\uc2a4 \ub0b4\ubd80\uc5d0\uc11c\ub9cc \uc811\uadfc\ud560 \uc218 \uc788\uc74c +f \uc640 -f \ub294 \ud2b9\uc218\ud55c \uc218\uc815\uc790\ub85c, \uae30\uc874\uc758 \ub2e4\ub978 \uc218\uc815\uc790\uc5d0 \ucd94\uac00\ub420 \uc218 \uc788\uc73c\uba70, \ud0c0\uac9f\uc758 final \ud0a4\uc6cc\ub4dc\ub97c \uc81c\uac70\ud558\uac70\ub098 \ucd94\uac00\ud558\uc5ec, \uae30\uc874\uc5d0\ub294 \ubd88\uac00\ub2a5\ud558\ub358 \uc790\uc2dd \ud074\ub798\uc2a4 \uc0dd\uc131\uc774\ub098, \uba54\uc11c\ub4dc \uc624\ubc84\ub77c\uc774\ub529, \ub610\ub294 \ud544\ub4dc \uac12 \ubcc0\uacbd \ub4f1\uc744 \uac00\ub2a5\ud558\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. Warning \ud0c0\uac9f\uc744 \uc9c0\uc815\ud560 \uc2dc, \uc9c1\uc811\uc801\uc73c\ub85c \uac00\ub9ac\ud0a4\ub294 \uba54\uc11c\ub4dc\ub9cc \ubcc0\ud658\ud569\ub2c8\ub2e4; \uc774\ub97c \uc624\ubc84\ub77c\uc774\ub529\ud558\ub294 \uc790\uc2dd \ud074\ub798\uc2a4\uc758 \uba54\uc11c\ub4dc\ub4e4\uc740 \uc811\uadfc \uc81c\ud55c\uc790 \ubcc0\ud658\uc774 \uc774\ub8e8\uc5b4\uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub54c\ubb38\uc5d0, \uc790\uc2dd \uba54\uc11c\ub4dc\uac00 \ubd80\ubaa8 \uba54\uc11c\ub4dc\ubcf4\ub2e4 \ub354 \ub0ae\uc740 \uac00\uc2dc\uc131\uc744 \uac00\uc9c0\uac8c \uac00\uc9c0\uac8c \ub418\uc5b4 JVM \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc73c\ub2c8 \ubcc0\ud658\ud558\uace0\uc790 \ud558\ub294 \uba54\uc11c\ub4dc\uac00 \ubcc0\ud658\ub418\uc9c0 \uc54a\uc740 \uc624\ubc84\ub77c\uc774\ub4dc\ub97c \uac00\uc9c0\uc9c0 \uc54a\ub3c4\ub85d \uc8fc\uc758\ud558\uc138\uc694. \ubcc0\ud658\ub418\uc5b4\ub3c4 \uc548\uc804\ud55c \uba54\uc11c\ub4dc\uc758 \uc608\uc2dc\ub294 private \uba54\uc11c\ub4dc\ub098 final \uba54\uc11c\ub4dc(\ub610\ub294 final \ud074\ub798\uc2a4\uc5d0 \uc815\uc758\ub41c \uba54\uc11c\ub4dc), \uadf8\ub9ac\uace0 static (\uc815\uc801) \uba54\uc11c\ub4dc\ub4e4 \uc785\ub2c8\ub2e4. \uc774\ub4e4\uc740 \uc624\ubc84\ub77c\uc774\ub4dc\uac00 \ubd88\uac00\ub2a5\ud558\uae30\uc5d0 \uc704\uc640 \uac19\uc740 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ubcc0\ud658 \ud0c0\uac9f \uc9c0\uc815\ud558\uae30 Important \uc811\uadfc \ubcc0\ud658\uc790\ub97c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud074\ub798\uc2a4\uc5d0 \uc0ac\uc6a9\ud560\ub54c, \ud544\ub4dc\ub098 \uba54\uc11c\ub4dc \uc774\ub984\uc73c\ub85c SRG \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \ud074\ub798\uc2a4 \ud074\ub798\uc2a4\ub97c \uc9c0\uc815\ud558\ub824\uba74: <\uc811\uadfc \uc218\uc815\uc790> <\uc644\uc804\ud55c \ud074\ub798\uc2a4 \uc774\ub984> \ub0b4\ubd80 \ud074\ub798\uc2a4\ub4e4\uc740, \uc678\ubd80 \ud074\ub798\uc2a4\uc758 \uc644\uc804\ud55c \uc774\ub984\uacfc \ub0b4\ubd80 \ud074\ub798\uc2a4\uc758 \uc774\ub984\uc744 $ \ub85c \ubd84\ub9ac\ud558\uc5ec \ud45c\uc2dc\ud569\ub2c8\ub2e4. \ud544\ub4dc \ud544\ub4dc\ub97c \uc9c0\uc815\ud558\ub824\uba74: <\uc811\uadfc \uc218\uc815\uc790> <\uc644\uc804\ud55c \ud074\ub798\uc2a4 \uc774\ub984> <\ud544\ub4dc \uc774\ub984> \uba54\uc11c\ub4dc \uba54\uc11c\ub4dc\ub97c \uc9c0\uc815\ud558\ub294 \uac83\uc740 \ud2b9\uc218\ud55c \ubb38\ubc95\uc744 \ud1b5\ud558\uc5ec \uba54\uc11c\ub4dc\uc758 \uc778\uc790\ub4e4\uacfc \ubc18\ud658 \ud0c0\uc785\uae4c\uc9c0 \ud45c\uc2dc\ud569\ub2c8\ub2e4: <\uc811\uadfc \uc218\uc815\uc790> <\uc644\uc804\ud55c \ud074\ub798\uc2a4 \uc774\ub984> <\uba54\uc11c\ub4dc \uc774\ub984>(<\uc778\uc790\uc758 \ud0c0\uc785\ub4e4>)<\ubc18\ud658 \ud0c0\uc785> Specifying Types \uc774\ub294 \u201c\ud544\ub4dc \ub514\uc2a4\ud06c\ub9bd\ud130\u201d\ub77c\uace0 \ubd88\ub9ac\uae30\ub3c4 \ud569\ub2c8\ub2e4.\uc790\uc138\ud55c \uc0ac\ud56d\uc740 Oracle \uae30\uc220 \ubb38\uc11c\uc5d0\uc11c \ud655\uc778\ud558\uc138\uc694(Java Virtual Machine Specification, SE 8, sections 4.3.2 and 4.3.3) B - byte , \ubd80\ud638\uac00 \uc788\ub294 \ubc14\uc774\ud2b8 C - char , UTF-16 \uc720\ub2c8\ucf54\ub4dc \ubb38\uc790 \ubc88\ud638 D - double , \ubc30\uc815\ubc00\ub3c4 \ubd80\ub3d9 \uc18c\uc218\uc810 F - float , \ub2e8\uc815\ubc00\ub3c4 \ubd80\ub3d9 \uc18c\uc218\uc810 I - integer , 32\ube44\ud2b8 \uc815\uc218 J - long , 64\ube44\ud2b8 \uc815\uc218 S - short , \ubd80\ud638\uac00 \uc788\ub294 16\ube44\ud2b8 \uc815\uc218 Z - boolean , true \ub610\ub294 false \uc778 \uac12 [ - \ubc30\uc5f4\uc758 \ucc28\uc6d0 1\uac1c\ub97c \ud45c\uc2dc\ud568 \uc608: [[S \ub294 short[][] \ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4 L<class name>; - \ucc38\uc870 \ud0c0\uc785\uc744 \ucc38\uc870\ud568 \uc608: Ljava/lang/String; \ub294 \ucc38\uc870 \ud0c0\uc785 java.lang.String \ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4 (\ube57\uae08 \ub300\uc2e0 \ub9c8\uce68\ud45c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4) ( - \uba54\uc11c\ub4dc \ub514\uc2a4\ud06c\ub9bd\ud130\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4, \uc778\uc790\ub4e4\uc740 \uc788\ub2e4\uba74 \uc774\uacf3\uc5d0\uc11c \uae30\uc220\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4 \uc608: <method>(I)Z \ub294 \uc778\uc790\ub85c Int 1\uac1c\ub97c \ubc1b\uace0 Boolean\uc744 \ubc18\ud658\ud558\ub294 \uba54\uc11c\ub4dc\ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4 V - \ubc18\ud658\ud558\ub294 \uac12\uc774 \uc5c6\ub294 \uba54\uc11c\ub4dc\ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4, \uba54\uc11c\ub4dc \ub514\uc2a4\ud06c\ub9bd\ud130 \ub9e8 \ub4a4\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 \uc608: <method>()V \ub294 \ubc1b\ub294 \uc778\uc790\uac00 \uc5c6\uc73c\uba70 \ubc18\ud658\ud558\ub294 \uac12\ub3c4 \uc5c6\ub294 \uba54\uc11c\ub4dc\ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4 \uc608\uc81c\ub4e4 # ScreenManager \ud074\ub798\uc2a4\uc758 \ub0b4\ubd80\uc758 IScreenFactory\ub97c public\uc73c\ub85c \ub9cc\ub4ed\ub2c8\ub2e4 public net.minecraft.client.gui.ScreenManager$IScreenFactory # MinecraftServer\uc758 'random' \ud544\ub4dc\ub97c protected\ub85c \ub9cc\ub4e4\uace0 final \ud0a4\uc6cc\ub4dc\ub97c \uc81c\uac70\ud569\ub2c8\ub2e4 protected-f net.minecraft.server.MinecraftServer field_147146_q #random # Util\uc5d0 \uc788\ub294 String\uc744 \uc778\uc790\ub85c \ubc1b\uace0 ExecutorService\ub97c \ubc18\ud658\ud558\ub294, # 'makeExecutor' \uba54\uc11c\ub4dc\ub97c public\uc73c\ub85c \ub9cc\ub4ed\ub2c8\ub2e4 public net.minecraft.util.Util func_240979_a_(Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; #makeExecutor # UUIDCodec\uc5d0 \uc788\ub294 2\uac1c\uc758 long\uc744 \uc778\uc790\ub85c \ubc1b\uace0 int[]\ub97c \ubc18\ud658\ud558\ub294, # 'leastMostToIntArray' \uba54\uc11c\ub4dc\ub97c public\uc73c\ub85c \ub9cc\ub4ed\ub2c8\ub2e4 public net.minecraft.util.UUIDCodec func_239776_a_(JJ)[I #leastMostToIntArray","title":"\uc811\uadfc \ubcc0\ud658\uc790"},{"location":"advanced/accesstransformers/#_1","text":"\uc811\uadfc \ubcc0\ud658\uc790 (AccessTransformer, AT\ub77c\uace0 \uc9e7\uac8c \ubd80\ub974\uae30\ub3c4 \ud569\ub2c8\ub2e4.)\ub294 \ud074\ub798\uc2a4, \uba54\uc11c\ub4dc, \ud544\ub4dc\uc758 \uac00\uc2dc\uc131\uc744 \ud655\ub300\uc2dc\ud0a4\uac70\ub098, final \ud0a4\uc6cc\ub4dc \uc720\ubb34 \uc5ec\ubd80\ub97c \ubcc0\uacbd\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud558\uc5ec \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc774 \uc811\uadfc \ubd88\uac00\ub2a5\ud55c \ud074\ub798\uc2a4 \uba64\ubc84\uc5d0 \uc811\uadfc\ud558\uace0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc774\uc5d0 \uad00\ud55c \uacf5\uc2dd \ud3ec\uc9c0 \ubb38\uc11c \ub97c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0 \uae43\ud5d9 \ud398\uc774\uc9c0\uc5d0\uc11c \ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc811\uadfc \ubcc0\ud658\uc790"},{"location":"advanced/accesstransformers/#at","text":"\uc811\uadfc \ubcc0\ud658\uc790\ub97c \ubaa8\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740, build.gradle \uc5d0 \uc904 \ud558\ub098 \ucd94\uac00\ud558\ub294 \uac83 \ub9cc\ud07c \uac04\ub2e8\ud569\ub2c8\ub2e4: // \uc774 \ube14\ub85d\uc740 \ub9e4\ud551 \ucc44\ub110\uacfc \ubc84\uc804\uc744 \uc9c0\uc815\ud558\ub294 \uacf3\uc774\uae30\ub3c4 \ud569\ub2c8\ub2e4. minecraft { accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') } \uc811\uadfc \ubcc0\ud658\uc790\ub97c \ucd94\uac00\ud558\uac70\ub098 \uc218\uc815\ud558\uc2e0 \uc774\ud6c4, Gradle \ud504\ub85c\uc81d\ud2b8\ub97c \uc0c8\ub85c\uace0\uce68 \ud558\uc154\uc57c\ub9cc \uc811\uadfc \ubcc0\ud658\uc790\uac00 \uc801\uc6a9\ub429\ub2c8\ub2e4. \uac1c\ubc1c \ub3c4\uc911\uc5d0\ub294 \uc811\uadfc \uc81c\ud55c\uc790 \uc124\uc815 \ud30c\uc77c\uc774 \ud504\ub85c\uc81d\ud2b8 \uc5b4\ub514\uc5d0\ub098 \uc704\uce58\ud558\uc5ec\ub3c4 \uc0c1\uad00 \uc5c6\uc73c\ub098, \ubaa8\ub4dc\ub97c \uac1c\ubc1c\ud658\uacbd \ubc16\uc5d0\uc11c \ubd88\ub7ec\uc62c \ub54c\uc5d0\ub294 JAR \uc548\uc758 META-INF/accesstransformer.cfg \uc5d0 \uc704\uce58\ud558\uc5ec\uc57c\ub9cc \uc815\uc0c1\uc801\uc73c\ub85c \ubd88\ub7ec\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"AT \ucd94\uac00\ud558\uae30"},{"location":"advanced/accesstransformers/#_2","text":"# \ub85c \uc2dc\uc791\ud558\ub294 \uc904\uc740 \uc8fc\uc11d\uc73c\ub85c \ucc98\ub9ac\ub418\uba70 \ubb34\uc2dc\ub429\ub2c8\ub2e4.","title":"\uc8fc\uc11d"},{"location":"advanced/accesstransformers/#_3","text":"\uc811\uadfc \uc218\uc815\uc790\ub294 \ud0c0\uac9f\uc774 \uac00\uc9c0\uac8c \ub420 \uc0c8\ub85c\uc6b4 \uac00\uc2dc\uc131\uc744 \uc815\uc758\ud569\ub2c8\ub2e4. \uac00\uc2dc\uc131\uc744 \uae30\uc900\uc73c\ub85c \uc704\uc5d0\uc11c \uc544\ub798\ub85c \uc815\ub82c\ud558\uba74: public - \ud328\ud0a4\uc9c0 \uc548, \ub610\ub294 \ubc16\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \ud074\ub798\uc2a4\uc5d0\uc11c \uc811\uadfc\ud560 \uc218 \uc788\uc74c protected - \ud328\ud0a4\uc9c0 \uc548\uc5d0 \uc788\ub294 \ud074\ub798\uc2a4, \ub610\ub294 \uc790\uc2dd \ud074\ub798\uc2a4\uc5d0\uc11c\ub9cc \uc811\uadfc\ud560 \uc218 \uc788\uc74c default - \ud328\ud0a4\uc9c0 \ub0b4\ubd80\uc5d0 \uc788\ub294 \ud074\ub798\uc2a4\uc5d0\uc11c\ub9cc \uc811\uadfc\ud560 \uc218 \uc788\uc74c private - \ud074\ub798\uc2a4 \ub0b4\ubd80\uc5d0\uc11c\ub9cc \uc811\uadfc\ud560 \uc218 \uc788\uc74c +f \uc640 -f \ub294 \ud2b9\uc218\ud55c \uc218\uc815\uc790\ub85c, \uae30\uc874\uc758 \ub2e4\ub978 \uc218\uc815\uc790\uc5d0 \ucd94\uac00\ub420 \uc218 \uc788\uc73c\uba70, \ud0c0\uac9f\uc758 final \ud0a4\uc6cc\ub4dc\ub97c \uc81c\uac70\ud558\uac70\ub098 \ucd94\uac00\ud558\uc5ec, \uae30\uc874\uc5d0\ub294 \ubd88\uac00\ub2a5\ud558\ub358 \uc790\uc2dd \ud074\ub798\uc2a4 \uc0dd\uc131\uc774\ub098, \uba54\uc11c\ub4dc \uc624\ubc84\ub77c\uc774\ub529, \ub610\ub294 \ud544\ub4dc \uac12 \ubcc0\uacbd \ub4f1\uc744 \uac00\ub2a5\ud558\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. Warning \ud0c0\uac9f\uc744 \uc9c0\uc815\ud560 \uc2dc, \uc9c1\uc811\uc801\uc73c\ub85c \uac00\ub9ac\ud0a4\ub294 \uba54\uc11c\ub4dc\ub9cc \ubcc0\ud658\ud569\ub2c8\ub2e4; \uc774\ub97c \uc624\ubc84\ub77c\uc774\ub529\ud558\ub294 \uc790\uc2dd \ud074\ub798\uc2a4\uc758 \uba54\uc11c\ub4dc\ub4e4\uc740 \uc811\uadfc \uc81c\ud55c\uc790 \ubcc0\ud658\uc774 \uc774\ub8e8\uc5b4\uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub54c\ubb38\uc5d0, \uc790\uc2dd \uba54\uc11c\ub4dc\uac00 \ubd80\ubaa8 \uba54\uc11c\ub4dc\ubcf4\ub2e4 \ub354 \ub0ae\uc740 \uac00\uc2dc\uc131\uc744 \uac00\uc9c0\uac8c \uac00\uc9c0\uac8c \ub418\uc5b4 JVM \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc73c\ub2c8 \ubcc0\ud658\ud558\uace0\uc790 \ud558\ub294 \uba54\uc11c\ub4dc\uac00 \ubcc0\ud658\ub418\uc9c0 \uc54a\uc740 \uc624\ubc84\ub77c\uc774\ub4dc\ub97c \uac00\uc9c0\uc9c0 \uc54a\ub3c4\ub85d \uc8fc\uc758\ud558\uc138\uc694. \ubcc0\ud658\ub418\uc5b4\ub3c4 \uc548\uc804\ud55c \uba54\uc11c\ub4dc\uc758 \uc608\uc2dc\ub294 private \uba54\uc11c\ub4dc\ub098 final \uba54\uc11c\ub4dc(\ub610\ub294 final \ud074\ub798\uc2a4\uc5d0 \uc815\uc758\ub41c \uba54\uc11c\ub4dc), \uadf8\ub9ac\uace0 static (\uc815\uc801) \uba54\uc11c\ub4dc\ub4e4 \uc785\ub2c8\ub2e4. \uc774\ub4e4\uc740 \uc624\ubc84\ub77c\uc774\ub4dc\uac00 \ubd88\uac00\ub2a5\ud558\uae30\uc5d0 \uc704\uc640 \uac19\uc740 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"\uc811\uadfc \uc218\uc815\uc790"},{"location":"advanced/accesstransformers/#_4","text":"Important \uc811\uadfc \ubcc0\ud658\uc790\ub97c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud074\ub798\uc2a4\uc5d0 \uc0ac\uc6a9\ud560\ub54c, \ud544\ub4dc\ub098 \uba54\uc11c\ub4dc \uc774\ub984\uc73c\ub85c SRG \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4.","title":"\ubcc0\ud658 \ud0c0\uac9f \uc9c0\uc815\ud558\uae30"},{"location":"advanced/accesstransformers/#_5","text":"\ud074\ub798\uc2a4\ub97c \uc9c0\uc815\ud558\ub824\uba74: <\uc811\uadfc \uc218\uc815\uc790> <\uc644\uc804\ud55c \ud074\ub798\uc2a4 \uc774\ub984> \ub0b4\ubd80 \ud074\ub798\uc2a4\ub4e4\uc740, \uc678\ubd80 \ud074\ub798\uc2a4\uc758 \uc644\uc804\ud55c \uc774\ub984\uacfc \ub0b4\ubd80 \ud074\ub798\uc2a4\uc758 \uc774\ub984\uc744 $ \ub85c \ubd84\ub9ac\ud558\uc5ec \ud45c\uc2dc\ud569\ub2c8\ub2e4.","title":"\ud074\ub798\uc2a4"},{"location":"advanced/accesstransformers/#_6","text":"\ud544\ub4dc\ub97c \uc9c0\uc815\ud558\ub824\uba74: <\uc811\uadfc \uc218\uc815\uc790> <\uc644\uc804\ud55c \ud074\ub798\uc2a4 \uc774\ub984> <\ud544\ub4dc \uc774\ub984>","title":"\ud544\ub4dc"},{"location":"advanced/accesstransformers/#_7","text":"\uba54\uc11c\ub4dc\ub97c \uc9c0\uc815\ud558\ub294 \uac83\uc740 \ud2b9\uc218\ud55c \ubb38\ubc95\uc744 \ud1b5\ud558\uc5ec \uba54\uc11c\ub4dc\uc758 \uc778\uc790\ub4e4\uacfc \ubc18\ud658 \ud0c0\uc785\uae4c\uc9c0 \ud45c\uc2dc\ud569\ub2c8\ub2e4: <\uc811\uadfc \uc218\uc815\uc790> <\uc644\uc804\ud55c \ud074\ub798\uc2a4 \uc774\ub984> <\uba54\uc11c\ub4dc \uc774\ub984>(<\uc778\uc790\uc758 \ud0c0\uc785\ub4e4>)<\ubc18\ud658 \ud0c0\uc785>","title":"\uba54\uc11c\ub4dc"},{"location":"advanced/accesstransformers/#specifying-types","text":"\uc774\ub294 \u201c\ud544\ub4dc \ub514\uc2a4\ud06c\ub9bd\ud130\u201d\ub77c\uace0 \ubd88\ub9ac\uae30\ub3c4 \ud569\ub2c8\ub2e4.\uc790\uc138\ud55c \uc0ac\ud56d\uc740 Oracle \uae30\uc220 \ubb38\uc11c\uc5d0\uc11c \ud655\uc778\ud558\uc138\uc694(Java Virtual Machine Specification, SE 8, sections 4.3.2 and 4.3.3) B - byte , \ubd80\ud638\uac00 \uc788\ub294 \ubc14\uc774\ud2b8 C - char , UTF-16 \uc720\ub2c8\ucf54\ub4dc \ubb38\uc790 \ubc88\ud638 D - double , \ubc30\uc815\ubc00\ub3c4 \ubd80\ub3d9 \uc18c\uc218\uc810 F - float , \ub2e8\uc815\ubc00\ub3c4 \ubd80\ub3d9 \uc18c\uc218\uc810 I - integer , 32\ube44\ud2b8 \uc815\uc218 J - long , 64\ube44\ud2b8 \uc815\uc218 S - short , \ubd80\ud638\uac00 \uc788\ub294 16\ube44\ud2b8 \uc815\uc218 Z - boolean , true \ub610\ub294 false \uc778 \uac12 [ - \ubc30\uc5f4\uc758 \ucc28\uc6d0 1\uac1c\ub97c \ud45c\uc2dc\ud568 \uc608: [[S \ub294 short[][] \ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4 L<class name>; - \ucc38\uc870 \ud0c0\uc785\uc744 \ucc38\uc870\ud568 \uc608: Ljava/lang/String; \ub294 \ucc38\uc870 \ud0c0\uc785 java.lang.String \ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4 (\ube57\uae08 \ub300\uc2e0 \ub9c8\uce68\ud45c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4) ( - \uba54\uc11c\ub4dc \ub514\uc2a4\ud06c\ub9bd\ud130\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4, \uc778\uc790\ub4e4\uc740 \uc788\ub2e4\uba74 \uc774\uacf3\uc5d0\uc11c \uae30\uc220\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4 \uc608: <method>(I)Z \ub294 \uc778\uc790\ub85c Int 1\uac1c\ub97c \ubc1b\uace0 Boolean\uc744 \ubc18\ud658\ud558\ub294 \uba54\uc11c\ub4dc\ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4 V - \ubc18\ud658\ud558\ub294 \uac12\uc774 \uc5c6\ub294 \uba54\uc11c\ub4dc\ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4, \uba54\uc11c\ub4dc \ub514\uc2a4\ud06c\ub9bd\ud130 \ub9e8 \ub4a4\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 \uc608: <method>()V \ub294 \ubc1b\ub294 \uc778\uc790\uac00 \uc5c6\uc73c\uba70 \ubc18\ud658\ud558\ub294 \uac12\ub3c4 \uc5c6\ub294 \uba54\uc11c\ub4dc\ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4","title":"Specifying Types"},{"location":"advanced/accesstransformers/#_8","text":"# ScreenManager \ud074\ub798\uc2a4\uc758 \ub0b4\ubd80\uc758 IScreenFactory\ub97c public\uc73c\ub85c \ub9cc\ub4ed\ub2c8\ub2e4 public net.minecraft.client.gui.ScreenManager$IScreenFactory # MinecraftServer\uc758 'random' \ud544\ub4dc\ub97c protected\ub85c \ub9cc\ub4e4\uace0 final \ud0a4\uc6cc\ub4dc\ub97c \uc81c\uac70\ud569\ub2c8\ub2e4 protected-f net.minecraft.server.MinecraftServer field_147146_q #random # Util\uc5d0 \uc788\ub294 String\uc744 \uc778\uc790\ub85c \ubc1b\uace0 ExecutorService\ub97c \ubc18\ud658\ud558\ub294, # 'makeExecutor' \uba54\uc11c\ub4dc\ub97c public\uc73c\ub85c \ub9cc\ub4ed\ub2c8\ub2e4 public net.minecraft.util.Util func_240979_a_(Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; #makeExecutor # UUIDCodec\uc5d0 \uc788\ub294 2\uac1c\uc758 long\uc744 \uc778\uc790\ub85c \ubc1b\uace0 int[]\ub97c \ubc18\ud658\ud558\ub294, # 'leastMostToIntArray' \uba54\uc11c\ub4dc\ub97c public\uc73c\ub85c \ub9cc\ub4ed\ub2c8\ub2e4 public net.minecraft.util.UUIDCodec func_239776_a_(JJ)[I #leastMostToIntArray","title":"\uc608\uc81c\ub4e4"},{"location":"animation/armature/","text":"Armature Files Armature Files define joints and clips for animating a model. File Structure An example armature file, taken from the forge debug mod { \"joints\": { \"stick\": {\"2\": [1.0]}, \"cube\": {\"3\": [1.0]} }, \"clips\": { \"default\": { \"loop\": true, \"joint_clips\": { \"stick\": [ { \"variable\": \"offset_x\", \"type\": \"uniform\", \"interpolation\": \"linear\", \"samples\": [0, 0.6875, 0] } ], \"cube\": [ { \"variable\": \"offset_x\", \"type\": \"uniform\", \"interpolation\": \"linear\", \"samples\": [0, 0.6875, 0] }, { \"variable\": \"axis_z\", \"type\": \"uniform\", \"interpolation\": \"nearest\", \"samples\": [ 1 ] }, { \"variable\": \"origin_x\", \"type\": \"uniform\", \"interpolation\": \"nearest\", \"samples\": [ 0.15625 ] }, { \"variable\": \"origin_y\", \"type\": \"uniform\", \"interpolation\": \"nearest\", \"samples\": [ 0.40625 ] }, { \"variable\": \"angle\", \"type\": \"uniform\", \"interpolation\": \"linear\", \"samples\": [0, 120, 240, 0, 120, 240] } ] }, \"events\": {} } } } The file is organized in two sections, joints and clips. Joints Each joint defines an object that animates together as a single unit in the animation. With Vanilla JSON models, this means that multiple elements can belong to the same joint. The format is like this: { \"joints\": { <joint>, ... } } --- <joint> ::= { <string>: { // joint name <joint_definition>, ... } } <joint_definition> ::= { \"<index_model>\": [ <float> ] // index_model, joint_weight (only one value expected in array) } joint_name is the name of the joint index_model is a 0-indexed number (where 0 is the first element defined in the model) denoting a model element this joint controls. Must be a string (see example) joint_weight is a weight (0-1) of how much this joint will contribute to the element\u2019s final transformation if the element is used in multiple joints. Note For simpler animations, the weight can usually just be set to 1.0, but if you want multiple joints in a clip to animate differently, this is one way to accomplish that. Not all elements need to have a joint, only the ones you are animating. If an element occurs in multiple joint, the final transform is a weighted average of the transforms for each joint. Clips Clips are essentially instructions on how to use a value to animate some collection of joints. They also include events to fire at certain points. They are formatted like this: { \"clips\": { \"clip_name\": { \"loop\": <true/false>, \"joint_clips\": { <joint_clip_list>, ... }, \"events\": { <event> ... } } } } ------- <joint_clip_list> ::= { \"joint_name\": [ <joint_clip>, ... ] } <joint_clip> ::= { \"variable\": <variable>, \"type\": \"uniform\", \"interpolation\": <interpolation>, \"samples\": [ float, ... ] } loop: if true, the animation will wrap around when the parameter value goes above 1, if not it\u2019ll just clamp at the final state. Joint Clips Each joint_clip is a set of variables to change for a joint. The type attribute is currently ignored, but must be \"uniform\" . samples defines what value the animation will take on (think of keyframes in traditional animation), and its interpretation depends on the value of interpolation . interpolation , which is how to convert the list of samples into a (possibly) continuous animation can be one of the following: nearest - if value < 0.5 use the first sample, else the second sample. Useful for static variables if only given one value. linear - linearly interpolate between samples. Time between samples is 1 / number of samples. variable can be one of the following: offset_x , offset_y , offset_z - translation scale - uniform scaling scale_x , scale_y , scale_x - scaling on certain axes axis_x , axis_y , axis_z - rotation axes angle - rotation angle origin_x , origin_y , origin_z - rotation origin Events Each clip can fire events, formatted like this: <event> :: { <event_time>: \"event_text\" } For more information about events and what event_text means, see the page on ASMs . event_time is a value (usually between 0 and 1 inclusive) denoting when to fire the event. When the parameter controlling this clip reaches a point equal to or greater than the event_time , the event is fired.","title":"Armature"},{"location":"animation/armature/#armature-files","text":"Armature Files define joints and clips for animating a model.","title":"Armature Files"},{"location":"animation/armature/#file-structure","text":"An example armature file, taken from the forge debug mod { \"joints\": { \"stick\": {\"2\": [1.0]}, \"cube\": {\"3\": [1.0]} }, \"clips\": { \"default\": { \"loop\": true, \"joint_clips\": { \"stick\": [ { \"variable\": \"offset_x\", \"type\": \"uniform\", \"interpolation\": \"linear\", \"samples\": [0, 0.6875, 0] } ], \"cube\": [ { \"variable\": \"offset_x\", \"type\": \"uniform\", \"interpolation\": \"linear\", \"samples\": [0, 0.6875, 0] }, { \"variable\": \"axis_z\", \"type\": \"uniform\", \"interpolation\": \"nearest\", \"samples\": [ 1 ] }, { \"variable\": \"origin_x\", \"type\": \"uniform\", \"interpolation\": \"nearest\", \"samples\": [ 0.15625 ] }, { \"variable\": \"origin_y\", \"type\": \"uniform\", \"interpolation\": \"nearest\", \"samples\": [ 0.40625 ] }, { \"variable\": \"angle\", \"type\": \"uniform\", \"interpolation\": \"linear\", \"samples\": [0, 120, 240, 0, 120, 240] } ] }, \"events\": {} } } } The file is organized in two sections, joints and clips.","title":"File Structure"},{"location":"animation/armature/#joints","text":"Each joint defines an object that animates together as a single unit in the animation. With Vanilla JSON models, this means that multiple elements can belong to the same joint. The format is like this: { \"joints\": { <joint>, ... } } --- <joint> ::= { <string>: { // joint name <joint_definition>, ... } } <joint_definition> ::= { \"<index_model>\": [ <float> ] // index_model, joint_weight (only one value expected in array) } joint_name is the name of the joint index_model is a 0-indexed number (where 0 is the first element defined in the model) denoting a model element this joint controls. Must be a string (see example) joint_weight is a weight (0-1) of how much this joint will contribute to the element\u2019s final transformation if the element is used in multiple joints. Note For simpler animations, the weight can usually just be set to 1.0, but if you want multiple joints in a clip to animate differently, this is one way to accomplish that. Not all elements need to have a joint, only the ones you are animating. If an element occurs in multiple joint, the final transform is a weighted average of the transforms for each joint.","title":"Joints"},{"location":"animation/armature/#clips","text":"Clips are essentially instructions on how to use a value to animate some collection of joints. They also include events to fire at certain points. They are formatted like this: { \"clips\": { \"clip_name\": { \"loop\": <true/false>, \"joint_clips\": { <joint_clip_list>, ... }, \"events\": { <event> ... } } } } ------- <joint_clip_list> ::= { \"joint_name\": [ <joint_clip>, ... ] } <joint_clip> ::= { \"variable\": <variable>, \"type\": \"uniform\", \"interpolation\": <interpolation>, \"samples\": [ float, ... ] } loop: if true, the animation will wrap around when the parameter value goes above 1, if not it\u2019ll just clamp at the final state.","title":"Clips"},{"location":"animation/armature/#joint-clips","text":"Each joint_clip is a set of variables to change for a joint. The type attribute is currently ignored, but must be \"uniform\" . samples defines what value the animation will take on (think of keyframes in traditional animation), and its interpretation depends on the value of interpolation . interpolation , which is how to convert the list of samples into a (possibly) continuous animation can be one of the following: nearest - if value < 0.5 use the first sample, else the second sample. Useful for static variables if only given one value. linear - linearly interpolate between samples. Time between samples is 1 / number of samples. variable can be one of the following: offset_x , offset_y , offset_z - translation scale - uniform scaling scale_x , scale_y , scale_x - scaling on certain axes axis_x , axis_y , axis_z - rotation axes angle - rotation angle origin_x , origin_y , origin_z - rotation origin","title":"Joint Clips"},{"location":"animation/armature/#events","text":"Each clip can fire events, formatted like this: <event> :: { <event_time>: \"event_text\" } For more information about events and what event_text means, see the page on ASMs . event_time is a value (usually between 0 and 1 inclusive) denoting when to fire the event. When the parameter controlling this clip reaches a point equal to or greater than the event_time , the event is fired.","title":"Events"},{"location":"animation/asm/","text":"Animation State Machine Files Animation State Machine (ASM) Files are the meat of the animation API. These define how the animation is carried out and how to use the clips defined in the armature file. Concepts The ASM contains parameters , clips , states , and transitions . States The Animation State Machine can be in many different states . You define which states there are in the states section. Transitions Transistions define which states are allowed to go to other states, for example allowing a closed state to go to an open state. Note Transitions do not define animations that are played between states, however. If you want to do that you must create an additional state that plays an animation then uses an event to go to the next state. Parameters Note Parameters are called TimeValues in the code, hence the naming convention of SomethingValue. All parameters take an input, usually the current game time in seconds as a float (factoring in partial ticks) and outputs another time. This output is then used as the input to a clip, telling it the current progress of the animation. Each parameter can either be defined in the ASM or when you load the ASM in the code. Load-time parameters are usually of the type VariableValue , which returns a value changeable in-code, ignoring its input. Other types allow you to do math on the input ( SimpleExprValue ), return a constant ( ConstValue ), refer to other parameters ( ParameterValue ), return the input unmodified ( IdentityValue ) and perform composition of two parameters ( CompositionValue ). Clips Note Clips can either be ASM-clips, ones that are defined in the ASM, or armature-clips, ones that are defined in the armature file. For the rest of this page, \u201cclips\u201d will refer to ASM-clips unless otherwise stated. A clip takes in an input, usually the time, and does something to the model with it. Different types of clips do different things, the simplest being animating an armature-clip ( ModelClip ). You can also override the input to another ASM-clip ( TimeClip ), trigger an event while animating another clip if the input is positive ( TriggerClip ), smoothly blend between two clips ( SlerpClip ), refer to another clip in the ASM ( ClipReference ) or do nothing ( IdentityClip ). Events Various things can trigger events in the ASM. Events in the ASM are represented using only text. Some events are special, with text that is formatted like this: !event_type:event_value . Right now there is only one kind of event_type , namely transition . This tries to transition to whatever state is defined in the event_value . Anything else is a normal event and can be used from the pastEvents callback, but more information about that is on the implementing page. Code API Warning The ASM code API can only be used client side . When storing ASMs in code, use the side-agnostic IAnimationStateMachine interface. ASMs can be loaded by calling ModelLoaderRegistry.loadASM . It takes two parameters, the first being a ResourceLocation denoting where the ASM is stored, and second an ImmutableMap of load-time defined parameters. An example: @Nullable private final IAnimationStateMachine asm; private final VariableValue cycle = new VariableValue(4); public Spin() { asm = proxy.loadASM(new ResourceLocation(MODID, \"asms/block/rotatest.json\"), ImmutableMap.of(\"cycle_length\", cycle)); } Here, an ASM is loaded (from a sided proxy to avoid crashing on server) with one extra parameter, named cycle_length . This parameter is of the type VariableValue , so we can set it from within our code. Using an ASM instance, you can get the current state with .currentState() and transition to another state with .transition(nextState) VariableValue parameters can have their value set by calling .setValue , but you can not read this value back. There is no need to inform the ASM of this change, it happens automatically. File Format The ASMs are stored in json files. The location does not matter, but they are usually placed in an asms folder. First, a simple example: { \"parameters\": { \"anim_cycle\": [\"/\", \"#cycle_length\"] }, \"clips\": { \"default\": [\"apply\", \"forgedebugmodelanimation:block/rotatest@default\", \"#anim_cycle\" ] }, \"states\": [ \"default\" ], \"transitions\": {}, \"start_state\": \"default\" } As stated above, the files have parameters, clips, states and transitions, as well as the starting state of the ASM. All of these tags are required, even if they are empty. Parameters { \"name\": <parameter_definition> } Different types of parameters have different formats for <parameter_definition> , and the simple ones are: IdentityValue : the string #identity , ParameterValue : the parameter to reference, prefixed with # , e.g. #my_awesome_parameter ConstValue : a number to use as the constant to return Mathematical expression ( SimpleExprValue ) Format: [ regex(\"[+\\\\-*/mMrRfF]+\"), <parameter_definition>, ... ] Examples: [ \"+\", 4 ] [ \"/+\", 5, 1] [ \"++\", 2, \"#other\" ] [ \"++\", \"#other\", [ \"compose\", \"#cycle\", 3] ] Explanation The SimpleExprValue takes its input and applies operations to it. The first parameter is the sequence of operations to apply, and the rest represent the operands to those operations. The input to each operation is either the input to this entire parameter (for the first operation) or the result of the previous operation. Operations (case-sensitive): Operator Meaning + output = input + arg - output = input - arg * output = input * arg / output = input / arg m output = min(input, arg) M output = max(input, arg) r output = floor(input / arg) * arg R output = ceil(input / arg) * arg f output = input - floor(input / arg) * arg F output = ceil(input / arg) * arg - input Example explanations: input + 4 (input / 5) + 1 input + 2 + value of parameter other input + value of parameter other + value of parameter cycle given input 3 Function composition ( CompositionValue ) Format: [ \"compose\", <parameter_definition>, <parameter_definition> ] Examples: [ \"compose\", \"#cycle\", 3] [ \"compose\", \"#test\", \"#other\"] [ \"compose\", [ \"+\", 3], \"#other\"] [ \"compose\", [ \"compose\", \"#other2\", \"#other3\"], \"#other\"] Explanation CompositionValue takes two parameter definitions as inputs, and does value1(value2(input)) . In other words, it chains the two inputs, calling the second one with the given input, and the first one with the output of the second one. Example explanations: value of parameter cycle when given input 3 value of parameter test when given the output of parameter other when called with the current input 3 + the output of other with the current input other2(other3(other(input))) because value1 = other2(other3(input)) and value2 = other(input) Clips { \"name\": <clip_definition> } As with parameters, different kinds of clips have different formats for <clip_definition> , but the simple ones are: IdentityClip : the string #identity ClipReference : the clip name prefixed with # , e.g. #my_amazing_clip ModelClip : a model resource location + @ + the name of the armature-clip, e.g. mymod:block/test@default or mymod:block/test#facing=east@moving Overriding input ( TimeClip ) Format: [ \"apply\", <clip_definition>, <parameter_definition> ] Examples: [\"apply\", \"mymod:block/animated_thing@moving\", \"#cycle_time\"] [\"apply\", [ \"apply\", \"mymod:block/animated_thing@moving\", [ \"+\", 3 ] ], \"#cycle\"] Explanation The TimeClip takes another clip and applies it using a custom parameter instead of the current time. Usually used to apply a ModelClip with a parameter instead of the current time. Example explanations: apply the armature-clip for model mymod:block/animated_thing named moving with the output of the parameter cycle_time apply the armature-clip for model mymod:block/animated_thing named moving with 3 + the output of the parameter cycle Triggering an event ( TriggerClip ) Format: [ \"trigger_positive\", <clip_definition>, <parameter_definition>, \"<event_text>\"] Examples [ \"trigger_positive\", \"#default\", \"#end_cycle\", \"!transition:moving\" ] [ \"trigger_positive\", \"mymod:block/animated_thing@moving\", \"#end_cycle\", \"boop\" ] Explanation The TriggerClip visually acts as a TimeClip , but also fires the event in event_text when the parameter_description goes positive. At the same time, it applies the clip in clip_definition with the same parameter_description . Example explanations apply the clip with name default given the input of parameter end_cycle , and when end_cycle is positive transition to the moving state apply the armature-clip mymod:block/animated_thing@moving with parameter end_cycle , and when end_cycle is positive fire event \"boop\" Blend between two clips ( SlerpClip ) Format: [ \"slerp\", <clip_definition>, <clip_definition>, <parameter_definition>, <parameter_definition> ] Examples [ \"slerp\", \"#closed\", \"#open\", \"#identity\", \"#progress\" ] [ \"slerp\", [ \"apply\", \"#move\", \"#mover\"], \"#end\", \"#identity\", \"#progress\" ] Explanation The SlerpClip performs a spherical linear blend between two separate clips. In other words, it will morph one clip into another smoothly. The two clip_definition s are the clips to blend from and to respectively. The first parameter_definition is the \u201cinput\u201d. Both the from and to clips are passed the output of this parameter with the current animation time. The second parameter_definition is the \u201cprogress\u201d, a value between 0 and 1 to denote how far into the blend we are. Combining this clip with trigger_positive and transition special events can allow for simple transitions between two solid states. Example explanations blend the closed clip to the open clip, giving both clips the unaltered time as input and blend progress #progress . blend the result of the move clip when given the input parameter mover to the end clip with the unaltered time as the input with blend progress #progress . States The states section of the file is simply a list of all possible states. For example \"states\": [ \"open\", \"closed\", \"opening\", \"closing\", \"dancing\" ] defines 5 states: open, closed, opening, closing and dancing. Transitions The transitions section defines which states can go to what other states. A state can go to 0, 1, or many other states. To define a state as going to no other states, omit it from the section. To define a state as going to only one other state, create a key with the value of the state it can go to, for example \"open\": \"opening\" . To define a state as going to many other states, do the same as if it were going to only one other state but make the value a list of all possible receiving states instead, for example: \"open\": [\"closed\", \"opening\"] . A more full example: \"transitions\": { \"open\": \"closing\", \"closed\": [ \"dancing\", \"opening\" ], \"closing\": \"closed\", \"opening\": \"open\", \"dancing\": \"closed\" } This example means that: the open state can go to the closing state the closed state can go to either the dancing or opening state the closing state can go to the closed state the opening state can go to the open state the dancing state can go to the closed state","title":"Asm"},{"location":"animation/asm/#animation-state-machine-files","text":"Animation State Machine (ASM) Files are the meat of the animation API. These define how the animation is carried out and how to use the clips defined in the armature file.","title":"Animation State Machine Files"},{"location":"animation/asm/#concepts","text":"The ASM contains parameters , clips , states , and transitions .","title":"Concepts"},{"location":"animation/asm/#states","text":"The Animation State Machine can be in many different states . You define which states there are in the states section.","title":"States"},{"location":"animation/asm/#transitions","text":"Transistions define which states are allowed to go to other states, for example allowing a closed state to go to an open state. Note Transitions do not define animations that are played between states, however. If you want to do that you must create an additional state that plays an animation then uses an event to go to the next state.","title":"Transitions"},{"location":"animation/asm/#parameters","text":"Note Parameters are called TimeValues in the code, hence the naming convention of SomethingValue. All parameters take an input, usually the current game time in seconds as a float (factoring in partial ticks) and outputs another time. This output is then used as the input to a clip, telling it the current progress of the animation. Each parameter can either be defined in the ASM or when you load the ASM in the code. Load-time parameters are usually of the type VariableValue , which returns a value changeable in-code, ignoring its input. Other types allow you to do math on the input ( SimpleExprValue ), return a constant ( ConstValue ), refer to other parameters ( ParameterValue ), return the input unmodified ( IdentityValue ) and perform composition of two parameters ( CompositionValue ).","title":"Parameters"},{"location":"animation/asm/#clips","text":"Note Clips can either be ASM-clips, ones that are defined in the ASM, or armature-clips, ones that are defined in the armature file. For the rest of this page, \u201cclips\u201d will refer to ASM-clips unless otherwise stated. A clip takes in an input, usually the time, and does something to the model with it. Different types of clips do different things, the simplest being animating an armature-clip ( ModelClip ). You can also override the input to another ASM-clip ( TimeClip ), trigger an event while animating another clip if the input is positive ( TriggerClip ), smoothly blend between two clips ( SlerpClip ), refer to another clip in the ASM ( ClipReference ) or do nothing ( IdentityClip ).","title":"Clips"},{"location":"animation/asm/#events","text":"Various things can trigger events in the ASM. Events in the ASM are represented using only text. Some events are special, with text that is formatted like this: !event_type:event_value . Right now there is only one kind of event_type , namely transition . This tries to transition to whatever state is defined in the event_value . Anything else is a normal event and can be used from the pastEvents callback, but more information about that is on the implementing page.","title":"Events"},{"location":"animation/asm/#code-api","text":"Warning The ASM code API can only be used client side . When storing ASMs in code, use the side-agnostic IAnimationStateMachine interface. ASMs can be loaded by calling ModelLoaderRegistry.loadASM . It takes two parameters, the first being a ResourceLocation denoting where the ASM is stored, and second an ImmutableMap of load-time defined parameters. An example: @Nullable private final IAnimationStateMachine asm; private final VariableValue cycle = new VariableValue(4); public Spin() { asm = proxy.loadASM(new ResourceLocation(MODID, \"asms/block/rotatest.json\"), ImmutableMap.of(\"cycle_length\", cycle)); } Here, an ASM is loaded (from a sided proxy to avoid crashing on server) with one extra parameter, named cycle_length . This parameter is of the type VariableValue , so we can set it from within our code. Using an ASM instance, you can get the current state with .currentState() and transition to another state with .transition(nextState) VariableValue parameters can have their value set by calling .setValue , but you can not read this value back. There is no need to inform the ASM of this change, it happens automatically.","title":"Code API"},{"location":"animation/asm/#file-format","text":"The ASMs are stored in json files. The location does not matter, but they are usually placed in an asms folder. First, a simple example: { \"parameters\": { \"anim_cycle\": [\"/\", \"#cycle_length\"] }, \"clips\": { \"default\": [\"apply\", \"forgedebugmodelanimation:block/rotatest@default\", \"#anim_cycle\" ] }, \"states\": [ \"default\" ], \"transitions\": {}, \"start_state\": \"default\" } As stated above, the files have parameters, clips, states and transitions, as well as the starting state of the ASM. All of these tags are required, even if they are empty.","title":"File Format"},{"location":"animation/asm/#parameters_1","text":"{ \"name\": <parameter_definition> } Different types of parameters have different formats for <parameter_definition> , and the simple ones are: IdentityValue : the string #identity , ParameterValue : the parameter to reference, prefixed with # , e.g. #my_awesome_parameter ConstValue : a number to use as the constant to return","title":"Parameters"},{"location":"animation/asm/#mathematical-expression-simpleexprvalue","text":"Format: [ regex(\"[+\\\\-*/mMrRfF]+\"), <parameter_definition>, ... ]","title":"Mathematical expression (SimpleExprValue)"},{"location":"animation/asm/#examples","text":"[ \"+\", 4 ] [ \"/+\", 5, 1] [ \"++\", 2, \"#other\" ] [ \"++\", \"#other\", [ \"compose\", \"#cycle\", 3] ]","title":"Examples:"},{"location":"animation/asm/#explanation","text":"The SimpleExprValue takes its input and applies operations to it. The first parameter is the sequence of operations to apply, and the rest represent the operands to those operations. The input to each operation is either the input to this entire parameter (for the first operation) or the result of the previous operation.","title":"Explanation"},{"location":"animation/asm/#operations-case-sensitive","text":"Operator Meaning + output = input + arg - output = input - arg * output = input * arg / output = input / arg m output = min(input, arg) M output = max(input, arg) r output = floor(input / arg) * arg R output = ceil(input / arg) * arg f output = input - floor(input / arg) * arg F output = ceil(input / arg) * arg - input","title":"Operations (case-sensitive):"},{"location":"animation/asm/#example-explanations","text":"input + 4 (input / 5) + 1 input + 2 + value of parameter other input + value of parameter other + value of parameter cycle given input 3","title":"Example explanations:"},{"location":"animation/asm/#function-composition-compositionvalue","text":"Format: [ \"compose\", <parameter_definition>, <parameter_definition> ]","title":"Function composition (CompositionValue)"},{"location":"animation/asm/#examples_1","text":"[ \"compose\", \"#cycle\", 3] [ \"compose\", \"#test\", \"#other\"] [ \"compose\", [ \"+\", 3], \"#other\"] [ \"compose\", [ \"compose\", \"#other2\", \"#other3\"], \"#other\"]","title":"Examples:"},{"location":"animation/asm/#explanation_1","text":"CompositionValue takes two parameter definitions as inputs, and does value1(value2(input)) . In other words, it chains the two inputs, calling the second one with the given input, and the first one with the output of the second one.","title":"Explanation"},{"location":"animation/asm/#example-explanations_1","text":"value of parameter cycle when given input 3 value of parameter test when given the output of parameter other when called with the current input 3 + the output of other with the current input other2(other3(other(input))) because value1 = other2(other3(input)) and value2 = other(input)","title":"Example explanations:"},{"location":"animation/asm/#clips_1","text":"{ \"name\": <clip_definition> } As with parameters, different kinds of clips have different formats for <clip_definition> , but the simple ones are: IdentityClip : the string #identity ClipReference : the clip name prefixed with # , e.g. #my_amazing_clip ModelClip : a model resource location + @ + the name of the armature-clip, e.g. mymod:block/test@default or mymod:block/test#facing=east@moving","title":"Clips"},{"location":"animation/asm/#overriding-input-timeclip","text":"Format: [ \"apply\", <clip_definition>, <parameter_definition> ]","title":"Overriding input (TimeClip)"},{"location":"animation/asm/#examples_2","text":"[\"apply\", \"mymod:block/animated_thing@moving\", \"#cycle_time\"] [\"apply\", [ \"apply\", \"mymod:block/animated_thing@moving\", [ \"+\", 3 ] ], \"#cycle\"]","title":"Examples:"},{"location":"animation/asm/#explanation_2","text":"The TimeClip takes another clip and applies it using a custom parameter instead of the current time. Usually used to apply a ModelClip with a parameter instead of the current time.","title":"Explanation"},{"location":"animation/asm/#example-explanations_2","text":"apply the armature-clip for model mymod:block/animated_thing named moving with the output of the parameter cycle_time apply the armature-clip for model mymod:block/animated_thing named moving with 3 + the output of the parameter cycle","title":"Example explanations:"},{"location":"animation/asm/#triggering-an-event-triggerclip","text":"Format: [ \"trigger_positive\", <clip_definition>, <parameter_definition>, \"<event_text>\"]","title":"Triggering an event (TriggerClip)"},{"location":"animation/asm/#examples_3","text":"[ \"trigger_positive\", \"#default\", \"#end_cycle\", \"!transition:moving\" ] [ \"trigger_positive\", \"mymod:block/animated_thing@moving\", \"#end_cycle\", \"boop\" ]","title":"Examples"},{"location":"animation/asm/#explanation_3","text":"The TriggerClip visually acts as a TimeClip , but also fires the event in event_text when the parameter_description goes positive. At the same time, it applies the clip in clip_definition with the same parameter_description .","title":"Explanation"},{"location":"animation/asm/#example-explanations_3","text":"apply the clip with name default given the input of parameter end_cycle , and when end_cycle is positive transition to the moving state apply the armature-clip mymod:block/animated_thing@moving with parameter end_cycle , and when end_cycle is positive fire event \"boop\"","title":"Example explanations"},{"location":"animation/asm/#blend-between-two-clips-slerpclip","text":"Format: [ \"slerp\", <clip_definition>, <clip_definition>, <parameter_definition>, <parameter_definition> ]","title":"Blend between two clips (SlerpClip)"},{"location":"animation/asm/#examples_4","text":"[ \"slerp\", \"#closed\", \"#open\", \"#identity\", \"#progress\" ] [ \"slerp\", [ \"apply\", \"#move\", \"#mover\"], \"#end\", \"#identity\", \"#progress\" ]","title":"Examples"},{"location":"animation/asm/#explanation_4","text":"The SlerpClip performs a spherical linear blend between two separate clips. In other words, it will morph one clip into another smoothly. The two clip_definition s are the clips to blend from and to respectively. The first parameter_definition is the \u201cinput\u201d. Both the from and to clips are passed the output of this parameter with the current animation time. The second parameter_definition is the \u201cprogress\u201d, a value between 0 and 1 to denote how far into the blend we are. Combining this clip with trigger_positive and transition special events can allow for simple transitions between two solid states.","title":"Explanation"},{"location":"animation/asm/#example-explanations_4","text":"blend the closed clip to the open clip, giving both clips the unaltered time as input and blend progress #progress . blend the result of the move clip when given the input parameter mover to the end clip with the unaltered time as the input with blend progress #progress .","title":"Example explanations"},{"location":"animation/asm/#states_1","text":"The states section of the file is simply a list of all possible states. For example \"states\": [ \"open\", \"closed\", \"opening\", \"closing\", \"dancing\" ] defines 5 states: open, closed, opening, closing and dancing.","title":"States"},{"location":"animation/asm/#transitions_1","text":"The transitions section defines which states can go to what other states. A state can go to 0, 1, or many other states. To define a state as going to no other states, omit it from the section. To define a state as going to only one other state, create a key with the value of the state it can go to, for example \"open\": \"opening\" . To define a state as going to many other states, do the same as if it were going to only one other state but make the value a list of all possible receiving states instead, for example: \"open\": [\"closed\", \"opening\"] . A more full example: \"transitions\": { \"open\": \"closing\", \"closed\": [ \"dancing\", \"opening\" ], \"closing\": \"closed\", \"opening\": \"open\", \"dancing\": \"closed\" } This example means that: the open state can go to the closing state the closed state can go to either the dancing or opening state the closing state can go to the closed state the opening state can go to the open state the dancing state can go to the closed state","title":"Transitions"},{"location":"animation/implementing/","text":"Using the API Depending on what you want to animate with the API, code-side implementation is a bit different. Documentation on the ASM API itself (for controlling the animation) is found on the ASM page because it is independent of what you are animating. Blocks Animations for blocks are done with the TileEntityRendererAnimation , which is a TileEntityRenderer . Because of this, having a TileEntity for your block is necessary. Your TileEntity must provide the ANIMATION_CAPABILITY , which is received by calling its .cast method with your ASM. Your block must also render in the ENTITYBLOCK_ANIMATED render layer if you do not provide a StaticProperty in the block\u2019s blockstate. The StaticProperty is a property you can add to your block\u2019s blockstate by adding Properties.StaticProperty to the list of your block\u2019s properties inside of fillStateContainer() . When rendering the block, the TileEntityRendererAnimation checks if the property\u2019s value is true; if so, block rendering continues as normal. Otherwise the TileEntityRendererAnimation animates the block model assigned to the static=false variant in the blockstate json. All parts of the model that can be static should probably be rendered in the static state, as that is its purpose. The handleEvents() callback is located in the TileEntityRendererAnimation , so you have to either subclass or overload it inline when you register the tileentity. Here\u2019s an example of registering the TESR: ClientRegistry.bindTileEntitySpecialRenderer(Chest.class, new TileEntityRendererAnimation<Chest>() { @Override public void handleEvents(Chest chest, float time, Iterable<Event> pastEvents) { chest.handleEvents(time, pastEvents); } }); In this example, we\u2019ve overridden the handleEvents() callback when we registered the TER because the implementation is simple, but you could easily subclass TileEntityRendererAnimation to achieve the same effect. The handleEvents() callback for blocks takes two arguments: the tile entity being rendered, and an iterable of the events. The call to chest.handleEvents() calls a method located in the fictional Chest TileEntity, as the ASM is not accessible inside of the handleEvents() method. Items Animations for items are done entirely using the capability system. Your item must provide the ANIMATION_CAPABILITY through an ICapabilityProvider . You can create an instance of this capability using its .cast method with your ASM, which is usually stored on the ICapabilityProvider object itself. An example of this is below: private static class ItemAnimationHolder implements ICapabilityProvider { private final VariableValue cycleLength = new VariableValue(4); private final IAnimationStateMachine asm = proxy.load(new ResourceLocation(MODID.toLowerCase(), \"asms/block/engine.json\"), ImmutableMap.<String, ITimeValue>of( \"cycle_length\", cycleLength )); @Override public boolean hasCapability(@Nonnull Capability<?> capability, @Nullable EnumFacing facing) { return capability == CapabilityAnimation.ANIMATION_CAPABILITY; } @Override @Nullable public <T> T getCapability(@Nonnull Capability<T> capability, @Nullable EnumFacing facing) { if(capability == CapabilityAnimation.ANIMATION_CAPABILITY) { return CapabilityAnimation.ANIMATION_CAPABILITY.cast(asm); } return null; } } There is no way to receive events on an item in the current implementation. Entities In order to animate an entity with the animation API, your entity\u2019s renderer must take an AnimationModelBase as its model. This model\u2019s constructor takes two parameters, the location of the actual model to animate (as in the path to the JSON or B3D file, not a blockstate reference) and a VertexLighter . The VertexLighter object can be created with new VertexLighterSmoothAo(Minecraft.getMinecraft().getBlockColors()) . The entity must also provide the ANIMATION_CAPABILITY , which can be created with its .cast method by passing the ASM. The handleEvents() callback is located inside the AnimationModelBase class, if you want to use the events you must subclass AnimationModelBase . The callback takes three parameters: the entity being rendered, the current time in partial ticks, and an iterable of the events that have occurred. An example of creating the renderer is shown below: ResourceLocation location = new ModelResourceLocation(new ResourceLocation(MODID, blockName), \"entity\"); return new RenderLiving<EntityChest>(manager, new net.minecraftforge.client.model.animation.AnimationModelBase<EntityChest>(location, new VertexLighterSmoothAo(Minecraft.getMinecraft().getBlockColors())) { @Override public void handleEvents(EntityChest chest, float time, Iterable<Event> pastEvents) { chest.handleEvents(time, pastEvents); } }, 0.5f) { // ... getEntityTexture() ... };","title":"Implementing"},{"location":"animation/implementing/#using-the-api","text":"Depending on what you want to animate with the API, code-side implementation is a bit different. Documentation on the ASM API itself (for controlling the animation) is found on the ASM page because it is independent of what you are animating.","title":"Using the API"},{"location":"animation/implementing/#blocks","text":"Animations for blocks are done with the TileEntityRendererAnimation , which is a TileEntityRenderer . Because of this, having a TileEntity for your block is necessary. Your TileEntity must provide the ANIMATION_CAPABILITY , which is received by calling its .cast method with your ASM. Your block must also render in the ENTITYBLOCK_ANIMATED render layer if you do not provide a StaticProperty in the block\u2019s blockstate. The StaticProperty is a property you can add to your block\u2019s blockstate by adding Properties.StaticProperty to the list of your block\u2019s properties inside of fillStateContainer() . When rendering the block, the TileEntityRendererAnimation checks if the property\u2019s value is true; if so, block rendering continues as normal. Otherwise the TileEntityRendererAnimation animates the block model assigned to the static=false variant in the blockstate json. All parts of the model that can be static should probably be rendered in the static state, as that is its purpose. The handleEvents() callback is located in the TileEntityRendererAnimation , so you have to either subclass or overload it inline when you register the tileentity. Here\u2019s an example of registering the TESR: ClientRegistry.bindTileEntitySpecialRenderer(Chest.class, new TileEntityRendererAnimation<Chest>() { @Override public void handleEvents(Chest chest, float time, Iterable<Event> pastEvents) { chest.handleEvents(time, pastEvents); } }); In this example, we\u2019ve overridden the handleEvents() callback when we registered the TER because the implementation is simple, but you could easily subclass TileEntityRendererAnimation to achieve the same effect. The handleEvents() callback for blocks takes two arguments: the tile entity being rendered, and an iterable of the events. The call to chest.handleEvents() calls a method located in the fictional Chest TileEntity, as the ASM is not accessible inside of the handleEvents() method.","title":"Blocks"},{"location":"animation/implementing/#items","text":"Animations for items are done entirely using the capability system. Your item must provide the ANIMATION_CAPABILITY through an ICapabilityProvider . You can create an instance of this capability using its .cast method with your ASM, which is usually stored on the ICapabilityProvider object itself. An example of this is below: private static class ItemAnimationHolder implements ICapabilityProvider { private final VariableValue cycleLength = new VariableValue(4); private final IAnimationStateMachine asm = proxy.load(new ResourceLocation(MODID.toLowerCase(), \"asms/block/engine.json\"), ImmutableMap.<String, ITimeValue>of( \"cycle_length\", cycleLength )); @Override public boolean hasCapability(@Nonnull Capability<?> capability, @Nullable EnumFacing facing) { return capability == CapabilityAnimation.ANIMATION_CAPABILITY; } @Override @Nullable public <T> T getCapability(@Nonnull Capability<T> capability, @Nullable EnumFacing facing) { if(capability == CapabilityAnimation.ANIMATION_CAPABILITY) { return CapabilityAnimation.ANIMATION_CAPABILITY.cast(asm); } return null; } } There is no way to receive events on an item in the current implementation.","title":"Items"},{"location":"animation/implementing/#entities","text":"In order to animate an entity with the animation API, your entity\u2019s renderer must take an AnimationModelBase as its model. This model\u2019s constructor takes two parameters, the location of the actual model to animate (as in the path to the JSON or B3D file, not a blockstate reference) and a VertexLighter . The VertexLighter object can be created with new VertexLighterSmoothAo(Minecraft.getMinecraft().getBlockColors()) . The entity must also provide the ANIMATION_CAPABILITY , which can be created with its .cast method by passing the ASM. The handleEvents() callback is located inside the AnimationModelBase class, if you want to use the events you must subclass AnimationModelBase . The callback takes three parameters: the entity being rendered, the current time in partial ticks, and an iterable of the events that have occurred. An example of creating the renderer is shown below: ResourceLocation location = new ModelResourceLocation(new ResourceLocation(MODID, blockName), \"entity\"); return new RenderLiving<EntityChest>(manager, new net.minecraftforge.client.model.animation.AnimationModelBase<EntityChest>(location, new VertexLighterSmoothAo(Minecraft.getMinecraft().getBlockColors())) { @Override public void handleEvents(EntityChest chest, float time, Iterable<Event> pastEvents) { chest.handleEvents(time, pastEvents); } }, 0.5f) { // ... getEntityTexture() ... };","title":"Entities"},{"location":"animation/intro/","text":"Intro to the Animation API The Forge Animation API lets you animate JSON (and B3D) models. Before you start reading this, you should know how vanilla JSON models are created, and should have read the documentation on blockstates. Note Although you can use B3D models with the Animation API, most of this documentation will assume you are using JSON files. (TODO) See the page on using B3D models for more information The Animation API is made up of two main components: armature files and animation state machine (ASM) files. Armature files define joints and clips for JSON files. Joints are names for cubes in the model file with weights (see the page on armatures for more info), while clips are a set of transformations to apply to joints over time (think of a clip from a movie for example). ASM files define the various states an animation can be in, as well as what transitions exist between those states. They also define the parameters for an animation (functions which return a floating point number), which are generally used as inputs to clips, but can also trigger events. Events are essentially a way to receive in-code notifications when the animation reaches a certain point or to trigger transitions. Filesystem Structure Conventions ASM Files are normally stored in the asms/block for blocks or asms/item for items and so on. You specify where to load them from, so their location is really up to you. Armature files must be stored in the armatures folder. They are looked up by taking the path to your model file, removing models/ and taking whats left and prepending armatures/ , so a model in models/block/test.json becomes armatures/block/test.json .","title":"Intro"},{"location":"animation/intro/#intro-to-the-animation-api","text":"The Forge Animation API lets you animate JSON (and B3D) models. Before you start reading this, you should know how vanilla JSON models are created, and should have read the documentation on blockstates. Note Although you can use B3D models with the Animation API, most of this documentation will assume you are using JSON files. (TODO) See the page on using B3D models for more information The Animation API is made up of two main components: armature files and animation state machine (ASM) files. Armature files define joints and clips for JSON files. Joints are names for cubes in the model file with weights (see the page on armatures for more info), while clips are a set of transformations to apply to joints over time (think of a clip from a movie for example). ASM files define the various states an animation can be in, as well as what transitions exist between those states. They also define the parameters for an animation (functions which return a floating point number), which are generally used as inputs to clips, but can also trigger events. Events are essentially a way to receive in-code notifications when the animation reaches a certain point or to trigger transitions.","title":"Intro to the Animation API"},{"location":"animation/intro/#filesystem-structure-conventions","text":"ASM Files are normally stored in the asms/block for blocks or asms/item for items and so on. You specify where to load them from, so their location is really up to you. Armature files must be stored in the armatures folder. They are looked up by taking the path to your model file, removing models/ and taking whats left and prepending armatures/ , so a model in models/block/test.json becomes armatures/block/test.json .","title":"Filesystem Structure Conventions"},{"location":"blocks/blocks/","text":"\ube14\ub85d \ube14\ub85d\uc740, \ub2f9\uc5f0\ud558\uac8c\ub3c4, \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc6d4\ub4dc\uc5d0\uc11c \ud544\uc218\uc801\uc785\ub2c8\ub2e4. \uc9c0\ud615\uacfc \uad6c\uc870\ubb3c, \uadf8\ub9ac\uace0 \uae30\uacc4\ub4e4 \uc804\ubd80 \ube14\ub85d\ub4e4\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\ub97c \uac1c\ubc1c\ud558\uc2e0\ub2e4\uba74, \uc544\ub9c8 \ube14\ub85d\uc744 \ub9cc\ub4e4\uace0 \uc2f6\uc73c\uc2e4 \uac83\uc77c \ud150\ub370\uc694, \uc774\ubc88\uc7a5\uc5d0\uc11c\ub294 \uc5b4\ub5bb\uac8c \ube14\ub85d\uc744 \ub9cc\ub4e4\uace0 \uc774\ub97c \ud1b5\ud574 \ud560 \uc218 \uc788\ub294 \uac83\ub4e4 \uba87\uac00\uc9c0\uc5d0 \ub300\ud574 \ub2e4\ub8f0 \uac83\uc785\ub2c8\ub2e4. \ube14\ub85d \ub9cc\ub4e4\uae30 \uae30\ubcf8\uc801\uc778 \ube14\ub85d\ub4e4 \ub530\ub85c \ud2b9\ubcc4\ud55c \uae30\ub2a5\uc774 \ud544\uc694\uc5c6\ub294 \ube14\ub85d\ub4e4\uc740(\uc870\uc57d\ub3cc\uc774\ub098 \ub098\ubb34\ud310\uc790 \ub4f1) \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. Block \uc778\uc2a4\ud134\uc2a4\ub97c AbstractBlock$Properties \uac1d\uccb4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4e4\uc5b4 \ube14\ub85d\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AbstractBlock$Properties \uac1d\uccb4\ub294 AbstractBlock$Properties#of \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4e4 \uc218 \uc788\uc73c\uba70, \uc774 \uac1d\uccb4\uc758 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\ub294 \uac83\uc73c\ub85c \ube14\ub85d\uc758 \ud2b9\uc131\uc744 \uc6d0\ud558\uc2dc\ub294 \ub300\ub85c \ubc14\uafb8\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. strength - hardness \ub294 \ube14\ub85d\uc774 \ubd80\uc234\uc9c0\ub294\ub370 \uac78\ub9ac\ub294 \uc2dc\uac04\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. \uc774\ub294 \uc784\uc758\uac12\uc785\ub2c8\ub2e4. \ucc38\uace0\ub85c, \ub3cc\uc740 1.5\uc758 hardness \ub97c, \ud759\uc740 0.5 \ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \ube14\ub85d\uc774 \ubd80\uc234\uc9c0\uc9c0 \uc54a\ub294\ub2e4\uba74 hardness \uac12\uc740 -1\uc744 \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4, Blocks#BEDROCK \uac00 \uadf8 \uc608\uc2dc\uc785\ub2c8\ub2e4. resistance \ub294 \ube14\ub85d\uc758 \ud3ed\ubc1c \uc800\ud56d\ub825\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. \ucc38\uace0\ub85c, \ub3cc\uc740 6.0\uc744, \ud759\uc740 0.5\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. sound - \ube14\ub85d\uc774 \ubd80\uc234\uc9c0\uace0, \uae68\uc9c0\uace0, \uc124\uce58\ub418\uc5c8\uc744\ub54c \ub0b4\ub294 \uc18c\ub9ac\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. SoundType \uc744 \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4, \uc18c\ub9ac \uc5d0\uc11c \uc790\uc138\ud55c \ub0b4\uc6a9\uc744 \ud655\uc778\ud558\uc138\uc694. lightLevel - \ube14\ub85d\uc774 \ubc29\ucd9c\ud558\ub294 \ube5b\uc758 \uc591\uc744 \uc870\uc808\ud569\ub2c8\ub2e4. \uc778\uc790\ub85c\ub294, BlockState \ub97c \uc778\uc790\ub85c \ubc1b\uace0 0~15\ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218\ub97c \ubc1b\uc2b5\ub2c8\ub2e4. friction - \uc5bc\ub9c8\ub098 \ube14\ub85d\uc774 \ubbf8\ub044\ub7ec\uc6b4\uc9c0\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \ucc38\uace0\ub85c \uc5bc\uc74c\uc740 0.98\uc758 \ubbf8\ub044\ub7ec\uc6c0\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc704 \ubaa8\ub4e0 \uba54\uc11c\ub4dc\ub4e4\uc740 \uc5f0\uc1e0\uc801\uc73c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4. Blocks \ud074\ub798\uc2a4\ub97c \ucc38\uace0\ud558\uc138\uc694. Note \ube14\ub85d\ub4e4\uc740 \ub354\uc774\uc0c1 ItemGroup(\uc774\uc804\uc5d0 CreativeTab\uc774\uc5c8\uc74c) \uc744 \uc9c0\uc815\ubc1b\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc740 BlockItem \uc73c\ub85c \uc62e\uaca8\uc84c\uc2b5\ub2c8\ub2e4. \uacc4\ub2e4\uac00 \ubc88\uc5ed \ud0a4\uac12\uc774 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc73c\ub85c \ubd80\ud130 \uc0dd\uc131\ub418\uc5b4 \ub354 \uc774\uc0c1 \uc774\ub97c \uc9c0\uc815\ubc1b\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uace0\uae09 \ube14\ub85d \ub2f9\uc5f0\ud558\uac8c\ub3c4 \uc717 \uc608\uc81c\ub294 \ub9e4\uc6b0 \ub2e8\uc21c\ud55c \ube14\ub85d\ub4e4\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\uac00\ub2a5\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud50c\ub808\uc774\uc5b4 \uc0c1\ud638\uc791\uc6a9\uacfc \uac19\uc740 \uae30\ub2a5\uc744 \ucd94\uac00\ud558\uace0 \uc2f6\ub2e4\uba74 \ud074\ub798\uc2a4\ub97c \ub9cc\ub4dc\uc154\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 Block \ud074\ub798\uc2a4\ub294 \uba54\uc11c\ub4dc\uac00 \ub9e4\uc6b0 \ub9ce\uc774 \uc788\uc73c\uba70 \ubaa8\ub4e0\uac83\uc744 \uc774\uacf3\uc5d0\uc11c \uae30\uc220\ud560 \uc21c \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \uc139\uc158\uc5d0 \uc788\ub294 \ub2e4\ub978 \uc7a5\ub4e4\uc5d0\uc11c \ube14\ub85d\uc73c\ub85c \ubb34\uc5c7\uc744 \ud560 \uc218 \uc788\ub294\uc9c0 \ucc38\uace0\ud558\uc138\uc694. \ube14\ub85d \ub4f1\ub85d\ud558\uae30 \ube14\ub85d\uc740 \ubb34\uc870\uac74 \ub4f1\ub85d\ub418\uc5b4\uc57c\ub9cc \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4. Important \uc6d4\ub4dc\uc5d0 \uc788\ub294 \ube14\ub85d\uacfc, \uc778\ubca4\ud1a0\ub9ac\uc5d0 \uc788\ub294 \u201c\ube14\ub85d\u201d\uc740 \ub2e4\ub985\ub2c8\ub2e4. \uc6d4\ub4dc\uc5d0 \uc788\ub294 \ube14\ub85d\uc740 BlockState \ub97c \ud1b5\ud574 \uae30\uc220\ub418\uace0, \uadf8 \uae30\ub2a5\uc740 Block \uc5d0\uc11c \uc815\uc758\ub429\ub2c8\ub2e4. \ud55c\ud3b8, \uc778\ubca4\ud1a0\ub9ac\uc5d0 \uc788\ub294 \uc544\uc774\ud15c\uc740 ItemStack \uc758 \uc778\uc2a4\ud134\uc2a4\uc774\uba70, \uadf8 \uae30\ub2a5\uc740 Item \uc5d0\uc11c \uc815\uc758\ub429\ub2c8\ub2e4. BlockItem \uc740 \uc774 \ub450\uac00\uc9c0\ub97c \uc774\uc5b4\uc8fc\ub294 \ud558\ub098\uc758 \ub2e4\ub9ac\uc774\uba70, \ud45c\ud604\ud560 Block \uc778\uc2a4\ud134\uc2a4\ub97c \ucc38\uc870\ud558\ub294 Item \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. BlockItem \uc740 \uba87\uac00\uc9c0 \ube14\ub85d\uacfc \uac19\uc740 \uae30\ub2a5\ub4e4\uc744 \uad6c\ud604\ud558\ub294\ub370, \uadf8 \uc608\ub85c \uc6b0\ud074\ub9ad\uc2dc \uc6d4\ub4dc\uc5d0 \uc124\uce58\ub418\ub294 \uac83\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c BlockItem \uc774 \uc5c6\ub294 Block \uc744 \ub9cc\ub4e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. (\uadf8 \uc608\ub85c, minecraft:water \ub294 \ube14\ub85d\uc73c\ub85c \uc874\uc7ac\ud558\ub098 \uc544\uc774\ud15c\uc73c\ub85c\ub294 \uc5c6\uc2b5\ub2c8\ub2e4, \uadf8\ub7ec\uae30\uc5d0 \uc774\ub97c \ud719\ub4dd\ud558\ub294 \uac83\uc740 \ubd88\uac00\ub2a5\ud569\ub2c8\ub2e4.) \uc120\ud0dd\uc801\uc73c\ub85c \ube14\ub85d \ub4f1\ub85d\ud558\uae30 \uacfc\uac70\uc5d0\ub294 \uc5ec\ub7ec \ubaa8\ub4dc\uc5d0\uc11c \ud2b9\uc815 \ube14\ub85d/\uc544\uc774\ud15c\ub4e4\uc744 \uc124\uc815 \ud30c\uc77c\uc5d0\uc11c \ube44\ud65c\uc131\ud654\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uc600\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098, \ub354 \uc774\uc0c1 \ub4f1\ub85d\ub420 \uc218 \uc788\ub294 \ube14\ub85d\ub4e4\uc758 \uc81c\ud55c\uc774 \uc5c6\uc73c\ub2c8 \uc774\ub7f0 \uad6c\uc870\ub294 \ub354 \uc774\uc0c1 \uad8c\uc7a5\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 \ubaa8\ub4dc\uc758 \ubaa8\ub4e0 \ube14\ub85d\ub4e4\uc744 \ub4f1\ub85d\ud558\uc138\uc694! \ub9cc\uc57d \ud2b9\uc815 \ube14\ub85d\uc744 \uc124\uc815\uc744 \ud1b5\ud574 \ube44\ud65c\uc131\ud654 \ud558\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74, \uadf8\ub300\uc2e0 \uc870\ud569\ubc95\uc744 \ube44\ud65c\uc131\ud654 \ud558\uc138\uc694. \ucd94\uac00 \uc815\ubcf4 \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \uc6b8\ud0c0\ub9ac, \ub2f4\uc7a5\uacfc \uac19\uc740 \ube14\ub85d\ub4e4\uc758 \ud2b9\uc131\uc5d0 \ub300\ud574 \ub354 \uc54c\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74, blockstates \ub97c \ucc38\uace0\ud558\uc138\uc694","title":"\ube14\ub85d"},{"location":"blocks/blocks/#_1","text":"\ube14\ub85d\uc740, \ub2f9\uc5f0\ud558\uac8c\ub3c4, \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc6d4\ub4dc\uc5d0\uc11c \ud544\uc218\uc801\uc785\ub2c8\ub2e4. \uc9c0\ud615\uacfc \uad6c\uc870\ubb3c, \uadf8\ub9ac\uace0 \uae30\uacc4\ub4e4 \uc804\ubd80 \ube14\ub85d\ub4e4\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\ub97c \uac1c\ubc1c\ud558\uc2e0\ub2e4\uba74, \uc544\ub9c8 \ube14\ub85d\uc744 \ub9cc\ub4e4\uace0 \uc2f6\uc73c\uc2e4 \uac83\uc77c \ud150\ub370\uc694, \uc774\ubc88\uc7a5\uc5d0\uc11c\ub294 \uc5b4\ub5bb\uac8c \ube14\ub85d\uc744 \ub9cc\ub4e4\uace0 \uc774\ub97c \ud1b5\ud574 \ud560 \uc218 \uc788\ub294 \uac83\ub4e4 \uba87\uac00\uc9c0\uc5d0 \ub300\ud574 \ub2e4\ub8f0 \uac83\uc785\ub2c8\ub2e4.","title":"\ube14\ub85d"},{"location":"blocks/blocks/#_2","text":"","title":"\ube14\ub85d \ub9cc\ub4e4\uae30"},{"location":"blocks/blocks/#_3","text":"\ub530\ub85c \ud2b9\ubcc4\ud55c \uae30\ub2a5\uc774 \ud544\uc694\uc5c6\ub294 \ube14\ub85d\ub4e4\uc740(\uc870\uc57d\ub3cc\uc774\ub098 \ub098\ubb34\ud310\uc790 \ub4f1) \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. Block \uc778\uc2a4\ud134\uc2a4\ub97c AbstractBlock$Properties \uac1d\uccb4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4e4\uc5b4 \ube14\ub85d\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AbstractBlock$Properties \uac1d\uccb4\ub294 AbstractBlock$Properties#of \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4e4 \uc218 \uc788\uc73c\uba70, \uc774 \uac1d\uccb4\uc758 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\ub294 \uac83\uc73c\ub85c \ube14\ub85d\uc758 \ud2b9\uc131\uc744 \uc6d0\ud558\uc2dc\ub294 \ub300\ub85c \ubc14\uafb8\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. strength - hardness \ub294 \ube14\ub85d\uc774 \ubd80\uc234\uc9c0\ub294\ub370 \uac78\ub9ac\ub294 \uc2dc\uac04\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. \uc774\ub294 \uc784\uc758\uac12\uc785\ub2c8\ub2e4. \ucc38\uace0\ub85c, \ub3cc\uc740 1.5\uc758 hardness \ub97c, \ud759\uc740 0.5 \ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \ube14\ub85d\uc774 \ubd80\uc234\uc9c0\uc9c0 \uc54a\ub294\ub2e4\uba74 hardness \uac12\uc740 -1\uc744 \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4, Blocks#BEDROCK \uac00 \uadf8 \uc608\uc2dc\uc785\ub2c8\ub2e4. resistance \ub294 \ube14\ub85d\uc758 \ud3ed\ubc1c \uc800\ud56d\ub825\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. \ucc38\uace0\ub85c, \ub3cc\uc740 6.0\uc744, \ud759\uc740 0.5\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. sound - \ube14\ub85d\uc774 \ubd80\uc234\uc9c0\uace0, \uae68\uc9c0\uace0, \uc124\uce58\ub418\uc5c8\uc744\ub54c \ub0b4\ub294 \uc18c\ub9ac\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. SoundType \uc744 \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4, \uc18c\ub9ac \uc5d0\uc11c \uc790\uc138\ud55c \ub0b4\uc6a9\uc744 \ud655\uc778\ud558\uc138\uc694. lightLevel - \ube14\ub85d\uc774 \ubc29\ucd9c\ud558\ub294 \ube5b\uc758 \uc591\uc744 \uc870\uc808\ud569\ub2c8\ub2e4. \uc778\uc790\ub85c\ub294, BlockState \ub97c \uc778\uc790\ub85c \ubc1b\uace0 0~15\ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218\ub97c \ubc1b\uc2b5\ub2c8\ub2e4. friction - \uc5bc\ub9c8\ub098 \ube14\ub85d\uc774 \ubbf8\ub044\ub7ec\uc6b4\uc9c0\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \ucc38\uace0\ub85c \uc5bc\uc74c\uc740 0.98\uc758 \ubbf8\ub044\ub7ec\uc6c0\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc704 \ubaa8\ub4e0 \uba54\uc11c\ub4dc\ub4e4\uc740 \uc5f0\uc1e0\uc801\uc73c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4. Blocks \ud074\ub798\uc2a4\ub97c \ucc38\uace0\ud558\uc138\uc694. Note \ube14\ub85d\ub4e4\uc740 \ub354\uc774\uc0c1 ItemGroup(\uc774\uc804\uc5d0 CreativeTab\uc774\uc5c8\uc74c) \uc744 \uc9c0\uc815\ubc1b\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc740 BlockItem \uc73c\ub85c \uc62e\uaca8\uc84c\uc2b5\ub2c8\ub2e4. \uacc4\ub2e4\uac00 \ubc88\uc5ed \ud0a4\uac12\uc774 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc73c\ub85c \ubd80\ud130 \uc0dd\uc131\ub418\uc5b4 \ub354 \uc774\uc0c1 \uc774\ub97c \uc9c0\uc815\ubc1b\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.","title":"\uae30\ubcf8\uc801\uc778 \ube14\ub85d\ub4e4"},{"location":"blocks/blocks/#_4","text":"\ub2f9\uc5f0\ud558\uac8c\ub3c4 \uc717 \uc608\uc81c\ub294 \ub9e4\uc6b0 \ub2e8\uc21c\ud55c \ube14\ub85d\ub4e4\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\uac00\ub2a5\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud50c\ub808\uc774\uc5b4 \uc0c1\ud638\uc791\uc6a9\uacfc \uac19\uc740 \uae30\ub2a5\uc744 \ucd94\uac00\ud558\uace0 \uc2f6\ub2e4\uba74 \ud074\ub798\uc2a4\ub97c \ub9cc\ub4dc\uc154\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 Block \ud074\ub798\uc2a4\ub294 \uba54\uc11c\ub4dc\uac00 \ub9e4\uc6b0 \ub9ce\uc774 \uc788\uc73c\uba70 \ubaa8\ub4e0\uac83\uc744 \uc774\uacf3\uc5d0\uc11c \uae30\uc220\ud560 \uc21c \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \uc139\uc158\uc5d0 \uc788\ub294 \ub2e4\ub978 \uc7a5\ub4e4\uc5d0\uc11c \ube14\ub85d\uc73c\ub85c \ubb34\uc5c7\uc744 \ud560 \uc218 \uc788\ub294\uc9c0 \ucc38\uace0\ud558\uc138\uc694.","title":"\uace0\uae09 \ube14\ub85d"},{"location":"blocks/blocks/#_5","text":"\ube14\ub85d\uc740 \ubb34\uc870\uac74 \ub4f1\ub85d\ub418\uc5b4\uc57c\ub9cc \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4. Important \uc6d4\ub4dc\uc5d0 \uc788\ub294 \ube14\ub85d\uacfc, \uc778\ubca4\ud1a0\ub9ac\uc5d0 \uc788\ub294 \u201c\ube14\ub85d\u201d\uc740 \ub2e4\ub985\ub2c8\ub2e4. \uc6d4\ub4dc\uc5d0 \uc788\ub294 \ube14\ub85d\uc740 BlockState \ub97c \ud1b5\ud574 \uae30\uc220\ub418\uace0, \uadf8 \uae30\ub2a5\uc740 Block \uc5d0\uc11c \uc815\uc758\ub429\ub2c8\ub2e4. \ud55c\ud3b8, \uc778\ubca4\ud1a0\ub9ac\uc5d0 \uc788\ub294 \uc544\uc774\ud15c\uc740 ItemStack \uc758 \uc778\uc2a4\ud134\uc2a4\uc774\uba70, \uadf8 \uae30\ub2a5\uc740 Item \uc5d0\uc11c \uc815\uc758\ub429\ub2c8\ub2e4. BlockItem \uc740 \uc774 \ub450\uac00\uc9c0\ub97c \uc774\uc5b4\uc8fc\ub294 \ud558\ub098\uc758 \ub2e4\ub9ac\uc774\uba70, \ud45c\ud604\ud560 Block \uc778\uc2a4\ud134\uc2a4\ub97c \ucc38\uc870\ud558\ub294 Item \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. BlockItem \uc740 \uba87\uac00\uc9c0 \ube14\ub85d\uacfc \uac19\uc740 \uae30\ub2a5\ub4e4\uc744 \uad6c\ud604\ud558\ub294\ub370, \uadf8 \uc608\ub85c \uc6b0\ud074\ub9ad\uc2dc \uc6d4\ub4dc\uc5d0 \uc124\uce58\ub418\ub294 \uac83\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c BlockItem \uc774 \uc5c6\ub294 Block \uc744 \ub9cc\ub4e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. (\uadf8 \uc608\ub85c, minecraft:water \ub294 \ube14\ub85d\uc73c\ub85c \uc874\uc7ac\ud558\ub098 \uc544\uc774\ud15c\uc73c\ub85c\ub294 \uc5c6\uc2b5\ub2c8\ub2e4, \uadf8\ub7ec\uae30\uc5d0 \uc774\ub97c \ud719\ub4dd\ud558\ub294 \uac83\uc740 \ubd88\uac00\ub2a5\ud569\ub2c8\ub2e4.)","title":"\ube14\ub85d \ub4f1\ub85d\ud558\uae30"},{"location":"blocks/blocks/#_6","text":"\uacfc\uac70\uc5d0\ub294 \uc5ec\ub7ec \ubaa8\ub4dc\uc5d0\uc11c \ud2b9\uc815 \ube14\ub85d/\uc544\uc774\ud15c\ub4e4\uc744 \uc124\uc815 \ud30c\uc77c\uc5d0\uc11c \ube44\ud65c\uc131\ud654\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uc600\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098, \ub354 \uc774\uc0c1 \ub4f1\ub85d\ub420 \uc218 \uc788\ub294 \ube14\ub85d\ub4e4\uc758 \uc81c\ud55c\uc774 \uc5c6\uc73c\ub2c8 \uc774\ub7f0 \uad6c\uc870\ub294 \ub354 \uc774\uc0c1 \uad8c\uc7a5\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 \ubaa8\ub4dc\uc758 \ubaa8\ub4e0 \ube14\ub85d\ub4e4\uc744 \ub4f1\ub85d\ud558\uc138\uc694! \ub9cc\uc57d \ud2b9\uc815 \ube14\ub85d\uc744 \uc124\uc815\uc744 \ud1b5\ud574 \ube44\ud65c\uc131\ud654 \ud558\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74, \uadf8\ub300\uc2e0 \uc870\ud569\ubc95\uc744 \ube44\ud65c\uc131\ud654 \ud558\uc138\uc694.","title":"\uc120\ud0dd\uc801\uc73c\ub85c \ube14\ub85d \ub4f1\ub85d\ud558\uae30"},{"location":"blocks/blocks/#_7","text":"\ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \uc6b8\ud0c0\ub9ac, \ub2f4\uc7a5\uacfc \uac19\uc740 \ube14\ub85d\ub4e4\uc758 \ud2b9\uc131\uc5d0 \ub300\ud574 \ub354 \uc54c\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74, blockstates \ub97c \ucc38\uace0\ud558\uc138\uc694","title":"\ucd94\uac00 \uc815\ubcf4"},{"location":"blocks/interaction/","text":"Block Interaction There are many different ways players (and other things) can interact with blocks, such as right clicking, left clicking, colliding, walking on, and of course mining. This page will cover the basics of the most common types of interaction with blocks. Player Right Click Since left clicking, or \u201cpunching\u201d, a block does not generally result in any unique behavior, it is probably fair to say right clicking, or \u201cactivation\u201d, is the most common method of interaction. And thankfully, it is also one of the simplest to handle. use public ActionResultType use(BlockState state, World worldIn, BlockPos pos, PlayerEntity player, Hand handIn, BlockRayTraceResult hit) This is the method that controls right click behavior. Parameters Type Name Description BlockState state The state of the block that was clicked World worldIn The world that the block was clicked in BlockPos pos The position of the block that was clicked PlayerEntity player The player who did the clicking Hand handIn The hand with which the player clicked BlockRayTraceResult hit Where on the block\u2019s bounds it was hit Return Value ActionResultType is the result right clicking, see example usages below. ActionResultType#SUCCESS means the right click action was successful. ActionResultType#CONSUME means that the right click action was consumed. ActionResultType#PASS is the default behavior, for when the block has no right click behavior, and allows something else to handle the right click. ActionResultType#FAIL means that the action failed. Enum Value Example Usage SUCCESS Eating a slice of cake. CONSUME Tuning a noteblock. PASS When right-clicking dirt. Or any other basic block. FAIL When attempting to place a minecart on a block other than rails. Important Returning ActionResultType#CONSUME from this method on the client will prevent it being called on the server. It is common practice to just check worldIn#isClientSide and return ActionResultType#SUCCESS , and otherwise go on to normal activation logic. Vanilla has many examples of this, such as the chest. Usage examples The uses for activation are literally endless. However, there are some common ones which deserve their own section. GUIs One of the most common things to do on block activation is opening a GUI. Many blocks in vanilla behave this way, such as chests, hoppers, furnaces, and many more. Activation Another common use for activation is, well, activation. This can be something like \u201cturning on\u201d a block, or triggering it to perform some action. For instance, a block could light up when activated. A vanilla example would be buttons or levers. Important use is called on both the client and the server, so be sure to keep the sidedness of your code in mind. Many things, like opening GUIs and modifying the world, should only be done on the server-side. Block Placement setPlacedBy public void setPlacedBy(World worldIn, BlockPos pos, BlockState state, @Nullable LivingEntity placer, ItemStack stack) Called by BlockItem s after a block is set in the world, to allow post-place logic. Parameters: Type Name Description World worldIn The world that the block was placed in BlockPos pos The position where the block was placed BlockState state The state of the block that was placed LivingEntity placer The entity who placed the block ItemStack stack The item block that was placed Player Break/Destroy attack public void attack(BlockState state, World worldIn, BlockPos pos, PlayerEntity player) Called on a block when it is clicked by a player. Note This method is for when the player left-clicks on a block. Don\u2019t get this confused with use , which is called when the player right-clicks . Parameters: Type Name Description BlockState state The state of the block that was clicked World worldIn The world that the block was clicked in BlockPos pos The position of the block that was clicked PlayerEntity player The player who did the clicking Usage example This method is perfect for adding custom events when a player clicks on a block. By default, this method does nothing. NoteBlock overrides this method so when left-clicked, it plays a sound. RedstoneOreBlock on left-click emits a faint light and spawns particles around itself. playerWillDestroy public void playerWillDestroy(World worldIn, BlockPos pos, BlockState state, PlayerEntity player) Called before the Block is set to air in the world. Called regardless of if the player\u2019s tool can actually collect this block. Parameters: Type Name Description World worldIn The world that the block was destroyed BlockPos pos The position of the block that was destroyed BlockState state The state of the block that was destroyed PlayerEntity player The player who harvested the block Usage example This method is perfect for adding custom events as a result of a player destroying a block This method has important behavior in the Block class so be sure to call the super method. super.playerWillDestroy(worldIn, pos, state, player); The TNTBlock overrides this method to cause it\u2019s explosion when a player destroys it if its unstable property is true . This method is used by extended pistons; since an extended piston is made up of two blocks. (the extended head and the base) The PistonHeadBlock makes use of this method to destroy the base block when the PistonHeadBlock is destroyed. Entity Collision entityInside public void entityInside(BlockState state, World worldIn, BlockPos pos, Entity entityIn) This method is called whenever an entity collides with the block. Parameters: Type Name Description BlockState state The state of the block that was collided with World worldIn The world where the collided block is located BlockPos pos The position of the block that was collided with Entity entityIn The entity who collided with the block Usage examples An example use of this method is by the CampfireBlock which uses this method to light those on fire that collide with the campfire.","title":"\uc0c1\ud638\uc791\uc6a9"},{"location":"blocks/interaction/#block-interaction","text":"There are many different ways players (and other things) can interact with blocks, such as right clicking, left clicking, colliding, walking on, and of course mining. This page will cover the basics of the most common types of interaction with blocks.","title":"Block Interaction"},{"location":"blocks/interaction/#player-right-click","text":"Since left clicking, or \u201cpunching\u201d, a block does not generally result in any unique behavior, it is probably fair to say right clicking, or \u201cactivation\u201d, is the most common method of interaction. And thankfully, it is also one of the simplest to handle.","title":"Player Right Click"},{"location":"blocks/interaction/#use","text":"public ActionResultType use(BlockState state, World worldIn, BlockPos pos, PlayerEntity player, Hand handIn, BlockRayTraceResult hit) This is the method that controls right click behavior.","title":"use"},{"location":"blocks/interaction/#parameters","text":"Type Name Description BlockState state The state of the block that was clicked World worldIn The world that the block was clicked in BlockPos pos The position of the block that was clicked PlayerEntity player The player who did the clicking Hand handIn The hand with which the player clicked BlockRayTraceResult hit Where on the block\u2019s bounds it was hit","title":"Parameters"},{"location":"blocks/interaction/#return-value","text":"ActionResultType is the result right clicking, see example usages below. ActionResultType#SUCCESS means the right click action was successful. ActionResultType#CONSUME means that the right click action was consumed. ActionResultType#PASS is the default behavior, for when the block has no right click behavior, and allows something else to handle the right click. ActionResultType#FAIL means that the action failed. Enum Value Example Usage SUCCESS Eating a slice of cake. CONSUME Tuning a noteblock. PASS When right-clicking dirt. Or any other basic block. FAIL When attempting to place a minecart on a block other than rails. Important Returning ActionResultType#CONSUME from this method on the client will prevent it being called on the server. It is common practice to just check worldIn#isClientSide and return ActionResultType#SUCCESS , and otherwise go on to normal activation logic. Vanilla has many examples of this, such as the chest.","title":"Return Value"},{"location":"blocks/interaction/#usage-examples","text":"The uses for activation are literally endless. However, there are some common ones which deserve their own section.","title":"Usage examples"},{"location":"blocks/interaction/#guis","text":"One of the most common things to do on block activation is opening a GUI. Many blocks in vanilla behave this way, such as chests, hoppers, furnaces, and many more.","title":"GUIs"},{"location":"blocks/interaction/#activation","text":"Another common use for activation is, well, activation. This can be something like \u201cturning on\u201d a block, or triggering it to perform some action. For instance, a block could light up when activated. A vanilla example would be buttons or levers. Important use is called on both the client and the server, so be sure to keep the sidedness of your code in mind. Many things, like opening GUIs and modifying the world, should only be done on the server-side.","title":"Activation"},{"location":"blocks/interaction/#block-placement","text":"","title":"Block Placement"},{"location":"blocks/interaction/#setplacedby","text":"public void setPlacedBy(World worldIn, BlockPos pos, BlockState state, @Nullable LivingEntity placer, ItemStack stack) Called by BlockItem s after a block is set in the world, to allow post-place logic.","title":"setPlacedBy"},{"location":"blocks/interaction/#parameters_1","text":"Type Name Description World worldIn The world that the block was placed in BlockPos pos The position where the block was placed BlockState state The state of the block that was placed LivingEntity placer The entity who placed the block ItemStack stack The item block that was placed","title":"Parameters:"},{"location":"blocks/interaction/#player-breakdestroy","text":"","title":"Player Break/Destroy"},{"location":"blocks/interaction/#attack","text":"public void attack(BlockState state, World worldIn, BlockPos pos, PlayerEntity player) Called on a block when it is clicked by a player. Note This method is for when the player left-clicks on a block. Don\u2019t get this confused with use , which is called when the player right-clicks .","title":"attack"},{"location":"blocks/interaction/#parameters_2","text":"Type Name Description BlockState state The state of the block that was clicked World worldIn The world that the block was clicked in BlockPos pos The position of the block that was clicked PlayerEntity player The player who did the clicking","title":"Parameters:"},{"location":"blocks/interaction/#usage-example","text":"This method is perfect for adding custom events when a player clicks on a block. By default, this method does nothing. NoteBlock overrides this method so when left-clicked, it plays a sound. RedstoneOreBlock on left-click emits a faint light and spawns particles around itself.","title":"Usage example"},{"location":"blocks/interaction/#playerwilldestroy","text":"public void playerWillDestroy(World worldIn, BlockPos pos, BlockState state, PlayerEntity player) Called before the Block is set to air in the world. Called regardless of if the player\u2019s tool can actually collect this block.","title":"playerWillDestroy"},{"location":"blocks/interaction/#parameters_3","text":"Type Name Description World worldIn The world that the block was destroyed BlockPos pos The position of the block that was destroyed BlockState state The state of the block that was destroyed PlayerEntity player The player who harvested the block","title":"Parameters:"},{"location":"blocks/interaction/#usage-example_1","text":"This method is perfect for adding custom events as a result of a player destroying a block This method has important behavior in the Block class so be sure to call the super method. super.playerWillDestroy(worldIn, pos, state, player); The TNTBlock overrides this method to cause it\u2019s explosion when a player destroys it if its unstable property is true . This method is used by extended pistons; since an extended piston is made up of two blocks. (the extended head and the base) The PistonHeadBlock makes use of this method to destroy the base block when the PistonHeadBlock is destroyed.","title":"Usage example"},{"location":"blocks/interaction/#entity-collision","text":"","title":"Entity Collision"},{"location":"blocks/interaction/#entityinside","text":"public void entityInside(BlockState state, World worldIn, BlockPos pos, Entity entityIn) This method is called whenever an entity collides with the block.","title":"entityInside"},{"location":"blocks/interaction/#parameters_4","text":"Type Name Description BlockState state The state of the block that was collided with World worldIn The world where the collided block is located BlockPos pos The position of the block that was collided with Entity entityIn The entity who collided with the block","title":"Parameters:"},{"location":"blocks/interaction/#usage-examples_1","text":"An example use of this method is by the CampfireBlock which uses this method to light those on fire that collide with the campfire.","title":"Usage examples"},{"location":"blocks/states/","text":"Block States Legacy Behavior In Minecraft 1.7 and previous versions, blocks which need to store placement or state data that did not have TileEntities used metadata . Metadata was an extra number stored with the block, allowing different rotations, facings, or even completely separate behaviors within a block. However, the metadata system was confusing and limited, since it was stored as only a number alongside the block ID, and had no meaning except what was commented in the code. For example, to implement a block that can face a direction and be on either the upper or lower half of a block space (such as a stair): switch (meta) { case 0: { ... } // south and on the lower half of the block case 1: { ... } // south on the upper side of the block case 2: { ... } // north and on the lower half of the block case 3: { ... } // north and on the upper half of the block ... etc. ... } Because the numbers carry no meaning by themselves, no one could know what they represent unless they had access to the source code and comments. Introduction of States In Minecraft 1.8 and above, the metadata system, along with the block ID system, was deprecated and eventually replaced with the block state system . The block state system abstracts out the details of the block\u2019s properties from the other behaviors of the block. Each property of a block is described by an instance of IProperty<?> . Examples of block properties include instruments ( Property<NoteBlockInstrument> ), facing ( Property<Direction ), poweredness ( Property<Boolean> ), etc. Each property has the value of the type T parametrized by Property<T> . A unique pair can be constructed from the block and a map of the properties to their associated values. This unique pair is called a BlockState . The previous system of meaningless metadata values were replaced by a system of block properties, which are easier to interpret and deal with. Previously, a stone button which is facing east and is powered or held down is represented by \u201c minecraft:stone_button with metadata 9 . Now, this is represented by \u201c minecraft:stone_button[facing=east,powered=true] \u201d. Proper Usage of Block States The BlockState system is a flexible and powerful system, but it also has limitations. BlockState s are immutable, and all combinations of their properties are generated on startup of the game. This means that having a BlockState with many properties and possible values will slow down the loading of the game, and befuddle anyone trying to make sense of your block logic. Not all blocks and situations require the usage of BlockState ; only the most basic properties of a block should be put into a BlockState , and any other situation is better off with having a TileEntity or being a separate Block . Always consider if you actually need to use blockstates for your purposes. Note A good rule of thumb is: if it has a different name, it should be a separate block . An example is making chair blocks: the direction of the chair should be a property , while the different types of wood should be separated into different blocks. An \u201cOak Chair\u201d facing east ( oak_chair[facing=east] ) is different from a \u201cSpruce Chair\u201d facing west ( spruce_chair[facing=west] ). Implementing Block States In your Block class, create or reference static final Property<?> objects for every property that your Block has. You are free to make your own Property<?> implementations, but the means to do that are not covered in this article. The vanilla code provides several convenience implementations: IntegerProperty Implements Property<Integer> . Defines a property that holds an integer value. Created by calling IntegerProperty#create(String propertyName, int minimum, int maximum) . BooleanProperty Implements Property<Boolean> . Defines a property that holds a true or false value. Created by calling BooleanProperty#create(String propertyName) . EnumProperty<E extends Enum<E>> Implements Property<E> . Defines a property that can take on the values of an Enum class. Created by calling EnumProperty#create(String propertyName, Class<E> enumClass) . It is also possible to use only a subset of the Enum values (e.g. 4 out of 16 DyeColor s). See the overloads of EnumProperty#create . DirectionProperty This is a convenience implementation of EnumProperty<Direction> Several convenience predicates are also provided. For example, to get a property that represents the cardinal directions, call DirectionProperty.create(\"<name>\", Direction.Plane.HORIZONTAL) ; to get the X directions, DirectionProperty.create(\"<name>\", Direction.Axis.X) . The class BlockStateProperties contains shared vanilla properties which should be used or referenced whenever possible, in place of creating your own properties. When you have your desired Property<> objects, override Block#createBlockStateDefinition(StateContainer$Builder) in your Block class. In that method, call StateContainer$Builder#add(...); with the parameters as every Property<?> you wish the block to have. Every block will also have a \u201cdefault\u201d state that is automatically chosen for you. You can change this \u201cdefault\u201d state by calling the Block#registerDefaultState(BlockState) method from your constructor. When your block is placed it will become this \u201cdefault\u201d state. An example from DoorBlock : this.registerDefaultState( this.stateDefinition.any() .setValue(FACING, Direction.NORTH) .setValue(OPEN, false) .setValue(HINGE, DoorHingeSide.LEFT) .setValue(POWERED, false) .setValue(HALF, DoubleBlockHalf.LOWER) ); If you wish to change what BlockState is used when placing your block, you can overwrite Block#getStateForPlacement(BlockItemUseContext) . This can be used to, for example, set the direction of your block depending on where the player is standing when they place it. Because BlockState s are immutable, and all combinations of their properties are generated on startup of the game, calling BlockState#setValue(Property<T>, T) will simply go to the Block \u2018s StateContainer and request the BlockState with the set of values you want. Because all possible BlockState s are generated at startup, you are free and encouraged to use the reference equality operator ( == ) to check if two BlockState s are equal. Using BlockState \u2018s You can get the value of a property by calling BlockState#getValue(Property<?>) , passing it the property you want to get the value of. If you want to get a BlockState with a different set of values, simply call BlockState#setValue(Property<T>, T) with the property and its value. You can get and place BlockState \u2018s in the world using World#setBlockAndUpdate(BlockPos, BlockState) and World#getBlockState(BlockState) . If you are placing a Block , call Block#defaultBlockState() to get the \u201cdefault\u201d state, and use subsequent calls to BlockState#setValue(Property<T>, T) as stated above to achieve the desired state.","title":"\ube14\ub85d\uc758 \uc0c1\ud0dc"},{"location":"blocks/states/#block-states","text":"","title":"Block States"},{"location":"blocks/states/#legacy-behavior","text":"In Minecraft 1.7 and previous versions, blocks which need to store placement or state data that did not have TileEntities used metadata . Metadata was an extra number stored with the block, allowing different rotations, facings, or even completely separate behaviors within a block. However, the metadata system was confusing and limited, since it was stored as only a number alongside the block ID, and had no meaning except what was commented in the code. For example, to implement a block that can face a direction and be on either the upper or lower half of a block space (such as a stair): switch (meta) { case 0: { ... } // south and on the lower half of the block case 1: { ... } // south on the upper side of the block case 2: { ... } // north and on the lower half of the block case 3: { ... } // north and on the upper half of the block ... etc. ... } Because the numbers carry no meaning by themselves, no one could know what they represent unless they had access to the source code and comments.","title":"Legacy Behavior"},{"location":"blocks/states/#introduction-of-states","text":"In Minecraft 1.8 and above, the metadata system, along with the block ID system, was deprecated and eventually replaced with the block state system . The block state system abstracts out the details of the block\u2019s properties from the other behaviors of the block. Each property of a block is described by an instance of IProperty<?> . Examples of block properties include instruments ( Property<NoteBlockInstrument> ), facing ( Property<Direction ), poweredness ( Property<Boolean> ), etc. Each property has the value of the type T parametrized by Property<T> . A unique pair can be constructed from the block and a map of the properties to their associated values. This unique pair is called a BlockState . The previous system of meaningless metadata values were replaced by a system of block properties, which are easier to interpret and deal with. Previously, a stone button which is facing east and is powered or held down is represented by \u201c minecraft:stone_button with metadata 9 . Now, this is represented by \u201c minecraft:stone_button[facing=east,powered=true] \u201d.","title":"Introduction of States"},{"location":"blocks/states/#proper-usage-of-block-states","text":"The BlockState system is a flexible and powerful system, but it also has limitations. BlockState s are immutable, and all combinations of their properties are generated on startup of the game. This means that having a BlockState with many properties and possible values will slow down the loading of the game, and befuddle anyone trying to make sense of your block logic. Not all blocks and situations require the usage of BlockState ; only the most basic properties of a block should be put into a BlockState , and any other situation is better off with having a TileEntity or being a separate Block . Always consider if you actually need to use blockstates for your purposes. Note A good rule of thumb is: if it has a different name, it should be a separate block . An example is making chair blocks: the direction of the chair should be a property , while the different types of wood should be separated into different blocks. An \u201cOak Chair\u201d facing east ( oak_chair[facing=east] ) is different from a \u201cSpruce Chair\u201d facing west ( spruce_chair[facing=west] ).","title":"Proper Usage of Block States"},{"location":"blocks/states/#implementing-block-states","text":"In your Block class, create or reference static final Property<?> objects for every property that your Block has. You are free to make your own Property<?> implementations, but the means to do that are not covered in this article. The vanilla code provides several convenience implementations: IntegerProperty Implements Property<Integer> . Defines a property that holds an integer value. Created by calling IntegerProperty#create(String propertyName, int minimum, int maximum) . BooleanProperty Implements Property<Boolean> . Defines a property that holds a true or false value. Created by calling BooleanProperty#create(String propertyName) . EnumProperty<E extends Enum<E>> Implements Property<E> . Defines a property that can take on the values of an Enum class. Created by calling EnumProperty#create(String propertyName, Class<E> enumClass) . It is also possible to use only a subset of the Enum values (e.g. 4 out of 16 DyeColor s). See the overloads of EnumProperty#create . DirectionProperty This is a convenience implementation of EnumProperty<Direction> Several convenience predicates are also provided. For example, to get a property that represents the cardinal directions, call DirectionProperty.create(\"<name>\", Direction.Plane.HORIZONTAL) ; to get the X directions, DirectionProperty.create(\"<name>\", Direction.Axis.X) . The class BlockStateProperties contains shared vanilla properties which should be used or referenced whenever possible, in place of creating your own properties. When you have your desired Property<> objects, override Block#createBlockStateDefinition(StateContainer$Builder) in your Block class. In that method, call StateContainer$Builder#add(...); with the parameters as every Property<?> you wish the block to have. Every block will also have a \u201cdefault\u201d state that is automatically chosen for you. You can change this \u201cdefault\u201d state by calling the Block#registerDefaultState(BlockState) method from your constructor. When your block is placed it will become this \u201cdefault\u201d state. An example from DoorBlock : this.registerDefaultState( this.stateDefinition.any() .setValue(FACING, Direction.NORTH) .setValue(OPEN, false) .setValue(HINGE, DoorHingeSide.LEFT) .setValue(POWERED, false) .setValue(HALF, DoubleBlockHalf.LOWER) ); If you wish to change what BlockState is used when placing your block, you can overwrite Block#getStateForPlacement(BlockItemUseContext) . This can be used to, for example, set the direction of your block depending on where the player is standing when they place it. Because BlockState s are immutable, and all combinations of their properties are generated on startup of the game, calling BlockState#setValue(Property<T>, T) will simply go to the Block \u2018s StateContainer and request the BlockState with the set of values you want. Because all possible BlockState s are generated at startup, you are free and encouraged to use the reference equality operator ( == ) to check if two BlockState s are equal.","title":"Implementing Block States"},{"location":"blocks/states/#using-blockstates","text":"You can get the value of a property by calling BlockState#getValue(Property<?>) , passing it the property you want to get the value of. If you want to get a BlockState with a different set of values, simply call BlockState#setValue(Property<T>, T) with the property and its value. You can get and place BlockState \u2018s in the world using World#setBlockAndUpdate(BlockPos, BlockState) and World#getBlockState(BlockState) . If you are placing a Block , call Block#defaultBlockState() to get the \u201cdefault\u201d state, and use subsequent calls to BlockState#setValue(Property<T>, T) as stated above to achieve the desired state.","title":"Using BlockState's"},{"location":"concepts/data/","text":"\ub370\uc774\ud130\ud329 \ubaa8\uc7a5\uc740 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 1.13\uc5d0 \ub370\uc774\ud130\ud329 \uc744 \ucd94\uac00\ud558\uc600\uc2b5\ub2c8\ub2e4. \uc774\ub294 data \ud3f4\ub354\ub97c \ud1b5\ud558\uc5ec \ub17c\ub9ac \uc11c\ubc84\ub97c \ubcf4\ub2e4 \uc27d\uac8c \uc218\uc815\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc8fc\uc5c8\uc2b5\ub2c8\ub2e4. \uc218\uc815\uac00\ub2a5\ud55c \ud56d\ubaa9\ub4e4\uc5d0\ub294, \ub3c4\uc804\uacfc\uc81c, \ub178\ud68d\ubb3c \ubaa9\ub85d, \uad6c\uc870\ubb3c, \uc870\ud569\ubc95, \ud0dc\uadf8 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub2f9\uc2e0\uc774 \uac1c\ubc1c\ud558\ub294 \ubaa8\ub4dc\uc640 \ud3ec\uc9c0 \ub610\ud55c \uc790\uae30\ub9cc\uc758 \ub370\uc774\ud130\ud329\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \ub370\uc774\ud130\ud329\uc744 \uc774\uc6a9\ud558\uba74 \ub204\uad6c\ub098 \ub2e4\ub978 \ubaa8\ub4dc\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \uac83\ub4e4\uc744 \ud3ec\ud568\ud55c \ubaa8\ub4e0 \uc870\ud569\ubc95, \ub178\ud68d\ubb3c \ubaa9\ub85d, \uadf8\ub9ac\uace0 \ub2e4\ub978 \ub370\uc774\ud130\ub4e4\uc744 \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ud329 \ub9cc\ub4e4\uae30 \ub370\uc774\ud130\ud329\ub4e4\uc740 \ubaa8\ub4dc \ud504\ub85c\uc81d\ud2b8\uc758 \ub9ac\uc18c\uc2a4 \ud3f4\ub354\uc5d0 \uc788\ub294 data \uc5d0 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\ub97c \ub9cc\ub4e4\uba74\uc11c \ubaa8\ub4dc\uc5d0 \uc801\uc6a9\ub420 \ub370\uc774\ud130\ud329 \ub9d0\uace0, \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8, \ud3ec\uc9c0, \ub610\ub294 \ub2e4\ub978 \ubaa8\ub4dc\uc5d0 \uc801\uc6a9\ub420 \ub370\uc774\ud130 \ud329 \ub610\ud55c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uacf3 \uc5d0\uc11c \ub370\uc774\ud130\ud329\uc744 \ub9cc\ub4dc\ub294 \uacfc\uc815\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uac00\ub85c \uc54c\uc544\ub450\uc2e4 \ub9cc\ud55c \uac83: \ub9ac\uc18c\uc2a4 \uc704\uce58","title":"\ub370\uc774\ud130"},{"location":"concepts/data/#_1","text":"\ubaa8\uc7a5\uc740 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 1.13\uc5d0 \ub370\uc774\ud130\ud329 \uc744 \ucd94\uac00\ud558\uc600\uc2b5\ub2c8\ub2e4. \uc774\ub294 data \ud3f4\ub354\ub97c \ud1b5\ud558\uc5ec \ub17c\ub9ac \uc11c\ubc84\ub97c \ubcf4\ub2e4 \uc27d\uac8c \uc218\uc815\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc8fc\uc5c8\uc2b5\ub2c8\ub2e4. \uc218\uc815\uac00\ub2a5\ud55c \ud56d\ubaa9\ub4e4\uc5d0\ub294, \ub3c4\uc804\uacfc\uc81c, \ub178\ud68d\ubb3c \ubaa9\ub85d, \uad6c\uc870\ubb3c, \uc870\ud569\ubc95, \ud0dc\uadf8 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub2f9\uc2e0\uc774 \uac1c\ubc1c\ud558\ub294 \ubaa8\ub4dc\uc640 \ud3ec\uc9c0 \ub610\ud55c \uc790\uae30\ub9cc\uc758 \ub370\uc774\ud130\ud329\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \ub370\uc774\ud130\ud329\uc744 \uc774\uc6a9\ud558\uba74 \ub204\uad6c\ub098 \ub2e4\ub978 \ubaa8\ub4dc\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \uac83\ub4e4\uc744 \ud3ec\ud568\ud55c \ubaa8\ub4e0 \uc870\ud569\ubc95, \ub178\ud68d\ubb3c \ubaa9\ub85d, \uadf8\ub9ac\uace0 \ub2e4\ub978 \ub370\uc774\ud130\ub4e4\uc744 \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub370\uc774\ud130\ud329"},{"location":"concepts/data/#_2","text":"\ub370\uc774\ud130\ud329\ub4e4\uc740 \ubaa8\ub4dc \ud504\ub85c\uc81d\ud2b8\uc758 \ub9ac\uc18c\uc2a4 \ud3f4\ub354\uc5d0 \uc788\ub294 data \uc5d0 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\ub97c \ub9cc\ub4e4\uba74\uc11c \ubaa8\ub4dc\uc5d0 \uc801\uc6a9\ub420 \ub370\uc774\ud130\ud329 \ub9d0\uace0, \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8, \ud3ec\uc9c0, \ub610\ub294 \ub2e4\ub978 \ubaa8\ub4dc\uc5d0 \uc801\uc6a9\ub420 \ub370\uc774\ud130 \ud329 \ub610\ud55c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uacf3 \uc5d0\uc11c \ub370\uc774\ud130\ud329\uc744 \ub9cc\ub4dc\ub294 \uacfc\uc815\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uac00\ub85c \uc54c\uc544\ub450\uc2e4 \ub9cc\ud55c \uac83: \ub9ac\uc18c\uc2a4 \uc704\uce58","title":"\ub370\uc774\ud130\ud329 \ub9cc\ub4e4\uae30"},{"location":"concepts/internationalization/","text":"\uad6d\uc81c\ud654\uc640 \ud604\uc9c0\ud654 \uad6d\uc81c\ud654(Internationalization, i18n\ub77c\uace0 \ud558\uae30\ub3c4 \ud569\ub2c8\ub2e4.)\ub294 \ub2e4\uc591\ud55c \uc5b8\uc5b4\ub97c \uc9c0\uc6d0\ud560\ub54c \ucf54\ub4dc\uc0c1 \ubcc0\uacbd\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\ub294 \uc124\uacc4 \ubc29\ubc95\uc785\ub2c8\ub2e4. \ud604\uc9c0\ud654\ub294 \ud45c\uc2dc\ub418\ub294 \uae00\uc790\ub4e4\uc744 \uc720\uc800\uc758 \uc5b8\uc5b4\uc5d0 \ub9de\uac8c \ubc14\uafb8\ub294 \uacfc\uc815\uc785\ub2c8\ub2e4. \uad6d\uc81c\ud654\ub294 \ubc88\uc5ed \ud0a4\uac12 \uc744 \ud1b5\ud574 \uad6c\ud604\ub429\ub2c8\ub2e4. \ubc88\uc5ed \ud0a4\uac12\uc740 \uc5b8\uc5b4\uc5d0 \uc0c1\uad00\uc5c6\uc774 \ud45c\uc2dc \uac00\ub2a5\ud55c \ud14d\uc2a4\ud2b8\ub97c \uc2dd\ubcc4\ud558\ub294 \ubb38\uc790\uc5f4 \uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, block.minecraft.dirt \ub294 \ud759 \ube14\ub85d\uc758 \uc774\ub984\uc744 \ub73b\ud558\ub294 \ubb38\uc790\uc5f4 \uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ud45c\uc2dc \uac00\ub2a5\ud55c \ud14d\uc2a4\ud2b8\ub4e4\uc744 \uc5b8\uc5b4\uc5d0 \uad00\uacc4\uc5c6\uc774 \ucc38\uc870\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c \ucf54\ub4dc \ubcc0\uacbd\uc740 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud604\uc9c0\ud654\ub294 \uac8c\uc784\uc758 \uc5b8\uc5b4 \ud30c\uc77c\uc744 \ud1b5\ud574 \uc774\ub8e8\uc5b4 \uc9d1\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \uc5b8\uc5b4 \uc124\uc815\uc744 \ud1b5\ud574 \uc0ac\uc6a9\ud560 \uc5b8\uc5b4 \ud30c\uc77c\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc11c\ubc84 \ud658\uacbd\uc5d0\uc11c\ub294 \uc624\uc9c1 en_us (\uc601\uc5b4)\ub9cc\uc774 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \uc9c0\uc6d0\ub418\ub294 \uc5b8\uc5b4\ub4e4\uc740 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc704\ud0a4 \uc5d0\uc11c \ud655\uc778\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5b8\uc5b4 \ud30c\uc77c \uc5b8\uc5b4 \ud30c\uc77c\ub4e4\uc740 asset/[\ub124\uc784\uc2a4\ud398\uc774\uc2a4]/lang/[\uc5b8\uc5b4 \ucf54\ub4dc].json \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4. (\uc608: examplemod \uc758 \uc601\uc5b4 \ud30c\uc77c\uc740 assets/examplemod/lang/en_us.json \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4.) \uc774 \ud30c\uc77c\uc740 \ubc88\uc5ed \ud0a4\uac12\uc744 \uc2e4\uc81c \ud14d\uc2a4\ud2b8\ub85c \uc0ac\uc0c1\ud574\uc8fc\ub294 \uac04\ub2e8\ud55c json \ud30c\uc77c \uc785\ub2c8\ub2e4. \uc5b8\uc5b4 \ud30c\uc77c\ub4e4\uc758 \uc778\ucf54\ub529\uc740 \ubb34\uc870\uac74 UTF-8\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uad6c\ubc84\uc804 .lang \ud30c\uc77c\ub4e4\uc740 \ubcc0\ud658\uae30 \ub97c \ud1b5\ud574 .json\uc73c\ub85c \ubcc0\ud658\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. { \"item.examplemod.example_item\": \"\uc608\uc2dc \uc544\uc774\ud15c \uc774\ub984\", \"block.examplemod.example_block\": \"\uc608\uc2dc \ube14\ub85d \uc774\ub984\", \"commands.examplemod.examplecommand.error\": \"\uc608\uc2dc \ucee4\ub9e8\ub4dc \uc624\ub958!\" } \ube14\ub85d\uacfc \uc544\uc774\ud15c\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30 \ube14\ub85d, \uc544\uc774\ud15c, \uadf8\ub9ac\uace0 \ub2e4\ub978 \uba87\uba87\uc758 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud074\ub798\uc2a4\ub4e4\uc740 \uc774\ub984\uc744 \ud45c\uc2dc\ud558\uae30 \uc704\ud574 \ubc88\uc5ed \ud0a4\uac12\uc774 \ub0b4\uc7a5\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubc88\uc5ed \ud0a4\uac12\ub4e4\uc740 #getDescriptionId \ub97c \uc624\ubc84\ub77c\uc774\ub529\ud558\uc5ec \uc9c0\uc815\ub429\ub2c8\ub2e4. \ub610, \uc544\uc774\ud15c\uc740 #getDescriptionId(ItemStack) \uba54\uc11c\ub4dc\ub3c4 \uc788\ub294\ub370, \uc774\ub97c \uc624\ubc84\ub77c\uc774\ub529 \ud558\uc5ec \uc544\uc774\ud15c\uc758 NBT\uc5d0 \ub530\ub77c \ub2e4\ub978 \ubc88\uc5ed \ud0a4\uac12\uc744 \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. #getDescriptionId \ub294 \uae30\ubcf8\uac12\uc73c\ub85c \uacb9\uc810(:)\uc774 \uc810\uc73c\ub85c \ub300\uccb4\ub41c \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984(\uc608: \u201cexamplemod:example_item\u201d -> \u201cexamplemod.example_item\u201d) \uc55e\uc5d0 block. \uc774\ub098 item. \uac00 \ubd99\uc5b4\uc9c4 \uac12\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4(\uc608: \u201citem.examplemod.example_item\u201d). BlockItem \uc740 \uc774 \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub529\ud558\uc5ec \uc790\uc2e0\uc774 \uc0c1\uc9d5\ud558\ub294 \ube14\ub85d\uc758 \ubc88\uc5ed \ud0a4\uac12\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 examplemod:example_item \ub97c \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc73c\ub85c \uac00\uc9c0\ub294 \uc544\uc774\ud15c\uc5d0 \uc774\ub984\uc744 \ubd80\uc5ec\ud558\ub294 \ubc29\ubc95\uc740 \uc5b8\uc5b4 \ud30c\uc77c\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc740 \uc904\uc744 \ucd94\uac00\ud558\ub294 \uac83\uc785\ub2c8\ub2e4: { \"item.examplemod.example_item\": \"\uc608\uc2dc \uc544\uc774\ud15c \uc774\ub984\" } Note \ubc88\uc5ed \ud0a4\uac12\uc740 \uad6d\uc81c\ud654\ub97c \uc704\ud55c \uac83\uc77c \ubfd0\uc785\ub2c8\ub2e4, \uc774\ub97c \uc774\uc6a9\ud55c \uac1d\uccb4 \uc2dd\ubcc4\uacfc \uac19\uc740 \ub85c\uc9c1 \uad6c\ud604\uc740 \uad8c\uc7a5\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub54c \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc744 \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc138\uc694! \ud604\uc9c0\ud654 \uad00\ub828 \uba54\uc11c\ub4dc\ub4e4 Warning \ub9ce\uc740 \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc774 \uc790\uc8fc \ud558\ub294 \uc2e4\uc218\uc911 \ud558\ub098\ub294 \uc11c\ubc84\uc5d0\uc11c \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 \ud604\uc9c0\ud654\ub97c \ub300\uc2e0 \ud558\ub294 \uac83 \uc785\ub2c8\ub2e4. \uc11c\ubc84\ub294 \uc624\uc9c1 \uc790\uc2e0\uc758 \uc5b8\uc5b4 \uc124\uc815\uc5d0 \ub530\ub978 \ud604\uc9c0\ud654\ub9cc \ud560 \uc218 \uc788\uc73c\uba70, \uc774 \uc124\uc815\uc740 \uc811\uc18d\ud55c \ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uc758 \uc124\uc815\uacfc \ub2e4\ub97c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0, \uc11c\ubc84\ub294 TranslationTextComponent \uc640 \ubc88\uc5ed \ud0a4\uac12\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc2a4\uc2a4\ub85c \uc5b8\uc5b4 \uc124\uc815\uc5d0 \ub9de\ub294 \ud14d\uc2a4\ud2b8\ub97c \ud45c\ud604\ud558\ub3c4\ub85d \ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. net.minecraft.client.resources.I18n (\ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9) \uc774 \ud074\ub798\uc2a4\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub9cc \uc874\uc7ac\ud569\ub2c8\ub2e4! \uc774\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub418\ub294 \ucf54\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud558\uace0\uc790 \ub9cc\ub4e0 \uac83\uc785\ub2c8\ub2e4. \uc774\ub97c \uc11c\ubc84\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub824\uace0 \ud558\uba74 \uc608\uc678\uc640 \ud568\uaed8 \ud295\uae41\ub2c8\ub2e4. get(String, Object...) \ud3ec\ub9e4\ud305\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubc88\uc5ed \ud0a4\uac12\uc758 \ud14d\uc2a4\ud2b8\ub97c \ubd88\ub7ec\uc635\ub2c8\ub2e4. \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \ubc88\uc5ed \ud0a4\uac12\uc774\uace0, \ub098\uba38\uc9c0\ub294 String.format(String, Object...) \uc758 \ud3ec\ub9e4\ud305 \uc778\uc790\uc640 \ub3d9\uc77c\ud569\ub2c8\ub2e4. TranslationTextComponent TranslationTextComponent \ub294 \ud604\uc9c0\ud654\uc640 \ud3ec\ub9e4\ud305\uc774 \uac1c\uc73c\ub974\uac8c \uc9c4\ud589\ub418\ub294 ITextComponent \uc785\ub2c8\ub2e4. \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \uba54\uc138\uc9c0\ub97c \ubcf4\ub0bc \ub54c \ub9e4\uc6b0 \uc720\uc6a9\ud55c\ub370, \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc5b8\uc5b4 \uc124\uc815\uc5d0 \ub9de\ub294 \ud604\uc9c0\ud654\ub97c \uc2a4\uc2a4\ub85c \uc9c4\ud589\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. TranslationTextComponenet(String, Object...) \uc758 \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \ubc88\uc5ed \ud0a4\uac12\uc785\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \ub4a4\uc5d0 \uc624\ub294 \uac83\ub4e4\uc740 \ud3ec\ub9e4\ud305\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc9c0\uc6d0\ub418\ub294 \uc11c\uc2dd \uc9c0\uc815\uc790\ub294\ub294 %s \ub791 %1$s , %2$s , %3$s \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\ub9e4\ud305\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uc778\uc218\uc5d0 \ub2e4\ub978 ITextComponent \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\uba70, \uc774\ub294 \uc11c\uc2dd \uc9c0\uc815\uc790\uc640 \uac19\uc740 \uc18d\uc131\ub4e4\uc744 \uc720\uc9c0\ud558\uba70 \uae30\uc874 \ud14d\uc2a4\ud2b8\uc5d0 \uc0bd\uc785\ub429\ub2c8\ub2e4. TextComponentHelper Note \uc774 \ubd80\ubd84\uc740 \ubb38\uc11c \uac1c\uc120\uc774 \ud544\uc694\ud558\ub2c8 \uc6d0\ubb38\uacfc \ud568\uaed8 \uc62c\ub824\ub193\uaca0\uc2b5\ub2c8\ub2e4. createComponentTranslation(ICommandSource, String, Object...) \ub294 \ud3ec\ub9e4\ud305\uacfc \ud604\uc9c0\ud654\uac00 \uc774\ubbf8 \uc774\ub8e8\uc5b4\uc9c4 TextComponent \ub97c \uc218\uc2e0\uc790\uc5d0 \ub9de\ucdb0 \uc0dd\uc131\ud569\ub2c8\ub2e4. \ub9cc\uc57d \uc218\uc2e0\uc790\uac00 \ubc14\ub2d0\ub77c \ud074\ub77c\uc774\uc5b8\ud2b8\uba74 \uc989\uac01\uc801\uc73c\ub85c \ucd08\uae30\ud654\uac00 \uc774\ub8e8\uc5b4 \uc9c0\ub098, \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 TranslationTextComponent \ub97c \ud1b5\ud574 \uac1c\uc73c\ub974\uac8c \uc774\ub8e8\uc5b4 \uc9d1\ub2c8\ub2e4. \uc774\ub294 \uc11c\ubc84\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 \uc811\uc18d\uc744 \ud5c8\ub77d\ud558\uc5ec\uc57c \ud560 \ub54c\ub9cc \uc720\uc6a9\ud569\ub2c8\ub2e4. (\ubb38\uc11c \uc218\uc815\uc774 \ud544\uc694\ud568, \uc6d0\ubb38\uc740 \uc544\ub798) createComponentTranslation(ICommandSource, String, Object...) creates a localized and formatted TextComponent depending on a receiver. The localization and formatting is done eagerly if the receiver is a vanilla client. If not, the localization and formatting is done lazily with a TranslationTextComponent . This is only useful if the server should allow vanilla clients to connect.","title":"\uad6d\uc81c\ud654\uc640 \ud604\uc9c0\ud654"},{"location":"concepts/internationalization/#_1","text":"\uad6d\uc81c\ud654(Internationalization, i18n\ub77c\uace0 \ud558\uae30\ub3c4 \ud569\ub2c8\ub2e4.)\ub294 \ub2e4\uc591\ud55c \uc5b8\uc5b4\ub97c \uc9c0\uc6d0\ud560\ub54c \ucf54\ub4dc\uc0c1 \ubcc0\uacbd\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\ub294 \uc124\uacc4 \ubc29\ubc95\uc785\ub2c8\ub2e4. \ud604\uc9c0\ud654\ub294 \ud45c\uc2dc\ub418\ub294 \uae00\uc790\ub4e4\uc744 \uc720\uc800\uc758 \uc5b8\uc5b4\uc5d0 \ub9de\uac8c \ubc14\uafb8\ub294 \uacfc\uc815\uc785\ub2c8\ub2e4. \uad6d\uc81c\ud654\ub294 \ubc88\uc5ed \ud0a4\uac12 \uc744 \ud1b5\ud574 \uad6c\ud604\ub429\ub2c8\ub2e4. \ubc88\uc5ed \ud0a4\uac12\uc740 \uc5b8\uc5b4\uc5d0 \uc0c1\uad00\uc5c6\uc774 \ud45c\uc2dc \uac00\ub2a5\ud55c \ud14d\uc2a4\ud2b8\ub97c \uc2dd\ubcc4\ud558\ub294 \ubb38\uc790\uc5f4 \uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, block.minecraft.dirt \ub294 \ud759 \ube14\ub85d\uc758 \uc774\ub984\uc744 \ub73b\ud558\ub294 \ubb38\uc790\uc5f4 \uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ud45c\uc2dc \uac00\ub2a5\ud55c \ud14d\uc2a4\ud2b8\ub4e4\uc744 \uc5b8\uc5b4\uc5d0 \uad00\uacc4\uc5c6\uc774 \ucc38\uc870\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c \ucf54\ub4dc \ubcc0\uacbd\uc740 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud604\uc9c0\ud654\ub294 \uac8c\uc784\uc758 \uc5b8\uc5b4 \ud30c\uc77c\uc744 \ud1b5\ud574 \uc774\ub8e8\uc5b4 \uc9d1\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \uc5b8\uc5b4 \uc124\uc815\uc744 \ud1b5\ud574 \uc0ac\uc6a9\ud560 \uc5b8\uc5b4 \ud30c\uc77c\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc11c\ubc84 \ud658\uacbd\uc5d0\uc11c\ub294 \uc624\uc9c1 en_us (\uc601\uc5b4)\ub9cc\uc774 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \uc9c0\uc6d0\ub418\ub294 \uc5b8\uc5b4\ub4e4\uc740 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc704\ud0a4 \uc5d0\uc11c \ud655\uc778\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uad6d\uc81c\ud654\uc640 \ud604\uc9c0\ud654"},{"location":"concepts/internationalization/#_2","text":"\uc5b8\uc5b4 \ud30c\uc77c\ub4e4\uc740 asset/[\ub124\uc784\uc2a4\ud398\uc774\uc2a4]/lang/[\uc5b8\uc5b4 \ucf54\ub4dc].json \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4. (\uc608: examplemod \uc758 \uc601\uc5b4 \ud30c\uc77c\uc740 assets/examplemod/lang/en_us.json \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4.) \uc774 \ud30c\uc77c\uc740 \ubc88\uc5ed \ud0a4\uac12\uc744 \uc2e4\uc81c \ud14d\uc2a4\ud2b8\ub85c \uc0ac\uc0c1\ud574\uc8fc\ub294 \uac04\ub2e8\ud55c json \ud30c\uc77c \uc785\ub2c8\ub2e4. \uc5b8\uc5b4 \ud30c\uc77c\ub4e4\uc758 \uc778\ucf54\ub529\uc740 \ubb34\uc870\uac74 UTF-8\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uad6c\ubc84\uc804 .lang \ud30c\uc77c\ub4e4\uc740 \ubcc0\ud658\uae30 \ub97c \ud1b5\ud574 .json\uc73c\ub85c \ubcc0\ud658\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. { \"item.examplemod.example_item\": \"\uc608\uc2dc \uc544\uc774\ud15c \uc774\ub984\", \"block.examplemod.example_block\": \"\uc608\uc2dc \ube14\ub85d \uc774\ub984\", \"commands.examplemod.examplecommand.error\": \"\uc608\uc2dc \ucee4\ub9e8\ub4dc \uc624\ub958!\" }","title":"\uc5b8\uc5b4 \ud30c\uc77c"},{"location":"concepts/internationalization/#_3","text":"\ube14\ub85d, \uc544\uc774\ud15c, \uadf8\ub9ac\uace0 \ub2e4\ub978 \uba87\uba87\uc758 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud074\ub798\uc2a4\ub4e4\uc740 \uc774\ub984\uc744 \ud45c\uc2dc\ud558\uae30 \uc704\ud574 \ubc88\uc5ed \ud0a4\uac12\uc774 \ub0b4\uc7a5\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubc88\uc5ed \ud0a4\uac12\ub4e4\uc740 #getDescriptionId \ub97c \uc624\ubc84\ub77c\uc774\ub529\ud558\uc5ec \uc9c0\uc815\ub429\ub2c8\ub2e4. \ub610, \uc544\uc774\ud15c\uc740 #getDescriptionId(ItemStack) \uba54\uc11c\ub4dc\ub3c4 \uc788\ub294\ub370, \uc774\ub97c \uc624\ubc84\ub77c\uc774\ub529 \ud558\uc5ec \uc544\uc774\ud15c\uc758 NBT\uc5d0 \ub530\ub77c \ub2e4\ub978 \ubc88\uc5ed \ud0a4\uac12\uc744 \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. #getDescriptionId \ub294 \uae30\ubcf8\uac12\uc73c\ub85c \uacb9\uc810(:)\uc774 \uc810\uc73c\ub85c \ub300\uccb4\ub41c \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984(\uc608: \u201cexamplemod:example_item\u201d -> \u201cexamplemod.example_item\u201d) \uc55e\uc5d0 block. \uc774\ub098 item. \uac00 \ubd99\uc5b4\uc9c4 \uac12\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4(\uc608: \u201citem.examplemod.example_item\u201d). BlockItem \uc740 \uc774 \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub529\ud558\uc5ec \uc790\uc2e0\uc774 \uc0c1\uc9d5\ud558\ub294 \ube14\ub85d\uc758 \ubc88\uc5ed \ud0a4\uac12\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 examplemod:example_item \ub97c \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc73c\ub85c \uac00\uc9c0\ub294 \uc544\uc774\ud15c\uc5d0 \uc774\ub984\uc744 \ubd80\uc5ec\ud558\ub294 \ubc29\ubc95\uc740 \uc5b8\uc5b4 \ud30c\uc77c\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc740 \uc904\uc744 \ucd94\uac00\ud558\ub294 \uac83\uc785\ub2c8\ub2e4: { \"item.examplemod.example_item\": \"\uc608\uc2dc \uc544\uc774\ud15c \uc774\ub984\" } Note \ubc88\uc5ed \ud0a4\uac12\uc740 \uad6d\uc81c\ud654\ub97c \uc704\ud55c \uac83\uc77c \ubfd0\uc785\ub2c8\ub2e4, \uc774\ub97c \uc774\uc6a9\ud55c \uac1d\uccb4 \uc2dd\ubcc4\uacfc \uac19\uc740 \ub85c\uc9c1 \uad6c\ud604\uc740 \uad8c\uc7a5\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub54c \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc744 \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc138\uc694!","title":"\ube14\ub85d\uacfc \uc544\uc774\ud15c\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30"},{"location":"concepts/internationalization/#_4","text":"Warning \ub9ce\uc740 \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc774 \uc790\uc8fc \ud558\ub294 \uc2e4\uc218\uc911 \ud558\ub098\ub294 \uc11c\ubc84\uc5d0\uc11c \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 \ud604\uc9c0\ud654\ub97c \ub300\uc2e0 \ud558\ub294 \uac83 \uc785\ub2c8\ub2e4. \uc11c\ubc84\ub294 \uc624\uc9c1 \uc790\uc2e0\uc758 \uc5b8\uc5b4 \uc124\uc815\uc5d0 \ub530\ub978 \ud604\uc9c0\ud654\ub9cc \ud560 \uc218 \uc788\uc73c\uba70, \uc774 \uc124\uc815\uc740 \uc811\uc18d\ud55c \ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uc758 \uc124\uc815\uacfc \ub2e4\ub97c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0, \uc11c\ubc84\ub294 TranslationTextComponent \uc640 \ubc88\uc5ed \ud0a4\uac12\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc2a4\uc2a4\ub85c \uc5b8\uc5b4 \uc124\uc815\uc5d0 \ub9de\ub294 \ud14d\uc2a4\ud2b8\ub97c \ud45c\ud604\ud558\ub3c4\ub85d \ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4.","title":"\ud604\uc9c0\ud654 \uad00\ub828 \uba54\uc11c\ub4dc\ub4e4"},{"location":"concepts/internationalization/#netminecraftclientresourcesi18n","text":"\uc774 \ud074\ub798\uc2a4\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub9cc \uc874\uc7ac\ud569\ub2c8\ub2e4! \uc774\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub418\ub294 \ucf54\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud558\uace0\uc790 \ub9cc\ub4e0 \uac83\uc785\ub2c8\ub2e4. \uc774\ub97c \uc11c\ubc84\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub824\uace0 \ud558\uba74 \uc608\uc678\uc640 \ud568\uaed8 \ud295\uae41\ub2c8\ub2e4. get(String, Object...) \ud3ec\ub9e4\ud305\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubc88\uc5ed \ud0a4\uac12\uc758 \ud14d\uc2a4\ud2b8\ub97c \ubd88\ub7ec\uc635\ub2c8\ub2e4. \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \ubc88\uc5ed \ud0a4\uac12\uc774\uace0, \ub098\uba38\uc9c0\ub294 String.format(String, Object...) \uc758 \ud3ec\ub9e4\ud305 \uc778\uc790\uc640 \ub3d9\uc77c\ud569\ub2c8\ub2e4.","title":"net.minecraft.client.resources.I18n (\ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9)"},{"location":"concepts/internationalization/#translationtextcomponent","text":"TranslationTextComponent \ub294 \ud604\uc9c0\ud654\uc640 \ud3ec\ub9e4\ud305\uc774 \uac1c\uc73c\ub974\uac8c \uc9c4\ud589\ub418\ub294 ITextComponent \uc785\ub2c8\ub2e4. \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \uba54\uc138\uc9c0\ub97c \ubcf4\ub0bc \ub54c \ub9e4\uc6b0 \uc720\uc6a9\ud55c\ub370, \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc5b8\uc5b4 \uc124\uc815\uc5d0 \ub9de\ub294 \ud604\uc9c0\ud654\ub97c \uc2a4\uc2a4\ub85c \uc9c4\ud589\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. TranslationTextComponenet(String, Object...) \uc758 \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \ubc88\uc5ed \ud0a4\uac12\uc785\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \ub4a4\uc5d0 \uc624\ub294 \uac83\ub4e4\uc740 \ud3ec\ub9e4\ud305\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc9c0\uc6d0\ub418\ub294 \uc11c\uc2dd \uc9c0\uc815\uc790\ub294\ub294 %s \ub791 %1$s , %2$s , %3$s \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\ub9e4\ud305\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uc778\uc218\uc5d0 \ub2e4\ub978 ITextComponent \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\uba70, \uc774\ub294 \uc11c\uc2dd \uc9c0\uc815\uc790\uc640 \uac19\uc740 \uc18d\uc131\ub4e4\uc744 \uc720\uc9c0\ud558\uba70 \uae30\uc874 \ud14d\uc2a4\ud2b8\uc5d0 \uc0bd\uc785\ub429\ub2c8\ub2e4.","title":"TranslationTextComponent"},{"location":"concepts/internationalization/#textcomponenthelper","text":"Note \uc774 \ubd80\ubd84\uc740 \ubb38\uc11c \uac1c\uc120\uc774 \ud544\uc694\ud558\ub2c8 \uc6d0\ubb38\uacfc \ud568\uaed8 \uc62c\ub824\ub193\uaca0\uc2b5\ub2c8\ub2e4. createComponentTranslation(ICommandSource, String, Object...) \ub294 \ud3ec\ub9e4\ud305\uacfc \ud604\uc9c0\ud654\uac00 \uc774\ubbf8 \uc774\ub8e8\uc5b4\uc9c4 TextComponent \ub97c \uc218\uc2e0\uc790\uc5d0 \ub9de\ucdb0 \uc0dd\uc131\ud569\ub2c8\ub2e4. \ub9cc\uc57d \uc218\uc2e0\uc790\uac00 \ubc14\ub2d0\ub77c \ud074\ub77c\uc774\uc5b8\ud2b8\uba74 \uc989\uac01\uc801\uc73c\ub85c \ucd08\uae30\ud654\uac00 \uc774\ub8e8\uc5b4 \uc9c0\ub098, \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 TranslationTextComponent \ub97c \ud1b5\ud574 \uac1c\uc73c\ub974\uac8c \uc774\ub8e8\uc5b4 \uc9d1\ub2c8\ub2e4. \uc774\ub294 \uc11c\ubc84\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 \uc811\uc18d\uc744 \ud5c8\ub77d\ud558\uc5ec\uc57c \ud560 \ub54c\ub9cc \uc720\uc6a9\ud569\ub2c8\ub2e4. (\ubb38\uc11c \uc218\uc815\uc774 \ud544\uc694\ud568, \uc6d0\ubb38\uc740 \uc544\ub798) createComponentTranslation(ICommandSource, String, Object...) creates a localized and formatted TextComponent depending on a receiver. The localization and formatting is done eagerly if the receiver is a vanilla client. If not, the localization and formatting is done lazily with a TranslationTextComponent . This is only useful if the server should allow vanilla clients to connect.","title":"TextComponentHelper"},{"location":"concepts/lifecycle/","text":"\ubaa8\ub4dc \uc0dd\uba85\uc8fc\uae30 \ubaa8\ub4dc\ub97c \ubd88\ub7ec\uc624\ub294 \uacfc\uc815\uc5d0\uc11c \uc5ec\ub7ec \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4\uc774 \ubaa8\ub4dc\ubcc4 \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc5ec\ub7ec \ucd08\uae30\ud654 \uc791\uc5c5\ub4e4\uc774 \uc774 \uc774\ubca4\ud2b8\ub4e4 \ub3c4\uc911\uc5d0 \uc774\ub8e8\uc5b4 \uc9d1\ub2c8\ub2e4. \uc774\ub54c \uc9c4\ud589\ub418\ub294 \ucd08\uae30\ud654\ub85c\ub294, \uac1d\uccb4 \ub4f1\ub85d\ud558\uae30 , \ub370\uc774\ud130 \uc0dd\uc131 \uc900\ube44 , \ub610\ub294 \ub2e4\ub978 \ubaa8\ub4dc\uc640\uc758 \ud1b5\uc2e0 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ub9ac\uc2a4\ub108\ub4e4\uc740 @EventBusSubscriber(bus = Bus.MOD) \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uac70\ub098 \ubaa8\ub4dc\uc758 \uc0dd\uc131\uc790\uc5d0\uc11c \ub4f1\ub85d\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4: @Mod.EventBusSubscriber(modid = \"mymod\", bus = Mod.EventBusSubscriber.Bus.MOD) public class MyModEventSubscriber { @SubscribeEvent static void onCommonSetup(FMLCommonSetupEvent event) { ... } } @Mod(\"mymod\") public class MyMod { public MyMod() { FMLModLoadingContext.get().getModEventBus().addListener(this::onCommonSetup); } private void onCommonSetup(FMLCommonSetupEvent event) { ... } } Warning \ub300\ubd80\ubd84\uc758 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4\uc740 \ubcd1\ub82c\uc801\uc73c\ub85c \ubc29\uc1a1\ub429\ub2c8\ub2e4: \ubaa8\ub4e0 \ubaa8\ub4dc\ub4e4\uc740 \ub3d9\uc2dc\uc5d0 \uac19\uc740 \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud569\ub2c8\ub2e4. \ubaa8\ub4dc\ub4e4\uc740 \ub2e4\ub978 \ubaa8\ub4dc\uc758 API \ub610\ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc2dc\uc2a4\ud15c\uc5d0 \uc811\uadfc\ud560 \ub54c, \uc2a4\ub808\ub4dc \uc548\uc804\uc131\uc744 \uc900\uc218\ud574\uc57c\ub9cc \ud569\ub2c8\ub2e4. ParallelDispatchEvent#enqueueWork \ub97c \uc774\uc6a9\ud574 \ucf54\ub4dc \uc2e4\ud589\uc744 \uc608\uc57d\ud558\uc5ec \ub098\uc911\uc5d0 \uc2e4\ud589\ub418\ub3c4\ub85d \ud558\uc138\uc694. \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ubca4\ud2b8 RegistryEvent \ub4e4\uc740 \ubaa8\ub4dc \uc778\uc2a4\ud134\uc2a4 \ucd08\uae30\ud654 \uc774\ud6c4\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub4e4\uc758 \uc885\ub958\ub294 NewRegistry \uadf8\ub9ac\uace0 Register \uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub4e4\uc740 \ubaa8\ub4dc\ub4e4\uc744 \ubd88\ub7ec\uc62c\ub54c \ub3d9\uae30\uc801\uc73c\ub85c \ubc29\uc1a1\ub429\ub2c8\ub2e4. RegistryEvent$NewRegistry \uc774\ubca4\ud2b8\ub294 \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc774 \uc9c1\uc811 \ub9cc\ub4e0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c RegistryBuilder \ub97c \uc0ac\uc6a9\ud574 \ub4f1\ub85d\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. RegistryEvent$Register<?> \uc774\ubca4\ud2b8\ub294 \uac1d\uccb4\ub4e4\uc744 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ud560 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 \uac01 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub2f9 \ud55c\ubc88\uc529 \ubc29\uc1a1\ub429\ub2c8\ub2e4, \uc774\ub294 \uac1c\ubc1c\uc790\uac00 \uc9c1\uc811 \ub4f1\ub85d\ud55c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub3c4 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ub370\uc774\ud130 \uc0dd\uc131 \ub9cc\uc57d \uac8c\uc784\uc774 \ub370\uc774\ud130 \uc0dd\uc131\uae30 \ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc5b4 \uc2e4\ud589\ub418\uc5c8\ub2e4\uba74, GatherDataEvent \uac00 \uac00\uc7a5 \ub9c8\uc9c0\ub9c9\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 \ubaa8\ub4dc\ub4e4\uc758 \ub370\uc774\ud130 \uc81c\uacf5\uc790\ub97c \ub370\uc774\ud130 \uc0dd\uc131\uae30\uc5d0 \ub4f1\ub85d\ud560\ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub610\ud55c \uc774 \uc774\ubca4\ud2b8\ub294 \ub3d9\uae30\uc801\uc73c\ub85c \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc77c\ubc18 \ucd08\uae30\ud654 FMLCommonSetupEvent \uc774\ubca4\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub77c\uc774\uc5b8\ud2b8, \uadf8\ub9ac\uace0 \uc11c\ubc84 \uc0ac\uc774\ub4dc\uc5d0 \uacf5\ud1b5\uc801\uc73c\ub85c \uc218\ud589\ub420 \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \uc608\ub85c \uce90\ud328\ube4c\ub9ac\ud2f0 \ub4f1\ub85d\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc774\ub4dc \ucd08\uae30\ud654 \uc0ac\uc774\ub4dc \ucd08\uae30\ud654 \uc774\ubca4\ud2b8\ub294 \uac01\uac01 \uc54c\ub9de\ub294 \ubb3c\ub9ac \uc0ac\uc774\ub4dc \uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4: FMLClientSetupEvent \ub294 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0, FMLDedicatedServerSetupEvent \ub294 \uc804\uc6a9 \uc11c\ubc84\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud0a4\ubc14\uc778\ub4dc \ub4f1\ub85d\uacfc \uac19\uc740 \uc0ac\uc774\ub4dc \uc804\uc6a9 \ucd08\uae30\ud654\ub97c \uc9c4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. InterModComms \uc774 \uc0dd\uba85\uc8fc\uae30 \ub2e8\uacc4\uc5d0\uc11c\ub294 \ubaa8\ub4dc\ub07c\ub9ac \uba54\uc138\uc9c0\ub97c \ubcf4\ub0b4 \ubaa8\ub4dc\uac04 \ud638\ud658\uc131\uc744 \uc720\uc9c0\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774\ub54c \ubc29\uc1a1\ub418\ub294 \uc774\ubca4\ud2b8\ub294 InterModEnqueueEvent \uc640 InterModProcessEvent \uac00 \uc788\uc2b5\ub2c8\ub2e4. InterModComms \uc758 \uc5ed\ud560\uc740 \ubaa8\ub4dc \ud1b5\uc2e0\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uba54\uc138\uc9c0\ub97c \ubcf4\uc720\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc774 \ud074\ub798\uc2a4\uc758 \uba54\uc11c\ub4dc\ub4e4\uc740 ConcurrentMap \uc744 \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 \ubcd1\ub82c\uc801\uc73c\ub85c \ubc29\uc1a1\ub418\ub294 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\uc5d0\uc11c \ud638\ucd9c\ud558\uc5ec\ub3c4 \uc548\uc804\ud569\ub2c8\ub2e4. InterModEnqueueEvent \ub3c4\uc911 InterModComms#sendTo \ub97c \uc0ac\uc6a9\ud574 \ub2e4\ub978 \ubaa8\ub4dc\uc5d0 \uba54\uc138\uc9c0\ub97c \uc804\uc1a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. InterModComms#sendTo \uc640 \ub3d9\uc77c\ud55c \uc774\ub984\uc744 \uac00\uc9c4 \uba54\uc11c\ub4dc\uac00 \uc5ec\ub7ff \uc788\ub294\ub370, \uc774 \uba54\uc11c\ub4dc\ub4e4\uc740 \uba54\uc138\uc9c0\ub97c \ubc1b\uc744 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514, \uba54\uc138\uc9c0\ub4e4\uc744 \uad6c\ubd84\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 \ud0a4, \uba54\uc138\uc9c0\uc758 \ub370\uc774\ud130\ub97c \uacf5\uae09\ud558\ub294 Supplier \uc785\ub2c8\ub2e4. \ucd94\uac00\uc801\uc73c\ub85c \uba54\uc138\uc9c0 \uc1a1\uc2e0\uc790\ub97c \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\uc73c\ub098, \uae30\ubcf8\uac12\uc73c\ub85c\ub294 \uba54\uc138\uc9c0\ub97c \ubcf4\ub0b4\ub294 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514 \uc785\ub2c8\ub2e4. \ub610, InterModProcessEvent \ub3c4\uc911 InterModComms#getMessages \ub97c \uc0ac\uc6a9\ud574 \ubc1b\uc740 \ubaa8\ub4e0 \uba54\uc138\uc9c0\ub4e4\uc744\uc758 \ud750\ub984(Stream)\uc744 \ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c \uc804\ub2ec\ud558\ub294 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514\ub294 \uac70\uc758 \uc5b8\uc81c\ub098 \uc774 \uc774 \uba54\uc11c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ubaa8\ub4dc\uc758 \uac83\uc785\ub2c8\ub2e4. \ucd94\uac00\uc801\uc73c\ub85c Predicate \ub97c \uc804\ub2ec\ud558\uc5ec \uba87\uba87 \uba54\uc138\uc9c0\ub97c \ud544\ud130\ub9c1 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 Stream<IMCMessage> \ub97c \ubc18\ud658\ud569\ub2c8\ub2e4, IMCMessage \ub294 \ub370\uc774\ud130\ub97c \ubcf4\ub0b8 \uc1a1\uc2e0\uc790, \uc218\uc2e0\uc790, \ub370\uc774\ud130\uc758 \ud0a4, \ub9c8\uc9c0\ub9c9\uc73c\ub85c \uba54\uc138\uc9c0\uc758 \ub370\uc774\ud130\ub97c \ub2f4\uace0 \uc788\uc2b5\ub2c8\ub2e4. Note \uadf8\uc678\uc5d0\ub3c4 \ubaa8\ub4dc \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131 \uc9c1\ud6c4, \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub418\uae30 \uc774\uc804\uc5d0 \ubc29\uc1a1\ub418\ub294 FMLConstructModEvent \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\uc640 InterModComms \uc774\ud6c4\uc5d0 \ubc29\uc1a1\ub418\uc5b4 \ubaa8\ub4dc\ub97c \uc644\uc804\ud788 \ubd88\ub7ec\uc654\uc74c\uc744 \uc54c\ub9ac\ub294 FMLLoadCompleteEvent \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\uac00 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubaa8\ub4dc \uc0dd\uba85\uc8fc\uae30"},{"location":"concepts/lifecycle/#_1","text":"\ubaa8\ub4dc\ub97c \ubd88\ub7ec\uc624\ub294 \uacfc\uc815\uc5d0\uc11c \uc5ec\ub7ec \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4\uc774 \ubaa8\ub4dc\ubcc4 \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc5ec\ub7ec \ucd08\uae30\ud654 \uc791\uc5c5\ub4e4\uc774 \uc774 \uc774\ubca4\ud2b8\ub4e4 \ub3c4\uc911\uc5d0 \uc774\ub8e8\uc5b4 \uc9d1\ub2c8\ub2e4. \uc774\ub54c \uc9c4\ud589\ub418\ub294 \ucd08\uae30\ud654\ub85c\ub294, \uac1d\uccb4 \ub4f1\ub85d\ud558\uae30 , \ub370\uc774\ud130 \uc0dd\uc131 \uc900\ube44 , \ub610\ub294 \ub2e4\ub978 \ubaa8\ub4dc\uc640\uc758 \ud1b5\uc2e0 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ub9ac\uc2a4\ub108\ub4e4\uc740 @EventBusSubscriber(bus = Bus.MOD) \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uac70\ub098 \ubaa8\ub4dc\uc758 \uc0dd\uc131\uc790\uc5d0\uc11c \ub4f1\ub85d\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4: @Mod.EventBusSubscriber(modid = \"mymod\", bus = Mod.EventBusSubscriber.Bus.MOD) public class MyModEventSubscriber { @SubscribeEvent static void onCommonSetup(FMLCommonSetupEvent event) { ... } } @Mod(\"mymod\") public class MyMod { public MyMod() { FMLModLoadingContext.get().getModEventBus().addListener(this::onCommonSetup); } private void onCommonSetup(FMLCommonSetupEvent event) { ... } } Warning \ub300\ubd80\ubd84\uc758 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4\uc740 \ubcd1\ub82c\uc801\uc73c\ub85c \ubc29\uc1a1\ub429\ub2c8\ub2e4: \ubaa8\ub4e0 \ubaa8\ub4dc\ub4e4\uc740 \ub3d9\uc2dc\uc5d0 \uac19\uc740 \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud569\ub2c8\ub2e4. \ubaa8\ub4dc\ub4e4\uc740 \ub2e4\ub978 \ubaa8\ub4dc\uc758 API \ub610\ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc2dc\uc2a4\ud15c\uc5d0 \uc811\uadfc\ud560 \ub54c, \uc2a4\ub808\ub4dc \uc548\uc804\uc131\uc744 \uc900\uc218\ud574\uc57c\ub9cc \ud569\ub2c8\ub2e4. ParallelDispatchEvent#enqueueWork \ub97c \uc774\uc6a9\ud574 \ucf54\ub4dc \uc2e4\ud589\uc744 \uc608\uc57d\ud558\uc5ec \ub098\uc911\uc5d0 \uc2e4\ud589\ub418\ub3c4\ub85d \ud558\uc138\uc694.","title":"\ubaa8\ub4dc \uc0dd\uba85\uc8fc\uae30"},{"location":"concepts/lifecycle/#_2","text":"RegistryEvent \ub4e4\uc740 \ubaa8\ub4dc \uc778\uc2a4\ud134\uc2a4 \ucd08\uae30\ud654 \uc774\ud6c4\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub4e4\uc758 \uc885\ub958\ub294 NewRegistry \uadf8\ub9ac\uace0 Register \uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub4e4\uc740 \ubaa8\ub4dc\ub4e4\uc744 \ubd88\ub7ec\uc62c\ub54c \ub3d9\uae30\uc801\uc73c\ub85c \ubc29\uc1a1\ub429\ub2c8\ub2e4. RegistryEvent$NewRegistry \uc774\ubca4\ud2b8\ub294 \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc774 \uc9c1\uc811 \ub9cc\ub4e0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c RegistryBuilder \ub97c \uc0ac\uc6a9\ud574 \ub4f1\ub85d\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. RegistryEvent$Register<?> \uc774\ubca4\ud2b8\ub294 \uac1d\uccb4\ub4e4\uc744 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ud560 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 \uac01 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub2f9 \ud55c\ubc88\uc529 \ubc29\uc1a1\ub429\ub2c8\ub2e4, \uc774\ub294 \uac1c\ubc1c\uc790\uac00 \uc9c1\uc811 \ub4f1\ub85d\ud55c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub3c4 \ud3ec\ud568\ub429\ub2c8\ub2e4.","title":"\ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ubca4\ud2b8"},{"location":"concepts/lifecycle/#_3","text":"\ub9cc\uc57d \uac8c\uc784\uc774 \ub370\uc774\ud130 \uc0dd\uc131\uae30 \ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc5b4 \uc2e4\ud589\ub418\uc5c8\ub2e4\uba74, GatherDataEvent \uac00 \uac00\uc7a5 \ub9c8\uc9c0\ub9c9\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 \ubaa8\ub4dc\ub4e4\uc758 \ub370\uc774\ud130 \uc81c\uacf5\uc790\ub97c \ub370\uc774\ud130 \uc0dd\uc131\uae30\uc5d0 \ub4f1\ub85d\ud560\ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub610\ud55c \uc774 \uc774\ubca4\ud2b8\ub294 \ub3d9\uae30\uc801\uc73c\ub85c \ubc29\uc1a1\ub429\ub2c8\ub2e4.","title":"\ub370\uc774\ud130 \uc0dd\uc131"},{"location":"concepts/lifecycle/#_4","text":"FMLCommonSetupEvent \uc774\ubca4\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub77c\uc774\uc5b8\ud2b8, \uadf8\ub9ac\uace0 \uc11c\ubc84 \uc0ac\uc774\ub4dc\uc5d0 \uacf5\ud1b5\uc801\uc73c\ub85c \uc218\ud589\ub420 \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \uc608\ub85c \uce90\ud328\ube4c\ub9ac\ud2f0 \ub4f1\ub85d\uc774 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc77c\ubc18 \ucd08\uae30\ud654"},{"location":"concepts/lifecycle/#_5","text":"\uc0ac\uc774\ub4dc \ucd08\uae30\ud654 \uc774\ubca4\ud2b8\ub294 \uac01\uac01 \uc54c\ub9de\ub294 \ubb3c\ub9ac \uc0ac\uc774\ub4dc \uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4: FMLClientSetupEvent \ub294 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0, FMLDedicatedServerSetupEvent \ub294 \uc804\uc6a9 \uc11c\ubc84\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud0a4\ubc14\uc778\ub4dc \ub4f1\ub85d\uacfc \uac19\uc740 \uc0ac\uc774\ub4dc \uc804\uc6a9 \ucd08\uae30\ud654\ub97c \uc9c4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc0ac\uc774\ub4dc \ucd08\uae30\ud654"},{"location":"concepts/lifecycle/#intermodcomms","text":"\uc774 \uc0dd\uba85\uc8fc\uae30 \ub2e8\uacc4\uc5d0\uc11c\ub294 \ubaa8\ub4dc\ub07c\ub9ac \uba54\uc138\uc9c0\ub97c \ubcf4\ub0b4 \ubaa8\ub4dc\uac04 \ud638\ud658\uc131\uc744 \uc720\uc9c0\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774\ub54c \ubc29\uc1a1\ub418\ub294 \uc774\ubca4\ud2b8\ub294 InterModEnqueueEvent \uc640 InterModProcessEvent \uac00 \uc788\uc2b5\ub2c8\ub2e4. InterModComms \uc758 \uc5ed\ud560\uc740 \ubaa8\ub4dc \ud1b5\uc2e0\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uba54\uc138\uc9c0\ub97c \ubcf4\uc720\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc774 \ud074\ub798\uc2a4\uc758 \uba54\uc11c\ub4dc\ub4e4\uc740 ConcurrentMap \uc744 \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 \ubcd1\ub82c\uc801\uc73c\ub85c \ubc29\uc1a1\ub418\ub294 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\uc5d0\uc11c \ud638\ucd9c\ud558\uc5ec\ub3c4 \uc548\uc804\ud569\ub2c8\ub2e4. InterModEnqueueEvent \ub3c4\uc911 InterModComms#sendTo \ub97c \uc0ac\uc6a9\ud574 \ub2e4\ub978 \ubaa8\ub4dc\uc5d0 \uba54\uc138\uc9c0\ub97c \uc804\uc1a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. InterModComms#sendTo \uc640 \ub3d9\uc77c\ud55c \uc774\ub984\uc744 \uac00\uc9c4 \uba54\uc11c\ub4dc\uac00 \uc5ec\ub7ff \uc788\ub294\ub370, \uc774 \uba54\uc11c\ub4dc\ub4e4\uc740 \uba54\uc138\uc9c0\ub97c \ubc1b\uc744 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514, \uba54\uc138\uc9c0\ub4e4\uc744 \uad6c\ubd84\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 \ud0a4, \uba54\uc138\uc9c0\uc758 \ub370\uc774\ud130\ub97c \uacf5\uae09\ud558\ub294 Supplier \uc785\ub2c8\ub2e4. \ucd94\uac00\uc801\uc73c\ub85c \uba54\uc138\uc9c0 \uc1a1\uc2e0\uc790\ub97c \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\uc73c\ub098, \uae30\ubcf8\uac12\uc73c\ub85c\ub294 \uba54\uc138\uc9c0\ub97c \ubcf4\ub0b4\ub294 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514 \uc785\ub2c8\ub2e4. \ub610, InterModProcessEvent \ub3c4\uc911 InterModComms#getMessages \ub97c \uc0ac\uc6a9\ud574 \ubc1b\uc740 \ubaa8\ub4e0 \uba54\uc138\uc9c0\ub4e4\uc744\uc758 \ud750\ub984(Stream)\uc744 \ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c \uc804\ub2ec\ud558\ub294 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514\ub294 \uac70\uc758 \uc5b8\uc81c\ub098 \uc774 \uc774 \uba54\uc11c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ubaa8\ub4dc\uc758 \uac83\uc785\ub2c8\ub2e4. \ucd94\uac00\uc801\uc73c\ub85c Predicate \ub97c \uc804\ub2ec\ud558\uc5ec \uba87\uba87 \uba54\uc138\uc9c0\ub97c \ud544\ud130\ub9c1 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 Stream<IMCMessage> \ub97c \ubc18\ud658\ud569\ub2c8\ub2e4, IMCMessage \ub294 \ub370\uc774\ud130\ub97c \ubcf4\ub0b8 \uc1a1\uc2e0\uc790, \uc218\uc2e0\uc790, \ub370\uc774\ud130\uc758 \ud0a4, \ub9c8\uc9c0\ub9c9\uc73c\ub85c \uba54\uc138\uc9c0\uc758 \ub370\uc774\ud130\ub97c \ub2f4\uace0 \uc788\uc2b5\ub2c8\ub2e4. Note \uadf8\uc678\uc5d0\ub3c4 \ubaa8\ub4dc \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131 \uc9c1\ud6c4, \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub418\uae30 \uc774\uc804\uc5d0 \ubc29\uc1a1\ub418\ub294 FMLConstructModEvent \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\uc640 InterModComms \uc774\ud6c4\uc5d0 \ubc29\uc1a1\ub418\uc5b4 \ubaa8\ub4dc\ub97c \uc644\uc804\ud788 \ubd88\ub7ec\uc654\uc74c\uc744 \uc54c\ub9ac\ub294 FMLLoadCompleteEvent \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\uac00 \uc788\uc2b5\ub2c8\ub2e4.","title":"InterModComms"},{"location":"concepts/registries/","text":"\ub808\uc9c0\uc2a4\ud2b8\ub9ac \ub808\uc9c0\uc2a4\ud2b8\ub9ac \ub4f1\ub85d\uc740 \ubaa8\ub4dc\uc5d0\uc11c \ucd94\uac00\ud558\ub294 \uac1d\uccb4\ub97c \uac8c\uc784\uc774 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uacfc\uc815\uc785\ub2c8\ub2e4. \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\ub294 \uac83\uc740 \ub9e4\uc6b0 \uc911\uc694\ud55c\ub370, \ub9cc\uc57d \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 \uac8c\uc784\uc740 \uc774 \uac1d\uccb4\ub4e4\uc758 \uc874\uc7ac\ub97c \uc54c\uc9c0 \ubabb\ud558\uba70 \uc608\uae30\uce58 \ubabb\ud55c \ub3d9\uc791\uc744 \ud558\uac70\ub098 \ud295\uae38 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84 \ub4f1\ub85d\ub418\uc5b4\uc57c \ud558\ub294 \uac1d\uccb4\ub4e4\uc740 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0\uc11c \uad00\ub9ac\ud569\ub2c8\ub2e4. \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 Map \uc640 \ube44\uc2b7\ud55c \uac1d\uccb4\uc785\ub2c8\ub2e4. \ud3ec\uc9c0\ub294 \ub9ac\uc18c\uc2a4 \uc704\uce58 \ub97c Key\ub85c \uc0ac\uc6a9\ud558\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac1d\uccb4\ub4e4\uc744 \ub4f1\ub85d\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 ResourceLocation \uc744 \uac1d\uccb4\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\ucc98\ub7fc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac1d\uccb4\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc740 #getRegistryName / #setRegistryName \ub97c \ud1b5\ud574 \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c #setRegistryName \uc740 \uc624\uc9c1 \ud55c\ubc88\ub9cc \ud638\ucd9c\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4; \ub450\ubc88 \ud638\ucd9c\ud560 \uc2dc \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\ub2c8 \ud558\uc9c0 \ub9c8\uc138\uc694. \ubaa8\ub4e0 \ub4f1\ub85d\ub420 \uc218 \uc788\ub294 \uac1d\uccb4\ub4e4\uc740 \uc54c\ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc874\uc7ac\ud569\ub2c8\ub2e4. \ud3ec\uc9c0\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \ubaa8\ub4e0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \ubcf4\ub824\uba74 ForgeRegistries \ud074\ub798\uc2a4\ub97c \ucc38\uc870\ud558\uc138\uc694. \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub41c \ubaa8\ub4e0 \uac1d\uccb4\ub4e4\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc740 \ubb34\uc870\uac74 \uace0\uc720\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc11c\ub85c \ub2e4\ub978 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc788\ub294 \uac1d\uccb4\ub4e4\uc740 \uac19\uc740 \uc774\ub984\uc744 \uac00\uc9c0\uace0 \uc788\uc5b4\ub3c4 \ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, Block \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc640 Item \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 \uac01\uac01 example:thing \uc774\ub77c\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc744 \uac00\uc9c4 \uac1d\uccb4\ub97c \uac00\uc9c0\uace0 \uc788\uc5b4\ub3c4 \uc774\ub984\uc774 \uacb9\uce58\ub294 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 Block 2\uac1c, \ub610\ub294 Item 2\uac1c\uac00 \uac19\uc740 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc73c\ub85c \ub4f1\ub85d\ub420 \uacbd\uc6b0, \ub450\ubc88\uc9f8\ub85c \ub4f1\ub85d\ub41c \uac83\uc774 \uccab\ubc88\uc9f8\ub85c \ub4f1\ub85d\ub41c \uac83\uc744 \ub36e\uc5b4\uc50c\uc6b8 \uac83\uc785\ub2c8\ub2e4. \uac1d\uccb4 \ub4f1\ub85d\ud558\uae30 \uac1d\uccb4\ub97c \uc62c\ubc14\ub974\uac8c \ub4f1\ub85d\ud558\ub294 \ubc29\ubc95\uc5d0\ub294 2\uac00\uc9c0\uac00 \uc788\ub294\ub370, DeferredRegister \ud074\ub798\uc2a4\uc640 RegistryEvent$Register \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8 \uc785\ub2c8\ub2e4. DeferredRegister DeferredRegister \ub294 \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\ub294 \uc0c8\ub85c\uc6b4, \uadf8\ub9ac\uace0 \ubb38\uc11c\ud654\ub41c \ubc29\uc2dd\uc785\ub2c8\ub2e4. \uc774\ub294 \uac04\ub2e8\ud558\uac8c \uc815\uc801 \ucd08\uae30\ud654\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ud574\uc90d\ub2c8\ub2e4. DeferredRegister \ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\uc2dc\ud0ac \uac1d\uccb4\ub4e4\uc744 \uacf5\uae09\ud558\ub294 \uacf5\uae09\uc790\ub4e4\uc744 \ub9ac\uc2a4\ud2b8\uc5d0 \uc800\uc7a5\ud558\uace0, \uc54c\ub9de\uc740 RegistryEvent$Regiser \uc774\ubca4\ud2b8 \ub3c4\uc911\uc5d0 \ub4f1\ub85d\ud569\ub2c8\ub2e4. \ubaa8\ub4dc\uc5d0\uc11c \ube14\ub85d\uc744 \ub4f1\ub85d\ud558\ub294 \uc608\uc2dc\uc785\ub2c8\ub2e4: //\ube14\ub85d\ub4e4\uc744 \ub4f1\ub85d\ud558\ub294 DeferredRegister \uc778\uc2a4\ud134\uc2a4 \ub9cc\ub4e4\uae30 private static final DeferredRegister<Block> BLOCKS = DeferredRegister.create(ForgeRegistries.BLOCKS, MODID); //DeferredRegister \uc778\uc2a4\ud134\uc2a4\uc5d0 \ube14\ub85d \uac1d\uccb4\ub97c \uacf5\uae09\ud558\ub294 \uacf5\uae09\uc790 \ub4f1\ub85d\ud558\uae30 public static final RegistryObject<Block> ROCK_BLOCK = BLOCKS.register(\"rock\", () -> new Block(AbstractBlock.Properties.of(Material.STONE))); public ExampleMod() { //DeferredRegister \uac00 RegistryEvent$Register \uc5d0 \ubc18\uc751\ud560 \uc218 \uc788\ub3c4\ub85d \uc54c\ub9de\uc740 \uc774\ubca4\ud2b8 \ubc84\uc2a4 \uc124\uc815\ud558\uae30 BLOCKS.register(FMLJavaModLoadingContext.get().getModEventBus()); } Register \uc774\ubca4\ud2b8 RegistryEvent \ub4e4\uc740 \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\ub294 \ub610 \ub2e4\ub978 \ubc29\ubc95\uc73c\ub85c, \ub354\uc6b1 \uc720\uc5f0\ud558\uac8c \uac1d\uccb4\ub4e4\uc744 \ub4f1\ub85d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8 \ub4e4\uc740 \ubaa8\ub4dc\ub4e4\uc758 \uba54\uc778 \ud074\ub798\uc2a4 \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131\ud560\ub54c\uc640 \uc124\uc815 \ud30c\uc77c\uc744 \ubd88\ub7ec\uc62c\ub54c \uc0ac\uc774\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uac1d\uccb4\ub97c \ub4f1\ub85d\ud560\ub54c \uc0ac\uc6a9\ud558\ub294 \uc774\ubca4\ud2b8\ub294 RegistryEvent$Register<T> \uc785\ub2c8\ub2e4. \ud0c0\uc785 \ub9e4\uac1c\ubcc0\uc218 T \ub294 \ub4f1\ub85d\ub418\ub294 \uac1d\uccb4\ub4e4\uc758 \ud0c0\uc785\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\ubca4\ud2b8\uc5d0\uc11c #getRegistry \ub97c \ud638\ucd9c\ud558\uc2dc\uba74, #register \ub098 #registerAll \ub85c \uac1d\uccb4\ub97c \ub4f1\ub85d\ud560 \uc218 \uc788\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \ubc18\ud658\ub429\ub2c8\ub2e4. \ub4f1\ub85d \uc608\uc2dc(\uc774 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \ubb34\uc870\uac74 \ubaa8\ub4dc \ubc84\uc2a4 \uc5d0 \ub4f1\ub85d\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4): @SubscribeEvent public void registerBlocks(RegistryEvent.Register<Block> event) { event.getRegistry().registerAll(new Block(...), new Block(...), ...); } \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc544\ub2cc \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4 \ubc14\ub2d0\ub77c\ucf54\ub4dc\uc758 \uba87\uba87 \ud2b9\uc131 \ub54c\ubbc4\uc5d0, \ud3ec\uc9c0\uac00 \ubaa8\ub4e0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \uac10\uc300 \uc21c \uc5c6\uc2b5\ub2c8\ub2e4. IRecipeType \uacfc \uac19\uc740 \uc815\uc801\uc774\ub77c\uc11c \uc0ac\uc6a9\ud574\ub3c4 \uc548\uc804\ud55c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub098, ConfiguredFeature \uc640 \uac19\uc740 \ub3d9\uc801 \ub808\uc9c0\uc2a4\ud2b8\ub9ac, \ub610\ub294 \uc6d4\ub4dc\uc820 \uad00\ub828\ub41c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4\uc774 \uc788\uc2b5\ub2c8\ub2e4, \uc774 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4\uc740 \ubcf4\ud1b5 JSON \uc744 \ud1b5\ud574 \uad00\ub9ac \ubc0f \ub4f1\ub85d\uc744 \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ud558\ub294 \uac83\uc740 \ub2e4\ub978 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uac1d\uccb4\uac00 \ud544\uc694\ub85c \ud560\ub54c\ub9cc \ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uad00\ub9ac\ud558\uc9c0 \uc54a\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc774\uae30 \ub584\ubb38\uc5d0, \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc900\ube44\ub418\uae30 \uc804\uc5d0 \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc870\uc2ec\ud574\uc11c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. Lazy \ub77c\ub294 \uc720\ud2f8\ub9ac\ud2f0 \ud074\ub798\uc2a4\uac00 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\ub294\ub370, \uc774 \ud074\ub798\uc2a4\ub294 \ub9e8 \ucc98\uc74c\uc73c\ub85c \uc811\uadfc\ub420 \ub54c \ucc98\ub9ac\ub418\ub294 \uac12\uc744 \uc800\uc7a5\ud569\ub2c8\ub2e4. Lazy.of(...) \uc5d0 Supplier \ub97c \uc804\ub2ec\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \ub9ce\uc774 \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. Lazy \ub294 Supplier \uc758 \ud558\uc704 \ud074\ub798\uc2a4\uc774\ub2c8, Supplier#get \ub97c \uc0ac\uc6a9\ud574 \uac12\uc744 \ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c, \uc800\uc7a5\ub420 \uac12\uc740 () -> Registry.register(...) \uc785\ub2c8\ub2e4. Registry#register \ub294 \uac1d\uccb4\uac00 \ucd94\uac00\ub420 \ub808\uc9c0\uc2a4\ud2b8\ub9ac, \uac1d\uccb4\ub97c \uad6c\ubd84\ud574 \uc904 ResourceLocation , \ub9c8\uc9c0\ub9c9\uc73c\ub85c \ub4f1\ub85d\ud560 \uac1d\uccb4\uc785\ub2c8\ub2e4. Lazy \uc758 \uac12\uc740 FMLCommonSetupEvent \ub3c4\uc911 \ucc98\ub9ac\ud558\uc5ec \ub9cc\ub4e4\uc5b4 \ub0b4\ub294 \uac83\uc774 \uac00\uc7a5 \uc801\uc808\ud569\ub2c8\ub2e4. \ubc14\ub2d0\ub77c\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 \ub298 \uc2a4\ub808\ub4dc \uc548\uc804\uc131\uc744 \uac00\uc9c0\uc9c0\ub294 \uc54a\uae30 \ub54c\ubb38\uc5d0 ParallelDispatchEvent#enqueueWork \ub97c \ud1b5\ud574 \uba54\uc778 \uc2a4\ub808\ub4dc\uc5d0\uc11c Supplier#get \ub97c \ud638\ucd9c\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud55c\ub2e4\uba74, \uba54\uc778 \uc2a4\ub808\ub4dc\uc5d0\uc11c Registry#register \ub97c \ud638\ucd9c\ud558\uc5ec \ucd94\ud6c4 \uc5bc\ub9c8\ub4e0\uc9c0 \ucc38\uc870\ub418\uc5b4\ub3c4 \uc548\uc804\ud558\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. Note \uba87\uba87 \ud074\ub798\uc2a4\ub4e4\uc740 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uadf8 \ub300\uc2e0, \uadf8 \ud074\ub798\uc2a4\ub4e4\uc758 \uc885\ub958\ub97c \uc0c1\uc9d5\ud558\ub294 *Type \ud074\ub798\uc2a4\uac00 \ub300\uc2e0 \ub4f1\ub85d\ub418\uc5b4\uc57c \ud558\uba70, \uc774 *Type \ud074\ub798\uc2a4\ub294 \uc804\uc790\uc758 \ud074\ub798\uc2a4\uc758 \uc0dd\uc131\uc790\uc5d0\uc11c \uc0ac\uc6a9\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8 \uc608\uc2dc\ub85c, TileEntity \ub294 TileEntityType \ub97c, \uadf8\ub9ac\uace0 Entity \ub294 EntityType \uc744 \ub300\uc2e0 \ub4f1\ub85d\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774 *Type \ud074\ub798\uc2a4\ub4e4\uc740 \uc54c\ub9de\ub294 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\ub294 \ud329\ud1a0\ub9ac\uc785\ub2c8\ub2e4. \uc774 \ud329\ud1a0\ub9ac\ub4e4\uc740 *Type$Builder \ud074\ub798\uc2a4\ub97c \uc774\uc6a9\ud574 \uc0dd\uc131\ub429\ub2c8\ub2e4( REGISTER \ub294 DeferredRegister<TileEntityType> \uc785\ub2c8\ub2e4). public static final RegistryObject<TileEntityType<ExampleTile>> EXAMPLE_TILE = REGISTER.register( \"example_tile\", () -> TileEntityType.Builder.of(ExampleTile:new, EXAMPLE_BLOCK.get()).build(null) ); \ub4f1\ub85d\ub41c \uac1d\uccb4 \ucc38\uc870\ud558\uae30 \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\uc2e4\ub54c \uc774\ub97c \ud2b9\uc815 \ud544\ub4dc\uc5d0 \uc800\uc7a5\ud558\uba74 \uc548\ub429\ub2c8\ub2e4, \uc54c\ub9de\ub294 RegistryEvent$Register<T> \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub420\ub54c \ub9c8\ub2e4 \uc0c8\ub85c \ub9cc\ub4e4\uc5b4 \uc9c0\uace0 \ub4f1\ub85d\ub418\uc5b4\uc57c \ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uc774\ub294 \ucd94\ud6c4\uc5d0 \ud3ec\uc9c0\uc5d0\uc11c \ub3d9\uc801\uc73c\ub85c \ubaa8\ub4dc\ub97c \ud65c\uc131\ud654/\ube44\ud65c\uc131\ud654\ud558\uae30 \uc704\ud568\uc785\ub2c8\ub2e4. \ub4f1\ub85d\ub418\ub294 \uac1d\uccb4\ub4e4\uc740 \ubb34\uc870\uac74 RegistryObject \ub610\ub294 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\ub294 \ud544\ub4dc\ub97c \ud1b5\ud558\uc5ec \ucc38\uc870\ub418\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4. RegistryObject \ub85c \ucc38\uc870\ud558\uae30 RegistryObject \ub4e4\uc740 \ub4f1\ub85d\ub41c \uac1d\uccb4\ub4e4\uc758 \ucc38\uc870\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc740 \uac1d\uccb4\uc5d0\ub294 \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. DeferredRegister \ub97c \ud1b5\ud574 \ub4f1\ub85d\ud558\uc2dc\uba74 RegistryObject \uc758 \uc778\uc2a4\ud134\uc2a4\uc758 \ucc38\uc870\uac00 \ubc18\ud658\ub429\ub2c8\ub2e4. @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uacfc RegistryObject \ub4e4\uc740 \uc54c\ub9de\ub294 RegistryEvent$Register<T> \uac00 \ubc29\uc1a1\ub420\ub54c \uac31\uc2e0\ub429\ub2c8\ub2e4. RegistryObject \uc778\uc2a4\ud134\uc2a4\uc758 \ucc38\uc870\ub97c \ub2e4\ub978 \ubc29\ubc95\uc73c\ub85c \uc5bb\uae30 \uc704\ud574\uc11c\ub294 RegistryObject#of \ub97c \ub4f1\ub85d\ub41c \uac1d\uccb4\uc758 ResourceLocation \uacfc \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 IForgeRegistry \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud638\ucd9c\ud558\uc138\uc694. \ucee4\uc2a4\ud140 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 \ub4f1\ub85d\ub420 \uac1d\uccb4\ub4e4\uc758 \ud074\ub798\uc2a4\ub97c \uacf5\uae09\ud558\ub294 \uacf5\uae09\uc790\ub97c \uc774\uc6a9\ud558\uc5ec RegistryObject \uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. RegistryObject \ub97c public static final \ud544\ub4dc\ub97c \uc774\uc6a9\ud574 \uc800\uc7a5\ud558\uace0 #get \ud568\uc218\ub97c \uc774\uc6a9\ud574 \ub4f1\ub85d\ub41c \uac1d\uccb4\uc5d0 \uc811\uadfc\ud558\uc138\uc694. RegistryObject \uc0ac\uc6a9 \uc608\uc2dc: public static final RegistryObject<Item> BOW = RegistryObject.of(new ResourceLocation(\"minecraft:bow\"), ForgeRegistries.ITEMS); // ManaType\uc740 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc774\uba70, 'neomagicae:coffeinum' \uc774 ManaType\uc5d0 \ub4f1\ub85d\ub41c \uac1d\uccb4\ub77c \uac00\uc815\ud569\ub2c8\ub2e4 public static final RegistryObject<ManaType> COFFEINUM = RegistryObject.of(new ResourceLocation(\"neomagicae\", \"coffeinum\"), () -> ManaType.class); @ObjectHolder \uc0ac\uc6a9\ud558\uae30 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc744 \ud074\ub798\uc2a4 \ub610\ub294 \ud544\ub4dc\uc5d0 \ub2ec\uace0 ResourceLocation \uc744 \ucd94\ub860\ud574 \ub0b4\uae30 \ucda9\ubd84\ud55c \uc815\ubcf4\ub97c \uc81c\uacf5\ud558\uc5ec, public static \ud544\ub4dc\uc5d0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \ub4f1\ub85d\ub41c \uac1d\uccb4\ub4e4\uc744 \uc8fc\uc785\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. @ObjectHolder \ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: \ub9cc\uc57d \ud074\ub798\uc2a4\uc5d0 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\ub2e4\uba74, \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \ub97c \uadf8 \ud074\ub798\uc2a4\uc758 \ud544\ub4dc\ub4e4\uc758 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uae30\ubcf8\uac12\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud074\ub798\uc2a4\uc5d0 @Mod \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\ub2e4\uba74, modid \ub97c \uadf8 \ud074\ub798\uc2a4\uc758 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uae30\ubcf8\uac12\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ud544\ub4dc\uac00 \ub2e4\uc74c \uc870\uac74\ub4e4\uc744 \ucda9\uc871\uc2dc\ud0a8\ub2e4\uba74 \uc8fc\uc785\uc774 \uc774\ub8e8\uc5b4 \uc9d1\ub2c8\ub2e4: \ucd5c\uc18c\ud55c public static \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc744\ub54c; \ub2e4\uc74c\uc911 \ud558\ub098\ub77c\ub3c4 \ucc38\uc77c\ub54c: \ud544\ub4dc\ub97c \uac10\uc2f8\ub294 \ud074\ub798\uc2a4 \uc5d0 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\uc73c\uba70 \ud544\ub4dc\uac00 final \uc774\ub77c\uba74: \ud544\ub4dc\uc758 \uc774\ub984\uc744 \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \uacbd\ub85c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud074\ub798\uc2a4\uc758 ObjectHolder \uc758 value \ub97c \uc0c1\uc18d\ubc1b\uc544 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub97c \ucc3e\uc744 \uc218\ub3c4, \uc0c1\uc18d \ubc1b\uc744 \uc218\ub3c4 \uc5c6\ub2e4\uba74 \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ud544\ub4dc \uc5d0 @ObjectHolder \uac00 \uc788\uc744\ub54c: \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \uacbd\ub85c\ub294 \ud544\ub4dc\uc758 \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \uac12\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uc5b4\ub178\ud14c\uc774\uc158\uc5d0\uc11c \uc9c0\uc815\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 \ud074\ub798\uc2a4\uc758 \uc5b4\ub178\ud14c\uc774\uc158\uc5d0\uc11c \uc0c1\uc18d \ubc1b\uc2b5\ub2c8\ub2e4. \ud544\ub4dc\uc758 \ud0c0\uc785\uc774\ub098, \ud544\ub4dc\uc758 \ud0c0\uc785\uc758 \uc870\uc0c1\uc911 \uc77c\uce58\ud558\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\ub2e4\uba74(\uc608: Item \ub610\ub294 ArrowItem \uc740 Item \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc77c\uce58\ud55c\ub2e4); \ub9cc\uc57d \ud544\ub4dc\uc5d0 \uc77c\uce58\ud558\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\ub2e4\uba74 \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ucd94\ub860\ub41c ResourceLocation \uc774 \ubbf8\uc644\uc131\uc774\uac70\ub098, \ubb38\uc81c\uac00 \uc788\ub2e4\uba74 (\ud5c8\uc6a9\ub418\uc9c0 \uc54a\uc740 \ubb38\uc790\uac00 \uc788\ub2e4\uba74) \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ubb38\uc81c\uac00 \uc5c6\uac70\ub098, \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 \ud544\ub4dc\uc5d0 \ub4f1\ub85d\ub41c \uac1d\uccb4\uac00 \uc8fc\uc785\ub420 \uac83\uc785\ub2c8\ub2e4. \ub9cc\uc57d \uc704 \uc870\uac74\uc911 \ud558\ub098\ub77c\ub3c4 \ub9cc\uc871\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc544\ubb34 \uc77c\ub3c4 \uc77c\uc5b4\ub098\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. (\uadf8\ub9ac\uace0 \uc774\uc5d0 \uad00\ud55c \uba54\uc138\uc9c0\uac00 \ucd9c\ub825\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.) \uc704 \uc870\uac74\uc744 \ucda9\uc871\ud558\ub294 @ObjectHolder \uc8fc\uc785 \ub300\uc0c1 \ud544\ub4dc\ub294 \uadf8\uc5d0 \uc54c\ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 RegistryEvent$Register \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub420\ub54c \uac1d\uccb4\uac00 \uc8fc\uc785\ub429\ub2c8\ub2e4. \ub610\ud55c RegistryObject \ub4e4\ub3c4 \uc774\ub54c \uac31\uc2e0 \ub429\ub2c8\ub2e4. Note \ub9cc\uc57d \ucd94\ub860\ub41c \ub9ac\uc18c\uc2a4 \uc704\uce58\ub97c \ud1b5\ud574 \uac1d\uccb4\ub97c \ucc38\uc870\ud558\uc5ec \uc774\ub97c \ud544\ub4dc\uc5d0 \uc8fc\uc785\ud558\ub824\uace0 \ud560 \ub54c, \uadf8 \uac1d\uccb4\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc774\uc5d0 \uad00\ud55c \uba54\uc138\uc9c0\uac00 \ucd9c\ub825\ub420 \uac83\uc774\uba70 \ud544\ub4dc\uc5d0 \uac12\uc774 \uc8fc\uc785\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc704\uc5d0 \uae30\uc220\ub41c \uaddc\uce59\ub4e4\uc774 \ubcf5\uc7a1\ud574 \ubcf4\uc774\uc2e4 \uc218 \uc788\uc73c\ub2c8, \uba87\uac00\uc9c0 \uc608\uc81c\ub97c \uc900\ube44\ud574 \ubcf4\uc558\uc2b5\ub2c8\ub2e4: @ObjectHolder(\"minecraft\") // \uc0c1\uc18d \uac00\ub2a5\ud55c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4: \"minecraft\" class AnnotatedHolder { public static final Block diamond_block = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc5c6\uc74c, [public static final] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // Block \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [Block] // \ub9ac\uc18c\uc2a4\uc758 \uacbd\ub85c\ub294: \"diamond_block\" // \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c. // \uadf8\ub807\uae30\uc5d0, \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud074\ub798\uc2a4 \uc5b4\ub178\ud14c\uc774\uc158\uc73c\ub85c \ubd80\ud130 \uc0c1\uc18d\ubc1b\uc74c: \"minecraft\" // \uc8fc\uc785 \ub300\uc0c1: [Block] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \"minecraft:diamond_block\" @ObjectHolder(\"ambient.cave\") public static SoundEvent ambient_sound = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // SoundEvent \ub294 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [SoundEvent] // \ub9ac\uc18c\uc2a4\uc758 \uacbd\ub85c\ub294 \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \uc784: \"ambient.cave\" // \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c. // \uadf8\ub807\uae30\uc5d0, \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud074\ub798\uc2a4 \uc5b4\ub178\ud14c\uc774\uc158\uc73c\ub85c \ubd80\ud130 \uc0c1\uc18d\ubc1b\uc74c: \"minecraft\" // \uc8fc\uc785 \ub300\uc0c1: [SoundEvent] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \"minecraft:ambient.cave\" // [ManaType] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc874\uc7ac\ud55c\ub2e4\uace0 \uac00\uc815\ud569\ub2c8\ub2e4. @ObjectHolder(\"neomagicae:coffeinum\") public static final ManaType coffeinum = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. [final] \uc740 \uc120\ud0dd \uc0ac\ud56d. // ManaType \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [ManaType] (\ucee4\uc2a4\ud140 \ub808\uc9c0\uc2a4\ud2b8\ub9ac) // \ub9ac\uc18c\uc2a4 \uc704\uce58\uac00 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub428: \"neomagicae:coffeinum\" // \uc8fc\uc785 \ub300\uc0c1: [ManaType] \uc758 \"neomagicae:coffeinum\" public static final Item ENDER_PEARL = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc5c6\uc74c, [public static final] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // Item \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [Item]. // \ud544\ub4dc\uc758 \uc774\ub984\uc774 \ub9ac\uc18c\uc2a4\uc758 \uacbd\ub85c\uc784: \"ENDER_PEARL\" -> \"ender_pearl\" // !! ^ \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud544\ub4dc \uc774\ub984, \uc18c\ubb38\uc790\ub85c \uc790\ub3d9\uc73c\ub85c \ubcc0\ud658\ub428. // \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c. // \uadf8\ub807\uae30\uc5d0, \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud074\ub798\uc2a4 \uc5b4\ub178\ud14c\uc774\uc158\uc73c\ub85c \ubd80\ud130 \uc0c1\uc18d\ubc1b\uc74c: \"minecraft\" // \uc8fc\uc785 \ub300\uc0c1: [Item] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \"minecraft:ender_pearl\" @ObjectHolder(\"minecraft:arrow\") public static final ArrowItem arrow = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. [final] \uc740 \uc120\ud0dd \uc0ac\ud56d. // ArrowItem \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // ArrowItem \uc758 \uc870\uc0c1 Item \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [Item] // \ub9ac\uc18c\uc2a4 \uc704\uce58\uac00 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub428: \"minecraft:arrow\" // \uc8fc\uc785 \ub300\uc0c1: [Item] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \"minecraft:arrow\" public static Block bedrock = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc5c6\uc74c, [public static final] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // \uadf8\ub7ec\ub098 \uc5c6\uc74c, \uadf8\ub807\uae30\uc5d0 \uc774 \ud544\ub4dc\ub294 \ubb34\uc2dc\ub428. public static final ItemGroup group = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc5c6\uc74c, [public static final] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // ItemGroup \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // ItemGroup \uc758 \uc870\uc0c1\uc911 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // \uadf8\ub807\uae30\uc5d0, \uc774\ub294 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b4. } class UnannotatedHolder { // \uc774 \ud074\ub798\uc2a4\ub294 @ObjectHolder \uac00 \uc5c6\uc74c. @ObjectHolder(\"minecraft:flame\") public static final Enchantment flame = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. [final] \uc740 \uc120\ud0dd \uc0ac\ud56d.. // Enchantment \ub294 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c:: [Enchantment]. // \ub9ac\uc18c\uc2a4 \uc704\uce58\uac00 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub428: \"minecraft:flame\" // \uc8fc\uc785 \ub300\uc0c1: [Enchantment]\uc758 \"minecraft:flame\" public static final Biome ice_flat = null; // \ud074\ub798\uc2a4\uc5d0 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc5c6\uc74c. // \uadf8\ub807\uae30\uc5d0 \uc774 \ud544\ub4dc\ub294 \ubb34\uc2dc\ub428. @ObjectHolder(\"minecraft:creeper\") public static Entity creeper = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // Entity \ub294 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // Entity \uc758 \uc870\uc0c1\uc911 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // \uadf8\ub807\uae30\uc5d0, \uc774\ub294 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b4. @ObjectHolder(\"levitation\") public static final Potion levitation = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. [final] \uc740 \uc120\ud0dd \uc0ac\ud56d.. // Potion \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [Potion]. // \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \uacbd\ub85c\ub294 \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \"levitation\" \uc784 // \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c. // \ud074\ub798\uc2a4\uc5d0 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc5c6\uc74c. // \uadf8\ub807\uae30\uc5d0, \uc774\ub294 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b4. } \ucee4\uc2a4\ud140 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \ub9cc\ub4e4\uae30 \ubaa8\ub4dc\uc5d0\uc11c \ucee4\uc2a4\ud140 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \ub9cc\ub4e4 \ub54c Map \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4dc\ub294 \uacbd\uc6b0\ub294 \uaf64\ub098 \ud754\ud569\ub2c8\ub2e4; \uadf8\ub7ec\ub098 \uc774\ub294 \uac15\uc81c\uc801\uc73c\ub85c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc885\uc18d\uc131\uc744 \ubd80\uc5ec\ud558\uba70 \uc0ac\uc774\ub4dc\uac04\uc758 \ub370\uc774\ud130 \ub3d9\uae30\ud654\ub97c \uc218\ub3d9\uc73c\ub85c \uc2dc\ucf1c \uc8fc\uc5b4\uc57c \ud55c\ub2e4\ub294 \ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ucee4\uc2a4\ud140 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 \uac15\uc81c\uc801\uc778 \uc885\uc18d\uc131\uc744 \ud53c\ud558\uace0, \uc790\ub3d9\uc73c\ub85c \ub3d9\uae30\ud654\ub97c \ud574 \uc8fc\uba70(\uc124\uc815\uc2dc \ubcc0\uacbd \uac00\ub2a5) \uad00\ub9ac\ub610\ud55c \uc798 \ud574\uc8fc\ub294 \ucc38 \uc88b\uc740 \ub300\uc548\uc785\ub2c8\ub2e4. \ub4f1\ub85d\ub418\ub294 \uac1d\uccb4\ub4e4\ub3c4 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub2c8 \ub4f1\ub85d \uacfc\uc815\uc774 \ub3d9\uc77c\ud569\ub2c8\ub2e4. \ucee4\uc2a4\ud140 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 RegistryBuilder \ub97c \ud1b5\ud574 \ub9cc\ub4e4\uc5b4\uc9c0\uba70, RegistryEvent$NewRegistry \ub610\ub294 DeferredRegister \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. RegistryBuilder \ud074\ub798\uc2a4\ub294 \uc774\ub984, \ub4f1\ub85d\ub420 \uac1d\uccb4\ub4e4\uc758 \ud074\ub798\uc2a4, \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0\uc11c \uc774\ubca4\ud2b8 \ubc1c\uc0dd\uc2dc \uc0ac\uc6a9\ud560 \uc5ec\ub7ec\uac00\uc9c0 \ucf5c\ubc31\ub4e4\uacfc \uac19\uc740 \uc778\uc790\ub4e4\uc744 \ub9e4\uac1c\ubcc0\uc218\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. RegistryBuilder#create \ub97c \ud638\ucd9c\ud558\uba74, \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \ub9cc\ub4e4\uace0, RegistryManager \uc5d0 \ub4f1\ub85d\ud55c \uc774\ud6c4 \ud638\ucd9c\ud55c \uacf3\uc73c\ub85c \ubc18\ud658\ub429\ub2c8\ub2e4. \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub420 \uac1d\uccb4\uc758 \ud074\ub798\uc2a4\ub294 \ubb34\uc870\uac74 IForgeRegisterEntry \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4, \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub294 #setRegistryName \uacfc #getRegistryName \uba54\uc11c\ub4dc\ub97c \uc815\uc758\ud569\ub2c8\ub2e4. \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ubc14\ub85c \uad6c\ud604\ud558\ub294 \uac83 \ubcf4\ub2e8 ForgeRegistryEntry \ub97c \uc0c1\uc18d\ud558\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4, \uc774 \ud074\ub798\uc2a4\ub294 IForgeRegistryEntry \uc778\ud130\ud398\uc774\uc2a4\uc758 \uae30\ubcf8\uc801\uc778 \uad6c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. #setRegistryName(String) \uc774 \ubb38\uc790\uc5f4\uc744 \uc778\uc790\ub85c \ubc1b\uc544 \ud638\ucd9c\ub420 \ub54c, \ub9cc\uc57d \uadf8 \ubb38\uc790\uc5f4\uc5d0 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\ub2e4\uba74, \uc774\ub294 \uc790\ub3d9\uc73c\ub85c \ud574\ub2f9 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514\ub85c \ucd94\ub860\ub429\ub2c8\ub2e4. \ubaa8\ub4e0 \uc0c8\ub85c \ub9cc\ub4e4\uc5b4\uc9c4 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4 \ub610\ud55c \uc774 \ubc29\ubc95\ub4e4 \uc744 \ud1b5\ud574 \uac1d\uccb4\ub4e4\uc744 \ub4f1\ub85d\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. RegistryEvent$NewRegistry \uc4f0\uae30 RegistryEvent$NewRegistry \ub97c \uc0ac\uc6a9\ud560 \ub550, \uadf8\uc800 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \uc774\ubca4\ud2b8 \ub3c4\uc911 RegistryBuilder \ub97c \ud1b5\ud574 \ub9cc\ub4e4\uae30\ub9cc \ud558\uba74 \ub429\ub2c8\ub2e4. \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 #create \ub97c \ud1b5\ud574 \ub9cc\ub4e4 \uc218 \uc788\uc73c\uba70, \uc774\ub97c IForgeRegistry \ud544\ub4dc\uc5d0 \uc800\uc7a5\ud558\uc5ec \ub098\uc911\uc5d0 \uc7ac\uc0ac\uc6a9 \ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. DeferredRegister \uc4f0\uae30 DeferredRegister \ub294, \ub2e4\uc2dc \ub9d0\ud558\uc9c0\ub9cc, \uc704 \uc774\ubca4\ud2b8\ub97c \uc0ac\uc6a9\ud558\ub294 wrapper \uc785\ub2c8\ub2e4. final \ud0a4\uc6cc\ub4dc\uac00 \uc788\ub294 \ud544\ub4dc\uc5d0 DeferredRegistry \uc778\uc2a4\ud134\uc2a4\uac00 \ud560\ub2f9\ub41c \uc774\ud6c4 DeferredRegister#makeRegistry \ub97c \ud1b5\ud574 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c \ub9e4\uac1c\ubcc0\uc218\ub85c\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \uc774\ub984\uacfc, \ucd94\uac00\uc801\uc778 \uc124\uc815\uc744 \ud3ec\ud568\ud558\ub294 RegistryBuilder \ub97c \uacf5\uae09\ud558\ub294 \uacf5\uae09\uc790\uac00 \uc788\uc2b5\ub2c8\ub2e4. DeferredRegister#makeRegistry \ub294 \uc790\ub3d9\uc73c\ub85c RegistryBuilder#setName \uacfc RegistryBuilder#setType \uc744 \ud638\ucd9c\ud569\ub2c8\ub2e4. RegistryEvent$NewRegistry \uac00 \ub05d\ub0a0\ub54c \uae4c\uc9c0\ub294 \uc0dd\uc131\ub41c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc811\uadfc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. Important DeferredRegister#makeRegistry \ub294 \ubb34\uc870\uac74 DeferredRegister#register \uac00 \ud638\ucd9c\ub418\uc5b4 \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ub4f1\ub85d\ub418\uae30 \uc774\uc804\uc5d0 \ud638\ucd9c\ub418\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4. \ub610\ud55c, #makeRegistry \ub294 #register \ub97c \ud1b5\ud574 \ub4f1\ub85d \ub418\uc5b4\uc57c\ub9cc RegistryEvent$NewRegistry \uc774\ubca4\ud2b8 \ub3c4\uc911 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 #makeRegistry \ub97c \uba3c\uc800 \ud558\uc2dc\uace0 #register \ub97c \uc774\ud6c4\uc5d0 \ud558\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694. \ub204\ub77d\ub41c \ud56d\ubaa9 \ucc98\ub9ac\ud558\uae30 \uac00\ub054\uc529, \ubaa8\ub4dc\uac00 \uc5c5\ub370\uc774\ud2b8\ub418\uac70\ub098 \uc81c\uac70\ub418\uc5c8\uc744 \ub54c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \uac1d\uccb4\uac00 \uac11\uc790\uae30 \uc5c6\uc5b4\uc9c8 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uac11\uc790\uae30 \uc5c6\uc5b4\uc9c4 \ud56d\ubaa9\uc744 \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc744 \uc138\ubc88\uc9f8 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ubca4\ud2b8\uc778 RegistryEvent$MissingMappings \uc774\ubca4\ud2b8\ub85c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8 \ub3c4\uc911\uc5d0 getMappings \ub97c \ud1b5\ud574 \ud574\ub2f9 \ubaa8\ub4dc\uc758 \ub204\ub77d\ub41c \ub9e4\ud551 \ub9ac\uc2a4\ud2b8\ub97c \ubc1b\uc544\uc62c \uc218 \uc788\uc73c\uba70, #getAllMappings \ub97c \ud1b5\ud574 \uc5b4\ub5a4 \ubaa8\ub4dc\uc5d0\uc11c \uc774 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\ub294\uac00\uc640 \uad00\ub828 \uc5c6\uc774 \ubaa8\ub4e0 \ub9e4\ud551\ub4e4\uc744 \ubc1b\uc544\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \ub204\ub77d\ub41c \ud56d\ubaa9\ub9c8\ub2e4, \uc774 4\uac00\uc9c0 \ubc29\ubc95\uc911 \ud558\ub098\ub97c \uc120\ud0dd\ud558\uc5ec \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud560\uc9c0 \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: \ub3d9\uc791 \uc124\uba85 IGNORE \ub204\ub77d\ub41c \ud56d\ubaa9\uc744 \ubb34\uc2dc\ud558\uace0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \ub9e4\ud551\uc744 \ubc84\ub9bd\ub2c8\ub2e4. WARN \ub85c\uadf8\uc5d0 \uacbd\uace0\ub97c \ub744\uc6c1\ub2c8\ub2e4. FAIL \uc6d4\ub4dc\ub97c \ubd88\ub7ec\uc624\ub294 \uac83\uc744 \ub9c9\uc2b5\ub2c8\ub2e4. REMAP \ub2e4\ub978 \ud56d\ubaa9\uc73c\ub85c \ub300\uccb4\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ub204\ub77d\ub41c \ud56d\ubaa9\uc744 \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc774 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc558\ub2e4\uba74 \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \uc774\uc5d0 \ub300\ud574 \uc54c\ub9ac\ub294 \uae30\ubcf8 \ub3d9\uc791\uc744 \uc218\ud589\ud558\uac8c \ub429\ub2c8\ub2e4. \ud50c\ub808\uc774\uc5b4\ub294 \uc6d4\ub4dc\ub97c \ubd88\ub7ec\uc624\uace0 \uc2f6\uc744 \uac83\uc774\uae30\uc5d0, REMAP \uc744 \uc81c\uc678\ud55c \ub2e4\ub978 \ub3d9\uc791\uc758 \uacbd\uc6b0. \ub204\ub77d\ub41c \ud56d\ubaa9\uc774 \ub2e4\uc2dc \ucd94\uac00\ub420 \uc218 \uc788\uc73c\ub2c8 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \ub2e4\ub978 \uac1d\uccb4\ub4e4\uc774 \ub204\ub77d\ub41c \ud56d\ubaa9\uc744 \ub300\uccb4\ud558\ub294 \uac83\uc744 \ub9c9\uc2b5\ub2c8\ub2e4.","title":"\ub808\uc9c0\uc2a4\ud2b8\ub9ac"},{"location":"concepts/registries/#_1","text":"\ub808\uc9c0\uc2a4\ud2b8\ub9ac \ub4f1\ub85d\uc740 \ubaa8\ub4dc\uc5d0\uc11c \ucd94\uac00\ud558\ub294 \uac1d\uccb4\ub97c \uac8c\uc784\uc774 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uacfc\uc815\uc785\ub2c8\ub2e4. \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\ub294 \uac83\uc740 \ub9e4\uc6b0 \uc911\uc694\ud55c\ub370, \ub9cc\uc57d \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 \uac8c\uc784\uc740 \uc774 \uac1d\uccb4\ub4e4\uc758 \uc874\uc7ac\ub97c \uc54c\uc9c0 \ubabb\ud558\uba70 \uc608\uae30\uce58 \ubabb\ud55c \ub3d9\uc791\uc744 \ud558\uac70\ub098 \ud295\uae38 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84 \ub4f1\ub85d\ub418\uc5b4\uc57c \ud558\ub294 \uac1d\uccb4\ub4e4\uc740 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0\uc11c \uad00\ub9ac\ud569\ub2c8\ub2e4. \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 Map \uc640 \ube44\uc2b7\ud55c \uac1d\uccb4\uc785\ub2c8\ub2e4. \ud3ec\uc9c0\ub294 \ub9ac\uc18c\uc2a4 \uc704\uce58 \ub97c Key\ub85c \uc0ac\uc6a9\ud558\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac1d\uccb4\ub4e4\uc744 \ub4f1\ub85d\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 ResourceLocation \uc744 \uac1d\uccb4\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\ucc98\ub7fc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac1d\uccb4\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc740 #getRegistryName / #setRegistryName \ub97c \ud1b5\ud574 \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c #setRegistryName \uc740 \uc624\uc9c1 \ud55c\ubc88\ub9cc \ud638\ucd9c\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4; \ub450\ubc88 \ud638\ucd9c\ud560 \uc2dc \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\ub2c8 \ud558\uc9c0 \ub9c8\uc138\uc694. \ubaa8\ub4e0 \ub4f1\ub85d\ub420 \uc218 \uc788\ub294 \uac1d\uccb4\ub4e4\uc740 \uc54c\ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc874\uc7ac\ud569\ub2c8\ub2e4. \ud3ec\uc9c0\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \ubaa8\ub4e0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \ubcf4\ub824\uba74 ForgeRegistries \ud074\ub798\uc2a4\ub97c \ucc38\uc870\ud558\uc138\uc694. \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub41c \ubaa8\ub4e0 \uac1d\uccb4\ub4e4\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc740 \ubb34\uc870\uac74 \uace0\uc720\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc11c\ub85c \ub2e4\ub978 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc788\ub294 \uac1d\uccb4\ub4e4\uc740 \uac19\uc740 \uc774\ub984\uc744 \uac00\uc9c0\uace0 \uc788\uc5b4\ub3c4 \ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, Block \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc640 Item \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 \uac01\uac01 example:thing \uc774\ub77c\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc744 \uac00\uc9c4 \uac1d\uccb4\ub97c \uac00\uc9c0\uace0 \uc788\uc5b4\ub3c4 \uc774\ub984\uc774 \uacb9\uce58\ub294 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 Block 2\uac1c, \ub610\ub294 Item 2\uac1c\uac00 \uac19\uc740 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc73c\ub85c \ub4f1\ub85d\ub420 \uacbd\uc6b0, \ub450\ubc88\uc9f8\ub85c \ub4f1\ub85d\ub41c \uac83\uc774 \uccab\ubc88\uc9f8\ub85c \ub4f1\ub85d\ub41c \uac83\uc744 \ub36e\uc5b4\uc50c\uc6b8 \uac83\uc785\ub2c8\ub2e4.","title":"\ub808\uc9c0\uc2a4\ud2b8\ub9ac"},{"location":"concepts/registries/#_2","text":"\uac1d\uccb4\ub97c \uc62c\ubc14\ub974\uac8c \ub4f1\ub85d\ud558\ub294 \ubc29\ubc95\uc5d0\ub294 2\uac00\uc9c0\uac00 \uc788\ub294\ub370, DeferredRegister \ud074\ub798\uc2a4\uc640 RegistryEvent$Register \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8 \uc785\ub2c8\ub2e4.","title":"\uac1d\uccb4 \ub4f1\ub85d\ud558\uae30"},{"location":"concepts/registries/#deferredregister","text":"DeferredRegister \ub294 \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\ub294 \uc0c8\ub85c\uc6b4, \uadf8\ub9ac\uace0 \ubb38\uc11c\ud654\ub41c \ubc29\uc2dd\uc785\ub2c8\ub2e4. \uc774\ub294 \uac04\ub2e8\ud558\uac8c \uc815\uc801 \ucd08\uae30\ud654\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ud574\uc90d\ub2c8\ub2e4. DeferredRegister \ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\uc2dc\ud0ac \uac1d\uccb4\ub4e4\uc744 \uacf5\uae09\ud558\ub294 \uacf5\uae09\uc790\ub4e4\uc744 \ub9ac\uc2a4\ud2b8\uc5d0 \uc800\uc7a5\ud558\uace0, \uc54c\ub9de\uc740 RegistryEvent$Regiser \uc774\ubca4\ud2b8 \ub3c4\uc911\uc5d0 \ub4f1\ub85d\ud569\ub2c8\ub2e4. \ubaa8\ub4dc\uc5d0\uc11c \ube14\ub85d\uc744 \ub4f1\ub85d\ud558\ub294 \uc608\uc2dc\uc785\ub2c8\ub2e4: //\ube14\ub85d\ub4e4\uc744 \ub4f1\ub85d\ud558\ub294 DeferredRegister \uc778\uc2a4\ud134\uc2a4 \ub9cc\ub4e4\uae30 private static final DeferredRegister<Block> BLOCKS = DeferredRegister.create(ForgeRegistries.BLOCKS, MODID); //DeferredRegister \uc778\uc2a4\ud134\uc2a4\uc5d0 \ube14\ub85d \uac1d\uccb4\ub97c \uacf5\uae09\ud558\ub294 \uacf5\uae09\uc790 \ub4f1\ub85d\ud558\uae30 public static final RegistryObject<Block> ROCK_BLOCK = BLOCKS.register(\"rock\", () -> new Block(AbstractBlock.Properties.of(Material.STONE))); public ExampleMod() { //DeferredRegister \uac00 RegistryEvent$Register \uc5d0 \ubc18\uc751\ud560 \uc218 \uc788\ub3c4\ub85d \uc54c\ub9de\uc740 \uc774\ubca4\ud2b8 \ubc84\uc2a4 \uc124\uc815\ud558\uae30 BLOCKS.register(FMLJavaModLoadingContext.get().getModEventBus()); }","title":"DeferredRegister"},{"location":"concepts/registries/#register","text":"RegistryEvent \ub4e4\uc740 \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\ub294 \ub610 \ub2e4\ub978 \ubc29\ubc95\uc73c\ub85c, \ub354\uc6b1 \uc720\uc5f0\ud558\uac8c \uac1d\uccb4\ub4e4\uc744 \ub4f1\ub85d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8 \ub4e4\uc740 \ubaa8\ub4dc\ub4e4\uc758 \uba54\uc778 \ud074\ub798\uc2a4 \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131\ud560\ub54c\uc640 \uc124\uc815 \ud30c\uc77c\uc744 \ubd88\ub7ec\uc62c\ub54c \uc0ac\uc774\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uac1d\uccb4\ub97c \ub4f1\ub85d\ud560\ub54c \uc0ac\uc6a9\ud558\ub294 \uc774\ubca4\ud2b8\ub294 RegistryEvent$Register<T> \uc785\ub2c8\ub2e4. \ud0c0\uc785 \ub9e4\uac1c\ubcc0\uc218 T \ub294 \ub4f1\ub85d\ub418\ub294 \uac1d\uccb4\ub4e4\uc758 \ud0c0\uc785\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\ubca4\ud2b8\uc5d0\uc11c #getRegistry \ub97c \ud638\ucd9c\ud558\uc2dc\uba74, #register \ub098 #registerAll \ub85c \uac1d\uccb4\ub97c \ub4f1\ub85d\ud560 \uc218 \uc788\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \ubc18\ud658\ub429\ub2c8\ub2e4. \ub4f1\ub85d \uc608\uc2dc(\uc774 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \ubb34\uc870\uac74 \ubaa8\ub4dc \ubc84\uc2a4 \uc5d0 \ub4f1\ub85d\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4): @SubscribeEvent public void registerBlocks(RegistryEvent.Register<Block> event) { event.getRegistry().registerAll(new Block(...), new Block(...), ...); }","title":"Register \uc774\ubca4\ud2b8"},{"location":"concepts/registries/#_3","text":"\ubc14\ub2d0\ub77c\ucf54\ub4dc\uc758 \uba87\uba87 \ud2b9\uc131 \ub54c\ubbc4\uc5d0, \ud3ec\uc9c0\uac00 \ubaa8\ub4e0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \uac10\uc300 \uc21c \uc5c6\uc2b5\ub2c8\ub2e4. IRecipeType \uacfc \uac19\uc740 \uc815\uc801\uc774\ub77c\uc11c \uc0ac\uc6a9\ud574\ub3c4 \uc548\uc804\ud55c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub098, ConfiguredFeature \uc640 \uac19\uc740 \ub3d9\uc801 \ub808\uc9c0\uc2a4\ud2b8\ub9ac, \ub610\ub294 \uc6d4\ub4dc\uc820 \uad00\ub828\ub41c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4\uc774 \uc788\uc2b5\ub2c8\ub2e4, \uc774 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4\uc740 \ubcf4\ud1b5 JSON \uc744 \ud1b5\ud574 \uad00\ub9ac \ubc0f \ub4f1\ub85d\uc744 \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ud558\ub294 \uac83\uc740 \ub2e4\ub978 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uac1d\uccb4\uac00 \ud544\uc694\ub85c \ud560\ub54c\ub9cc \ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uad00\ub9ac\ud558\uc9c0 \uc54a\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc774\uae30 \ub584\ubb38\uc5d0, \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc900\ube44\ub418\uae30 \uc804\uc5d0 \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc870\uc2ec\ud574\uc11c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. Lazy \ub77c\ub294 \uc720\ud2f8\ub9ac\ud2f0 \ud074\ub798\uc2a4\uac00 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\ub294\ub370, \uc774 \ud074\ub798\uc2a4\ub294 \ub9e8 \ucc98\uc74c\uc73c\ub85c \uc811\uadfc\ub420 \ub54c \ucc98\ub9ac\ub418\ub294 \uac12\uc744 \uc800\uc7a5\ud569\ub2c8\ub2e4. Lazy.of(...) \uc5d0 Supplier \ub97c \uc804\ub2ec\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \ub9ce\uc774 \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. Lazy \ub294 Supplier \uc758 \ud558\uc704 \ud074\ub798\uc2a4\uc774\ub2c8, Supplier#get \ub97c \uc0ac\uc6a9\ud574 \uac12\uc744 \ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c, \uc800\uc7a5\ub420 \uac12\uc740 () -> Registry.register(...) \uc785\ub2c8\ub2e4. Registry#register \ub294 \uac1d\uccb4\uac00 \ucd94\uac00\ub420 \ub808\uc9c0\uc2a4\ud2b8\ub9ac, \uac1d\uccb4\ub97c \uad6c\ubd84\ud574 \uc904 ResourceLocation , \ub9c8\uc9c0\ub9c9\uc73c\ub85c \ub4f1\ub85d\ud560 \uac1d\uccb4\uc785\ub2c8\ub2e4. Lazy \uc758 \uac12\uc740 FMLCommonSetupEvent \ub3c4\uc911 \ucc98\ub9ac\ud558\uc5ec \ub9cc\ub4e4\uc5b4 \ub0b4\ub294 \uac83\uc774 \uac00\uc7a5 \uc801\uc808\ud569\ub2c8\ub2e4. \ubc14\ub2d0\ub77c\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 \ub298 \uc2a4\ub808\ub4dc \uc548\uc804\uc131\uc744 \uac00\uc9c0\uc9c0\ub294 \uc54a\uae30 \ub54c\ubb38\uc5d0 ParallelDispatchEvent#enqueueWork \ub97c \ud1b5\ud574 \uba54\uc778 \uc2a4\ub808\ub4dc\uc5d0\uc11c Supplier#get \ub97c \ud638\ucd9c\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud55c\ub2e4\uba74, \uba54\uc778 \uc2a4\ub808\ub4dc\uc5d0\uc11c Registry#register \ub97c \ud638\ucd9c\ud558\uc5ec \ucd94\ud6c4 \uc5bc\ub9c8\ub4e0\uc9c0 \ucc38\uc870\ub418\uc5b4\ub3c4 \uc548\uc804\ud558\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. Note \uba87\uba87 \ud074\ub798\uc2a4\ub4e4\uc740 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uadf8 \ub300\uc2e0, \uadf8 \ud074\ub798\uc2a4\ub4e4\uc758 \uc885\ub958\ub97c \uc0c1\uc9d5\ud558\ub294 *Type \ud074\ub798\uc2a4\uac00 \ub300\uc2e0 \ub4f1\ub85d\ub418\uc5b4\uc57c \ud558\uba70, \uc774 *Type \ud074\ub798\uc2a4\ub294 \uc804\uc790\uc758 \ud074\ub798\uc2a4\uc758 \uc0dd\uc131\uc790\uc5d0\uc11c \uc0ac\uc6a9\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8 \uc608\uc2dc\ub85c, TileEntity \ub294 TileEntityType \ub97c, \uadf8\ub9ac\uace0 Entity \ub294 EntityType \uc744 \ub300\uc2e0 \ub4f1\ub85d\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774 *Type \ud074\ub798\uc2a4\ub4e4\uc740 \uc54c\ub9de\ub294 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\ub294 \ud329\ud1a0\ub9ac\uc785\ub2c8\ub2e4. \uc774 \ud329\ud1a0\ub9ac\ub4e4\uc740 *Type$Builder \ud074\ub798\uc2a4\ub97c \uc774\uc6a9\ud574 \uc0dd\uc131\ub429\ub2c8\ub2e4( REGISTER \ub294 DeferredRegister<TileEntityType> \uc785\ub2c8\ub2e4). public static final RegistryObject<TileEntityType<ExampleTile>> EXAMPLE_TILE = REGISTER.register( \"example_tile\", () -> TileEntityType.Builder.of(ExampleTile:new, EXAMPLE_BLOCK.get()).build(null) );","title":"\ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc544\ub2cc \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4"},{"location":"concepts/registries/#_4","text":"\uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\uc2e4\ub54c \uc774\ub97c \ud2b9\uc815 \ud544\ub4dc\uc5d0 \uc800\uc7a5\ud558\uba74 \uc548\ub429\ub2c8\ub2e4, \uc54c\ub9de\ub294 RegistryEvent$Register<T> \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub420\ub54c \ub9c8\ub2e4 \uc0c8\ub85c \ub9cc\ub4e4\uc5b4 \uc9c0\uace0 \ub4f1\ub85d\ub418\uc5b4\uc57c \ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uc774\ub294 \ucd94\ud6c4\uc5d0 \ud3ec\uc9c0\uc5d0\uc11c \ub3d9\uc801\uc73c\ub85c \ubaa8\ub4dc\ub97c \ud65c\uc131\ud654/\ube44\ud65c\uc131\ud654\ud558\uae30 \uc704\ud568\uc785\ub2c8\ub2e4. \ub4f1\ub85d\ub418\ub294 \uac1d\uccb4\ub4e4\uc740 \ubb34\uc870\uac74 RegistryObject \ub610\ub294 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\ub294 \ud544\ub4dc\ub97c \ud1b5\ud558\uc5ec \ucc38\uc870\ub418\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4.","title":"\ub4f1\ub85d\ub41c \uac1d\uccb4 \ucc38\uc870\ud558\uae30"},{"location":"concepts/registries/#registryobject","text":"RegistryObject \ub4e4\uc740 \ub4f1\ub85d\ub41c \uac1d\uccb4\ub4e4\uc758 \ucc38\uc870\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc740 \uac1d\uccb4\uc5d0\ub294 \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. DeferredRegister \ub97c \ud1b5\ud574 \ub4f1\ub85d\ud558\uc2dc\uba74 RegistryObject \uc758 \uc778\uc2a4\ud134\uc2a4\uc758 \ucc38\uc870\uac00 \ubc18\ud658\ub429\ub2c8\ub2e4. @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uacfc RegistryObject \ub4e4\uc740 \uc54c\ub9de\ub294 RegistryEvent$Register<T> \uac00 \ubc29\uc1a1\ub420\ub54c \uac31\uc2e0\ub429\ub2c8\ub2e4. RegistryObject \uc778\uc2a4\ud134\uc2a4\uc758 \ucc38\uc870\ub97c \ub2e4\ub978 \ubc29\ubc95\uc73c\ub85c \uc5bb\uae30 \uc704\ud574\uc11c\ub294 RegistryObject#of \ub97c \ub4f1\ub85d\ub41c \uac1d\uccb4\uc758 ResourceLocation \uacfc \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 IForgeRegistry \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud638\ucd9c\ud558\uc138\uc694. \ucee4\uc2a4\ud140 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 \ub4f1\ub85d\ub420 \uac1d\uccb4\ub4e4\uc758 \ud074\ub798\uc2a4\ub97c \uacf5\uae09\ud558\ub294 \uacf5\uae09\uc790\ub97c \uc774\uc6a9\ud558\uc5ec RegistryObject \uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. RegistryObject \ub97c public static final \ud544\ub4dc\ub97c \uc774\uc6a9\ud574 \uc800\uc7a5\ud558\uace0 #get \ud568\uc218\ub97c \uc774\uc6a9\ud574 \ub4f1\ub85d\ub41c \uac1d\uccb4\uc5d0 \uc811\uadfc\ud558\uc138\uc694. RegistryObject \uc0ac\uc6a9 \uc608\uc2dc: public static final RegistryObject<Item> BOW = RegistryObject.of(new ResourceLocation(\"minecraft:bow\"), ForgeRegistries.ITEMS); // ManaType\uc740 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc774\uba70, 'neomagicae:coffeinum' \uc774 ManaType\uc5d0 \ub4f1\ub85d\ub41c \uac1d\uccb4\ub77c \uac00\uc815\ud569\ub2c8\ub2e4 public static final RegistryObject<ManaType> COFFEINUM = RegistryObject.of(new ResourceLocation(\"neomagicae\", \"coffeinum\"), () -> ManaType.class);","title":"RegistryObject \ub85c \ucc38\uc870\ud558\uae30"},{"location":"concepts/registries/#objectholder","text":"@ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc744 \ud074\ub798\uc2a4 \ub610\ub294 \ud544\ub4dc\uc5d0 \ub2ec\uace0 ResourceLocation \uc744 \ucd94\ub860\ud574 \ub0b4\uae30 \ucda9\ubd84\ud55c \uc815\ubcf4\ub97c \uc81c\uacf5\ud558\uc5ec, public static \ud544\ub4dc\uc5d0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \ub4f1\ub85d\ub41c \uac1d\uccb4\ub4e4\uc744 \uc8fc\uc785\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. @ObjectHolder \ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: \ub9cc\uc57d \ud074\ub798\uc2a4\uc5d0 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\ub2e4\uba74, \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \ub97c \uadf8 \ud074\ub798\uc2a4\uc758 \ud544\ub4dc\ub4e4\uc758 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uae30\ubcf8\uac12\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud074\ub798\uc2a4\uc5d0 @Mod \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\ub2e4\uba74, modid \ub97c \uadf8 \ud074\ub798\uc2a4\uc758 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uae30\ubcf8\uac12\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ud544\ub4dc\uac00 \ub2e4\uc74c \uc870\uac74\ub4e4\uc744 \ucda9\uc871\uc2dc\ud0a8\ub2e4\uba74 \uc8fc\uc785\uc774 \uc774\ub8e8\uc5b4 \uc9d1\ub2c8\ub2e4: \ucd5c\uc18c\ud55c public static \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc744\ub54c; \ub2e4\uc74c\uc911 \ud558\ub098\ub77c\ub3c4 \ucc38\uc77c\ub54c: \ud544\ub4dc\ub97c \uac10\uc2f8\ub294 \ud074\ub798\uc2a4 \uc5d0 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\uc73c\uba70 \ud544\ub4dc\uac00 final \uc774\ub77c\uba74: \ud544\ub4dc\uc758 \uc774\ub984\uc744 \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \uacbd\ub85c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud074\ub798\uc2a4\uc758 ObjectHolder \uc758 value \ub97c \uc0c1\uc18d\ubc1b\uc544 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub97c \ucc3e\uc744 \uc218\ub3c4, \uc0c1\uc18d \ubc1b\uc744 \uc218\ub3c4 \uc5c6\ub2e4\uba74 \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ud544\ub4dc \uc5d0 @ObjectHolder \uac00 \uc788\uc744\ub54c: \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \uacbd\ub85c\ub294 \ud544\ub4dc\uc758 \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \uac12\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uc5b4\ub178\ud14c\uc774\uc158\uc5d0\uc11c \uc9c0\uc815\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 \ud074\ub798\uc2a4\uc758 \uc5b4\ub178\ud14c\uc774\uc158\uc5d0\uc11c \uc0c1\uc18d \ubc1b\uc2b5\ub2c8\ub2e4. \ud544\ub4dc\uc758 \ud0c0\uc785\uc774\ub098, \ud544\ub4dc\uc758 \ud0c0\uc785\uc758 \uc870\uc0c1\uc911 \uc77c\uce58\ud558\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\ub2e4\uba74(\uc608: Item \ub610\ub294 ArrowItem \uc740 Item \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc77c\uce58\ud55c\ub2e4); \ub9cc\uc57d \ud544\ub4dc\uc5d0 \uc77c\uce58\ud558\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\ub2e4\uba74 \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ucd94\ub860\ub41c ResourceLocation \uc774 \ubbf8\uc644\uc131\uc774\uac70\ub098, \ubb38\uc81c\uac00 \uc788\ub2e4\uba74 (\ud5c8\uc6a9\ub418\uc9c0 \uc54a\uc740 \ubb38\uc790\uac00 \uc788\ub2e4\uba74) \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ubb38\uc81c\uac00 \uc5c6\uac70\ub098, \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 \ud544\ub4dc\uc5d0 \ub4f1\ub85d\ub41c \uac1d\uccb4\uac00 \uc8fc\uc785\ub420 \uac83\uc785\ub2c8\ub2e4. \ub9cc\uc57d \uc704 \uc870\uac74\uc911 \ud558\ub098\ub77c\ub3c4 \ub9cc\uc871\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc544\ubb34 \uc77c\ub3c4 \uc77c\uc5b4\ub098\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. (\uadf8\ub9ac\uace0 \uc774\uc5d0 \uad00\ud55c \uba54\uc138\uc9c0\uac00 \ucd9c\ub825\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.) \uc704 \uc870\uac74\uc744 \ucda9\uc871\ud558\ub294 @ObjectHolder \uc8fc\uc785 \ub300\uc0c1 \ud544\ub4dc\ub294 \uadf8\uc5d0 \uc54c\ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 RegistryEvent$Register \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub420\ub54c \uac1d\uccb4\uac00 \uc8fc\uc785\ub429\ub2c8\ub2e4. \ub610\ud55c RegistryObject \ub4e4\ub3c4 \uc774\ub54c \uac31\uc2e0 \ub429\ub2c8\ub2e4. Note \ub9cc\uc57d \ucd94\ub860\ub41c \ub9ac\uc18c\uc2a4 \uc704\uce58\ub97c \ud1b5\ud574 \uac1d\uccb4\ub97c \ucc38\uc870\ud558\uc5ec \uc774\ub97c \ud544\ub4dc\uc5d0 \uc8fc\uc785\ud558\ub824\uace0 \ud560 \ub54c, \uadf8 \uac1d\uccb4\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc774\uc5d0 \uad00\ud55c \uba54\uc138\uc9c0\uac00 \ucd9c\ub825\ub420 \uac83\uc774\uba70 \ud544\ub4dc\uc5d0 \uac12\uc774 \uc8fc\uc785\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc704\uc5d0 \uae30\uc220\ub41c \uaddc\uce59\ub4e4\uc774 \ubcf5\uc7a1\ud574 \ubcf4\uc774\uc2e4 \uc218 \uc788\uc73c\ub2c8, \uba87\uac00\uc9c0 \uc608\uc81c\ub97c \uc900\ube44\ud574 \ubcf4\uc558\uc2b5\ub2c8\ub2e4: @ObjectHolder(\"minecraft\") // \uc0c1\uc18d \uac00\ub2a5\ud55c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4: \"minecraft\" class AnnotatedHolder { public static final Block diamond_block = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc5c6\uc74c, [public static final] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // Block \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [Block] // \ub9ac\uc18c\uc2a4\uc758 \uacbd\ub85c\ub294: \"diamond_block\" // \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c. // \uadf8\ub807\uae30\uc5d0, \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud074\ub798\uc2a4 \uc5b4\ub178\ud14c\uc774\uc158\uc73c\ub85c \ubd80\ud130 \uc0c1\uc18d\ubc1b\uc74c: \"minecraft\" // \uc8fc\uc785 \ub300\uc0c1: [Block] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \"minecraft:diamond_block\" @ObjectHolder(\"ambient.cave\") public static SoundEvent ambient_sound = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // SoundEvent \ub294 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [SoundEvent] // \ub9ac\uc18c\uc2a4\uc758 \uacbd\ub85c\ub294 \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \uc784: \"ambient.cave\" // \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c. // \uadf8\ub807\uae30\uc5d0, \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud074\ub798\uc2a4 \uc5b4\ub178\ud14c\uc774\uc158\uc73c\ub85c \ubd80\ud130 \uc0c1\uc18d\ubc1b\uc74c: \"minecraft\" // \uc8fc\uc785 \ub300\uc0c1: [SoundEvent] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \"minecraft:ambient.cave\" // [ManaType] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc874\uc7ac\ud55c\ub2e4\uace0 \uac00\uc815\ud569\ub2c8\ub2e4. @ObjectHolder(\"neomagicae:coffeinum\") public static final ManaType coffeinum = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. [final] \uc740 \uc120\ud0dd \uc0ac\ud56d. // ManaType \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [ManaType] (\ucee4\uc2a4\ud140 \ub808\uc9c0\uc2a4\ud2b8\ub9ac) // \ub9ac\uc18c\uc2a4 \uc704\uce58\uac00 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub428: \"neomagicae:coffeinum\" // \uc8fc\uc785 \ub300\uc0c1: [ManaType] \uc758 \"neomagicae:coffeinum\" public static final Item ENDER_PEARL = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc5c6\uc74c, [public static final] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // Item \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [Item]. // \ud544\ub4dc\uc758 \uc774\ub984\uc774 \ub9ac\uc18c\uc2a4\uc758 \uacbd\ub85c\uc784: \"ENDER_PEARL\" -> \"ender_pearl\" // !! ^ \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud544\ub4dc \uc774\ub984, \uc18c\ubb38\uc790\ub85c \uc790\ub3d9\uc73c\ub85c \ubcc0\ud658\ub428. // \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c. // \uadf8\ub807\uae30\uc5d0, \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud074\ub798\uc2a4 \uc5b4\ub178\ud14c\uc774\uc158\uc73c\ub85c \ubd80\ud130 \uc0c1\uc18d\ubc1b\uc74c: \"minecraft\" // \uc8fc\uc785 \ub300\uc0c1: [Item] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \"minecraft:ender_pearl\" @ObjectHolder(\"minecraft:arrow\") public static final ArrowItem arrow = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. [final] \uc740 \uc120\ud0dd \uc0ac\ud56d. // ArrowItem \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // ArrowItem \uc758 \uc870\uc0c1 Item \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [Item] // \ub9ac\uc18c\uc2a4 \uc704\uce58\uac00 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub428: \"minecraft:arrow\" // \uc8fc\uc785 \ub300\uc0c1: [Item] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \"minecraft:arrow\" public static Block bedrock = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc5c6\uc74c, [public static final] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // \uadf8\ub7ec\ub098 \uc5c6\uc74c, \uadf8\ub807\uae30\uc5d0 \uc774 \ud544\ub4dc\ub294 \ubb34\uc2dc\ub428. public static final ItemGroup group = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc5c6\uc74c, [public static final] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // ItemGroup \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // ItemGroup \uc758 \uc870\uc0c1\uc911 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // \uadf8\ub807\uae30\uc5d0, \uc774\ub294 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b4. } class UnannotatedHolder { // \uc774 \ud074\ub798\uc2a4\ub294 @ObjectHolder \uac00 \uc5c6\uc74c. @ObjectHolder(\"minecraft:flame\") public static final Enchantment flame = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. [final] \uc740 \uc120\ud0dd \uc0ac\ud56d.. // Enchantment \ub294 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c:: [Enchantment]. // \ub9ac\uc18c\uc2a4 \uc704\uce58\uac00 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub428: \"minecraft:flame\" // \uc8fc\uc785 \ub300\uc0c1: [Enchantment]\uc758 \"minecraft:flame\" public static final Biome ice_flat = null; // \ud074\ub798\uc2a4\uc5d0 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc5c6\uc74c. // \uadf8\ub807\uae30\uc5d0 \uc774 \ud544\ub4dc\ub294 \ubb34\uc2dc\ub428. @ObjectHolder(\"minecraft:creeper\") public static Entity creeper = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // Entity \ub294 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // Entity \uc758 \uc870\uc0c1\uc911 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // \uadf8\ub807\uae30\uc5d0, \uc774\ub294 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b4. @ObjectHolder(\"levitation\") public static final Potion levitation = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. [final] \uc740 \uc120\ud0dd \uc0ac\ud56d.. // Potion \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [Potion]. // \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \uacbd\ub85c\ub294 \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \"levitation\" \uc784 // \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c. // \ud074\ub798\uc2a4\uc5d0 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc5c6\uc74c. // \uadf8\ub807\uae30\uc5d0, \uc774\ub294 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b4. }","title":"@ObjectHolder \uc0ac\uc6a9\ud558\uae30"},{"location":"concepts/registries/#_5","text":"\ubaa8\ub4dc\uc5d0\uc11c \ucee4\uc2a4\ud140 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \ub9cc\ub4e4 \ub54c Map \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4dc\ub294 \uacbd\uc6b0\ub294 \uaf64\ub098 \ud754\ud569\ub2c8\ub2e4; \uadf8\ub7ec\ub098 \uc774\ub294 \uac15\uc81c\uc801\uc73c\ub85c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc885\uc18d\uc131\uc744 \ubd80\uc5ec\ud558\uba70 \uc0ac\uc774\ub4dc\uac04\uc758 \ub370\uc774\ud130 \ub3d9\uae30\ud654\ub97c \uc218\ub3d9\uc73c\ub85c \uc2dc\ucf1c \uc8fc\uc5b4\uc57c \ud55c\ub2e4\ub294 \ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ucee4\uc2a4\ud140 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 \uac15\uc81c\uc801\uc778 \uc885\uc18d\uc131\uc744 \ud53c\ud558\uace0, \uc790\ub3d9\uc73c\ub85c \ub3d9\uae30\ud654\ub97c \ud574 \uc8fc\uba70(\uc124\uc815\uc2dc \ubcc0\uacbd \uac00\ub2a5) \uad00\ub9ac\ub610\ud55c \uc798 \ud574\uc8fc\ub294 \ucc38 \uc88b\uc740 \ub300\uc548\uc785\ub2c8\ub2e4. \ub4f1\ub85d\ub418\ub294 \uac1d\uccb4\ub4e4\ub3c4 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub2c8 \ub4f1\ub85d \uacfc\uc815\uc774 \ub3d9\uc77c\ud569\ub2c8\ub2e4. \ucee4\uc2a4\ud140 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 RegistryBuilder \ub97c \ud1b5\ud574 \ub9cc\ub4e4\uc5b4\uc9c0\uba70, RegistryEvent$NewRegistry \ub610\ub294 DeferredRegister \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. RegistryBuilder \ud074\ub798\uc2a4\ub294 \uc774\ub984, \ub4f1\ub85d\ub420 \uac1d\uccb4\ub4e4\uc758 \ud074\ub798\uc2a4, \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0\uc11c \uc774\ubca4\ud2b8 \ubc1c\uc0dd\uc2dc \uc0ac\uc6a9\ud560 \uc5ec\ub7ec\uac00\uc9c0 \ucf5c\ubc31\ub4e4\uacfc \uac19\uc740 \uc778\uc790\ub4e4\uc744 \ub9e4\uac1c\ubcc0\uc218\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. RegistryBuilder#create \ub97c \ud638\ucd9c\ud558\uba74, \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \ub9cc\ub4e4\uace0, RegistryManager \uc5d0 \ub4f1\ub85d\ud55c \uc774\ud6c4 \ud638\ucd9c\ud55c \uacf3\uc73c\ub85c \ubc18\ud658\ub429\ub2c8\ub2e4. \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub420 \uac1d\uccb4\uc758 \ud074\ub798\uc2a4\ub294 \ubb34\uc870\uac74 IForgeRegisterEntry \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4, \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub294 #setRegistryName \uacfc #getRegistryName \uba54\uc11c\ub4dc\ub97c \uc815\uc758\ud569\ub2c8\ub2e4. \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ubc14\ub85c \uad6c\ud604\ud558\ub294 \uac83 \ubcf4\ub2e8 ForgeRegistryEntry \ub97c \uc0c1\uc18d\ud558\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4, \uc774 \ud074\ub798\uc2a4\ub294 IForgeRegistryEntry \uc778\ud130\ud398\uc774\uc2a4\uc758 \uae30\ubcf8\uc801\uc778 \uad6c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. #setRegistryName(String) \uc774 \ubb38\uc790\uc5f4\uc744 \uc778\uc790\ub85c \ubc1b\uc544 \ud638\ucd9c\ub420 \ub54c, \ub9cc\uc57d \uadf8 \ubb38\uc790\uc5f4\uc5d0 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\ub2e4\uba74, \uc774\ub294 \uc790\ub3d9\uc73c\ub85c \ud574\ub2f9 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514\ub85c \ucd94\ub860\ub429\ub2c8\ub2e4. \ubaa8\ub4e0 \uc0c8\ub85c \ub9cc\ub4e4\uc5b4\uc9c4 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4 \ub610\ud55c \uc774 \ubc29\ubc95\ub4e4 \uc744 \ud1b5\ud574 \uac1d\uccb4\ub4e4\uc744 \ub4f1\ub85d\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4.","title":"\ucee4\uc2a4\ud140 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \ub9cc\ub4e4\uae30"},{"location":"concepts/registries/#registryeventnewregistry","text":"RegistryEvent$NewRegistry \ub97c \uc0ac\uc6a9\ud560 \ub550, \uadf8\uc800 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \uc774\ubca4\ud2b8 \ub3c4\uc911 RegistryBuilder \ub97c \ud1b5\ud574 \ub9cc\ub4e4\uae30\ub9cc \ud558\uba74 \ub429\ub2c8\ub2e4. \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 #create \ub97c \ud1b5\ud574 \ub9cc\ub4e4 \uc218 \uc788\uc73c\uba70, \uc774\ub97c IForgeRegistry \ud544\ub4dc\uc5d0 \uc800\uc7a5\ud558\uc5ec \ub098\uc911\uc5d0 \uc7ac\uc0ac\uc6a9 \ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4.","title":"RegistryEvent$NewRegistry \uc4f0\uae30"},{"location":"concepts/registries/#deferredregister_1","text":"DeferredRegister \ub294, \ub2e4\uc2dc \ub9d0\ud558\uc9c0\ub9cc, \uc704 \uc774\ubca4\ud2b8\ub97c \uc0ac\uc6a9\ud558\ub294 wrapper \uc785\ub2c8\ub2e4. final \ud0a4\uc6cc\ub4dc\uac00 \uc788\ub294 \ud544\ub4dc\uc5d0 DeferredRegistry \uc778\uc2a4\ud134\uc2a4\uac00 \ud560\ub2f9\ub41c \uc774\ud6c4 DeferredRegister#makeRegistry \ub97c \ud1b5\ud574 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c \ub9e4\uac1c\ubcc0\uc218\ub85c\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \uc774\ub984\uacfc, \ucd94\uac00\uc801\uc778 \uc124\uc815\uc744 \ud3ec\ud568\ud558\ub294 RegistryBuilder \ub97c \uacf5\uae09\ud558\ub294 \uacf5\uae09\uc790\uac00 \uc788\uc2b5\ub2c8\ub2e4. DeferredRegister#makeRegistry \ub294 \uc790\ub3d9\uc73c\ub85c RegistryBuilder#setName \uacfc RegistryBuilder#setType \uc744 \ud638\ucd9c\ud569\ub2c8\ub2e4. RegistryEvent$NewRegistry \uac00 \ub05d\ub0a0\ub54c \uae4c\uc9c0\ub294 \uc0dd\uc131\ub41c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc811\uadfc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. Important DeferredRegister#makeRegistry \ub294 \ubb34\uc870\uac74 DeferredRegister#register \uac00 \ud638\ucd9c\ub418\uc5b4 \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ub4f1\ub85d\ub418\uae30 \uc774\uc804\uc5d0 \ud638\ucd9c\ub418\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4. \ub610\ud55c, #makeRegistry \ub294 #register \ub97c \ud1b5\ud574 \ub4f1\ub85d \ub418\uc5b4\uc57c\ub9cc RegistryEvent$NewRegistry \uc774\ubca4\ud2b8 \ub3c4\uc911 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 #makeRegistry \ub97c \uba3c\uc800 \ud558\uc2dc\uace0 #register \ub97c \uc774\ud6c4\uc5d0 \ud558\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694.","title":"DeferredRegister \uc4f0\uae30"},{"location":"concepts/registries/#_6","text":"\uac00\ub054\uc529, \ubaa8\ub4dc\uac00 \uc5c5\ub370\uc774\ud2b8\ub418\uac70\ub098 \uc81c\uac70\ub418\uc5c8\uc744 \ub54c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \uac1d\uccb4\uac00 \uac11\uc790\uae30 \uc5c6\uc5b4\uc9c8 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uac11\uc790\uae30 \uc5c6\uc5b4\uc9c4 \ud56d\ubaa9\uc744 \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc744 \uc138\ubc88\uc9f8 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ubca4\ud2b8\uc778 RegistryEvent$MissingMappings \uc774\ubca4\ud2b8\ub85c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8 \ub3c4\uc911\uc5d0 getMappings \ub97c \ud1b5\ud574 \ud574\ub2f9 \ubaa8\ub4dc\uc758 \ub204\ub77d\ub41c \ub9e4\ud551 \ub9ac\uc2a4\ud2b8\ub97c \ubc1b\uc544\uc62c \uc218 \uc788\uc73c\uba70, #getAllMappings \ub97c \ud1b5\ud574 \uc5b4\ub5a4 \ubaa8\ub4dc\uc5d0\uc11c \uc774 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\ub294\uac00\uc640 \uad00\ub828 \uc5c6\uc774 \ubaa8\ub4e0 \ub9e4\ud551\ub4e4\uc744 \ubc1b\uc544\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \ub204\ub77d\ub41c \ud56d\ubaa9\ub9c8\ub2e4, \uc774 4\uac00\uc9c0 \ubc29\ubc95\uc911 \ud558\ub098\ub97c \uc120\ud0dd\ud558\uc5ec \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud560\uc9c0 \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: \ub3d9\uc791 \uc124\uba85 IGNORE \ub204\ub77d\ub41c \ud56d\ubaa9\uc744 \ubb34\uc2dc\ud558\uace0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \ub9e4\ud551\uc744 \ubc84\ub9bd\ub2c8\ub2e4. WARN \ub85c\uadf8\uc5d0 \uacbd\uace0\ub97c \ub744\uc6c1\ub2c8\ub2e4. FAIL \uc6d4\ub4dc\ub97c \ubd88\ub7ec\uc624\ub294 \uac83\uc744 \ub9c9\uc2b5\ub2c8\ub2e4. REMAP \ub2e4\ub978 \ud56d\ubaa9\uc73c\ub85c \ub300\uccb4\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ub204\ub77d\ub41c \ud56d\ubaa9\uc744 \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc774 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc558\ub2e4\uba74 \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \uc774\uc5d0 \ub300\ud574 \uc54c\ub9ac\ub294 \uae30\ubcf8 \ub3d9\uc791\uc744 \uc218\ud589\ud558\uac8c \ub429\ub2c8\ub2e4. \ud50c\ub808\uc774\uc5b4\ub294 \uc6d4\ub4dc\ub97c \ubd88\ub7ec\uc624\uace0 \uc2f6\uc744 \uac83\uc774\uae30\uc5d0, REMAP \uc744 \uc81c\uc678\ud55c \ub2e4\ub978 \ub3d9\uc791\uc758 \uacbd\uc6b0. \ub204\ub77d\ub41c \ud56d\ubaa9\uc774 \ub2e4\uc2dc \ucd94\uac00\ub420 \uc218 \uc788\uc73c\ub2c8 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \ub2e4\ub978 \uac1d\uccb4\ub4e4\uc774 \ub204\ub77d\ub41c \ud56d\ubaa9\uc744 \ub300\uccb4\ud558\ub294 \uac83\uc744 \ub9c9\uc2b5\ub2c8\ub2e4.","title":"\ub204\ub77d\ub41c \ud56d\ubaa9 \ucc98\ub9ac\ud558\uae30"},{"location":"concepts/resources/","text":"\ub9ac\uc18c\uc2a4\ub780 \ub9ac\uc18c\uc2a4\ub294 \uac8c\uc784\uc774 \uc0ac\uc6a9\ud558\ub294 \ucd94\uac00\uc801\uc778 \ub370\uc774\ud130 \uc785\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \ucf54\ub4dc \uc548\uc5d0 \uc788\uc9c0 \uc54a\uace0 \ub370\uc774\ud130 \ud30c\uc77c \ud615\uc2dd\uc73c\ub85c \uc800\uc7a5\ub429\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \uc8fc\ub85c 2\uac1c\uc758 \ub9ac\uc18c\uc2a4 \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub294\ub370, \ud558\ub098\ub294 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \ubaa8\ub378, \ud14d\uc2a4\uccd0, \uc5b8\uc5b4\uc640 \uac19\uc774 \ud654\uba74\uc5d0 \uadf8\ub9ac\uae30 \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 \uc5d0\uc14b , \ub2e4\ub978 \ud558\ub098\ub294 \ub17c\ub9ac \uc11c\ubc84\uc5d0\uc11c \uc870\ud569\ubc95\uc774\ub098 \ub178\ud68d\ubb3c \ubaa9\ub85d\uacfc \uac19\uc740 \uac8c\uc784 \ud50c\ub808\uc774\ub97c \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 \ub370\uc774\ud130 \uac00 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4\ud329 \uc740 \uc804\uc790\ub97c \ud1b5\uc81c\ud558\uace0, \ub370\uc774\ud130\ud329 \uc740 \ud6c4\uc790\ub97c \ud1b5\uc81c\ud569\ub2c8\ub2e4. \uae30\ubcf8 \ubaa8\ub4dc \uac1c\ubc1c \ud0a4\ud2b8\uc758 \uc5d0\uc14b\uacfc \ub370\uc774\ud130\ub294 \ud504\ub85c\uc81d\ud2b8\uc758 src/main/resources \uc544\ub798 \uc704\uce58\ud569\ub2c8\ub2e4. \uc5ec\ub7ec\uac1c\uc758 \ub9ac\uc18c\uc2a4\ud329\uacfc \ub370\uc774\ud130\ud329\uc774 \ud65c\uc131\ud654 \ub418\uc5b4\uc788\uc744 \uacbd\uc6b0, \ud558\ub098\ub85c \ud569\uccd0\uc9d1\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc2a4\ud0dd \ub9e8 \uc704\uc5d0 \uc788\ub294 \ub9ac\uc18c\uc2a4\ud329/\ub370\uc774\ud130\ud329\uc774 \uadf8 \uc544\ub798\uc5d0 \uc704\uce58\ud55c \uac83\ub4e4\uc744 \ub36e\uc5b4\uc501\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc5b8\uc5b4 \ud30c\uc77c\uc774\ub098 \ud0dc\uadf8\ub4e4 \ucc98\ub7fc \uc77c\ubd80 \ud30c\uc77c\ub4e4\uc740 \uadf8 \ub0b4\uc6a9\uc774 \ud569\uccd0\uc9d1\ub2c8\ub2e4. \ubaa8\ub4dc\ub4e4\uc740 resources \ud3f4\ub354\uc5d0 \ub9ac\uc18c\uc2a4\ud329/\ub370\uc774\ud130\ud329\uc744 \ub9cc\ub4ed\ub2c8\ub2e4, \ub9ac\uc18c\uc2a4\ud329\uc740 Mod Resources \ub77c\ub294 \ud558\ub098\uc758 \uac70\ub300\ud55c \ub9ac\uc18c\uc2a4\ud329\uc73c\ub85c \ud569\uccd0\uc9d1\ub2c8\ub2e4. \uc774\ub294 \ube44\ud65c\uc131\ud654 \ub420 \uc218 \uc5c6\uc9c0\ub9cc \ub2e4\ub978 \ub9ac\uc18c\uc2a4\ud329\uc5d0 \uc758\ud574 \ub36e\uc5b4\uc50c\uc6cc \uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\uc758 \ub370\uc774\ud130\ud329\uc740 /datapack \uba85\ub839\uc5b4\ub85c \uac1c\ubcc4\uc801\uc73c\ub85c \uad00\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 1.11\ubd80\ud130 \ubaa8\ub4e0 \ub9ac\uc18c\uc2a4\ub294 \ud30c\uc77c \uc774\ub984\uacfc \uacbd\ub85c\uc5d0 \uc2a4\ub124\uc774\ud06c \ucf00\uc774\uc2a4(\ubaa8\ub4e0 \ubb38\uc790 \uc18c\ubb38\uc790, \u201c_\u201d\ub97c \ub744\uc5b4\uc4f0\uae30 \ub300\uc2e0 \uc0ac\uc6a9)\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. ResourceLocation \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ub9ac\uc18c\uc2a4\ub97c ResourceLocation \uc73c\ub85c \uad6c\ubd84\ud569\ub2c8\ub2e4. ResourceLocation \uc740 2\uac00\uc9c0\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\ub294\ub370, \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\uc640 \uacbd\ub85c\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c asset/<\ub124\uc784 \uc2a4\ud398\uc774\uc2a4>/<ctx>/<\uacbd\ub85c> \ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4, ctx \ub294 ResourceLocation \uc744 \uc0ac\uc6a9\ud558\ub294 \ub9e5\ub77d\uc5d0 \ub530\ub77c \ubcc0\ud560 \uc218 \uc788\ub294 \ub514\ub809\ud130\ub9ac \uacbd\ub85c\uc758 \uc77c\ubd80\uc785\ub2c8\ub2e4. ResourceLocation \uc744 \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\ud558\uac70\ub098, \ubb38\uc790\uc5f4\ub85c\ubd80\ud130 \uc77d\uc5b4\ub4e4\uc77c \ub54c\ub294 <\ub124\uc784 \uc2a4\ud398\uc774\uc2a4>:<\uacbd\ub85c> \ud615\uc2dd\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ubb38\uc790\uc5f4\ub85c\ubd80\ud130 \uc77d\uc5b4\ub4e4\uc77c\ub54c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\uac00 \uc5c6\ub2e4\uba74 \uae30\ubcf8\uac12\uc73c\ub85c \u201cminecraft\u201d\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ubaa8\ub4dc\uc5d0\uc11c\ub294 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub85c \ubcf4\ud1b5 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4(\uc608: examplemod \ub77c\ub294 \uc544\uc774\ub514\ub97c \uac00\uc9c4 \ubaa8\ub4dc\ub294 \uc5d0\uc14b\uc744 assets/examplemod \uc5d0, \ub370\uc774\ud130\ub97c data/examplemod \uc5d0 \ub9cc\ub4ed\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc774\ub97c \uac00\ub9ac\ud0a4\ub294 ResourceLocation \uc740 examplemod:<\uacbd\ub85c> \uc640 \uac19\uc744 \uac83\uc785\ub2c8\ub2e4). \uc774\ub294 \ubb34\uc870\uac74 \ub530\ub77c\uc57c \ud558\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4, \uac00\ub054\uc529 \ub2e4\ub978 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud560 \ub54c\ub3c4 \uc788\uc73c\uba70, \uc2ec\uc9c0\uc5b4 \ubaa8\ub4dc \ud558\ub098\uc5d0\uc11c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4 \uc5ec\ub7ec\uac1c\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud560 \ub54c\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. ResourceLocation \uc740 \ub9ac\uc18c\uc2a4 \uc2dc\uc2a4\ud15c \ub9d0\uace0 \ub2e4\ub978\uacf3\uc5d0\uc11c\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4, \uc65c\ub0d0\ud558\uba74 \uac1d\uccb4\ub4e4\uc744 \uad6c\ubcc4\ud558\ub294\ub370 \ub531 \uc88b\uae30 \ub54c\ubb38\uc774\uc9c0\uc694.","title":"\ub9ac\uc18c\uc2a4"},{"location":"concepts/resources/#_1","text":"\ub9ac\uc18c\uc2a4\ub294 \uac8c\uc784\uc774 \uc0ac\uc6a9\ud558\ub294 \ucd94\uac00\uc801\uc778 \ub370\uc774\ud130 \uc785\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \ucf54\ub4dc \uc548\uc5d0 \uc788\uc9c0 \uc54a\uace0 \ub370\uc774\ud130 \ud30c\uc77c \ud615\uc2dd\uc73c\ub85c \uc800\uc7a5\ub429\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \uc8fc\ub85c 2\uac1c\uc758 \ub9ac\uc18c\uc2a4 \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub294\ub370, \ud558\ub098\ub294 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \ubaa8\ub378, \ud14d\uc2a4\uccd0, \uc5b8\uc5b4\uc640 \uac19\uc774 \ud654\uba74\uc5d0 \uadf8\ub9ac\uae30 \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 \uc5d0\uc14b , \ub2e4\ub978 \ud558\ub098\ub294 \ub17c\ub9ac \uc11c\ubc84\uc5d0\uc11c \uc870\ud569\ubc95\uc774\ub098 \ub178\ud68d\ubb3c \ubaa9\ub85d\uacfc \uac19\uc740 \uac8c\uc784 \ud50c\ub808\uc774\ub97c \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 \ub370\uc774\ud130 \uac00 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4\ud329 \uc740 \uc804\uc790\ub97c \ud1b5\uc81c\ud558\uace0, \ub370\uc774\ud130\ud329 \uc740 \ud6c4\uc790\ub97c \ud1b5\uc81c\ud569\ub2c8\ub2e4. \uae30\ubcf8 \ubaa8\ub4dc \uac1c\ubc1c \ud0a4\ud2b8\uc758 \uc5d0\uc14b\uacfc \ub370\uc774\ud130\ub294 \ud504\ub85c\uc81d\ud2b8\uc758 src/main/resources \uc544\ub798 \uc704\uce58\ud569\ub2c8\ub2e4. \uc5ec\ub7ec\uac1c\uc758 \ub9ac\uc18c\uc2a4\ud329\uacfc \ub370\uc774\ud130\ud329\uc774 \ud65c\uc131\ud654 \ub418\uc5b4\uc788\uc744 \uacbd\uc6b0, \ud558\ub098\ub85c \ud569\uccd0\uc9d1\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc2a4\ud0dd \ub9e8 \uc704\uc5d0 \uc788\ub294 \ub9ac\uc18c\uc2a4\ud329/\ub370\uc774\ud130\ud329\uc774 \uadf8 \uc544\ub798\uc5d0 \uc704\uce58\ud55c \uac83\ub4e4\uc744 \ub36e\uc5b4\uc501\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc5b8\uc5b4 \ud30c\uc77c\uc774\ub098 \ud0dc\uadf8\ub4e4 \ucc98\ub7fc \uc77c\ubd80 \ud30c\uc77c\ub4e4\uc740 \uadf8 \ub0b4\uc6a9\uc774 \ud569\uccd0\uc9d1\ub2c8\ub2e4. \ubaa8\ub4dc\ub4e4\uc740 resources \ud3f4\ub354\uc5d0 \ub9ac\uc18c\uc2a4\ud329/\ub370\uc774\ud130\ud329\uc744 \ub9cc\ub4ed\ub2c8\ub2e4, \ub9ac\uc18c\uc2a4\ud329\uc740 Mod Resources \ub77c\ub294 \ud558\ub098\uc758 \uac70\ub300\ud55c \ub9ac\uc18c\uc2a4\ud329\uc73c\ub85c \ud569\uccd0\uc9d1\ub2c8\ub2e4. \uc774\ub294 \ube44\ud65c\uc131\ud654 \ub420 \uc218 \uc5c6\uc9c0\ub9cc \ub2e4\ub978 \ub9ac\uc18c\uc2a4\ud329\uc5d0 \uc758\ud574 \ub36e\uc5b4\uc50c\uc6cc \uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\uc758 \ub370\uc774\ud130\ud329\uc740 /datapack \uba85\ub839\uc5b4\ub85c \uac1c\ubcc4\uc801\uc73c\ub85c \uad00\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 1.11\ubd80\ud130 \ubaa8\ub4e0 \ub9ac\uc18c\uc2a4\ub294 \ud30c\uc77c \uc774\ub984\uacfc \uacbd\ub85c\uc5d0 \uc2a4\ub124\uc774\ud06c \ucf00\uc774\uc2a4(\ubaa8\ub4e0 \ubb38\uc790 \uc18c\ubb38\uc790, \u201c_\u201d\ub97c \ub744\uc5b4\uc4f0\uae30 \ub300\uc2e0 \uc0ac\uc6a9)\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4.","title":"\ub9ac\uc18c\uc2a4\ub780"},{"location":"concepts/resources/#resourcelocation","text":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ub9ac\uc18c\uc2a4\ub97c ResourceLocation \uc73c\ub85c \uad6c\ubd84\ud569\ub2c8\ub2e4. ResourceLocation \uc740 2\uac00\uc9c0\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\ub294\ub370, \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\uc640 \uacbd\ub85c\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c asset/<\ub124\uc784 \uc2a4\ud398\uc774\uc2a4>/<ctx>/<\uacbd\ub85c> \ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4, ctx \ub294 ResourceLocation \uc744 \uc0ac\uc6a9\ud558\ub294 \ub9e5\ub77d\uc5d0 \ub530\ub77c \ubcc0\ud560 \uc218 \uc788\ub294 \ub514\ub809\ud130\ub9ac \uacbd\ub85c\uc758 \uc77c\ubd80\uc785\ub2c8\ub2e4. ResourceLocation \uc744 \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\ud558\uac70\ub098, \ubb38\uc790\uc5f4\ub85c\ubd80\ud130 \uc77d\uc5b4\ub4e4\uc77c \ub54c\ub294 <\ub124\uc784 \uc2a4\ud398\uc774\uc2a4>:<\uacbd\ub85c> \ud615\uc2dd\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ubb38\uc790\uc5f4\ub85c\ubd80\ud130 \uc77d\uc5b4\ub4e4\uc77c\ub54c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\uac00 \uc5c6\ub2e4\uba74 \uae30\ubcf8\uac12\uc73c\ub85c \u201cminecraft\u201d\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ubaa8\ub4dc\uc5d0\uc11c\ub294 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub85c \ubcf4\ud1b5 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4(\uc608: examplemod \ub77c\ub294 \uc544\uc774\ub514\ub97c \uac00\uc9c4 \ubaa8\ub4dc\ub294 \uc5d0\uc14b\uc744 assets/examplemod \uc5d0, \ub370\uc774\ud130\ub97c data/examplemod \uc5d0 \ub9cc\ub4ed\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc774\ub97c \uac00\ub9ac\ud0a4\ub294 ResourceLocation \uc740 examplemod:<\uacbd\ub85c> \uc640 \uac19\uc744 \uac83\uc785\ub2c8\ub2e4). \uc774\ub294 \ubb34\uc870\uac74 \ub530\ub77c\uc57c \ud558\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4, \uac00\ub054\uc529 \ub2e4\ub978 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud560 \ub54c\ub3c4 \uc788\uc73c\uba70, \uc2ec\uc9c0\uc5b4 \ubaa8\ub4dc \ud558\ub098\uc5d0\uc11c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4 \uc5ec\ub7ec\uac1c\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud560 \ub54c\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. ResourceLocation \uc740 \ub9ac\uc18c\uc2a4 \uc2dc\uc2a4\ud15c \ub9d0\uace0 \ub2e4\ub978\uacf3\uc5d0\uc11c\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4, \uc65c\ub0d0\ud558\uba74 \uac1d\uccb4\ub4e4\uc744 \uad6c\ubcc4\ud558\ub294\ub370 \ub531 \uc88b\uae30 \ub54c\ubb38\uc774\uc9c0\uc694.","title":"ResourceLocation"},{"location":"concepts/sides/","text":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \uc0ac\uc774\ub4dc \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubaa8\ub4dc\ub97c \uac1c\ubc1c\ud558\uba74\uc11c \uc219\uc9c0\ud574\uc57c \ud560 \ub9e4\uc6b0 \uc911\uc694\ud55c \uac1c\ub150\uc740 \u201c\ud074\ub77c\uc774\uc5b8\ud2b8 \uc0ac\uc774\ub4dc\u201d \uc640 \u201c\uc11c\ubc84 \uc0ac\uc774\ub4dc\u201d \uc785\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud574 \ub9ce\uc740 \uc0ac\ub78c\ub4e4\uc774 \uc624\ud574\ud558\uace0 \uc788\uace0, \uc774\ub85c \uc778\ud574 \uac8c\uc784\uc744 \ud295\uae30\uac8c \ud558\uc9c4 \uc54a\uc9c0\ub9cc \uc608\uae30\uce58 \ubabb\ud55c \ub3d9\uc791\uc744 \ud558\ub3c4\ub85d \ub9cc\ub4e4 \uc218 \uc788\ub294 \ud574\uacb0\ud558\uae30 \uae4c\ub2e4\ub85c\uc6b4 \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc774\ub4dc\uc758 \uc885\ub958\ub4e4 \ub204\uad70\uac00 \u201c\ud074\ub77c\uc774\uc5b8\ud2b8\u201d \ub610\ub294 \u201c\uc11c\ubc84\u201d \uc5d0 \ub300\ud574 \uc774\uc57c\uae30\ud560 \ub54c, \uaf64\ub098 \uc9c1\uad00\uc801\uc73c\ub85c \uac8c\uc784\uc758 \ubb34\uc2a8 \ubd80\ubd84\uc744 \ub73b\ud558\ub294\uc9c0 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub530\uc9c0\uace0 \ubcf4\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \uc720\uc800\uc640 \uc0c1\ud638\uc791\uc6a9 \ud558\ub294 \uac83\uc774\uace0 \uc11c\ubc84\ub294 \uba40\ud2f0 \ud50c\ub808\uc774\ub97c \uc704\ud574 \uc5ec\ub7ec \uc720\uc800\uac00 \uc811\uc18d\ud558\ub294 \uac83\uc774\uc9c0\uc694. \uac04\ub2e8\ud558\ub124\uc694, \uc548\uadf8\ub7f0\uac00\uc694? \uc0ac\uc2e4\uc740 \uadf8\ub807\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc0ac\uc774\ub4dc\ub97c \uad6c\ubd84\ud558\ub294\ub370 \ubaa8\ud638\ud55c \uc810\uc774 \uc788\uc744 \uc218 \uc788\ub294\ub370, \uadf8\ub807\uae30\uc5d0 \uc5ec\uae30 \ud655\uc2e4\ud558\uac8c \u201c\ud074\ub77c\uc774\uc5b8\ud2b8\u201d \ub610\ub294 \u201c\uc11c\ubc84\u201d \uac00 \uac00\uc9c0\ub294 4\uac00\uc9c0 \uc758\ubbf8\ub97c \uc815\ub9ac\ud574 \ub193\uc558\uc2b5\ub2c8\ub2e4: \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 - \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 \ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub97c \ub7f0\ucc98\ub85c \uc2e4\ud589\ud558\uc600\uc744\ub54c \ucf1c\uc9c0\ub294 \ud504\ub85c\uadf8\ub7a8 \uc804\uccb4\ub97c \ub73b\ud569\ub2c8\ub2e4. \uc774\ub294 \ubaa8\ub4e0 \uc2a4\ub808\ub4dc, \ud504\ub85c\uc138\uc2a4, \uadf8\ub798\ud53d\uc744 \ud45c\uc2dc\ud558\ub294 \uc0c1\ud638 \uc791\uc6a9 \uac00\ub2a5\ud55c \uc0dd\uba85\uc8fc\uae30 \ub3d9\uc548 \uc2e4\ud589\ub418\ub294 \uc11c\ube44\uc2a4\ub4e4\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. \ubb3c\ub9ac \uc11c\ubc84 - \uc804\uc6a9 \uc11c\ubc84\ub77c\uace0 \ubd88\ub9ac\uae30\ub3c4 \ud569\ub2c8\ub2e4. \ubb3c\ub9ac \uc11c\ubc84 \ub294 \uc544\ubb34 \uc885\ub958\uc758 \u201cminecraft_server.jar\u201d \uc744 \uc2e4\ud589\ud558\uba74 \ucf1c\uc9c0\ub294, \ud50c\ub808\uc774 \uac00\ub2a5\ud55c GUI \ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\ub294 \ud504\ub85c\uadf8\ub7a8 \uc804\uccb4\ub97c \ub73b\ud569\ub2c8\ub2e4. \ub17c\ub9ac \uc11c\ubc84 - \ub17c\ub9ac \uc11c\ubc84 \ub294 \uac8c\uc784\uc758 \ub17c\ub9ac \uc5f0\uc0b0\uc744 \uc218\ud589\ud558\ub294 \uac83\uc785\ub2c8\ub2e4: \ubaac\uc2a4\ud130 \uc0dd\uc131, \ub0a0\uc528 \uc870\uc808, \uc778\ubca4\ud1a0\ub9ac \uac31\uc2e0, \ucc44\ub825 \uad00\ub9ac, \ubaac\uc2a4\ud130\uc758 \ud589\ub3d9 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub17c\ub9ac \uc11c\ubc84\ub294 \ubb3c\ub9ac \uc11c\ubc84\uc5d0 \uc874\uc7ac\ud558\ub098, \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uac19\uc774 \uc874\uc7ac\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc2f1\uae00 \ud50c\ub808\uc774 \uc6d4\ub4dc\uc5d0\ub294 Server Thread \ub77c\ub294 \uc774\ub984\uc73c\ub85c \ub17c\ub9ac \uc11c\ubc84\uac00 \uacc4\uc18d \uc2e4\ud589\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 - \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 \ub294 \ud50c\ub808\uc774\uc5b4\uc758 \uc785\ub825\uc744 \ubc1b\uace0 \ub17c\ub9ac \uc11c\ubc84\ub85c \uc804\ub2ec\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub610, \ub17c\ub9ac \uc11c\ubc84\ub85c \ubd80\ud130 \uc815\ubcf4\ub97c \ubc1b\uc544 \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \uadf8\ub798\ud53d\uc744 \ud65c\uc6a9\ud574 \ud45c\uc2dc\ud558\uae30\ub3c4 \ud569\ub2c8\ub2e4. \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 Client Thread \ub77c\ub294 \uc774\ub984\uc744 \uac00\uc9c4 \uc2a4\ub808\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4\ub9cc, \uc624\ub514\uc624\ub098 \uccad\ud06c \ubc30\uce6d \ub4f1\uacfc \uac19\uc740 \uc791\uc5c5\ub4e4\uc744 \ucc98\ub9ac\ud558\uae30 \uc704\ud574 \ucd94\uac00\uc801\uc778 \uc2a4\ub808\ub4dc\uac00 \ub354 \uc2e4\ud589\ub429\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0\uc5d0\uc11c\ub294 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\ub97c Dist \uc5f4\uac70\ud615\uc744 \uc0ac\uc6a9\ud574 \ub300\ud45c\ud569\ub2c8\ub2e4, \ub17c\ub9ac \uc0ac\uc774\ub4dc\ub294 LogicalSide \uc5f4\uac70\ud615\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub300\ud45c\ud569\ub2c8\ub2e4. \uc0ac\uc774\ub4dc\ubcc4 \uc5f0\uc0b0 \uc218\ud589\ud558\uae30 World#isClientSide \uc774 boolean \ud544\ub4dc\ub294 \uc0ac\uc774\ub4dc\ub97c \ud655\uc778\ud558\ub294 \ubc29\ubc95\uc911 \uac00\uc7a5 \uc790\uc8fc \uc4f0\uc785\ub2c8\ub2e4. World \uac1d\uccb4\uc5d0 \uc774 \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6d4\ub4dc\uac00 \uc18d\ud558\ub294 \ub17c\ub9ac \uc0ac\uc774\ub4dc\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. true \ub97c \ubc18\ud658\ud558\uba74 \uc6d4\ub4dc\ub294 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\ub2e4\ub294 \uac83\uc774\uace0, false \ub97c \ubc18\ud658\ud558\uba74 \ub17c\ub9ac \uc11c\ubc84\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 \ubb3c\ub9ac \uc11c\ubc84\uc5d0\uc11c\ub294 \ub298 false \ub9cc \ubc18\ud658\ud569\ub2c8\ub2e4. \uadf8\ub807\uc9c0\ub9cc \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ud3ec\ud568\ub41c \ub17c\ub9ac \uc11c\ubc84 \ub610\ud55c false \ub97c \ubc18\ud658\ud558\uae30 \ub54c\ubb38\uc5d0, \uc774 \uba54\uc11c\ub4dc\uac00 false \ub97c \ubc18\ud658\ud55c\ub2e4\uace0 \ud574\uc11c \uc6d4\ub4dc\uac00 \ubb3c\ub9ac \uc11c\ubc84\uc5d0 \uc18d\ud55c\ub2e4\uace0 \uc9d0\uc791\ud558\uc2dc\uba74 \uc548\ub429\ub2c8\ub2e4. \uc774 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ub17c\ub9ac \uc5f0\uc0b0\uc774\ub098 \uac8c\uc784 \uba54\uce74\ub2c9\uc744 \ucc98\ub9ac\ud574\uc57c \ud560\uc9c0\ub97c \uacb0\uc815\ud558\ub3c4\ub85d \ud558\uc138\uc694. \uc608\ub97c \ub4e4\uc5b4, \ud50c\ub808\uc774\uc5b4\uac00 \ube14\ub85d\uc744 \ud074\ub9ad\ud560 \ub54c\ub9c8\ub2e4 \ud53c\ud574\ub97c \uc8fc\uace0 \uc2f6\ub2e4\uba74, \ub610\ub294 \uae30\uacc4\ub97c \uc0ac\uc6a9\ud574 \ud759\uc744 \ub2e4\uc774\uc544\ubaac\ub4dc\ub85c \uac00\uacf5\ud558\uace0 \uc2f6\ub2e4\uba74, #isClientSide \uac00 false \uc784\uc744 \uba3c\uc800 \ud655\uc778\ud55c \uc774\ud6c4 \ub17c\ub9ac \uc5f0\uc0b0\uc744 \uc218\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. \ub17c\ub9ac \uc5f0\uc0b0\uc744 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc218\ud589\ud558\uba74, \uc6b4\uc774 \uc88b\uc740 \uacbd\uc6b0\uc5d4 \ube44\ub3d9\uae30\ud654(\uc720\ub839 \uc5d4\ud2f0\ud2f0, \uc815\ud655\ud558\uc9c0 \uc54a\uc740 \uc2a4\ud0ef \ub4f1)\uac00 \uc77c\uc5b4\ub0a0 \uc218 \uc788\uace0, \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \uac8c\uc784\uc774 \ud295\uae41\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\ub2e4\uba74 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud558\uc138\uc694. DistExecutor \ub97c \uc81c\uc678\ud558\uba74, \uc774\uac70 \ub9d0\uace0 \ub2e4\ub978 \ubc29\ubc95\uc73c\ub85c \uc0ac\uc774\ub4dc\ub97c \ud655\uc778\ud560 \ud544\uc694\uac00 \uac70\uc758 \uc5c6\uc2b5\ub2c8\ub2e4. DistExecutor \ubaa8\ub4dc\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uc11c\ubc84\uc5d0\uc11c \ub3d9\uc2dc\uc5d0 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 \ub9cc\ub4e4\uc5b4 \uc9c4\ub2e4\ub294 \uac83\uacfc, \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uc11c\ubc84\ub294 \uc544\uc608 \ub2e4\ub978 jar \ud30c\uc77c\ub85c \uad6c\ubd84\ub41c\ub2e4\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uba74, \uc5b4\ub5bb\uac8c \ud558\ub098\uc758 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\ub9cc \uc874\uc7ac\ud558\ub294 \ucf54\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc744\uc9c0 \uad81\uae08\ud574 \uc9d1\ub2c8\ub2e4. net.minecraft.client \ud328\ud0a4\uc9c0\uc5d0 \ub4e4\uc5b4\uc788\ub294 \ucf54\ub4dc\ub4e4\uc740 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub9cc \uc874\uc7ac\ud569\ub2c8\ub2e4. \ub9cc\uc57d \uc774 \ucf54\ub4dc\ub4e4\uc744 \uc5b4\ub5bb\uac8c\ub4e0 \ucc38\uc870\ud558\ub294 \ud074\ub798\uc2a4\ub97c \uc791\uc131\ud558\uc2dc\uba74, \uadf8 \ucf54\ub4dc\ub4e4\uc774 \uc5c6\ub294 \ud658\uacbd\uc5d0\uc11c \uadf8 \ud074\ub798\uc2a4\uac00 \ubd88\ub7ec\uc640\uc9c8 \ub54c \uac8c\uc784\uc774 \ud295\uae41\ub2c8\ub2e4. \ucd08\ubcf4\ubd84\ub4e4\uc774 \ub9ce\uc774 \ud558\uc2dc\ub294 \uc2e4\uc218\uac00 Minecraft.getInstance().<\ubb34\uc5b8\uac00> \ub97c \ube14\ub85d\uc774\ub098 \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uac83\uc778\ub370, \uc774\ub294 \uadf8 \ud074\ub798\uc2a4\uac00 \ubd88\ub7ec\uc640\uc9c0\ub294 \uadf8 \uc21c\uac04 \uac8c\uc784\uc774 \ud295\uae38 \uac83\uc785\ub2c8\ub2e4. \uc774\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574 FML \uc5d0\uc120 DistExecutor \ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub294 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0 \ub530\ub77c \ub2e4\ub978 \uba54\uc11c\ub4dc\ub97c \uc2e4\ud589\ud558\uac70\ub098, \uc544\uc608 \ud55c\ucabd \uc0ac\uc774\ub4dc\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub420 \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Note \uc219\uc9c0\ud558\uc154\uc57c \ud560 \uc810\uc740 FML \uc740 \ub17c\ub9ac \uc0ac\uc774\ub4dc\ub97c \uc774\uc6a9\ud574 \uc5b8\uc81c \ucf54\ub4dc\ub97c \uc2e4\ud589\ud560\uc9c0\ub97c \uacb0\uc815\ud55c\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uc2f1\uae00 \ud50c\ub808\uc774 \uc6d4\ub4dc(\ub17c\ub9ac \uc11c\ubc84\uc640 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc788\ub294 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8) \uc5d0\uc11c\ub294 Dist.CLIENT \uac00 \uc0ac\uc6a9\ub429\ub2c8\ub2e4! DistExecutor \ub294 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud560 Supplier \ub97c \uc804\ub2ec\ubc1b\ub294 \uac83\uc73c\ub85c \uc791\ub3d9\ud558\ub294\ub370, \uc774\ub294 invokedynamic JVM \uba85\ub839 \uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub798\uc2a4 \ub85c\ub529\uc744 \ub9c9\uc544, \ub7f0\ud0c0\uc784 \ub3c4\uc911 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \ud074\ub798\uc2a4\ub97c \ubd88\ub7ec\uc624\ub824\uace0 \uc2dc\ub3c4\ud558\ub294 \uac83\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4. \uc774\ub54c \ud638\ucd9c\ub420 \uba54\uc11c\ub4dc\ub294 \uc815\uc801 \uba54\uc11c\ub4dc\uc774\uc5b4\uc57c \ud558\uba70 \ub2e4\ub978 \ud074\ub798\uc2a4\uc5d0 \uc815\uc758\ub418\uc5b4 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud574\ub2f9 \uc815\uc801 \uba54\uc11c\ub4dc\uac00 \ubc1b\ub294 \uc778\uc790\uac00 \uc5c6\ub2e4\uba74, Supplier \ub97c \uc804\ub2ec\ud558\uae30 \ubcf4\ub2e8 \uba54\uc11c\ub4dc \ub808\ud37c\ub7f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. DistExecutor \uc5d0\ub294 \ub300\ud45c\uc801\uc73c\ub85c 2\uac1c\uc758 \uba54\uc11c\ub4dc\uac00 \uc788\ub294\ub370: #runWhenOn \uacfc #callWhenOn \uc785\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub4e4\uc740 \uc804\ub2ec\ubc1b\uc740 \uba54\uc11c\ub4dc\ub97c \uc2e4\ud589\ud560 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc640, \uc2e4\ud589\ub420 \uba54\uc11c\ub4dc\ub4e4\uc744 \ubc1b\uc2b5\ub2c8\ub2e4. runWhenOn \uc740 \uacb0\uacfc\ub97c \ubc18\ud658\ud558\uc9c0 \uc54a\uc73c\uba70, callWhenOn \uc740 \uacb0\uacfc\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774\ub54c callWhenOn \uc740 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0 \ub530\ub77c null \uc744 \ubc18\ud658\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ub610, \uc774 \ub450 \uba54\uc11c\ub4dc\ub4e4\uc740 #safe* \uc640 #unsafe* \ub85c \ub2e4\uc2dc \ub098\ub258\ub294\ub370, \uc774\ub54c safe \uc640 unsafe \ub294 \uc774 \uba54\uc11c\ub4dc\ub4e4\uc758 \uc6a9\ub3c4\ub97c \uc798 \ub098\ud0c0\ub0b4\ub294 \uba85\uce6d\uc740 \uc544\ub2d9\ub2c8\ub2e4. #safe* \uc640 #unsafe* \uc758 \uad81\uadf9\uc801\uc778 \ucc28\uc774\uc810\uc740 \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c\uc758 \uae30\ub2a5 \ucc28\uc774\uc785\ub2c8\ub2e4, #safe* \ub294 \uc804\ub2ec\ub41c \ub78c\ub2e4\uac00 \ub2e4\ub978 \uba54\uc11c\ub4dc\uc5d0 \uc815\uc758\ub41c \uba54\uc11c\ub4dc \ub808\ud37c\ub7f0\uc2a4\uc778\uc9c0 \ud655\uc778\ud558\ub294 \uac83\uc785\ub2c8\ub2e4, \ub9cc\uc57d \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b5\ub2c8\ub2e4. \ub9b4\ub9ac\uc988 \ud658\uacbd\uc5d0\uc11c\ub294 #safe* \uc640 #unsafe* \ub294 \uae30\ub2a5\uc0c1 \ub3d9\uc77c\ud569\ub2c8\ub2e4. // \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ud074\ub798\uc2a4\uc18d \uc5b4\ub518\uac00: ExampleClass public static void unsafeRunMethodExample(Object param1, Object param2) { // ... } public static Object safeCallMethodExample() { // ... } // \uacf5\uc6a9 \ud074\ub798\uc2a4 \uc5b4\ub518\uac00 DistExecutor.unsafeRunWhenOn(Dist.CLIENT, () -> ExampleClass.unsafeRunMethodExample(var1, var2)); DistExecutor.safeCallWhenOn(Dist.CLIENT, () -> ExampleClass::safeCallMethodExample); \uc2a4\ub808\ub4dc \uadf8\ub8f9 \ub9cc\uc57d Thread.currentThread().getTHreadGroup() == SidedThreadGroups.Server \uac00 \ucc38\uc774\ub77c\uba74 \uadf8 \uc2a4\ub808\ub4dc\ub294 \ub17c\ub9ac \uc11c\ubc84\ub97c \uc2e4\ud589\ud558\uace0 \uc788\uc744 \uac00\ub2a5\uc131\uc774 \ud07d\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc2e4\ud589\ud560 \uac00\ub2a5\uc131\uc774 \ud07d\ub2c8\ub2e4. \uc774\ub294 World \uac1d\uccb4\uc5d0 \uc811\uadfc\ud560 \uc218 \uc5c6\uc744\ub54c \ub17c\ub9ac \uc0ac\uc774\ub4dc\ub97c \ud655\uc778\ud558\ub294\ub370 \uc720\uc6a9\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc774\ub294 \ud655\uc2e4\ud558\uac8c \ud655\uc778\ud558\ub294 \uac83\uc774 \uc544\ub2cc \ud604\uc7ac \uc2e4\ud589\uc911\uc778 \uc2a4\ub808\ub4dc\uc758 \uadf8\ub8f9\uc744 \ube44\uad50\ud558\uc5ec \uc9d0\uc791\ud558\ub294 \uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \uac00\ub2a5\ud558\uba74 \uc0ac\uc6a9\ud558\uc2dc\uc9c0 \uc54a\ub294 \uac83\uc744 \uad8c\uc7a5\ub4dc\ub9bd\ub2c8\ub2e4\u3163. \ub300\uc2e0 World#isClientSide \ub97c \uac00\ub2a5\ud558\uba74 \uc0ac\uc6a9\ud558\uc138\uc694. FMLEnvironment#dist \uc640 @OnlyIn FMLEnvironment#dist \ub294 \ud604\uc7ac \ucf54\ub4dc\uac00 \uc2e4\ud589\ub418\uace0 \uc788\ub294 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\ub97c \uc800\uc7a5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uac12\uc740 \ud504\ub85c\uadf8\ub7a8\uc774 \uc2dc\uc791\ub420 \ub54c \uacb0\uc815\ub418\uae30 \ub54c\ubb38\uc5d0 \uc9d0\uc791\ud558\uc9c0 \uc54a\uace0 \ud655\uc2e4\ud55c \uac12\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc774\ub97c \uc2e4\uc81c\ub85c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\ub294 \ub4dc\ubb45\ub2c8\ub2e4. \uba54\uc11c\ub4dc\ub098 \ud544\ub4dc\uc5d0 @OnlyIn(Dist) \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uba74, \uac8c\uc784\uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc5d0 \uc804\ub2ec\ub41c \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\uc9c0 \uc54a\ub2e4\uba74, \uc774 \uba64\ubc84\ub4e4\uc774 \ubd88\ub7ec\uc640\uc9c0\ub294 \uacfc\uc815\uc5d0\uc11c \uc815\uc758 \uc790\uccb4\uac00 \uc544\uc608 \uc81c\uac70\ub418\uc5b4\uc57c \ud568\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ub514\ucef4\ud30c\uc77c\ub41c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ucf54\ub4dc\uc5d0\uc11c \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc790\uc8fc \uc774\uc6a9\ub418\ub294\ub370, \uc774\ub294 \ubaa8\uc7a5\uc5d0\uc11c \ub09c\ub3c5\ud654\ub97c \uc9c4\ud589\ud558\uba70 \uc81c\uac70\ud55c \uba54\uc11c\ub4dc\ub4e4\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc4f0\uc785\ub2c8\ub2e4. \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc9c1\uc811 \uc0ac\uc6a9\ud560 \uc774\uc720\ub294 \uc544\uc608 \uc5c6\uc73c\uba70 , \ub300\uc2e0 DistExecutor \ub610\ub294 FMLEnviroment#dist \ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uc790\uc8fc\ud558\ub294 \uc2e4\uc218\ub4e4 \ub17c\ub9ac \uc0ac\uc774\ub4dc \uac00\ub85c\uc9c0\ub974\uae30 \ud55c\ucabd \ub17c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\uc11c \ubc18\ub300\ucabd\uc73c\ub85c \uc815\ubcf4\ub97c \ubcf4\ub0b4\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74, \uc5b8\uc81c\ub098 \ub124\ud2b8\uc6cc\ud06c \ud328\ud0b7\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\ub2ec\ud558\ub3c4\ub85d \ud558\uc138\uc694. \uc0ac\uc2e4 \uc2f1\uae00 \ud50c\ub808\uc774\uc5d0\uc11c \uc0ac\uc774\ub4dc\ub97c \uac00\ub85c\uc9c8\ub7ec \uc815\ubcf4\ub97c \uc9c1\uc811\uc801\uc73c\ub85c \ubcf4\ub0b4\ub294 \uac83\uc774 \uc88b\uc544\ubcf4\uc77c \uc218\ub294 \uc788\uc2b5\ub2c8\ub2e4. \uacc4\ub2e4\uac00 \uc774\ub294 \ub9ce\uc740 \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc774 \uc815\uc801 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc2f1\uae00 \ud50c\ub808\uc774\uc5d0\uc11c\ub294 \ub17c\ub9ac \uc11c\ubc84\uc640 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uac19\uc740 JVM \uc5d0\uc11c \uc2e4\ud589\ub418\uae30 \ub54c\ubb38\uc5d0, \uc2a4\ub808\ub4dc 2\uac1c\uac00 \uc815\uc801 \ud544\ub4dc \ud558\ub098\ub97c \uc77d\uace0 \uc4f0\ub294 \uac83\uc740 \uacbd\uc7c1 \uc0c1\ud0dc\ub97c \uc720\ubc1c\ud560 \uc218 \uc788\uc73c\uba70 \uc2a4\ub808\ub4dc\uc640 \uad00\ub828\ub41c \uc5ec\ub7ec \uace0\uc9c8\uc801\uc778 \ubb38\uc81c\ub4e4\uc744 \uc77c\uc73c\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610, Minecraft \ud074\ub798\uc2a4\uc640 \uac19\uc774 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ucf54\ub4dc\ub97c, \uc591\ucabd \uc0ac\uc774\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uac70\ub098, \ub610\ub294 \ub17c\ub9ac \uc11c\ubc84\uc5d0\uc11c \uc811\uadfc\ud558\ub294 \uac83 \ub610\ud55c \uc0ac\uc774\ub4dc\ub97c \uac00\ub85c\uc9c0\ub974\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ub294 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \ub514\ubc84\uadf8\ub97c \ud558\ub294 \ucd08\ubcf4\uc790 \ubd84\ub4e4\uc774 \ub193\uce58\uae30 \uc26c\uc6b4 \uac83\uc785\ub2c8\ub2e4. \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc791\ub3d9\uc740 \ub418\uaca0\uc9c0\ub9cc \ubb3c\ub9ac \uc11c\ubc84\uc5d0\uc11c\ub294 \ubc14\ub85c \ud295\uae41\ub2c8\ub2e4. \ud55c\ucabd \uc0ac\uc774\ub4dc \uc804\uc6a9 \ubaa8\ub4dc \ub9cc\ub4e4\uae30 \ucd5c\uadfc \ucd9c\uc2dc\ub41c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc5d0\uc11c \ud3ec\uc9c0\ub294 \u201csideness\u201d \uc18d\uc131\uc744 mods.toml \uc5d0\uc11c \uc81c\uac70\ud558\uc600\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \ub9d0\ud574\uc11c \ubaa8\ub4dc\ub97c \ubb3c\ub9ac \uc11c\ubc84\uc5d0 \uc124\uce58\ud558\ub4e0 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc124\uce58\ud558\ub4e0 \uc791\ub3d9\uc740 \ud574\uc57c \ud55c\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \ud55c\ucabd \uc0ac\uc774\ub4dc\ub9cc\uc744 \uc704\ud55c \ubaa8\ub4dc\ub97c \ub9cc\ub4dc\uc2e0\ub2e4\uba74 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \uc9c1\uc811\uc801\uc73c\ub85c \ub4f1\ub85d\ud558\uae30 \ubcf4\ub2e8 DistExecutor#safeRunWhenOn \ub610\ub294 DistExecutor#unsafeRunWhenOn \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub4f1\ub85d\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud558\uc5ec \ub9cc\uc57d \ubaa8\ub4dc\uac00 \uc798\ubabb\ub41c \uc0ac\uc774\ub4dc\uc5d0 \uc124\uce58\ub418\uc5c8\ub2e4\uba74 \uc874\uc7ac\ub294 \ud558\uc9c0\ub9cc \uc544\ubb34\uac83\ub3c4 \uc548\ud558\ub3c4\ub85d \ud558\ub294 \uac83\uc774\uc9c0\uc694. \uc774\ub7ec\ud55c \ubaa8\ub4dc\ub4e4\uc740 \ube14\ub85d\uc774\ub098 \uc5d4\ud2f0\ud2f0, \uc544\uc774\ud15c \ub4f1\uc744 \ub4f1\ub85d\ud558\uba74 \uc548\ub429\ub2c8\ub2e4, \uc65c\ub0d0\ud558\uba74 \uc774\ub7ec\ud55c \uac83\ub4e4\uc740 \ubc18\ub300\ucabd \uc0ac\uc774\ub4dc\uc5d0\ub3c4 \uc874\uc7ac\ud574\uc57c \ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ucd94\uac00\uc801\uc73c\ub85c \ud55c\ucabd \uc0ac\uc774\ub4dc \uc804\uc6a9 \ubaa8\ub4dc\ub97c \ub9cc\ub4dc\uc2e0\ub2e4\uba74 \uadf8 \ubaa8\ub4dc\uac00 \uc5c6\ub294 \uc720\uc800\uac00 \uc11c\ubc84\uc5d0 \ub4e4\uc5b4\uc62c \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 DISPLAYTEST extension point \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc5ec, \uc11c\ubc84\uc5d0 \uc811\uc18d\ud558\uae30 \uc704\ud574 \ubaa8\ub4dc\uac00 \uc694\uad6c\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud558\uace0 \ud638\ud658\ub418\uc9c0 \uc54a\uc74c\uc73c\ub85c \ud45c\uc2dc\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uae30 \uc704\ud574\uc11c\ub294 \ubaa8\ub4dc\uc758 \uc0dd\uc131\uc790\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc740 \uad6c\ubb38\uc744 \uc0ac\uc6a9\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4: //\ubaa8\ub4dc\uac00 \uc5c6\uc5b4\ub3c4 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc11c\ubc84\uac00 \ud638\ud658\ub418\uc9c0 \uc54a\ub294\ub2e4\uace0 \ud45c\uc2dc\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\uc138\uc694. ModLoadingContext.get().registerExtensionPoint(ExtensionPoint.DISPLAYTEST, () -> Pair.of(() -> FMLNetworkConstants.IGNORESERVERONLY, (a, b) -> true)); \uc774\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc11c\ubc84 \ubc84\uc804\uc774 \uc5c6\uc5b4\ub3c4 \ubb34\uc2dc\ud558\ub3c4\ub85d \ud558\uace0, \uc11c\ubc84\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ubaa8\ub4dc \uc124\uce58\ub97c \uc694\uad6c\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \uc704 \ucf54\ub4dc\ub294 \uc11c\ubc84 \uc804\uc6a9 \ub610\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ubaa8\ub4dc \ub458\ub2e4\uc5d0\uc11c \uc791\ub3d9\ud569\ub2c8\ub2e4.","title":"\uc0ac\uc774\ub4dc"},{"location":"concepts/sides/#_1","text":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubaa8\ub4dc\ub97c \uac1c\ubc1c\ud558\uba74\uc11c \uc219\uc9c0\ud574\uc57c \ud560 \ub9e4\uc6b0 \uc911\uc694\ud55c \uac1c\ub150\uc740 \u201c\ud074\ub77c\uc774\uc5b8\ud2b8 \uc0ac\uc774\ub4dc\u201d \uc640 \u201c\uc11c\ubc84 \uc0ac\uc774\ub4dc\u201d \uc785\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud574 \ub9ce\uc740 \uc0ac\ub78c\ub4e4\uc774 \uc624\ud574\ud558\uace0 \uc788\uace0, \uc774\ub85c \uc778\ud574 \uac8c\uc784\uc744 \ud295\uae30\uac8c \ud558\uc9c4 \uc54a\uc9c0\ub9cc \uc608\uae30\uce58 \ubabb\ud55c \ub3d9\uc791\uc744 \ud558\ub3c4\ub85d \ub9cc\ub4e4 \uc218 \uc788\ub294 \ud574\uacb0\ud558\uae30 \uae4c\ub2e4\ub85c\uc6b4 \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \uc0ac\uc774\ub4dc"},{"location":"concepts/sides/#_2","text":"\ub204\uad70\uac00 \u201c\ud074\ub77c\uc774\uc5b8\ud2b8\u201d \ub610\ub294 \u201c\uc11c\ubc84\u201d \uc5d0 \ub300\ud574 \uc774\uc57c\uae30\ud560 \ub54c, \uaf64\ub098 \uc9c1\uad00\uc801\uc73c\ub85c \uac8c\uc784\uc758 \ubb34\uc2a8 \ubd80\ubd84\uc744 \ub73b\ud558\ub294\uc9c0 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub530\uc9c0\uace0 \ubcf4\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \uc720\uc800\uc640 \uc0c1\ud638\uc791\uc6a9 \ud558\ub294 \uac83\uc774\uace0 \uc11c\ubc84\ub294 \uba40\ud2f0 \ud50c\ub808\uc774\ub97c \uc704\ud574 \uc5ec\ub7ec \uc720\uc800\uac00 \uc811\uc18d\ud558\ub294 \uac83\uc774\uc9c0\uc694. \uac04\ub2e8\ud558\ub124\uc694, \uc548\uadf8\ub7f0\uac00\uc694? \uc0ac\uc2e4\uc740 \uadf8\ub807\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc0ac\uc774\ub4dc\ub97c \uad6c\ubd84\ud558\ub294\ub370 \ubaa8\ud638\ud55c \uc810\uc774 \uc788\uc744 \uc218 \uc788\ub294\ub370, \uadf8\ub807\uae30\uc5d0 \uc5ec\uae30 \ud655\uc2e4\ud558\uac8c \u201c\ud074\ub77c\uc774\uc5b8\ud2b8\u201d \ub610\ub294 \u201c\uc11c\ubc84\u201d \uac00 \uac00\uc9c0\ub294 4\uac00\uc9c0 \uc758\ubbf8\ub97c \uc815\ub9ac\ud574 \ub193\uc558\uc2b5\ub2c8\ub2e4: \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 - \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 \ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub97c \ub7f0\ucc98\ub85c \uc2e4\ud589\ud558\uc600\uc744\ub54c \ucf1c\uc9c0\ub294 \ud504\ub85c\uadf8\ub7a8 \uc804\uccb4\ub97c \ub73b\ud569\ub2c8\ub2e4. \uc774\ub294 \ubaa8\ub4e0 \uc2a4\ub808\ub4dc, \ud504\ub85c\uc138\uc2a4, \uadf8\ub798\ud53d\uc744 \ud45c\uc2dc\ud558\ub294 \uc0c1\ud638 \uc791\uc6a9 \uac00\ub2a5\ud55c \uc0dd\uba85\uc8fc\uae30 \ub3d9\uc548 \uc2e4\ud589\ub418\ub294 \uc11c\ube44\uc2a4\ub4e4\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. \ubb3c\ub9ac \uc11c\ubc84 - \uc804\uc6a9 \uc11c\ubc84\ub77c\uace0 \ubd88\ub9ac\uae30\ub3c4 \ud569\ub2c8\ub2e4. \ubb3c\ub9ac \uc11c\ubc84 \ub294 \uc544\ubb34 \uc885\ub958\uc758 \u201cminecraft_server.jar\u201d \uc744 \uc2e4\ud589\ud558\uba74 \ucf1c\uc9c0\ub294, \ud50c\ub808\uc774 \uac00\ub2a5\ud55c GUI \ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\ub294 \ud504\ub85c\uadf8\ub7a8 \uc804\uccb4\ub97c \ub73b\ud569\ub2c8\ub2e4. \ub17c\ub9ac \uc11c\ubc84 - \ub17c\ub9ac \uc11c\ubc84 \ub294 \uac8c\uc784\uc758 \ub17c\ub9ac \uc5f0\uc0b0\uc744 \uc218\ud589\ud558\ub294 \uac83\uc785\ub2c8\ub2e4: \ubaac\uc2a4\ud130 \uc0dd\uc131, \ub0a0\uc528 \uc870\uc808, \uc778\ubca4\ud1a0\ub9ac \uac31\uc2e0, \ucc44\ub825 \uad00\ub9ac, \ubaac\uc2a4\ud130\uc758 \ud589\ub3d9 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub17c\ub9ac \uc11c\ubc84\ub294 \ubb3c\ub9ac \uc11c\ubc84\uc5d0 \uc874\uc7ac\ud558\ub098, \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uac19\uc774 \uc874\uc7ac\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc2f1\uae00 \ud50c\ub808\uc774 \uc6d4\ub4dc\uc5d0\ub294 Server Thread \ub77c\ub294 \uc774\ub984\uc73c\ub85c \ub17c\ub9ac \uc11c\ubc84\uac00 \uacc4\uc18d \uc2e4\ud589\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 - \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 \ub294 \ud50c\ub808\uc774\uc5b4\uc758 \uc785\ub825\uc744 \ubc1b\uace0 \ub17c\ub9ac \uc11c\ubc84\ub85c \uc804\ub2ec\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub610, \ub17c\ub9ac \uc11c\ubc84\ub85c \ubd80\ud130 \uc815\ubcf4\ub97c \ubc1b\uc544 \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \uadf8\ub798\ud53d\uc744 \ud65c\uc6a9\ud574 \ud45c\uc2dc\ud558\uae30\ub3c4 \ud569\ub2c8\ub2e4. \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 Client Thread \ub77c\ub294 \uc774\ub984\uc744 \uac00\uc9c4 \uc2a4\ub808\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4\ub9cc, \uc624\ub514\uc624\ub098 \uccad\ud06c \ubc30\uce6d \ub4f1\uacfc \uac19\uc740 \uc791\uc5c5\ub4e4\uc744 \ucc98\ub9ac\ud558\uae30 \uc704\ud574 \ucd94\uac00\uc801\uc778 \uc2a4\ub808\ub4dc\uac00 \ub354 \uc2e4\ud589\ub429\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0\uc5d0\uc11c\ub294 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\ub97c Dist \uc5f4\uac70\ud615\uc744 \uc0ac\uc6a9\ud574 \ub300\ud45c\ud569\ub2c8\ub2e4, \ub17c\ub9ac \uc0ac\uc774\ub4dc\ub294 LogicalSide \uc5f4\uac70\ud615\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub300\ud45c\ud569\ub2c8\ub2e4.","title":"\uc0ac\uc774\ub4dc\uc758 \uc885\ub958\ub4e4"},{"location":"concepts/sides/#_3","text":"","title":"\uc0ac\uc774\ub4dc\ubcc4 \uc5f0\uc0b0 \uc218\ud589\ud558\uae30"},{"location":"concepts/sides/#worldisclientside","text":"\uc774 boolean \ud544\ub4dc\ub294 \uc0ac\uc774\ub4dc\ub97c \ud655\uc778\ud558\ub294 \ubc29\ubc95\uc911 \uac00\uc7a5 \uc790\uc8fc \uc4f0\uc785\ub2c8\ub2e4. World \uac1d\uccb4\uc5d0 \uc774 \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6d4\ub4dc\uac00 \uc18d\ud558\ub294 \ub17c\ub9ac \uc0ac\uc774\ub4dc\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. true \ub97c \ubc18\ud658\ud558\uba74 \uc6d4\ub4dc\ub294 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\ub2e4\ub294 \uac83\uc774\uace0, false \ub97c \ubc18\ud658\ud558\uba74 \ub17c\ub9ac \uc11c\ubc84\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 \ubb3c\ub9ac \uc11c\ubc84\uc5d0\uc11c\ub294 \ub298 false \ub9cc \ubc18\ud658\ud569\ub2c8\ub2e4. \uadf8\ub807\uc9c0\ub9cc \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ud3ec\ud568\ub41c \ub17c\ub9ac \uc11c\ubc84 \ub610\ud55c false \ub97c \ubc18\ud658\ud558\uae30 \ub54c\ubb38\uc5d0, \uc774 \uba54\uc11c\ub4dc\uac00 false \ub97c \ubc18\ud658\ud55c\ub2e4\uace0 \ud574\uc11c \uc6d4\ub4dc\uac00 \ubb3c\ub9ac \uc11c\ubc84\uc5d0 \uc18d\ud55c\ub2e4\uace0 \uc9d0\uc791\ud558\uc2dc\uba74 \uc548\ub429\ub2c8\ub2e4. \uc774 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ub17c\ub9ac \uc5f0\uc0b0\uc774\ub098 \uac8c\uc784 \uba54\uce74\ub2c9\uc744 \ucc98\ub9ac\ud574\uc57c \ud560\uc9c0\ub97c \uacb0\uc815\ud558\ub3c4\ub85d \ud558\uc138\uc694. \uc608\ub97c \ub4e4\uc5b4, \ud50c\ub808\uc774\uc5b4\uac00 \ube14\ub85d\uc744 \ud074\ub9ad\ud560 \ub54c\ub9c8\ub2e4 \ud53c\ud574\ub97c \uc8fc\uace0 \uc2f6\ub2e4\uba74, \ub610\ub294 \uae30\uacc4\ub97c \uc0ac\uc6a9\ud574 \ud759\uc744 \ub2e4\uc774\uc544\ubaac\ub4dc\ub85c \uac00\uacf5\ud558\uace0 \uc2f6\ub2e4\uba74, #isClientSide \uac00 false \uc784\uc744 \uba3c\uc800 \ud655\uc778\ud55c \uc774\ud6c4 \ub17c\ub9ac \uc5f0\uc0b0\uc744 \uc218\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. \ub17c\ub9ac \uc5f0\uc0b0\uc744 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc218\ud589\ud558\uba74, \uc6b4\uc774 \uc88b\uc740 \uacbd\uc6b0\uc5d4 \ube44\ub3d9\uae30\ud654(\uc720\ub839 \uc5d4\ud2f0\ud2f0, \uc815\ud655\ud558\uc9c0 \uc54a\uc740 \uc2a4\ud0ef \ub4f1)\uac00 \uc77c\uc5b4\ub0a0 \uc218 \uc788\uace0, \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \uac8c\uc784\uc774 \ud295\uae41\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\ub2e4\uba74 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud558\uc138\uc694. DistExecutor \ub97c \uc81c\uc678\ud558\uba74, \uc774\uac70 \ub9d0\uace0 \ub2e4\ub978 \ubc29\ubc95\uc73c\ub85c \uc0ac\uc774\ub4dc\ub97c \ud655\uc778\ud560 \ud544\uc694\uac00 \uac70\uc758 \uc5c6\uc2b5\ub2c8\ub2e4.","title":"World#isClientSide"},{"location":"concepts/sides/#distexecutor","text":"\ubaa8\ub4dc\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uc11c\ubc84\uc5d0\uc11c \ub3d9\uc2dc\uc5d0 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 \ub9cc\ub4e4\uc5b4 \uc9c4\ub2e4\ub294 \uac83\uacfc, \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uc11c\ubc84\ub294 \uc544\uc608 \ub2e4\ub978 jar \ud30c\uc77c\ub85c \uad6c\ubd84\ub41c\ub2e4\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uba74, \uc5b4\ub5bb\uac8c \ud558\ub098\uc758 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\ub9cc \uc874\uc7ac\ud558\ub294 \ucf54\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc744\uc9c0 \uad81\uae08\ud574 \uc9d1\ub2c8\ub2e4. net.minecraft.client \ud328\ud0a4\uc9c0\uc5d0 \ub4e4\uc5b4\uc788\ub294 \ucf54\ub4dc\ub4e4\uc740 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub9cc \uc874\uc7ac\ud569\ub2c8\ub2e4. \ub9cc\uc57d \uc774 \ucf54\ub4dc\ub4e4\uc744 \uc5b4\ub5bb\uac8c\ub4e0 \ucc38\uc870\ud558\ub294 \ud074\ub798\uc2a4\ub97c \uc791\uc131\ud558\uc2dc\uba74, \uadf8 \ucf54\ub4dc\ub4e4\uc774 \uc5c6\ub294 \ud658\uacbd\uc5d0\uc11c \uadf8 \ud074\ub798\uc2a4\uac00 \ubd88\ub7ec\uc640\uc9c8 \ub54c \uac8c\uc784\uc774 \ud295\uae41\ub2c8\ub2e4. \ucd08\ubcf4\ubd84\ub4e4\uc774 \ub9ce\uc774 \ud558\uc2dc\ub294 \uc2e4\uc218\uac00 Minecraft.getInstance().<\ubb34\uc5b8\uac00> \ub97c \ube14\ub85d\uc774\ub098 \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uac83\uc778\ub370, \uc774\ub294 \uadf8 \ud074\ub798\uc2a4\uac00 \ubd88\ub7ec\uc640\uc9c0\ub294 \uadf8 \uc21c\uac04 \uac8c\uc784\uc774 \ud295\uae38 \uac83\uc785\ub2c8\ub2e4. \uc774\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574 FML \uc5d0\uc120 DistExecutor \ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub294 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0 \ub530\ub77c \ub2e4\ub978 \uba54\uc11c\ub4dc\ub97c \uc2e4\ud589\ud558\uac70\ub098, \uc544\uc608 \ud55c\ucabd \uc0ac\uc774\ub4dc\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub420 \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Note \uc219\uc9c0\ud558\uc154\uc57c \ud560 \uc810\uc740 FML \uc740 \ub17c\ub9ac \uc0ac\uc774\ub4dc\ub97c \uc774\uc6a9\ud574 \uc5b8\uc81c \ucf54\ub4dc\ub97c \uc2e4\ud589\ud560\uc9c0\ub97c \uacb0\uc815\ud55c\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uc2f1\uae00 \ud50c\ub808\uc774 \uc6d4\ub4dc(\ub17c\ub9ac \uc11c\ubc84\uc640 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc788\ub294 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8) \uc5d0\uc11c\ub294 Dist.CLIENT \uac00 \uc0ac\uc6a9\ub429\ub2c8\ub2e4! DistExecutor \ub294 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud560 Supplier \ub97c \uc804\ub2ec\ubc1b\ub294 \uac83\uc73c\ub85c \uc791\ub3d9\ud558\ub294\ub370, \uc774\ub294 invokedynamic JVM \uba85\ub839 \uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub798\uc2a4 \ub85c\ub529\uc744 \ub9c9\uc544, \ub7f0\ud0c0\uc784 \ub3c4\uc911 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \ud074\ub798\uc2a4\ub97c \ubd88\ub7ec\uc624\ub824\uace0 \uc2dc\ub3c4\ud558\ub294 \uac83\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4. \uc774\ub54c \ud638\ucd9c\ub420 \uba54\uc11c\ub4dc\ub294 \uc815\uc801 \uba54\uc11c\ub4dc\uc774\uc5b4\uc57c \ud558\uba70 \ub2e4\ub978 \ud074\ub798\uc2a4\uc5d0 \uc815\uc758\ub418\uc5b4 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud574\ub2f9 \uc815\uc801 \uba54\uc11c\ub4dc\uac00 \ubc1b\ub294 \uc778\uc790\uac00 \uc5c6\ub2e4\uba74, Supplier \ub97c \uc804\ub2ec\ud558\uae30 \ubcf4\ub2e8 \uba54\uc11c\ub4dc \ub808\ud37c\ub7f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. DistExecutor \uc5d0\ub294 \ub300\ud45c\uc801\uc73c\ub85c 2\uac1c\uc758 \uba54\uc11c\ub4dc\uac00 \uc788\ub294\ub370: #runWhenOn \uacfc #callWhenOn \uc785\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub4e4\uc740 \uc804\ub2ec\ubc1b\uc740 \uba54\uc11c\ub4dc\ub97c \uc2e4\ud589\ud560 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc640, \uc2e4\ud589\ub420 \uba54\uc11c\ub4dc\ub4e4\uc744 \ubc1b\uc2b5\ub2c8\ub2e4. runWhenOn \uc740 \uacb0\uacfc\ub97c \ubc18\ud658\ud558\uc9c0 \uc54a\uc73c\uba70, callWhenOn \uc740 \uacb0\uacfc\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774\ub54c callWhenOn \uc740 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0 \ub530\ub77c null \uc744 \ubc18\ud658\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ub610, \uc774 \ub450 \uba54\uc11c\ub4dc\ub4e4\uc740 #safe* \uc640 #unsafe* \ub85c \ub2e4\uc2dc \ub098\ub258\ub294\ub370, \uc774\ub54c safe \uc640 unsafe \ub294 \uc774 \uba54\uc11c\ub4dc\ub4e4\uc758 \uc6a9\ub3c4\ub97c \uc798 \ub098\ud0c0\ub0b4\ub294 \uba85\uce6d\uc740 \uc544\ub2d9\ub2c8\ub2e4. #safe* \uc640 #unsafe* \uc758 \uad81\uadf9\uc801\uc778 \ucc28\uc774\uc810\uc740 \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c\uc758 \uae30\ub2a5 \ucc28\uc774\uc785\ub2c8\ub2e4, #safe* \ub294 \uc804\ub2ec\ub41c \ub78c\ub2e4\uac00 \ub2e4\ub978 \uba54\uc11c\ub4dc\uc5d0 \uc815\uc758\ub41c \uba54\uc11c\ub4dc \ub808\ud37c\ub7f0\uc2a4\uc778\uc9c0 \ud655\uc778\ud558\ub294 \uac83\uc785\ub2c8\ub2e4, \ub9cc\uc57d \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b5\ub2c8\ub2e4. \ub9b4\ub9ac\uc988 \ud658\uacbd\uc5d0\uc11c\ub294 #safe* \uc640 #unsafe* \ub294 \uae30\ub2a5\uc0c1 \ub3d9\uc77c\ud569\ub2c8\ub2e4. // \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ud074\ub798\uc2a4\uc18d \uc5b4\ub518\uac00: ExampleClass public static void unsafeRunMethodExample(Object param1, Object param2) { // ... } public static Object safeCallMethodExample() { // ... } // \uacf5\uc6a9 \ud074\ub798\uc2a4 \uc5b4\ub518\uac00 DistExecutor.unsafeRunWhenOn(Dist.CLIENT, () -> ExampleClass.unsafeRunMethodExample(var1, var2)); DistExecutor.safeCallWhenOn(Dist.CLIENT, () -> ExampleClass::safeCallMethodExample);","title":"DistExecutor"},{"location":"concepts/sides/#_4","text":"\ub9cc\uc57d Thread.currentThread().getTHreadGroup() == SidedThreadGroups.Server \uac00 \ucc38\uc774\ub77c\uba74 \uadf8 \uc2a4\ub808\ub4dc\ub294 \ub17c\ub9ac \uc11c\ubc84\ub97c \uc2e4\ud589\ud558\uace0 \uc788\uc744 \uac00\ub2a5\uc131\uc774 \ud07d\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc2e4\ud589\ud560 \uac00\ub2a5\uc131\uc774 \ud07d\ub2c8\ub2e4. \uc774\ub294 World \uac1d\uccb4\uc5d0 \uc811\uadfc\ud560 \uc218 \uc5c6\uc744\ub54c \ub17c\ub9ac \uc0ac\uc774\ub4dc\ub97c \ud655\uc778\ud558\ub294\ub370 \uc720\uc6a9\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc774\ub294 \ud655\uc2e4\ud558\uac8c \ud655\uc778\ud558\ub294 \uac83\uc774 \uc544\ub2cc \ud604\uc7ac \uc2e4\ud589\uc911\uc778 \uc2a4\ub808\ub4dc\uc758 \uadf8\ub8f9\uc744 \ube44\uad50\ud558\uc5ec \uc9d0\uc791\ud558\ub294 \uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \uac00\ub2a5\ud558\uba74 \uc0ac\uc6a9\ud558\uc2dc\uc9c0 \uc54a\ub294 \uac83\uc744 \uad8c\uc7a5\ub4dc\ub9bd\ub2c8\ub2e4\u3163. \ub300\uc2e0 World#isClientSide \ub97c \uac00\ub2a5\ud558\uba74 \uc0ac\uc6a9\ud558\uc138\uc694.","title":"\uc2a4\ub808\ub4dc \uadf8\ub8f9"},{"location":"concepts/sides/#fmlenvironmentdist-onlyin","text":"FMLEnvironment#dist \ub294 \ud604\uc7ac \ucf54\ub4dc\uac00 \uc2e4\ud589\ub418\uace0 \uc788\ub294 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\ub97c \uc800\uc7a5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uac12\uc740 \ud504\ub85c\uadf8\ub7a8\uc774 \uc2dc\uc791\ub420 \ub54c \uacb0\uc815\ub418\uae30 \ub54c\ubb38\uc5d0 \uc9d0\uc791\ud558\uc9c0 \uc54a\uace0 \ud655\uc2e4\ud55c \uac12\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc774\ub97c \uc2e4\uc81c\ub85c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\ub294 \ub4dc\ubb45\ub2c8\ub2e4. \uba54\uc11c\ub4dc\ub098 \ud544\ub4dc\uc5d0 @OnlyIn(Dist) \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uba74, \uac8c\uc784\uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc5d0 \uc804\ub2ec\ub41c \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\uc9c0 \uc54a\ub2e4\uba74, \uc774 \uba64\ubc84\ub4e4\uc774 \ubd88\ub7ec\uc640\uc9c0\ub294 \uacfc\uc815\uc5d0\uc11c \uc815\uc758 \uc790\uccb4\uac00 \uc544\uc608 \uc81c\uac70\ub418\uc5b4\uc57c \ud568\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ub514\ucef4\ud30c\uc77c\ub41c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ucf54\ub4dc\uc5d0\uc11c \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc790\uc8fc \uc774\uc6a9\ub418\ub294\ub370, \uc774\ub294 \ubaa8\uc7a5\uc5d0\uc11c \ub09c\ub3c5\ud654\ub97c \uc9c4\ud589\ud558\uba70 \uc81c\uac70\ud55c \uba54\uc11c\ub4dc\ub4e4\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc4f0\uc785\ub2c8\ub2e4. \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc9c1\uc811 \uc0ac\uc6a9\ud560 \uc774\uc720\ub294 \uc544\uc608 \uc5c6\uc73c\uba70 , \ub300\uc2e0 DistExecutor \ub610\ub294 FMLEnviroment#dist \ub97c \uc0ac\uc6a9\ud558\uc138\uc694.","title":"FMLEnvironment#dist \uc640 @OnlyIn"},{"location":"concepts/sides/#_5","text":"","title":"\uc790\uc8fc\ud558\ub294 \uc2e4\uc218\ub4e4"},{"location":"concepts/sides/#_6","text":"\ud55c\ucabd \ub17c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\uc11c \ubc18\ub300\ucabd\uc73c\ub85c \uc815\ubcf4\ub97c \ubcf4\ub0b4\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74, \uc5b8\uc81c\ub098 \ub124\ud2b8\uc6cc\ud06c \ud328\ud0b7\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\ub2ec\ud558\ub3c4\ub85d \ud558\uc138\uc694. \uc0ac\uc2e4 \uc2f1\uae00 \ud50c\ub808\uc774\uc5d0\uc11c \uc0ac\uc774\ub4dc\ub97c \uac00\ub85c\uc9c8\ub7ec \uc815\ubcf4\ub97c \uc9c1\uc811\uc801\uc73c\ub85c \ubcf4\ub0b4\ub294 \uac83\uc774 \uc88b\uc544\ubcf4\uc77c \uc218\ub294 \uc788\uc2b5\ub2c8\ub2e4. \uacc4\ub2e4\uac00 \uc774\ub294 \ub9ce\uc740 \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc774 \uc815\uc801 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc2f1\uae00 \ud50c\ub808\uc774\uc5d0\uc11c\ub294 \ub17c\ub9ac \uc11c\ubc84\uc640 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uac19\uc740 JVM \uc5d0\uc11c \uc2e4\ud589\ub418\uae30 \ub54c\ubb38\uc5d0, \uc2a4\ub808\ub4dc 2\uac1c\uac00 \uc815\uc801 \ud544\ub4dc \ud558\ub098\ub97c \uc77d\uace0 \uc4f0\ub294 \uac83\uc740 \uacbd\uc7c1 \uc0c1\ud0dc\ub97c \uc720\ubc1c\ud560 \uc218 \uc788\uc73c\uba70 \uc2a4\ub808\ub4dc\uc640 \uad00\ub828\ub41c \uc5ec\ub7ec \uace0\uc9c8\uc801\uc778 \ubb38\uc81c\ub4e4\uc744 \uc77c\uc73c\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610, Minecraft \ud074\ub798\uc2a4\uc640 \uac19\uc774 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ucf54\ub4dc\ub97c, \uc591\ucabd \uc0ac\uc774\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uac70\ub098, \ub610\ub294 \ub17c\ub9ac \uc11c\ubc84\uc5d0\uc11c \uc811\uadfc\ud558\ub294 \uac83 \ub610\ud55c \uc0ac\uc774\ub4dc\ub97c \uac00\ub85c\uc9c0\ub974\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ub294 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \ub514\ubc84\uadf8\ub97c \ud558\ub294 \ucd08\ubcf4\uc790 \ubd84\ub4e4\uc774 \ub193\uce58\uae30 \uc26c\uc6b4 \uac83\uc785\ub2c8\ub2e4. \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc791\ub3d9\uc740 \ub418\uaca0\uc9c0\ub9cc \ubb3c\ub9ac \uc11c\ubc84\uc5d0\uc11c\ub294 \ubc14\ub85c \ud295\uae41\ub2c8\ub2e4.","title":"\ub17c\ub9ac \uc0ac\uc774\ub4dc \uac00\ub85c\uc9c0\ub974\uae30"},{"location":"concepts/sides/#_7","text":"\ucd5c\uadfc \ucd9c\uc2dc\ub41c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc5d0\uc11c \ud3ec\uc9c0\ub294 \u201csideness\u201d \uc18d\uc131\uc744 mods.toml \uc5d0\uc11c \uc81c\uac70\ud558\uc600\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \ub9d0\ud574\uc11c \ubaa8\ub4dc\ub97c \ubb3c\ub9ac \uc11c\ubc84\uc5d0 \uc124\uce58\ud558\ub4e0 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc124\uce58\ud558\ub4e0 \uc791\ub3d9\uc740 \ud574\uc57c \ud55c\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \ud55c\ucabd \uc0ac\uc774\ub4dc\ub9cc\uc744 \uc704\ud55c \ubaa8\ub4dc\ub97c \ub9cc\ub4dc\uc2e0\ub2e4\uba74 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \uc9c1\uc811\uc801\uc73c\ub85c \ub4f1\ub85d\ud558\uae30 \ubcf4\ub2e8 DistExecutor#safeRunWhenOn \ub610\ub294 DistExecutor#unsafeRunWhenOn \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub4f1\ub85d\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud558\uc5ec \ub9cc\uc57d \ubaa8\ub4dc\uac00 \uc798\ubabb\ub41c \uc0ac\uc774\ub4dc\uc5d0 \uc124\uce58\ub418\uc5c8\ub2e4\uba74 \uc874\uc7ac\ub294 \ud558\uc9c0\ub9cc \uc544\ubb34\uac83\ub3c4 \uc548\ud558\ub3c4\ub85d \ud558\ub294 \uac83\uc774\uc9c0\uc694. \uc774\ub7ec\ud55c \ubaa8\ub4dc\ub4e4\uc740 \ube14\ub85d\uc774\ub098 \uc5d4\ud2f0\ud2f0, \uc544\uc774\ud15c \ub4f1\uc744 \ub4f1\ub85d\ud558\uba74 \uc548\ub429\ub2c8\ub2e4, \uc65c\ub0d0\ud558\uba74 \uc774\ub7ec\ud55c \uac83\ub4e4\uc740 \ubc18\ub300\ucabd \uc0ac\uc774\ub4dc\uc5d0\ub3c4 \uc874\uc7ac\ud574\uc57c \ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ucd94\uac00\uc801\uc73c\ub85c \ud55c\ucabd \uc0ac\uc774\ub4dc \uc804\uc6a9 \ubaa8\ub4dc\ub97c \ub9cc\ub4dc\uc2e0\ub2e4\uba74 \uadf8 \ubaa8\ub4dc\uac00 \uc5c6\ub294 \uc720\uc800\uac00 \uc11c\ubc84\uc5d0 \ub4e4\uc5b4\uc62c \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 DISPLAYTEST extension point \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc5ec, \uc11c\ubc84\uc5d0 \uc811\uc18d\ud558\uae30 \uc704\ud574 \ubaa8\ub4dc\uac00 \uc694\uad6c\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud558\uace0 \ud638\ud658\ub418\uc9c0 \uc54a\uc74c\uc73c\ub85c \ud45c\uc2dc\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uae30 \uc704\ud574\uc11c\ub294 \ubaa8\ub4dc\uc758 \uc0dd\uc131\uc790\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc740 \uad6c\ubb38\uc744 \uc0ac\uc6a9\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4: //\ubaa8\ub4dc\uac00 \uc5c6\uc5b4\ub3c4 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc11c\ubc84\uac00 \ud638\ud658\ub418\uc9c0 \uc54a\ub294\ub2e4\uace0 \ud45c\uc2dc\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\uc138\uc694. ModLoadingContext.get().registerExtensionPoint(ExtensionPoint.DISPLAYTEST, () -> Pair.of(() -> FMLNetworkConstants.IGNORESERVERONLY, (a, b) -> true)); \uc774\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc11c\ubc84 \ubc84\uc804\uc774 \uc5c6\uc5b4\ub3c4 \ubb34\uc2dc\ud558\ub3c4\ub85d \ud558\uace0, \uc11c\ubc84\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ubaa8\ub4dc \uc124\uce58\ub97c \uc694\uad6c\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \uc704 \ucf54\ub4dc\ub294 \uc11c\ubc84 \uc804\uc6a9 \ub610\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ubaa8\ub4dc \ub458\ub2e4\uc5d0\uc11c \uc791\ub3d9\ud569\ub2c8\ub2e4.","title":"\ud55c\ucabd \uc0ac\uc774\ub4dc \uc804\uc6a9 \ubaa8\ub4dc \ub9cc\ub4e4\uae30"},{"location":"conventions/loadstages/","text":"Loading Stages The Forge loading process has four main phases. All of these events shown are fired on the mod-specific eventbus, not the global Forge event bus MinecraftForge#EVENT_BUS . Event handlers should be registered : @Mod(\"mymod\") public class MyMod { public MyMod() { FMLModLoadingContext.get().getModEventBus().registerListener(this::commonSetup); } private void commonSetup(FMLCommonSetupEvent evt) { ... } } Warning All four of the below events are called for all mods in parallel, meaning they are all a subclass of ParallelDispatchEvent . That is, all mods will concurrently receive common setup, FML will wait for them all to finish, then all mods will concurrently receive sided setup, and so forth. Mods must take care to be thread safe, especially when calling other mods\u2019 APIs and accessing Vanilla systems, which are not thread safe in general. This can be done by calling #enqueueWork on the event parameter. Setup FMLCommonSetupEvent is the first to fire early in the Minecraft starting process. Registry events are fired before this event, so you can expect all registry objects to be valid by the time this runs. Common actions to perform in common setup are: Utilizing the common config data Registering Capabilities Sided Setup FMLClientSetupEvent and FMLDedicatedServerSetupEvent are fired after common setup, and are where physical, side-specific initialization should occur. Common actions to perform here are registering client-side only things such as key bindings. IMC Enqueue Here, mods should send messages to all other mods they are interested in integrating with, using InterModComms#sendTo . IMC Process Here, mods should process all the messages they have received from other mods and set up integrations appropriately. A mod may retrieve the messages that have been sent to it using #getIMCStream located within the event.","title":"Loadstages"},{"location":"conventions/loadstages/#loading-stages","text":"The Forge loading process has four main phases. All of these events shown are fired on the mod-specific eventbus, not the global Forge event bus MinecraftForge#EVENT_BUS . Event handlers should be registered : @Mod(\"mymod\") public class MyMod { public MyMod() { FMLModLoadingContext.get().getModEventBus().registerListener(this::commonSetup); } private void commonSetup(FMLCommonSetupEvent evt) { ... } } Warning All four of the below events are called for all mods in parallel, meaning they are all a subclass of ParallelDispatchEvent . That is, all mods will concurrently receive common setup, FML will wait for them all to finish, then all mods will concurrently receive sided setup, and so forth. Mods must take care to be thread safe, especially when calling other mods\u2019 APIs and accessing Vanilla systems, which are not thread safe in general. This can be done by calling #enqueueWork on the event parameter.","title":"Loading Stages"},{"location":"conventions/loadstages/#setup","text":"FMLCommonSetupEvent is the first to fire early in the Minecraft starting process. Registry events are fired before this event, so you can expect all registry objects to be valid by the time this runs. Common actions to perform in common setup are: Utilizing the common config data Registering Capabilities","title":"Setup"},{"location":"conventions/loadstages/#sided-setup","text":"FMLClientSetupEvent and FMLDedicatedServerSetupEvent are fired after common setup, and are where physical, side-specific initialization should occur. Common actions to perform here are registering client-side only things such as key bindings.","title":"Sided Setup"},{"location":"conventions/loadstages/#imc-enqueue","text":"Here, mods should send messages to all other mods they are interested in integrating with, using InterModComms#sendTo .","title":"IMC Enqueue"},{"location":"conventions/loadstages/#imc-process","text":"Here, mods should process all the messages they have received from other mods and set up integrations appropriately. A mod may retrieve the messages that have been sent to it using #getIMCStream located within the event.","title":"IMC Process"},{"location":"conventions/locations/","text":"\ud30c\uc77c \uc704\uce58 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ud14d\uc2a4\uccd0\ub098 JSON \uacfc \uac19\uc740 \ud2b9\uc815 \ud504\ub85c\uc81d\ud2b8 \ud30c\uc77c\ub4e4\uc774 \ud2b9\uc815 \uc704\uce58\uc5d0 \uae30\ub300\ud569\ub2c8\ub2e4. \uc774 \ud398\uc774\uc9c0\uc5d0\uc11c \ub2e4\ub8e8\ub294 \uc704\uce58\ub4e4\uc740 src/main/resources \uc5d0\uc11c \uc2dc\uc791\ud558\ub294 \uc0c1\ub300 \uc8fc\uc18c\uc785\ub2c8\ub2e4. mods.toml mods.toml \ud30c\uc77c\uc740 ./META-INF/ \uc5d0 \uc788\uc2b5\ub2c8\ub2e4. Blockstate BlockState \uc815\uc758 \ud30c\uc77c\ub4e4\uc740 ./assets/<modid>/blockstates/ \uc5d0 \uc788\ub294 JSON \ub4e4 \uc785\ub2c8\ub2e4. \ud604\uc9c0\ud654 \ud604\uc9c0\ud654 \ud30c\uc77c\ub4e4\uc740 \uc18c\ubb38\uc790 \uad6d\uac00 \ucf54\ub4dc \ub97c \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294 JSON \ub4e4 \uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc601\uc5b4\ub294 en_us.json , \ud55c\uad6d\uc5b4\ub294 ko_kr.json \uc785\ub2c8\ub2e4. \uc774 \ud30c\uc77c\ub4e4\uc740 ./assets/<modid>/lang/ \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4. \ubaa8\ub378 \ubaa8\ub378 \ud30c\uc77c\ub4e4\uc740 \uc544\uc774\ud15c \ubaa8\ub378\uc774\ub0d0 \ube14\ub85d \ubaa8\ub378\uc774\ub0d0\uc5d0 \ub530\ub77c ./assets/<modid>/models/block/ \ub610\ub294 ./assets/<modid>/models/item/ \uc5d0 \uc874\uc7ac\ud558\ub294 JSON \ub4e4 \uc785\ub2c8\ub2e4. \ud14d\uc2a4\uccd0 \ud14d\uc2a4\uccd0\ub4e4\uc740 \uc544\uc774\ud15c \ud14d\uc2a4\uccd0\ub0d0 \ube14\ub85d \ud14d\uc2a4\uccd0\ub0d0\uc5d0 \ub530\ub77c ./assets/<modid>/textures/block/ \ub610\ub294 ./assets/<modid>/textures/item/ \uc5d0 \uc874\uc7ac\ud558\ub294 PNG \ub4e4 \uc785\ub2c8\ub2e4. \uc870\ud569\ubc95 \uc870\ud569\ubc95 \uc740 ./data/<modid>/recipes/ \uc5d0 \uc874\uc7ac\ud558\ub294 JSON \ub4e4 \uc785\ub2c8\ub2e4.","title":"\ud30c\uc77c \uc704\uce58"},{"location":"conventions/locations/#_1","text":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ud14d\uc2a4\uccd0\ub098 JSON \uacfc \uac19\uc740 \ud2b9\uc815 \ud504\ub85c\uc81d\ud2b8 \ud30c\uc77c\ub4e4\uc774 \ud2b9\uc815 \uc704\uce58\uc5d0 \uae30\ub300\ud569\ub2c8\ub2e4. \uc774 \ud398\uc774\uc9c0\uc5d0\uc11c \ub2e4\ub8e8\ub294 \uc704\uce58\ub4e4\uc740 src/main/resources \uc5d0\uc11c \uc2dc\uc791\ud558\ub294 \uc0c1\ub300 \uc8fc\uc18c\uc785\ub2c8\ub2e4.","title":"\ud30c\uc77c \uc704\uce58"},{"location":"conventions/locations/#modstoml","text":"mods.toml \ud30c\uc77c\uc740 ./META-INF/ \uc5d0 \uc788\uc2b5\ub2c8\ub2e4.","title":"mods.toml"},{"location":"conventions/locations/#blockstate","text":"BlockState \uc815\uc758 \ud30c\uc77c\ub4e4\uc740 ./assets/<modid>/blockstates/ \uc5d0 \uc788\ub294 JSON \ub4e4 \uc785\ub2c8\ub2e4.","title":"Blockstate"},{"location":"conventions/locations/#_2","text":"\ud604\uc9c0\ud654 \ud30c\uc77c\ub4e4\uc740 \uc18c\ubb38\uc790 \uad6d\uac00 \ucf54\ub4dc \ub97c \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294 JSON \ub4e4 \uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc601\uc5b4\ub294 en_us.json , \ud55c\uad6d\uc5b4\ub294 ko_kr.json \uc785\ub2c8\ub2e4. \uc774 \ud30c\uc77c\ub4e4\uc740 ./assets/<modid>/lang/ \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4.","title":"\ud604\uc9c0\ud654"},{"location":"conventions/locations/#_3","text":"\ubaa8\ub378 \ud30c\uc77c\ub4e4\uc740 \uc544\uc774\ud15c \ubaa8\ub378\uc774\ub0d0 \ube14\ub85d \ubaa8\ub378\uc774\ub0d0\uc5d0 \ub530\ub77c ./assets/<modid>/models/block/ \ub610\ub294 ./assets/<modid>/models/item/ \uc5d0 \uc874\uc7ac\ud558\ub294 JSON \ub4e4 \uc785\ub2c8\ub2e4.","title":"\ubaa8\ub378"},{"location":"conventions/locations/#_4","text":"\ud14d\uc2a4\uccd0\ub4e4\uc740 \uc544\uc774\ud15c \ud14d\uc2a4\uccd0\ub0d0 \ube14\ub85d \ud14d\uc2a4\uccd0\ub0d0\uc5d0 \ub530\ub77c ./assets/<modid>/textures/block/ \ub610\ub294 ./assets/<modid>/textures/item/ \uc5d0 \uc874\uc7ac\ud558\ub294 PNG \ub4e4 \uc785\ub2c8\ub2e4.","title":"\ud14d\uc2a4\uccd0"},{"location":"conventions/locations/#_5","text":"\uc870\ud569\ubc95 \uc740 ./data/<modid>/recipes/ \uc5d0 \uc874\uc7ac\ud558\ub294 JSON \ub4e4 \uc785\ub2c8\ub2e4.","title":"\uc870\ud569\ubc95"},{"location":"conventions/versioning/","text":"\ubc84\uc804 \uba85\uba85 \uc77c\ubc18\uc801\uc73c\ub85c \ud504\ub85c\uc81d\ud2b8\ub4e4\uc740 \uc720\uc758\uc801 \ubc84\uc804 \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4(\uc774\ub294 MAJOR.MINOR.PATH \ud3ec\ub9f7\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4). \uadf8\ub7ec\ub098 \ubaa8\ub4dc \uac1c\ubc1c\uc5d0 \uc788\uc5b4\uc11c\ub294 MCVERSION-MAJORMOD.MAJORAPI.MINOR.PATH \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6d4\ub4dc\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uac70\ub098 API \uc640 \ub354\uc774\uc0c1 \ud638\ud658\ub418\uc9c0 \uc54a\ub294 \ubcc0\uacbd\uc810\uc744 \uad6c\ubd84\ud558\ub294 \uac83\uc774 \ub354 \ub098\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\uc2dc \ub2e4\uc74c \uc0c1\ud669\ub4e4\uc740 \uc704\uc5d0\uc11c \ub9d0\ud55c \ud3ec\ub9f7\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ubcc0\uc218\ub4e4\uc758 \uac12\uc774 \uc99d\uac00\ud560 \ub54c \uc785\ub2c8\ub2e4: MCVERSION \ubaa8\ub4dc\uac00 \ub9cc\ub4e4\uc5b4\uc9c4 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uacfc \ub3d9\uc77c\ud574\uc57c \ud569\ub2c8\ub2e4. MAJORMOD \uc544\uc774\ud15c, \ube14\ub85d \ub610\ub294 \ud0c0\uc77c \uc5d4\ud2f0\ud2f0 \uc0ad\uc81c. \uae30\uc874\uc5d0 \uc788\ub358 \uba54\uce74\ub2c9 \ubcc0\uacbd \ub610\ub294 \uc0ad\uc81c. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 \uc5c5\ub370\uc774\ud2b8. MAJORAPI \uc5f4\uac70\ud615\uc758 \ubcc0\uc218 \ub610\ub294 \uc21c\uc11c \ubcc0\uacbd. \uba54\uc11c\ub4dc \ubc18\ud658 \ud0c0\uc785 \ubcc0\uacbd. public \uba54\uc11c\ub4dc \uc0ad\uc81c. MINOR \uc0c8\ub85c\uc6b4 \uc544\uc774\ud15c, \ube14\ub85d, \ud0c0\uc77c \uc5d4\ud2f0\ud2f0 \ub4f1 \ucd94\uac00. \uc0c8\ub85c\uc6b4 \uba54\uce74\ub2c9 \ucd94\uac00. public \uba54\uc11c\ub4dc\uc5d0 @Deprecated \uc5b4\ub178\ud14c\uc774\uc158 \ucd94\uac00. ( MAJORAPI \uac00 \uc544\ub2cc \uc774\uc720\ub294 \ud638\ud658\uc131\uc774 \uc720\uc9c0\ub418\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.) PATCH \ubc84\uadf8 \ud328\uce58. \uc717 \ubcc0\uc218\uc911 \ud558\ub098\ub77c\ub3c4 \uac12\uc774 \uc99d\uac00\ud558\uba74 \uadf8 \ub4a4\uc5d0 \ub530\ub77c\uc624\ub294 \ubcc0\uc218\ub4e4\uc758 \uac12\uc740 0 \uc73c\ub85c \ubcc0\uacbd\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, MINOR \uac12\uc774 \uc99d\uac00\ud560 \uc2dc PATCh \ub294 0 \uc774 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub9cc\uc57d MAJORMOD \uac12\uc774 \uc99d\uac00\ud558\uba74 \uadf8 \ub4a4\uc5d0 \ub530\ub77c\uc624\ub294 \ubaa8\ub4e0 \ubcc0\uc218\ub4e4\uc740 0 \uc774 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc791\uc5c5\uc911\uc778 \ubaa8\ub4dc \ubaa8\ub4dc \uac1c\ubc1c \ucd08\uae30\uc5d0\ub294 \ub298 MAJORMOD \uc640 MAJORAPI \uac00 0 \uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. MINOR \uc640 PATCH \ub9cc \ube4c\ub4dc\ub9c8\ub2e4 \uc99d\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. \uc5ec\ub7ec \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 \ub9cc\uc57d \ubaa8\ub4dc\uac00 \uc0c8\ub85c\uc6b4 \ubc84\uc804\uc758 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ub418\uace0, \uc774\uc804 \ubc84\uc804\uc740 \ubc84\uadf8 \ud328\uce58\ub9cc \uc774\ub8e8\uc5b4 \uc9c4\ub2e4\uace0 \ud560 \ub54c, PATCH \ub294 \uc5c5\uadf8\ub808\uc774\ub4dc \uc774\uc804 \ubc84\uc804 \uac12\uc5d0\uc11c \uc2dc\uc791\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ubaa8\ub4dc\uac00 \uc774\uc804 \ubc84\uc804\uacfc \uc0c8 \ubc84\uc804 \ub458\ub2e4 \uc9c0\uc6d0\ud558\uba70 \uc801\uadf9\uc801\uc778 \uac1c\ubc1c\uc774 \uc774\ub8e8\uc5b4 \uc9c4\ub2e4\uba74 \ubaa8\ub4dc \ubc84\uc804 \uc55e\uc5d0 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc744 \ucd94\uac00\ud558\uc2dc\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ubc84\uc804 3.0.0.0 \uc778 \ubaa8\ub4dc\uac00 \uc0c8\ub85c\uc6b4 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc \ud55c\ub2e4\uba74, \uc774\uc804 \ubc84\uc804\uc758 \ubaa8\ub4dc \ub610\ud55c \ubc84\uc804 3.0.0.0 \uc73c\ub85c \ub2e4\uc74c \uc608\uc2dc\uc640 \uac19\uc774 \uc5c5\ub370\uc774\ud2b8 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4: 1.7.10-3.0.0.0 , \uadf8\ub9ac\uace0 \uc0c8\ub85c\uc6b4 \ubc84\uc804\uc740 \ub2e4\uc74c \uc608\uc2dc\uc640 \uac19\uc2b5\ub2c8\ub2e4: 1.8-3.0.0.0 . \ub9cc\uc57d \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 \uc5c5\ub370\uc774\ud2b8 \ub9d0\uace0 \ucd94\uac00\uc801\uc778 \ubcc0\uacbd \uc0ac\ud56d\uc774 \uc5c6\ub2e4\uba74 \uc55e\uc758 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc744 \uc81c\uc678\ud558\uace0\ub294 \ubc84\uc804\uc774 \ub3d9\uc77c\ud574\uc57c \ud569\ub2c8\ub2e4. \ucd5c\uc885 \ub9b4\ub9ac\uc988 \ud2b9\uc815 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 \uc9c0\uc6d0\uc744 \uc911\ub2e8\ud560 \ub54c\ub294 \uadf8 \ub9c8\uc9c0\ub9c9 \ube4c\ub4dc\uc5d0 -final \uc811\ubbf8\uc0ac\ub97c \ubd99\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 \uc774 \ubaa8\ub4dc\uac00 \ub354 \uc774\uc0c1 \uc9c0\uc6d0\uc744 \ubc1b\uc9c0 \uc54a\uc744 \uac83\uc774\uba70 \uc5c5\ub370\uc774\ud2b8\uc640 \ubc84\uadf8 \ud328\uce58\ub97c \ubc1b\uae30 \uc704\ud574\uc11c\ub294 \uc0c8\ub85c\uc6b4 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc \ud558\uc5ec\uc57c \ud568\uc744 \ub73b\ud569\ub2c8\ub2e4. \uc2dc\ud5d8 \ub9b4\ub9ac\uc988 \uc544\uc9c1 \uac1c\ubc1c\uc911\uc778 \uae30\ub2a5\uc744 \uc2dc\ud5d8\ud310\ucc98\ub7fc \ubc30\ud3ec\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4, \uc774\ub294 \ud558\ub098\uc758 \u201c\ubca0\ud0c0\u201d \ud14c\uc2a4\ud2b8 \ucc98\ub7fc \ubcfc \uc218 \uc788\uc73c\uba70 \ubc84\uc804\uc5d0 -betaX \uc811\ubbf8\uc0ac\ub97c \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4, \uc774\ub54c X \ub294 \ucd9c\uc2dc\ub41c \uc2dc\ud5d8\ud310 \uac2f\uc218 \uc785\ub2c8\ub2e4.(\uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294 \ud604\uc7ac\ub85c\uc36c -pre \ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4, \uc774\ub294 -beta \uc758 \uc774\uba85\uc774 \uc544\ub2d9\ub2c8\ub2e4). \uc774\ubbf8 \ucd9c\uc2dc\ub41c \ubc84\uc804 \ub610\ub294 \ucd08\uae30 \ub9b4\ub9ac\uc988 \uc774\uc804\uc5d0 \uc0ac\uc6a9\ud55c \ubc84\uc804\ub4e4\uc740 \uc2dc\ud5d8\ud310 \ubc84\uc804\uc73c\ub85c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4; \uadf8\ub807\uae30\uc5d0 \ubc84\uc804 \ubcc0\uc218\ub97c \ub97c -beta \uc811\ubbf8\uc0ac\ub97c \ubd99\uc774\uae30 \uc774\uc804\uc5d0 \uc62c\ubc14\ub974\uac8c \ubcc0\uacbd\ud558\uc154\uc57c \ud569\ub2c8\ub2e4(\uc774\ub54c \uc77c\ubc18\uc801\uc73c\ub85c MINOR \ub9cc \ubcc0\uacbd\ud558\uc9c0\ub9cc MAJOR \ub610\ub294 MAJORMOD \ub610\ud55c \ubcc0\uacbd\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4). \ucd08\uae30 \ub9b4\ub9ac\uc988 \uc774\uc804 \ube4c\ub4dc\ub4e4\uc740 \uc791\uc5c5\uc911\uc778 \ube4c\ub4dc\uc785\ub2c8\ub2e4. \ucd9c\uc2dc \ud6c4\ubcf4 \ucd9c\uc2dc \ud6c4\ubcf4\ub294 \uc2e4\uc81c\ub85c \ubc84\uc804\uc744 \ubcc0\uacbd\ud558\uae30 \uc774\uc804\uc5d0 \ucd9c\uc2dc\ud558\ub294 \uc2dc\ud5d8\ud310\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc774 \ubc84\uc804\ub4e4\uc740 -rcX \uc811\ubbf8\uc0ac\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud558\uba70, \uc774\ub54c X \ub294 \ucd9c\uc2dc \ud6c4\ubcf4 \uac2f\uc218\uc785\ub2c8\ub2e4, \uc774 \uac12\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \ubc84\uadf8 \ud328\uce58 \ud560\ub54c\ub9cc \uc99d\uac00\ub429\ub2c8\ub2e4. \uc774\ubbf8 \ucd9c\uc2dc\ub41c \ubc84\uc804\uc740 \ucd9c\uc2dc \ud6c4\ubcf4\ub97c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4; \uadf8\ub807\uae30\uc5d0 \ubc84\uc804 \ubcc0\uc218\ub97c rc \uc811\ubbf8\uc0ac\ub97c \ubd99\uc774\uae30 \uc774\uc804\uc5d0 \uc62c\ubc14\ub974\uac8c \ubcc0\uacbd\ud558\uc154\uc57c \ud569\ub2c8\ub2e4(\uc774\ub54c \uc77c\ubc18\uc801\uc73c\ub85c MINOR \ub9cc \ubcc0\uacbd\ud558\uc9c0\ub9cc MAJOR \ub610\ub294 MAJORMOD \ub610\ud55c \ubcc0\uacbd\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4). \ucd9c\uc2dc \ud6c4\ubcf4\ub97c \uc548\uc815 \ube4c\ub4dc\ub85c \ub9b4\ub9ac\uc988 \ud560\ub54c \ub9c8\uc9c0\ub9c9 \ucd9c\uc2dc \ud6c4\ubcf4\uc640 \uc644\uc804\ud788 \ub611\uac19\uac70\ub098 \uba87\uba87 \ubc84\uadf8 \ud328\uce58\ub97c \ud3ec\ud568\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubc84\uc804 \uba85\uba85"},{"location":"conventions/versioning/#_1","text":"\uc77c\ubc18\uc801\uc73c\ub85c \ud504\ub85c\uc81d\ud2b8\ub4e4\uc740 \uc720\uc758\uc801 \ubc84\uc804 \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4(\uc774\ub294 MAJOR.MINOR.PATH \ud3ec\ub9f7\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4). \uadf8\ub7ec\ub098 \ubaa8\ub4dc \uac1c\ubc1c\uc5d0 \uc788\uc5b4\uc11c\ub294 MCVERSION-MAJORMOD.MAJORAPI.MINOR.PATH \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6d4\ub4dc\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uac70\ub098 API \uc640 \ub354\uc774\uc0c1 \ud638\ud658\ub418\uc9c0 \uc54a\ub294 \ubcc0\uacbd\uc810\uc744 \uad6c\ubd84\ud558\ub294 \uac83\uc774 \ub354 \ub098\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubc84\uc804 \uba85\uba85"},{"location":"conventions/versioning/#_2","text":"\ub2e4\uc74c \uc0c1\ud669\ub4e4\uc740 \uc704\uc5d0\uc11c \ub9d0\ud55c \ud3ec\ub9f7\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ubcc0\uc218\ub4e4\uc758 \uac12\uc774 \uc99d\uac00\ud560 \ub54c \uc785\ub2c8\ub2e4: MCVERSION \ubaa8\ub4dc\uac00 \ub9cc\ub4e4\uc5b4\uc9c4 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uacfc \ub3d9\uc77c\ud574\uc57c \ud569\ub2c8\ub2e4. MAJORMOD \uc544\uc774\ud15c, \ube14\ub85d \ub610\ub294 \ud0c0\uc77c \uc5d4\ud2f0\ud2f0 \uc0ad\uc81c. \uae30\uc874\uc5d0 \uc788\ub358 \uba54\uce74\ub2c9 \ubcc0\uacbd \ub610\ub294 \uc0ad\uc81c. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 \uc5c5\ub370\uc774\ud2b8. MAJORAPI \uc5f4\uac70\ud615\uc758 \ubcc0\uc218 \ub610\ub294 \uc21c\uc11c \ubcc0\uacbd. \uba54\uc11c\ub4dc \ubc18\ud658 \ud0c0\uc785 \ubcc0\uacbd. public \uba54\uc11c\ub4dc \uc0ad\uc81c. MINOR \uc0c8\ub85c\uc6b4 \uc544\uc774\ud15c, \ube14\ub85d, \ud0c0\uc77c \uc5d4\ud2f0\ud2f0 \ub4f1 \ucd94\uac00. \uc0c8\ub85c\uc6b4 \uba54\uce74\ub2c9 \ucd94\uac00. public \uba54\uc11c\ub4dc\uc5d0 @Deprecated \uc5b4\ub178\ud14c\uc774\uc158 \ucd94\uac00. ( MAJORAPI \uac00 \uc544\ub2cc \uc774\uc720\ub294 \ud638\ud658\uc131\uc774 \uc720\uc9c0\ub418\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.) PATCH \ubc84\uadf8 \ud328\uce58. \uc717 \ubcc0\uc218\uc911 \ud558\ub098\ub77c\ub3c4 \uac12\uc774 \uc99d\uac00\ud558\uba74 \uadf8 \ub4a4\uc5d0 \ub530\ub77c\uc624\ub294 \ubcc0\uc218\ub4e4\uc758 \uac12\uc740 0 \uc73c\ub85c \ubcc0\uacbd\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, MINOR \uac12\uc774 \uc99d\uac00\ud560 \uc2dc PATCh \ub294 0 \uc774 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub9cc\uc57d MAJORMOD \uac12\uc774 \uc99d\uac00\ud558\uba74 \uadf8 \ub4a4\uc5d0 \ub530\ub77c\uc624\ub294 \ubaa8\ub4e0 \ubcc0\uc218\ub4e4\uc740 0 \uc774 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.","title":"\uc608\uc2dc"},{"location":"conventions/versioning/#_3","text":"\ubaa8\ub4dc \uac1c\ubc1c \ucd08\uae30\uc5d0\ub294 \ub298 MAJORMOD \uc640 MAJORAPI \uac00 0 \uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. MINOR \uc640 PATCH \ub9cc \ube4c\ub4dc\ub9c8\ub2e4 \uc99d\uac00\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uc791\uc5c5\uc911\uc778 \ubaa8\ub4dc"},{"location":"conventions/versioning/#_4","text":"\ub9cc\uc57d \ubaa8\ub4dc\uac00 \uc0c8\ub85c\uc6b4 \ubc84\uc804\uc758 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ub418\uace0, \uc774\uc804 \ubc84\uc804\uc740 \ubc84\uadf8 \ud328\uce58\ub9cc \uc774\ub8e8\uc5b4 \uc9c4\ub2e4\uace0 \ud560 \ub54c, PATCH \ub294 \uc5c5\uadf8\ub808\uc774\ub4dc \uc774\uc804 \ubc84\uc804 \uac12\uc5d0\uc11c \uc2dc\uc791\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ubaa8\ub4dc\uac00 \uc774\uc804 \ubc84\uc804\uacfc \uc0c8 \ubc84\uc804 \ub458\ub2e4 \uc9c0\uc6d0\ud558\uba70 \uc801\uadf9\uc801\uc778 \uac1c\ubc1c\uc774 \uc774\ub8e8\uc5b4 \uc9c4\ub2e4\uba74 \ubaa8\ub4dc \ubc84\uc804 \uc55e\uc5d0 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc744 \ucd94\uac00\ud558\uc2dc\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ubc84\uc804 3.0.0.0 \uc778 \ubaa8\ub4dc\uac00 \uc0c8\ub85c\uc6b4 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc \ud55c\ub2e4\uba74, \uc774\uc804 \ubc84\uc804\uc758 \ubaa8\ub4dc \ub610\ud55c \ubc84\uc804 3.0.0.0 \uc73c\ub85c \ub2e4\uc74c \uc608\uc2dc\uc640 \uac19\uc774 \uc5c5\ub370\uc774\ud2b8 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4: 1.7.10-3.0.0.0 , \uadf8\ub9ac\uace0 \uc0c8\ub85c\uc6b4 \ubc84\uc804\uc740 \ub2e4\uc74c \uc608\uc2dc\uc640 \uac19\uc2b5\ub2c8\ub2e4: 1.8-3.0.0.0 . \ub9cc\uc57d \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 \uc5c5\ub370\uc774\ud2b8 \ub9d0\uace0 \ucd94\uac00\uc801\uc778 \ubcc0\uacbd \uc0ac\ud56d\uc774 \uc5c6\ub2e4\uba74 \uc55e\uc758 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc744 \uc81c\uc678\ud558\uace0\ub294 \ubc84\uc804\uc774 \ub3d9\uc77c\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uc5ec\ub7ec \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804"},{"location":"conventions/versioning/#_5","text":"\ud2b9\uc815 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 \uc9c0\uc6d0\uc744 \uc911\ub2e8\ud560 \ub54c\ub294 \uadf8 \ub9c8\uc9c0\ub9c9 \ube4c\ub4dc\uc5d0 -final \uc811\ubbf8\uc0ac\ub97c \ubd99\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 \uc774 \ubaa8\ub4dc\uac00 \ub354 \uc774\uc0c1 \uc9c0\uc6d0\uc744 \ubc1b\uc9c0 \uc54a\uc744 \uac83\uc774\uba70 \uc5c5\ub370\uc774\ud2b8\uc640 \ubc84\uadf8 \ud328\uce58\ub97c \ubc1b\uae30 \uc704\ud574\uc11c\ub294 \uc0c8\ub85c\uc6b4 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc \ud558\uc5ec\uc57c \ud568\uc744 \ub73b\ud569\ub2c8\ub2e4.","title":"\ucd5c\uc885 \ub9b4\ub9ac\uc988"},{"location":"conventions/versioning/#_6","text":"\uc544\uc9c1 \uac1c\ubc1c\uc911\uc778 \uae30\ub2a5\uc744 \uc2dc\ud5d8\ud310\ucc98\ub7fc \ubc30\ud3ec\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4, \uc774\ub294 \ud558\ub098\uc758 \u201c\ubca0\ud0c0\u201d \ud14c\uc2a4\ud2b8 \ucc98\ub7fc \ubcfc \uc218 \uc788\uc73c\uba70 \ubc84\uc804\uc5d0 -betaX \uc811\ubbf8\uc0ac\ub97c \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4, \uc774\ub54c X \ub294 \ucd9c\uc2dc\ub41c \uc2dc\ud5d8\ud310 \uac2f\uc218 \uc785\ub2c8\ub2e4.(\uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294 \ud604\uc7ac\ub85c\uc36c -pre \ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4, \uc774\ub294 -beta \uc758 \uc774\uba85\uc774 \uc544\ub2d9\ub2c8\ub2e4). \uc774\ubbf8 \ucd9c\uc2dc\ub41c \ubc84\uc804 \ub610\ub294 \ucd08\uae30 \ub9b4\ub9ac\uc988 \uc774\uc804\uc5d0 \uc0ac\uc6a9\ud55c \ubc84\uc804\ub4e4\uc740 \uc2dc\ud5d8\ud310 \ubc84\uc804\uc73c\ub85c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4; \uadf8\ub807\uae30\uc5d0 \ubc84\uc804 \ubcc0\uc218\ub97c \ub97c -beta \uc811\ubbf8\uc0ac\ub97c \ubd99\uc774\uae30 \uc774\uc804\uc5d0 \uc62c\ubc14\ub974\uac8c \ubcc0\uacbd\ud558\uc154\uc57c \ud569\ub2c8\ub2e4(\uc774\ub54c \uc77c\ubc18\uc801\uc73c\ub85c MINOR \ub9cc \ubcc0\uacbd\ud558\uc9c0\ub9cc MAJOR \ub610\ub294 MAJORMOD \ub610\ud55c \ubcc0\uacbd\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4). \ucd08\uae30 \ub9b4\ub9ac\uc988 \uc774\uc804 \ube4c\ub4dc\ub4e4\uc740 \uc791\uc5c5\uc911\uc778 \ube4c\ub4dc\uc785\ub2c8\ub2e4.","title":"\uc2dc\ud5d8 \ub9b4\ub9ac\uc988"},{"location":"conventions/versioning/#_7","text":"\ucd9c\uc2dc \ud6c4\ubcf4\ub294 \uc2e4\uc81c\ub85c \ubc84\uc804\uc744 \ubcc0\uacbd\ud558\uae30 \uc774\uc804\uc5d0 \ucd9c\uc2dc\ud558\ub294 \uc2dc\ud5d8\ud310\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc774 \ubc84\uc804\ub4e4\uc740 -rcX \uc811\ubbf8\uc0ac\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud558\uba70, \uc774\ub54c X \ub294 \ucd9c\uc2dc \ud6c4\ubcf4 \uac2f\uc218\uc785\ub2c8\ub2e4, \uc774 \uac12\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \ubc84\uadf8 \ud328\uce58 \ud560\ub54c\ub9cc \uc99d\uac00\ub429\ub2c8\ub2e4. \uc774\ubbf8 \ucd9c\uc2dc\ub41c \ubc84\uc804\uc740 \ucd9c\uc2dc \ud6c4\ubcf4\ub97c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4; \uadf8\ub807\uae30\uc5d0 \ubc84\uc804 \ubcc0\uc218\ub97c rc \uc811\ubbf8\uc0ac\ub97c \ubd99\uc774\uae30 \uc774\uc804\uc5d0 \uc62c\ubc14\ub974\uac8c \ubcc0\uacbd\ud558\uc154\uc57c \ud569\ub2c8\ub2e4(\uc774\ub54c \uc77c\ubc18\uc801\uc73c\ub85c MINOR \ub9cc \ubcc0\uacbd\ud558\uc9c0\ub9cc MAJOR \ub610\ub294 MAJORMOD \ub610\ud55c \ubcc0\uacbd\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4). \ucd9c\uc2dc \ud6c4\ubcf4\ub97c \uc548\uc815 \ube4c\ub4dc\ub85c \ub9b4\ub9ac\uc988 \ud560\ub54c \ub9c8\uc9c0\ub9c9 \ucd9c\uc2dc \ud6c4\ubcf4\uc640 \uc644\uc804\ud788 \ub611\uac19\uac70\ub098 \uba87\uba87 \ubc84\uadf8 \ud328\uce58\ub97c \ud3ec\ud568\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ucd9c\uc2dc \ud6c4\ubcf4"},{"location":"datagen/intro/","text":"\ub370\uc774\ud130 \uc0dd\uc131\uae30 \ub370\uc774\ud130 \uc0dd\uc131\uae30\ub294 \ucf54\ub4dc\ub97c \uc0ac\uc6a9\ud574 \ubaa8\ub4dc\uc5d0 \ud544\uc694\ud55c \uc5d0\uc14b\uacfc \ub370\uc774\ud130\ub97c \ub9cc\ub4dc\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc5d0\uc14b\uacfc \ub370\uc774\ud130 \ud30c\uc77c\ub4e4\uc758 \ub0b4\uc6a9\uc744 \ucf54\ub4dc\uc5d0\uc11c \uc815\uc758\ud558\uace0 \ubb38\ubc95\uc774\ub098 \uaddc\uaca9\uc5d0 \uc0c1\uad00\uc5c6\uc774 \ud3b8\ud558\uac8c \uc0dd\uc131\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \ub370\uc774\ud130 \uc0dd\uc131 \uc2dc\uc2a4\ud15c\uc740 \uba54\uc778 \ud074\ub798\uc2a4 net.minecraft.data.Main \uc5d0\uc11c \ubd88\ub7ec\uc635\ub2c8\ub2e4. \uac8c\uc784 \uc2e4\ud589 \uba85\ub839 \uc778\uc218\ub97c \ubc14\uafd4 \uc5b4\ub5a4 \ubaa8\ub4dc\uc758 \ub370\uc774\ud130\ub97c \uc218\uc9d1\ud560\uc9c0, \uc5b4\ub5a4 \ud30c\uc77c\ub4e4\uc744 \uace0\ub824\ud560\uc9c0 \ub4f1\uc744 \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130 \uc0dd\uc131\uc744 \uad00\ub9ac\ud558\ub294 \ud074\ub798\uc2a4\ub294 net.minecraft.data.DataGenerator \uc785\ub2c8\ub2e4. MDK \uc758 build.gradle \uc740 \uae30\ubcf8\uc801\uc73c\ub85c runData \ub97c \ucd94\uac00\ud558\uc5ec \ub370\uc774\ud130 \uc0dd\uc131\uae30\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc0dd\uc131 \ubaa8\ub4dc \ub370\uc774\ud130 \uc0dd\uc131\uae30\ub294 4\uac00\uc9c0 \uc885\ub958\uc758 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uc5b4\ub5a4 \uc885\ub958\uc758 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud560 \uc9c0\ub294 \uac8c\uc784 \uc2e4\ud589 \uba85\ub839 \uc778\uc218\ub97c \ud1b5\ud574 \uc124\uc815\ud560 \uc218 \uc788\uace0, \uc5b4\ub5a4 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud558\ub824\uace0 \ud558\ub294\uc9c0\ub294 GatherDataEvent#include*** \uba54\uc11c\ub4dc\ub85c \ud655\uc778\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8 \uc5d0\uc14b asset \uc5d0 \ub4e4\uc5b4\uac00\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ud30c\uc77c\ub4e4\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4: \ube14\ub85d/\uc544\uc774\ud15c \ubaa8\ub378, BlockState \uc815\uc758 JSON \ud30c\uc77c\ub4e4, \uc5b8\uc5b4 \ud30c\uc77c \ub4f1. --client , includeClient() \uc11c\ubc84 \ub370\uc774\ud130 data \uc548\uc5d0 \ub4e4\uc5b4\uac00\ub294 \uc11c\ubc84 \uc804\uc6a9 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4: \uc870\ud569\ubc95, \ub3c4\uc804\uacfc\uc81c, \ud0dc\uadf8 \ub4f1. --server , includeServer() \uac1c\ubc1c \ub3c4\uad6c \uac1c\ubc1c \ub3c4\uad6c\ub4e4\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4: SNBT \ub97c NBT \ub85c \ubc14\uafb8\uae30, \uadf8 \ubc18\ub300\ub85c \ubc14\uafb8\uae30 \ub4f1. --dev , includeDev() \ubcf4\uace0\uc11c \uc791\uc131 \ub4f1\ub85d\ub41c \ubaa8\ub4e0 \ube14\ub85d, \uc544\uc774\ud15c, \uba85\ub839\uc5b4\ub4f1\uc744 \ub364\ud504\ud569\ub2c8\ub2e4. --reports , includeReports() \ub370\uc774\ud130 \uc81c\uacf5\uc790 \ub370\uc774\ud130 \uc81c\uacf5\uc790\ub294 \uc5b4\ub5a4 \ub370\uc774\ud130\uac00 \uc0dd\uc131\ub418\uace0 \uc81c\uacf5\ub420 \uc9c0\ub97c \uc815\uc758\ud558\ub294 \ud074\ub798\uc2a4 \uc785\ub2c8\ub2e4. \ubaa8\ub4e0 \ub370\uc774\ud130 \uc81c\uacf5\uc790\ub4e4\uc740 IDataProvider \ub97c \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ub300\ubd80\ubd84\uc758 \uc5d0\uc14b\uacfc \ub370\uc774\ud130\uc5d0 \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c \ub370\uc774\ud130 \uc81c\uacf5\uc790\ub97c \ucd94\uc0c1\ud654 \ud074\ub798\uc2a4\ub85c \uc81c\uacf5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4, \uadf8\ub807\uae30\uc5d0 \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc740 \uc815\ud574\uc9c4 \uba54\uc11c\ub4dc \uba87\uac1c\ub9cc \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uba74 \ub429\ub2c8\ub2e4. GatherDataEvent \ub294 \ub370\uc774\ud130 \uc0dd\uc131\uae30\uac00 \ucd08\uae30\ud654 \ub420 \ub54c \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4, DataGenerator \uc778\uc2a4\ud134\uc2a4\ub97c \uc774 \uc774\ubca4\ud2b8\uc5d0\uc11c \uc811\uadfc\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DataGenerator#addProvider \ub97c \uc0ac\uc6a9\ud574 \ub370\uc774\ud130 \uc81c\uacf5\uc790\ub97c \ub9cc\ub4e4\uace0 \ub4f1\ub85d\ud558\uc138\uc694. \ud074\ub77c\uc774\uc5b8\ud2b8 \uc5d0\uc14b net.minecraftforge.common.data.LanguageProvider - \uc5b8\uc5b4 \ubb38\uc790\uc5f4 \uc0dd\uc131: #addTranslations \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694 ModelProvider<?> - \ubaa8\ub4e0 \ubaa8\ub378 \uc81c\uacf5\uc790\ub4e4\uc758 \uae30\ubc18\uc774 \ub418\ub294 \ud074\ub798\uc2a4 \uc774 \ud074\ub798\uc2a4\ub4e4\uc740 net.minecraftforge.client.model.generators \ud328\uce90\uc9c0\uc5d0 \uc788\uc2b5\ub2c8\ub2e4 ItemModelProvider - \uc544\uc774\ud15c \ubaa8\ub378 \uc0dd\uc131; #registerModels \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694 BlockStateProvider - BlockState \uc815\uc758, \ube14\ub85d \ubaa8\ub378, \uc544\uc774\ud15c \ubaa8\ub378 \uc0dd\uc131: #registerStatesAndModels \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694 BlockModelProvider - \ube14\ub85d \ubaa8\ub378 \uc0dd\uc131; #registerModels \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694 \uc11c\ubc84 \ub370\uc774\ud130 net.minecraftforge.common.data.GlobalLootModifierProvider - \uae00\ub85c\ubc8c \ub178\ud68d\ubb3c \uc218\uc815\uc790 \uc0dd\uc131; #start \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694 \uc774 \ud074\ub798\uc2a4\ub4e4\uc740 net.minecraft.data \ud328\uce90\uc9c0\uc5d0 \uc788\uc2b5\ub2c8\ub2e4 LootTableProvider - \ub178\ud68d\ubb3c \ud14c\uc774\ube14 \uc0dd\uc131; #getTables \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694 RecipeProvider - \uc870\ud569\ubc95 \ubc0f \ud574\uae08\ub418\ub294 \ub3c4\uc804\uacfc\uc81c \uc0dd\uc131: #buildShapelessRecipes \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694 TagsProvider - \ud0dc\uadf8 \ub370\uc774\ud130 \uc0dd\uc131: #addTags \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694 AdvancementProvider - \ub3c4\uc804\uacfc\uc81c \ub370\uc774\ud130 \uc0dd\uc131, #registerAdvancements \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694","title":"\uc18c\uac1c"},{"location":"datagen/intro/#_1","text":"\ub370\uc774\ud130 \uc0dd\uc131\uae30\ub294 \ucf54\ub4dc\ub97c \uc0ac\uc6a9\ud574 \ubaa8\ub4dc\uc5d0 \ud544\uc694\ud55c \uc5d0\uc14b\uacfc \ub370\uc774\ud130\ub97c \ub9cc\ub4dc\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc5d0\uc14b\uacfc \ub370\uc774\ud130 \ud30c\uc77c\ub4e4\uc758 \ub0b4\uc6a9\uc744 \ucf54\ub4dc\uc5d0\uc11c \uc815\uc758\ud558\uace0 \ubb38\ubc95\uc774\ub098 \uaddc\uaca9\uc5d0 \uc0c1\uad00\uc5c6\uc774 \ud3b8\ud558\uac8c \uc0dd\uc131\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \ub370\uc774\ud130 \uc0dd\uc131 \uc2dc\uc2a4\ud15c\uc740 \uba54\uc778 \ud074\ub798\uc2a4 net.minecraft.data.Main \uc5d0\uc11c \ubd88\ub7ec\uc635\ub2c8\ub2e4. \uac8c\uc784 \uc2e4\ud589 \uba85\ub839 \uc778\uc218\ub97c \ubc14\uafd4 \uc5b4\ub5a4 \ubaa8\ub4dc\uc758 \ub370\uc774\ud130\ub97c \uc218\uc9d1\ud560\uc9c0, \uc5b4\ub5a4 \ud30c\uc77c\ub4e4\uc744 \uace0\ub824\ud560\uc9c0 \ub4f1\uc744 \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130 \uc0dd\uc131\uc744 \uad00\ub9ac\ud558\ub294 \ud074\ub798\uc2a4\ub294 net.minecraft.data.DataGenerator \uc785\ub2c8\ub2e4. MDK \uc758 build.gradle \uc740 \uae30\ubcf8\uc801\uc73c\ub85c runData \ub97c \ucd94\uac00\ud558\uc5ec \ub370\uc774\ud130 \uc0dd\uc131\uae30\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4.","title":"\ub370\uc774\ud130 \uc0dd\uc131\uae30"},{"location":"datagen/intro/#_2","text":"\ub370\uc774\ud130 \uc0dd\uc131\uae30\ub294 4\uac00\uc9c0 \uc885\ub958\uc758 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uc5b4\ub5a4 \uc885\ub958\uc758 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud560 \uc9c0\ub294 \uac8c\uc784 \uc2e4\ud589 \uba85\ub839 \uc778\uc218\ub97c \ud1b5\ud574 \uc124\uc815\ud560 \uc218 \uc788\uace0, \uc5b4\ub5a4 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud558\ub824\uace0 \ud558\ub294\uc9c0\ub294 GatherDataEvent#include*** \uba54\uc11c\ub4dc\ub85c \ud655\uc778\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8 \uc5d0\uc14b asset \uc5d0 \ub4e4\uc5b4\uac00\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ud30c\uc77c\ub4e4\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4: \ube14\ub85d/\uc544\uc774\ud15c \ubaa8\ub378, BlockState \uc815\uc758 JSON \ud30c\uc77c\ub4e4, \uc5b8\uc5b4 \ud30c\uc77c \ub4f1. --client , includeClient() \uc11c\ubc84 \ub370\uc774\ud130 data \uc548\uc5d0 \ub4e4\uc5b4\uac00\ub294 \uc11c\ubc84 \uc804\uc6a9 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4: \uc870\ud569\ubc95, \ub3c4\uc804\uacfc\uc81c, \ud0dc\uadf8 \ub4f1. --server , includeServer() \uac1c\ubc1c \ub3c4\uad6c \uac1c\ubc1c \ub3c4\uad6c\ub4e4\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4: SNBT \ub97c NBT \ub85c \ubc14\uafb8\uae30, \uadf8 \ubc18\ub300\ub85c \ubc14\uafb8\uae30 \ub4f1. --dev , includeDev() \ubcf4\uace0\uc11c \uc791\uc131 \ub4f1\ub85d\ub41c \ubaa8\ub4e0 \ube14\ub85d, \uc544\uc774\ud15c, \uba85\ub839\uc5b4\ub4f1\uc744 \ub364\ud504\ud569\ub2c8\ub2e4. --reports , includeReports()","title":"\uc0dd\uc131 \ubaa8\ub4dc"},{"location":"datagen/intro/#_3","text":"\ub370\uc774\ud130 \uc81c\uacf5\uc790\ub294 \uc5b4\ub5a4 \ub370\uc774\ud130\uac00 \uc0dd\uc131\ub418\uace0 \uc81c\uacf5\ub420 \uc9c0\ub97c \uc815\uc758\ud558\ub294 \ud074\ub798\uc2a4 \uc785\ub2c8\ub2e4. \ubaa8\ub4e0 \ub370\uc774\ud130 \uc81c\uacf5\uc790\ub4e4\uc740 IDataProvider \ub97c \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ub300\ubd80\ubd84\uc758 \uc5d0\uc14b\uacfc \ub370\uc774\ud130\uc5d0 \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c \ub370\uc774\ud130 \uc81c\uacf5\uc790\ub97c \ucd94\uc0c1\ud654 \ud074\ub798\uc2a4\ub85c \uc81c\uacf5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4, \uadf8\ub807\uae30\uc5d0 \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc740 \uc815\ud574\uc9c4 \uba54\uc11c\ub4dc \uba87\uac1c\ub9cc \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uba74 \ub429\ub2c8\ub2e4. GatherDataEvent \ub294 \ub370\uc774\ud130 \uc0dd\uc131\uae30\uac00 \ucd08\uae30\ud654 \ub420 \ub54c \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4, DataGenerator \uc778\uc2a4\ud134\uc2a4\ub97c \uc774 \uc774\ubca4\ud2b8\uc5d0\uc11c \uc811\uadfc\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DataGenerator#addProvider \ub97c \uc0ac\uc6a9\ud574 \ub370\uc774\ud130 \uc81c\uacf5\uc790\ub97c \ub9cc\ub4e4\uace0 \ub4f1\ub85d\ud558\uc138\uc694.","title":"\ub370\uc774\ud130 \uc81c\uacf5\uc790"},{"location":"datagen/intro/#_4","text":"net.minecraftforge.common.data.LanguageProvider - \uc5b8\uc5b4 \ubb38\uc790\uc5f4 \uc0dd\uc131: #addTranslations \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694 ModelProvider<?> - \ubaa8\ub4e0 \ubaa8\ub378 \uc81c\uacf5\uc790\ub4e4\uc758 \uae30\ubc18\uc774 \ub418\ub294 \ud074\ub798\uc2a4 \uc774 \ud074\ub798\uc2a4\ub4e4\uc740 net.minecraftforge.client.model.generators \ud328\uce90\uc9c0\uc5d0 \uc788\uc2b5\ub2c8\ub2e4 ItemModelProvider - \uc544\uc774\ud15c \ubaa8\ub378 \uc0dd\uc131; #registerModels \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694 BlockStateProvider - BlockState \uc815\uc758, \ube14\ub85d \ubaa8\ub378, \uc544\uc774\ud15c \ubaa8\ub378 \uc0dd\uc131: #registerStatesAndModels \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694 BlockModelProvider - \ube14\ub85d \ubaa8\ub378 \uc0dd\uc131; #registerModels \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694","title":"\ud074\ub77c\uc774\uc5b8\ud2b8 \uc5d0\uc14b"},{"location":"datagen/intro/#_5","text":"net.minecraftforge.common.data.GlobalLootModifierProvider - \uae00\ub85c\ubc8c \ub178\ud68d\ubb3c \uc218\uc815\uc790 \uc0dd\uc131; #start \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694 \uc774 \ud074\ub798\uc2a4\ub4e4\uc740 net.minecraft.data \ud328\uce90\uc9c0\uc5d0 \uc788\uc2b5\ub2c8\ub2e4 LootTableProvider - \ub178\ud68d\ubb3c \ud14c\uc774\ube14 \uc0dd\uc131; #getTables \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694 RecipeProvider - \uc870\ud569\ubc95 \ubc0f \ud574\uae08\ub418\ub294 \ub3c4\uc804\uacfc\uc81c \uc0dd\uc131: #buildShapelessRecipes \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694 TagsProvider - \ud0dc\uadf8 \ub370\uc774\ud130 \uc0dd\uc131: #addTags \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694 AdvancementProvider - \ub3c4\uc804\uacfc\uc81c \ub370\uc774\ud130 \uc0dd\uc131, #registerAdvancements \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc138\uc694","title":"\uc11c\ubc84 \ub370\uc774\ud130"},{"location":"datagen/modelproviders/","text":"Model Providers The model providers are a specific type of data generators for defining models. All model providers are a subclass of ModelProvider . ModelProvider provides methods to define models for blocks and items alike: cubes, single textures, doors, slabs, and even custom non-data-generated models as parent models. Existing Files All references to textures or other data files not generated for data generation must reference existing files on the system. This is to ensure that all referenced textures are in the correct places, so typos can be found and corrected. ExistingFileHelper is the class responsible for validating the existence of those data files. An instance can be retrieved from GatherDataEvent#getExistingFileHelper() . The --existing <folderpath> argument allows the specified folder and its subfolders to be used when validating the existence of files. By default, only the vanilla datapack and resources are available to the ExistingFileHelper . Implementation There are three main abstract implementations of ModelProvider : ItemModelProvider , BlockModelProvider , and BlockStateProvider . For items, use ItemModelProvider to define their models: override #generateModels and use the helper methods. For blocks, it is recommended to use BlockStateProvider to define the blockstates, models, and their item models in a single class. It contains an instance of both BlockModelProvider and ItemModelProvider , which can be accessed through #models() and #itemModels() . BlockModelProvider is used to define only block models. Call #getVariantBuilder(Block) to get a VariantBlockStateBuilder for building a blockstate with different variants, or #getMultipartBuilder(Block) to get a MultiPartBlockStateBuilder for building a blockstate using multiparts.","title":"\ubaa8\ub378 \uc81c\uacf5\uc790"},{"location":"datagen/modelproviders/#model-providers","text":"The model providers are a specific type of data generators for defining models. All model providers are a subclass of ModelProvider . ModelProvider provides methods to define models for blocks and items alike: cubes, single textures, doors, slabs, and even custom non-data-generated models as parent models.","title":"Model Providers"},{"location":"datagen/modelproviders/#existing-files","text":"All references to textures or other data files not generated for data generation must reference existing files on the system. This is to ensure that all referenced textures are in the correct places, so typos can be found and corrected. ExistingFileHelper is the class responsible for validating the existence of those data files. An instance can be retrieved from GatherDataEvent#getExistingFileHelper() . The --existing <folderpath> argument allows the specified folder and its subfolders to be used when validating the existence of files. By default, only the vanilla datapack and resources are available to the ExistingFileHelper .","title":"Existing Files"},{"location":"datagen/modelproviders/#implementation","text":"There are three main abstract implementations of ModelProvider : ItemModelProvider , BlockModelProvider , and BlockStateProvider . For items, use ItemModelProvider to define their models: override #generateModels and use the helper methods. For blocks, it is recommended to use BlockStateProvider to define the blockstates, models, and their item models in a single class. It contains an instance of both BlockModelProvider and ItemModelProvider , which can be accessed through #models() and #itemModels() . BlockModelProvider is used to define only block models. Call #getVariantBuilder(Block) to get a VariantBlockStateBuilder for building a blockstate with different variants, or #getMultipartBuilder(Block) to get a MultiPartBlockStateBuilder for building a blockstate using multiparts.","title":"Implementation"},{"location":"datastorage/capabilities/","text":"\uce90\ud328\ube4c\ub9ac\ud2f0 \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 \uc5ec\ub7ec \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\ud558\ub290\ub77c \uace0\uc0dd\ud560 \ud544\uc694 \uc5c6\uc774 \ub3d9\uc801\uc774\uace0 \uc720\uc5f0\ud558\uac8c \uc5ec\ub7ec \uae30\ub2a5\ub4e4\uc744 \ub178\ucd9c\uc2dc\ud0ac \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc774 \uc2dc\uc2a4\ud15c\uc740 \ud2b9\uc815 \uac1d\uccb4\uc5d0 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ucd94\uac00\ud558\uac70\ub098 \ub178\ucd9c\uc2dc\ucf1c, \ub3d9\uc801\uc73c\ub85c \uae30\ub2a5\uc744 \ucd94\uac00\ud558\uac70\ub098 \ub370\uc774\ud130\ub97c \ucd94\uac00\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 \uaddc\uaca9\uc744 \uc815\uc758\ud558\ub294 \uc778\ud130\ud398\uc774\uc2a4 , \uadf8 \uc778\ud130\ud398\uc774\uc2a4\uc758 \uae30\ubcf8 \uad6c\ud604 , \uadf8\ub9ac\uace0 \ub370\uc774\ud130 \ud578\ub4e4\ub7ec \uc774 3\uac00\uc9c0\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \ud074\ub798\uc2a4\ub294 \uc5ec\ub7ec\uac1c \uc788\uc744 \uc218 \uc788\uc73c\ub098, \ubb34\uc870\uac74 \ud558\ub098 \uc774\uc0c1\uc740 \uc788\uc5b4\uc57c \ud558\uae30\uc5d0 \uae30\ubcf8 \uad6c\ud604\uc774 \uc694\uad6c\ub429\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \ub370\uc774\ud130 \ud578\ub4e4\ub7ec\ub294 \uae30\ubcf8 \uad6c\ud604\ub9cc \uc9c0\uc6d0\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\ub294 TileEntity, Entity, ItemStack, World, \uadf8\ub9ac\uace0 Chunk \uac00 \uae30\ubcf8\uc801\uc73c\ub85c \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc744 \uc9c0\uc6d0\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4, \uadf8\ub807\uae30\uc5d0 \uc774 \uac1d\uccb4\ub4e4\uc5d0\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc774\ubca4\ud2b8\ub97c \ud1b5\ud574\uc11c \ucd94\uac00\ud558\uac70\ub098, \uac1d\uccb4\ub4e4\uc744 \uad6c\ud604\ud558\uba70 \ub178\ucd9c\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud574\uc11c\ub294 \uc544\ub798 \ub354 \uc790\uc138\ud788 \ub2e4\ub8e8\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \ud3ec\uc9c0\uc5d0\uc11c\ub294 IItemHandler , IFluidHandler , \uadf8\ub9ac\uace0 IEnergyStorage \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. IItemHandler \ub294 \uc778\ubca4\ud1a0\ub9ac \uc2ac\ub86f\uc744 \uad00\ub9ac\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uaddc\uaca9\uc785\ub2c8\ub2e4. \uc774 \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 TileEntity, Entity, \ub610\ub294 ItemStack \uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IInventory \uc640 ISidedInventory \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc138\uc694. IFluidHandler \ub294 \uc561\uccb4 \uc800\uc7a5 \uacf5\uac04\uc744 \uad00\ub9ac\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uaddc\uaca9\uc785\ub2c8\ub2e4. \uc774 \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 TileEntity, Entity, \ub610\ub294 ItemStack \uc5d0 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IEnergyStorage \ub294 \uc5d0\ub108\uc9c0 \uc800\uc7a5 \uacf5\uac04\uc744 \uad00\ub9ac\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uaddc\uaca9\uc785\ub2c8\ub2e4. \uc774\ub294 TileEntity, Entity, \ub610\ub294 ItemStack \uc5d0 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. TeamCoFH \uc758 RedstoneFlux API \ub97c \uae30\ubc18\uc73c\ub85c \ud558\uc5ec \ub9cc\ub4e4\uc5b4 \uc84c\uc2b5\ub2c8\ub2e4. \uc5ec\ub2f4\uc73c\ub85c, \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4 \uc0ac\uc774\uc5d0\uc120 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uce90\ud328\ube4c\ub9ac\ud2f0 \uadf8 \uc790\uccb4\uc778\uac83 \ucc98\ub7fc \ud45c\ud604\ud558\uae30\ub3c4 \ud569\ub2c8\ub2e4, IItemHandler \uce90\ud328\ube4c\ub9ac\ud2f0\ub77c\uace0 \ud558\uba74, IItemHandler \uc778\ud130\ud398\uc774\uc2a4\ub97c \uaddc\uaca9\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub9d0\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ubbf8 \uc874\uc7ac\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc0ac\uc6a9\ud558\uae30 \uc774\ubbf8 \uc774\uc804\uc5d0 \ub9d0\ud588\ub2e4\uc2f6\uc774, TileEntity , Entity , \uadf8\ub9ac\uace0 ItemStack \uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. ICapabilityProvider \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \uac83\uc73c\ub85c \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc744 \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \uac1d\uccb4\ub4e4\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub77c\uace0 \ud569\ub2c8\ub2e4. \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub294 #getCapability \uba54\uc11c\ub4dc\ub97c \uc815\uc758\ud558\ub294\ub370, \uc774 \uba54\uc11c\ub4dc\ub294 \uc81c\uacf5\uc790\uac00 \uac00\uc9c4 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uac10\uc2f8\ub294 LazyOptional \uc774 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud574\uc11c\ub294 \uc544\ub798\uc5d0\uc11c \ub354 \ub2e4\ub8e8\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. \ud55c \uc81c\uacf5\uc790\uac00 \uc5ec\ub7ec \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uac00\uc9c0\uace0 \uc788\uc744 \uc218 \uc788\ub2e4 \ubcf4\ub2c8, \uadf8\uc911 \ud558\ub098\ub9cc \uc120\ud0dd\ud558\uc5ec \ucc38\uc870\ud558\uae30 \uc704\ud574\uc11c\ub294, \ud574\ub2f9 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \uc774 \uc778\uc2a4\ud134\uc2a4\ub294 \uac01 \uce90\ud328\ube4c\ub9ac\ud2f0\ub9c8\ub2e4 \uace0\uc720\ud569\ub2c8\ub2e4. @CapabilityInject \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc544\ub798\ucc98\ub7fc \ud65c\uc6a9\ud558\uc5ec \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uadf8\ub7ec\ub098 \ud3ec\uc9c0\uc5d0\uc11c \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uacf5\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83 \uc774\uc678\uc5d0\ub3c4 CapabilityItemHandler#ITEM_HANDLER_CAPABILITY \uc640 \uac19\uc740 \uc815\uc801 \ucc38\uc870\ub97c \uc774\uc6a9\ud558\uc5ec \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5bb\uc744 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. //IItemHandler \uc758 \uace0\uc720\ud55c \uc778\uc2a4\ud134\uc2a4\ub97c \uc5bb\ub294 \ubc29\ubc95\uc911 \ud558\ub098 @CapabilityInject(IItemHandler.class) static Capability<IItemHandler> ITEM_HANDLER_CAPABILITY = null; static Capability<IItemHandler> STATIC_REFERENCE = CapabilityItemHandler#ITEM_HANDLER_CAPABILITY; @CapabilityInject(IItemHandler.class) static Capability<IItemHandler> A = null; @CapabilityInject(IItemHandler.class) static Capability<IItemHandler> B = null; //\uc774\ub54c ITEM_HANDLER_CAPABILITY, STATIC_REFERENCE, A, \uadf8\ub9ac\uace0 B \uc804\ubd80 \uc815\ud655\ud788 \ub3d9\uc77c\ud55c \uc778\uc2a4\ud134\uc2a4\ub97c \ucc38\uc870\ud568. \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc740 \ud544\ub4dc \ub9d0\uace0\ub3c4 \uba54\uc11c\ub4dc\uc5d0\ub3c4 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud544\ub4dc\uc5d0 \uc801\uc6a9\ud560 \uacbd\uc6b0, \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \ub4f1\ub85d\ub420\ub54c, \ud574\ub2f9 \ud544\ub4dc\uc5d0 \ub2e8\uc21c\ud788 \uadf8 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ud560\ub2f9\ud558\uae30\ub9cc \ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud574\ub2f9 \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \ubaa8\uc885\uc758 \uc774\uc720\ub85c \ub4f1\ub85d\ub418\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc6d0\ub798 \uc874\uc7ac\ud558\ub358 \uac12 null \ub85c \ub0a8\uc544\uc788\uac8c \ub429\ub2c8\ub2e4. \uba54\uc11c\ub4dc\uc5d0 \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc801\uc6a9\ud560 \uacbd\uc6b0, \uadf8 \uba54\uc11c\ub4dc\ub294 \ud574\ub2f9 \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \ub4f1\ub85d\ub420 \ub54c \uc2e4\ud589\ud560 \ucf5c\ubc31\uc774 \ub429\ub2c8\ub2e4. \uc774\ub97c \uc751\uc6a9\ud558\uc5ec \ud2b9\uc815 \uae30\ub2a5\ub4e4\uc744 \uc870\uac74\uc801\uc73c\ub85c \ud65c\uc131\ud654 \uc2dc\ud0ac \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \uc5bb\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\uc2a4\ud134\uc2a4\ub97c #getCapability \uc758 \uc778\uc790\ub85c \uc0ac\uc6a9\ud558\uc5ec TileEntity, Entity, ItemStack \ub4f1\uc5d0 \ud638\ucd9c\ud558\uba74 LazyOptional<T> \uac00 \ubc18\ud658\ub429\ub2c8\ub2e4. \uc774\ub54c T \ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\uc785\ub2c8\ub2e4, \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \ud544\uc694\ud560 \ub54c \ub9c8\ub2e4 #getCapability \ub97c \ud638\ucd9c\ud558\ub294 \uac83\uc740 \uc131\ub2a5 \uc800\ud558\ub97c \uc77c\uc73c\ud0ac \uc218 \uc788\uc73c\ub2c8, \uce90\ud328\ube4c\ub9ac\ud2f0\uc5d0 \uc790\uc8fc \uc811\uadfc\ud574\uc57c \ud55c\ub2e4\uba74 \uc774 LazyOptional<T> \ub97c \ud2b9\uc815 \ud544\ub4dc\uc5d0 \ud560\ub2f9\ud574 \uc800\uc7a5\ud558\ub294 \uac83\ub3c4 \uace0\ub824\ud574\ubcf4\uc544\uc57c \ud569\ub2c8\ub2e4. #getCapability \uba54\uc11c\ub4dc\ub294 Direction \ub610\ud55c \uc778\uc790\ub85c \ubc1b\ub294\ub370, \uc774\ub294 \ubc29\ud5a5(\ub610\ub294 \uba74)\uc5d0 \ub530\ub77c \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \ub9cc\uc57d \ubc29\ud5a5\uc73c\ub85c null \uc774 \uc804\ub2ec\ub418\uc5c8\ub2e4\uba74, \ube14\ub85d \uc548\ucabd\uc5d0\uc11c \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc694\uccad\ud558\uc600\uac70\ub098, \ub9e5\ub77d\uc0c1 \ubc29\ud5a5\uc774 \ud544\uc694\uac00 \uc5c6\uc5b4, \ubc29\ud5a5\uc744 \uc2e0\uacbd\uc4f0\uc9c0 \uc54a\ub294 \ubc94\uc6a9\uc801\uc778 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc694\uccad\ud558\uc600\ub2e4\uace0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d #getCapability \uba54\uc11c\ub4dc\uac00 \uc694\uccad\ubc1b\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubc18\ud658\ud560 \uc218 \uc5c6\ub2e4\uba74, \ube44\uc5b4\uc788\ub294 LazyOptional \uc774 \ub300\uc2e0 \ubc18\ud658\ub429\ub2c8\ub2e4, \uc81c\uacf5\uc790\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc694\uccad\ud558\ub294 \uac83\uc774 \uadf8 \uc608\uc785\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0 \ub178\ucd9c\ud558\uae30 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub178\ucd9c\ud558\uae30 \uc704\ud574\uc11c\ub294 \uccab\ubc88\uca30\ub85c \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\uc758 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ud558\ub098 \uc54c\uc544\ub450\uc154\uc57c \ud560 \uc810\uc740, \uac01 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub4e4\uc740 \uac01\uc790 \ub2e4\ub978 \ub370\uc774\ud130\ub97c \uac00\uc9c8 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4, \uc774\ub97c \ud65c\uc6a9\ud55c \uc608\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\uc758 \uad6c\ud604\uc758 \uac01\uae30 \ub2e4\ub978 \uc778\uc2a4\ud134\uc2a4\ub4e4\uc744 \uc5ec\ub7ec \uc5d4\ud2f0\ud2f0\uc5d0 \uac01\uac01 \ud560\ub2f9\ud558\uc5ec \uac01\uac01\uc758 \uc5d4\ud2f0\ud2f0\uac00 \ub2e4\ub978 \ub370\uc774\ud130\ub97c \uac00\uc9c0\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc774\ub7f0\uc2dd\uc73c\ub85c \ud65c\uc6a9\ud558\ub294 \uac83\uc740 \ubcf4\ud3b8\uc801\uc774\uba70 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\uc758 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5bb\ub294 \ubc29\ubc95\uc740 \ub450\uac00\uc9c0\uac00 \uc788\ub294\ub370, Capability \ub97c \ud1b5\ud574\uc11c \uae30\ubcf8 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5bb\uac70\ub098, \ub610\ub294 \uc9c1\uc811 \uadf8 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc804\uc790\uc758 \uacbd\uc6b0\ub294 Capability#getDefaultInstance \ub97c \ud1b5\ud574 \uae30\ubcf8 \uad6c\ud604\uc744 \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uae30\ubcf8 \uac12\uc744 \uc0ac\uc6a9\ud574\ub3c4 \uad1c\ucc2e\uc740 \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\ud558\uc138\uc694. IItemHandler \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uacbd\uc6b0, \uc774 \ubc29\ubc95\uc73c\ub85c \uae30\ubcf8 \uad6c\ud604\uc744 \uc5bb\uc744 \uc2dc \uc778\ubca4\ud1a0\ub9ac\uac00 \ud55c\uce78\uc9dc\ub9ac\uc778 \uac83\uc744 \ubc18\ud658\ud558\uae30 \ub54c\ubb38\uc5d0 \ubcc4\ub85c \uc4f8\ubaa8\uac00 \ub9ce\uc9c4 \uc54a\uc744\uac81\ub2c8\ub2e4. \ud6c4\uc790\uc758 \uacbd\uc6b0, \uae30\ubcf8 \uad6c\ud604 \uc774\uc678 \ub2e4\ub978 \uad6c\ud604\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IItemHandler \uc758 \uae30\ubcf8 \uad6c\ud604\uc740 ItemStackhandler \uc778\ub370, \uc774 \ud074\ub798\uc2a4\uc758 \uc0dd\uc131\uc790\ub294 \uc778\ubca4\ud1a0\ub9ac \ud06c\uae30\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc73c\uba70, \uadf8 \uae30\ubcf8\uac12\uc740 1\uc785\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\ub294 \uac83\uc740 \ub298 \uc8fc\uc758\ub97c \uae30\uc6b8\uc5ec\uc57c \ud569\ub2c8\ub2e4, \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\ub824\uace0 \ud558\uba74 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4, \uadf8\ub7ec\ub2c8 \uadf8 \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \uc874\uc7ac\ud558\ub294\uc9c0 \uba3c\uc800 \ud655\uc778\ud558\uc154\uc57c\ub9cc \ud569\ub2c8\ub2e4 (\uc774\uc804 \uc139\uc158\uc5d0\uc11c @CapabilityInject \uc5d0 \ub300\ud55c \ubd80\ubd84\uc744 \ucc38\uace0\ud558\uc138\uc694). \uc774\uc81c \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\uc600\uc73c\ub2c8, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c \uc0ac\uc6a9\uc790\ub4e4\uc5d0\uac8c \uc0c8\ub85c\uc6b4 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub178\ucd9c\ud55c\ub2e4\uace0 \uc54c\ub9ac\uace0 LazyOptional \uc744 \ud1b5\ud55c \ucc38\uc870\ub97c \uc81c\uacf5\ud574\uc57c \ud569\ub2c8\ub2e4. #getCapability \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uace0, \uc778\uc790\ub85c \uc804\ub2ec\ubc1b\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\uc2a4\ud134\uc2a4\ub97c \ub178\ucd9c\ud558\uace0\uc790 \ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc640 \ube44\uad50\ud558\uc138\uc694. \ub9cc\uc57d \ud574\ub2f9 \uc81c\uacf5\uc790\uac00 \ubc29\ud5a5\uc5d0 \ub530\ub77c \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubc18\ud658\ud574\uc57c \ud55c\ub2e4\uba74 \uc804\ub2ec\ubc1b\uc740 side \uc778\uc790\ub97c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uc0ac\uc6a9 \uc608\uc2dc\ub85c\ub294 \ubc29\ud5a5\uc5d0 \ub530\ub77c \ub2e4\ub978 \uc778\ubca4\ud1a0\ub9ac \uc2ac\ub86f\uc744 \uac00\uc9c0\ub294 \uae30\uacc4\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc5d4\ud2f0\ud2f0\uc640 \uc544\uc774\ud15c \uc2a4\ud0dd\uc758 \uacbd\uc6b0 side \ub97c \ubb34\uc2dc\ud560 \uc218 \uc788\uc73c\ub098, \ud50c\ub808\uc774\uc5b4 \uac11\uc637 ( Direction#UP \ub294 \ud50c\ub808\uc774\uc5b4\uc758 \ud22c\uad6c \uc2ac\ub86f\uc758 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub178\ucd9c\ud568) \ub4f1\uacfc \uac19\uc740 \uc6a9\ub3c4\uc5d0 \uc0ac\uc6a9\ud558\uc2e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. super \uba54\uc11c\ub4dc \ud638\ucd9c\uc744 \ud558\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694, \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc774\ubbf8 \ubd80\ucc29\ub41c \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc81c\uacf5\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 \uc81c\uacf5\uc790\uc758 \uc0dd\uba85\uc8fc\uae30\uac00 \ub05d\ub098\uba74 \ubb34\uc870\uac74 LazyOptional#invalidate \ub97c \ud638\ucd9c\ud558\uc5ec \ubb34\ud6a8\ud654 \ud558\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4, \uc5d4\ud2f0\ud2f0\uc640 \ud0c0\uc77c \uc5d4\ud2f0\ud2f0\uc758 \uacbd\uc6b0 \uc6d4\ub4dc\uc5d0\uc11c \uc81c\uac70\ub420 \ub54c #invalidateCaps \ub97c \uc790\ub3d9\uc73c\ub85c \ud638\ucd9c\ud558\uae30 \ub54c\ubb38\uc5d0, \ub9cc\uc57d \uc9c1\uc811 \uc774\ub4e4\uc744 \uad6c\ud604\ud558\uace0 \uacc4\uc2e0\ub2e4\uba74 #invalidateCaps \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc5ec \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubb34\ud6a8\ud654 \uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\uc678 \ub2e4\ub978 \uc81c\uacf5\uc790\ub4e4\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubb34\ud6a8\ud654\uc2dc\ud0a4\ub294 Runnable \uc744 AttachCapabilitiesEvent#addListener \uc5d0 \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4. // \ud0c0\uc77c \uc5d4\ud2f0\ud2f0 \uc790\uc2dd \ud074\ub798\uc2a4 \uc5b4\ub518\uac00\uc5d0 \uc544\ub798 \ub0b4\uc6a9\uc744 \ucd94\uac00\ud558\uc138\uc694 LazyOptional<IItemHandler> inventoryHandlerLazyOptional; // inventoryHandlerSupplier \ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\uc744 \ubc18\ud658\ud558\ub294 Supplier \uc785\ub2c8\ub2e4 (\uc608: () -> inventoryHandler). // \uac1c\uc73c\ub978 \ucd08\uae30\ud654\ub97c \ud558\ub3c4\ub85d \ud558\uc5ec \uaf2d \ud544\uc694\ud560 \ub54c\ub9cc \ucd08\uae30\ud654 \ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. inventoryHandlerLazyOptional = LazyOptional.of(inventoryHandlerSupplier); @Override public <T> LazyOptional<T> getCapability(Capability<T> cap, Direction side) { // cap \uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\uc2a4\ud134\uc2a4 if (cap == CapabilityItemHandler.ITEM_HANDLER_CAPABILITY) { return inventoryHandlerLazyOptional.cast(); } // super \ub97c \ud638\ucd9c\ud558\uc9c0 \uc54a\uc73c\uba74 \ubd80\ucc29\ub41c \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4!! return super.getCapability(cap, side); } @Override public void invalidateCaps() { super.invalidateCaps(); inventoryHandlerLazyOptional.invalidate(); } Item \ub4e4\uc740 \uc870\uae08 \ud2b9\uc774\ud558\uac8c \ub2e4\ub8e8\uc5b4\uc57c \ud558\ub294\ub370, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub4e4\uc744 Item \uc774 \uc544\ub2c8\ub77c ItemStack \uc5d0 \ubd80\ucc29\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 Item#initCapabilities \uc5d0\uc11c \uc0c8\ub85c\uc6b4 \uc81c\uacf5\uc790\ub4e4\uc744 \ubd80\ucc29\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774\ub54c \ubd80\ucc29\ub41c \uce90\ud328\ube4c\ub9ac\ud2f0\ub4e4\uc740 \uadf8 \uc544\uc774\ud15c \uc2a4\ud0dd\uc758 \uc0dd\uba85\uc8fc\uae30\uac00 \ub05d\ub098\uba74 \ubb34\ud6a8\ud654 \ub429\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0 \uc694\uccad\uc740 \ub9e4 \ud2f1\ub9c8\ub2e4, \uc218\uc2ed\ubc88\uc529 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc73c\ub2c8, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub294 \ub9e4\uc6b0 \ube68\ub77c\uc57c\ub9cc \ud569\ub2c8\ub2e4, \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uac8c\uc784\uc758 \uc804\ubc18\uc801\uc778 \uc131\ub2a5\uc744 \uc800\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \uc678\ubd80 \uc790\ub8cc\uad6c\uc870 \ub4f1\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uad8c\uc7a5\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0 \ubd80\ucc29\ud558\uae30 \uc774\ubbf8 \uc774\uc804\uc5d0 \uc5b8\uae09\ud588\ub4ef\uc774, \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc774\ubbf8 \uc874\uc7ac\ud558\ub294 World \ub098 Chunk \uc640 \uac19\uc740 \uc81c\uacf5\uc790\uc5d0 \ubd80\ucc29\ud558\ub294 \uac83\uc740 AttachCapabilitiesEvent \ub97c \ud1b5\ud574 \uc774\ub8e8\uc5b4\uc9d1\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 \ubaa8\ub4e0 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. AttachCapabilitiesEvent \ub294 5\uac1c\uc758 \uc81c\ub108\ub9ad \ud0c0\uc785\uc774 \uc788\ub294\ub370, \uc774\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: AttachCapabilitiesEvent<Entity> : \uc5d4\ud2f0\ud2f0\uc5d0\ub9cc \ubc29\uc1a1\ub428. AttachCapabilitiesEvent<TileEntity> : \ud0c0\uc77c \uc5d4\ud2f0\ud2f0\uc5d0\ub9cc \ubc29\uc1a1\ub428. AttachCapabilitiesEvent<ItemStack> : \uc544\uc774\ud15c \uc2a4\ud0dd\uc5d0\ub9cc \ubc29\uc1a1\ub428. AttachCapabilitiesEvent<World> : \uc6d4\ub4dc\uc5d0\ub9cc \ubc29\uc1a1\ub428. AttachCapabilitiesEvent<Chunk> : \uccad\ud06c\uc5d0\ub9cc \ubc29\uc1a1\ub428. \uc774 \uc81c\ub108\ub9ad \ud0c0\uc785\ub4e4\uc740 \uc704\uc5d0 \uc9c0\uc815\ub41c \ud0c0\uc785\ub4e4\ubcf4\ub2e4 \ub354 \uad6c\uccb4\uc801\uc77c \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4, \uc608\ub97c \ub4e4\uc5b4, PlayerEntity \uc5d0\ub2e4\uac00 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubd80\ucc29\uc2dc\ud0a4\uace0 \uc2f6\ub2e4\uba74 AttachCapabilitiesEvent<Event> \uc774\ubca4\ud2b8\ub97c \uad6c\ub3c5\ud55c \uc774\ud6c4, \uc804\ub2ec\ub41c \uc81c\uacf5\uc790 \uac1d\uccb4\uac00 PlayerEntity \uc778\uc9c0 \ud655\uc778\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 #addCapability \uba54\uc11c\ub4dc\uac00 \uc788\ub294\ub370, \uc774 \uc774\ubca4\ud2b8\ub294 \ub300\uc0c1 \uc81c\uacf5\uc790 \uac1d\uccb4\uc5d0\ub2e4\uac00 \uc0c8\ub85c\uc6b4 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubd80\ucc29\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uc2a4\ud2b8\uc5d0 \uce90\ud328\ube4c\ub9ac\ud2f0 \uadf8 \uc790\uccb4\ub97c \ucd94\uac00\ud558\uae30 \ubcf4\ub2e4\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4, \uc989 \uc774\ubbf8 \uc874\uc7ac\ud558\ub294 \uc81c\uacf5\uc790\uc5d0\ub2e4\uac00 \ub610 \ub2e4\ub978 \uc81c\uacf5\uc790\ub97c \ucd94\uac00\ud558\ub294 \uac83\uc774\uc9c0\uc694. \uc774\ub54c, \ucd94\uac00\ub418\ub294 \uc81c\uacf5\uc790\ub4e4\uc740 \ubcf4\ud3b8\uc801\uc73c\ub85c \uc775\uba85\ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \ub610\ud55c, \ucd94\uac00\ub418\ub294 \uc81c\uacf5\uc790\ub4e4\uc740 \ubc29\ud5a5\uc5d0 \ub530\ub77c \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubc18\ud658\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub294 ICapabilityProvider \ub9cc \uad6c\ud604\ud558\uba74 \ub418\uc9c0\ub9cc, \ub9cc\uc57d \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\uac00 \uc720\uc9c0\ub418\uc5b4\uc57c \ud560 \uacbd\uc6b0, ICapabilitySerializable<T extends INBT> \ub97c \ub300\uc2e0 \uad6c\ud604\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4, \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc81c\uacf5\ud558\ub294 \uba54\uc11c\ub4dc \ubfd0\ub9cc \uc544\ub2c8\ub77c NBT\ub97c \uc800\uc7a5\ud558\uace0 \ubd88\ub7ec\uc624\ub294 \uba54\uc11c\ub4dc \ub610\ud55c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. ICapabilityProvider \uad6c\ud604\uc5d0 \uad00\ud574\uc11c\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \ub178\ucd9c\uc2dc\ud0a4\uae30 \uc139\uc158\uc744 \ucc38\uace0\ud558\uc138\uc694. \uce90\ud328\ube4c\ub9ac\ud2f0 \uc9c1\uc811 \ub9cc\ub4e4\uae30 \uc77c\ubc18\uc801\uc73c\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 CapabilityManager.INSTANCE.register(...) \ub97c FMLCommenSetupEvent \ub3c4\uc911 \ud638\ucd9c\ud558\uc5ec \ub4f1\ub85d\ud569\ub2c8\ub2e4, \ub530\ub85c \ud074\ub798\uc2a4\ub97c \ud558\ub098 \ub9cc\ub4e4\uc5b4\uc11c \uce90\ud328\ube4c\ub9ac\ud2f0\uc640 \uad00\ub828 \ubaa8\ub4e0 \ucf54\ub4dc\ub97c \uadf8\uacf3\uc5d0 \uc791\uc131\ud558\ub294 \uac83\ub3c4 \ubc29\ubc95\uc774\uae34 \ud558\ub098 \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. \uc774 \ubb38\uc11c\uc5d0\uc11c\ub294 \uc775\uba85 \ud074\ub798\uc2a4\uac00 \uc544\ub2cc \uc774\ub984\uc774 \uc788\ub294 \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud560 \uac83\uc774\ub098, \uc775\uba85 \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc154\ub3c4 \uc544\ubb34\ub7f0 \ubb38\uc81c\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. public void onCommonSet(FMLCommonSetupEvent event) { CapabilityManager.INSTANCE.register(<\uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\uc758 \ud074\ub798\uc2a4>, <\ub370\uc774\ud130 \ud578\ub4e4\ub7ec>, <\uae30\ubcf8 \uad6c\ud604 Factory>); } \uc774 \uba54\uc11c\ub4dc\uc758 \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\uc785\ub2c8\ub2e4, \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uae30\ub2a5\uc744 \uc124\uba85\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \uc608\uc2dc\uc5d0\uc11c\ub294 \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub97c IExampleCapability.class \ub77c\uace0 \ud558\uaca0\uc2b5\ub2c8\ub2e4. \ub450\ubc88\uc9f8 \uc778\uc790\ub294 Capability$IStorage<T> \ub97c \uad6c\ud604\ud558\ub294 \ud074\ub798\uc2a4 \uc785\ub2c8\ub2e4, \uc774\ub54c T\ub294 \uccab\ubc88\uc9f8 \uc778\uc790\ub85c \uc0ac\uc6a9\ud55c \uc778\ud130\ud398\uc774\uc2a4 \uc785\ub2c8\ub2e4. \uc774 \ud074\ub798\uc2a4\ub294 \ub370\uc774\ud130 \ud578\ub4e4\ub7ec\uc774\uba70, \uc774 \ub370\uc774\ud130 \ud578\ub4e4\ub7ec\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uae30\ubcf8 \uad6c\ud604\uc758 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uace0 \ubd88\ub7ec\uc624\ub294 \uc77c\uc744 \ud560 \uac83\uc785\ub2c8\ub2e4. \ub370\uc774\ud130 \ud578\ub4e4\ub7ec\ub294 \uae30\ubcf8 \uad6c\ud604 \uc774\uc678\uc758 \uad6c\ud604\ub4e4\ub610\ud55c \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud074\ub798\uc2a4\ub294 \ub2e8\uc21c\ud788 \ub3c4\uc6b0\ubbf8 \ud074\ub798\uc2a4 \uc785\ub2c8\ub2e4, ICapabilitySerializable \uc5d0 \uc758\ud574 \uc774 \ud074\ub798\uc2a4\uc758 \uba54\uc11c\ub4dc\uac00 \ud638\ucd9c \ub418\uc5b4\uc5b4\uc57c\uc9c0\ub9cc \ub370\uc774\ud130\ub97c \uc77d\uac70\ub098 \uc501\ub2c8\ub2e4. private static class Storage implements Capability.IStorage<IExampleCapability> { @Override public INBT writeNBT(Capability<IExampleCapability> capability, IExampleCapability instance, Direction side) { // NBT \ud0dc\uadf8 \ubc18\ud658 } @Override public void readNBT(Capability<IExampleCapability> capability, IExampleCapability instance, Direction side, INBT nbt) { // NBT \ud0dc\uadf8\ub85c\ubd80\ud130 \uc77d\uc5b4\ub4e4\uc784 } } \ub9c8\uc9d0\uac00 \uc778\uc790\ub294 \uae30\ubcf8 \uad6c\ud604\uc758 \uc0c8\ub85c\uc6b4 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\uace0 \ubc18\ud658\ud558\ub294 factory \uc785\ub2c8\ub2e4. private static class Factory implements Callable<IExampleCapability> { @Override public IExampleCapability call() throws Exception { return new Implementation(); } } \ub9c8\uc9c0\ub9c9\uc73c\ub85c \uae30\ubcf8 \uad6c\ud604\uc744 \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4, \uadf8\ub798\uc57c \ubc29\uae08 \ub9cc\ub4e0 Factory \uc5d0\uc11c \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uaca0\uc9c0\uc694. \uc774 \uacbd\uc6b0\uc5d0\ub294 \uae30\ubcf8 \uad6c\ud604\uc774 Implementation \uc774\ub77c\ub294 \ud074\ub798\uc2a4 \uc785\ub2c8\ub2e4. \uae30\ubcf8 \uad6c\ud604\uc744 \ub514\uc790\uc778\ud558\ub294 \uac83\uc740 \ub3c5\uc790\ubd84\uc5d0\uac8c \ub2ec\ub824 \uc788\uc73c\ub098, \ub9cc\uc57d \uae30\ubcf8 \uad6c\ud604\uc774 \uadf8\ub807\uac8c \uc4f8\ub9cc\ud558\uc9c4 \uc54a\ub2e4\uba74 \ucd5c\uc18c\ud55c \ub2e4\ub978 \uc0ac\ub78c\ub4e4\uc774 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ud14c\uc2a4\ud2b8\ud560 \ub54c \uc4f8 \uc218 \uc788\ub3c4\ub85d \uae30\ubcf8\uc801\uc778 \ubf08\ub300\ub294 \uc7a1\uc544\ub450\uc154\uc57c \ud569\ub2c8\ub2e4. \uccad\ud06c\uc640 \ud0c0\uc77c \uc5d4\ud2f0\ud2f0 \uce90\ud328\ube4c\ub9ac\ud2f0 \ub370\uc774\ud130 \uc720\uc9c0\uc2dc\ud0a4\uc9c0 \uc6d4\ub4dc, \uc5d4\ud2f0\ud2f0, \uc544\uc774\ud15c \uc2a4\ud0dd\uacfc \ub2e4\ub974\uac8c, \uccad\ud06c\uc640 \ud0c0\uc77c \uc5d4\ud2f0\ud2f0\ub4e4\uc740 \uadf8 \ub370\uc774\ud130\uac00 \uc218\uc815\ub418\uc5c8\ub2e4\uace0 \ud45c\uae30\ub418\uc5c8\uc744 \uacbd\uc6b0\uc5d0\ub9cc \ub514\uc2a4\ud06c\uc5d0 \uc368\uc9d1\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \uccad\ud06c \ub610\ub294 \ud0c0\uc77c \uc5d4\ud2f0\ud2f0\uc5d0 \uc0ac\uc6a9\ud560 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\ub97c \uc62c\ubc14\ub974\uac8c \uc720\uc9c0\uc2dc\ud0a4\uc9c0 \uc704\ud574\uc11c\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\uac00 \ubcc0\uacbd\ub418\uc5c8\uc744 \ub54c \ud574\ub2f9 \uac1d\uccb4\uc758 \ub370\uc774\ud130\uac00 \uc218\uc815\ub418\uc5c8\ub2e4\uace0 \ud45c\uae30\ud558\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4. \ud0c0\uc77c \uc5d4\ud2f0\ud2f0\uc5d0 \uc778\ubca4\ud1a0\ub9ac\ub97c \ucd94\uac00\ud558\ub294 ItemStackHandler \ub294 \uc624\ubc84\ub77c\uc774\ub4dc\ud560 \uc218 \uc788\ub294 \uba54\uc11c\ub4dc\uc778 void onContentsChanged(int slot) \uc774\ub77c\ub294 \uba54\uc11c\ub4dc\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 \ud0c0\uc77c \uc5d4\ud2f0\ud2f0\uc758 \ub370\uc774\ud130\uac00 \uc218\uc815\ub418\uc5c8\ub2e4\uace0 \ud45c\uae30\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. public class MyTileEntity extends TileEntity { private final IItemHandler inventory = new ItemStackHandler(...) { @Override protected void onContentsChanged(int slot) { super.onContentsChanged(slot); setChanged(); } } ... } \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ub370\uc774\ud130 \ub3d9\uae30\ud654 \ud558\uae30 \uae30\ubcf8\uc801\uc73c\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uac8c \uc804\uc1a1\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \ubaa8\ub4dc\ub4e4\uc740 \uc2a4\uc2a4\ub85c \ud328\ud0b7\uc744 \uc0ac\uc6a9\ud574\uc11c \ub370\uc774\ud130\ub97c \uc9c1\uc811 \ub3d9\uae30\ud654 \ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654\ud574\uc57c \ud558\ub294 \uc0c1\ud669\uc740 \ud06c\uac8c \uc544\ub798 3\uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4, \uc774\ub7ec\ud55c \uc0c1\ud669\ub4e4\uc744 \ucc98\ub9ac\ud558\ub294 \uac83\uc740 \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. \uc5d4\ud2f0\ud2f0\uac00 \uc6d4\ub4dc\uc5d0 \uc2a4\ud3f0\ub420\ub54c\ub098, \ube14\ub85d\uc774 \uc124\uce58\ub418\ub294 \uacbd\uc6b0. \uc774\ub7f4\ub550 \ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uc5d0 \ucd08\uae30 \uac12\uc744 \ubcf4\ub0b4\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc800\uc7a5\ub41c \ub370\uc774\ud130\uac00 \uc218\uc815\ub418\ub294 \uacbd\uc6b0, \uc774\uacbd\uc6b0 \ub370\uc774\ud130\ub97c \uc8fc\uc2dc\ud558\uace0 \uc788\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uc5d0 \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ud2b9\uc815 \uc5d4\ud2f0\ud2f0\ub098 \ube14\ub85d\uc744 \ucc98\ub2e4\ubcf4\uae30 \uc2dc\uc791\ud560 \ub54c, \uc774 \uacbd\uc6b0 \uc774\ubbf8 \uc874\uc7ac\ud558\ub294 \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud0b9 \ub97c \ucc38\uace0\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \ud328\ud0b7\uc744 \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc138\uc694. Refer to the Networking page for more information on implementing network packets. \ud50c\ub808\uc774\uc5b4\uac00 \uc8fd\uc5b4\ub3c4 \ub370\uc774\ud130 \uc720\uc9c0\uc2dc\ud0a4\uae30 \uae30\ubcf8\uc801\uc73c\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\ub294 \uc0ac\ub9dd\ud558\uba74 \ub2e4 \uc0ac\ub77c\uc9d1\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \ud50c\ub808\uc774\uc5b4\uac00 \uc0ac\ub9dd\uc2dc \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\ub97c \ub9ac\uc2a4\ud3f0 \uacfc\uc815\uc5d0\uc11c \uc218\ub3d9\uc73c\ub85c \ubcf5\uc0ac\ud558\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4. PlayerEvent$Clone \uc758 \uc774\ubca4\ud2b8\ub97c \uad6c\ub3c5\ud558\uc5ec \uc774\ub97c \uad6c\ud604\ud560 \uc218 \uc788\ub294\ub370, \uc8fd\uae30 \uc804 \ud50c\ub808\uc774\uc5b4 \uc5d4\ud2f0\ud2f0\ub85c \ubd80\ud130 \ub370\uc774\ud130\ub97c \uc77d\uc5b4 \uc640 \uc0c8\ub85c\uc6b4 \ud50c\ub808\uc774\uc5b4 \uc5d4\ud2f0\ud2f0\uc5d0 \ub370\uc774\ud130\ub97c \uc791\uc131\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 wasDead \ub77c\ub294 \ud544\ub4dc\ub97c \uc81c\uacf5\ud558\uc5ec, \ud50c\ub808\uc774\uc5b4\uac00 \uc9c4\uc9dc \uc8fd\uc740 \uac83\uc778\uc9c0, \uc544\ub2c8\uba74 \uc5d4\ub4dc\uc5d0\uc11c \ub3cc\uc544\uc624\ub294 \uac83\uc778\uc9c0 \uad6c\ubd84\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uac00 \uc911\uc694\ud55c \uc774\uc720\ub294, \uc5d4\ub4dc\uc5d0\uc11c \ub3cc\uc544\uc62c \ub54c\ub294 \ub370\uc774\ud130\uac00 \uadf8\ub300\ub85c \ub0a8\uc544\uc788\uae30 \ub54c\ubb38\uc5d0 \uc911\ubcf5\uc744 \ubc29\uc9c0\ud574\uc57c \ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. IExtendedEntityProperties \ub85c \ubd80\ud130 \uc774\uc804\ud558\uae30 Warning \uc774\ubd80\ubd84\uc740 \ubc88\uc5ed\uac00\uac00 \uc775\uc219\ud558\uc9c0 \uc54a\uc740 \ubd80\ubd84\uc774\ub77c \ubc88\uc5ed\uc774 \uc644\uc804\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4, IEEP \ub97c \uce90\ud328\ube4c\ub9ac\ud2f0\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud574\uc57c \ud560 \ud544\uc694\uac00 \uc5c6\ub2e4\uba74 \ub118\uc5b4\uac00\uc154\ub3c4 \ub429\ub2c8\ub2e4! \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc740 \uc774\ubbf8 IEEP \ubcf4\ub2e4 \ubaa8\ub4e0 \ubc29\uba74\uc5d0\uc11c \uc6b0\uc6d4\ud558\uc9c0\ub9cc, \uc774 \ub450 \uc2dc\uc2a4\ud15c\uc740 1\ub3001\ub85c \ub300\uc751\ub418\uc9c4 \uc54a\uc2b5\ub2c8\ub2e4, \uc774 \uc139\uc158\uc5d0\uc11c\ub294 IEEP \ub97c \uce90\ud328\ube4c\ub9ac\ud2f0\ub85c \ubc14\uafb8\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \ub2e4\ub8e8\uaca0\uc2b5\ub2c8\ub2e4. \uc544\ub798\ub294 IEEP\uc640 \uce90\ud328\ube4c\ub9ac\ud2f0\uc5d0\uc11c \ub3d9\uc77c\ud55c \uac1c\ub150\ub4e4\uc785\ub2c8\ub2e4: \uc18d\uc131 \uc774\ub984/\uc544\uc774\ub514 ( String ): \uce90\ud328\ube4c\ub9ac\ud2f0 \ud0a4 ( ResourceLocation ) \ub4f1\ub85d ( EntityConstructing ): \ubd80\ucc29 ( AttachCapabilitiesEvent<Entity> ), \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 FMLCommonSetupEvent \uc774\ubca4\ud2b8 \ub3c4\uc911 \ub4f1\ub85d\ud569\ub2c8\ub2e4. NBT \uc77d\uae30/\uc4f0\uae30 \uba54\uc11c\ub4dc: \ub370\uc774\ud130 \uc77d\uae30/\uc4f0\uae30\ub294 \uc790\ub3d9\uc73c\ub85c \uc77c\uc5b4\ub098\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. ICapabilitySerializable \ub97c AttachCapabilitiesEvent<T> \uc5d0\uc11c \ubd80\ucc29\uc2dc\ud0a4\uace0, serializeNBT / deserializeNBT \uc5d0\uc11c IStorage \uc758 writeNBT / readNBT \ub97c \ud638\ucd9c\ud558\uc138\uc694. (IEEP \ub97c \ubaa8\ub4dc \ub0b4\ubd80\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud558\uc600\ub2e4\uba74) \ud06c\uac8c \ud544\uc694\ud558\uc9c0 \uc54a\uc744\ub9cc\ud55c \uae30\ub2a5\ub4e4: \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc740 \uae30\ubcf8 \uad6c\ud604\uc774\ub77c\ub294 \uac1c\ub150\uc744 \ud1b5\ud574, \uc81c 3\uc790\uac00 \ub3c5\uc790\ubd84\uc774 \ub9cc\ub4e0 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc0ac\uc6a9\ud558\uae30 \ud3b8\ud558\ub3c4\ub85d \uac04\ud3b8\ud654 \ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ubaa8\ub4dc \ub0b4\ubd80\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud560 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uacbd\uc6b0 \uae30\ubcf8 \uad6c\ud604\uc774 \ud06c\uac8c \ud544\uc694\uac00 \uc5c6\uae30 \ub54c\ubb38\uc5d0 Factory \uc5d0\uc11c null \uc744 \ubc18\ud658\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 IStorage \ub97c \ud1b5\ud574 \uae30\ubcf8 \uad6c\ud604\uc758 \ub370\uc774\ud130\ub97c \uc77d\uac70\ub098 \uc4f0\ub294 \ub3c4\uc6b0\ubbf8 \ud074\ub798\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \uac83. \uc544\ub798 \ub2e8\uacc4\ub4e4\uc740 \uc774\ubbf8 \ub3c5\uc790\ubd84\uc774 \uc774 \ubb38\uc11c \uc804\uccb4\ub97c \uc77d\uc5c8\uace0 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc744 \uc774\ud574\ud55c\ub2e4\ub294 \uac00\uc815\ud558\uc5d0 \uc791\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4. IEEP \ub97c \uce90\ud328\ube4c\ub9ac\ud2f0\ub85c \ubcc0\ud658\ud558\ub294\ubc95: IEEP\uc758 \ud0a4/\uc544\uc774\ub514 \ubb38\uc790\uc5f4\uc744 ResourceLocation \uc73c\ub85c \ubc14\uafb8\uc138\uc694. (modid \ub97c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub85c \uc0ac\uc6a9\ud558\uc138\uc694). \ub370\uc774\ud130 \ud578\ub4e4\ub7ec\uc5d0 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ucc38\uc870\ud558\ub294 \ud544\ub4dc\ub97c \ub9cc\ub4dc\uc138\uc694. EntityConstructing \uc774\ubca4\ud2b8\ub97c AttachCapabilityEvent \ub85c \ubc14\uafb8\uc138\uc694, \uadf8\ub9ac\uace0 IEEP \ub97c \ubc14\ub85c \ub4f1\ub85d\ud558\ub294 \ub300\uc2e0 ICapabilityProvider \ub97c \ubd80\ucc29\ud558\uc138\uc694(\ub370\uc774\ud130\ub97c \ub514\uc2a4\ud06c\uc5d0 \uc800\uc7a5\ud560 \ud544\uc694\uac00 \uc788\ub2e4\uba74 ICapabilitySerializable \uc744 \ub300\uc2e0 \ubd80\ucc29\ud558\uc138\uc694). IEEP\ub97c \uc0ac\uc6a9\ud558\uc168\ub2e4\uba74, \uc544\ub9c8 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \ub4f1\ub85d\ud558\ub294 register() \ub77c\ub294 \uba54\uc11c\ub4dc\ub97c IEEP \uc5d0 \uc815\uc758\ud574 \ub450\uc168\uc744 \ud150\ub370, \uc5c6\ub2e4\uba74 \ud558\ub098 \ub9cc\ub4dc\uc138\uc694. \uc774 \uba54\uc11c\ub4dc\uc5d0\uc11c\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub4f1\ub85d\ud558\ub294 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\uc138\uc694 (\uadf8\ub9ac\uace0 \ub2e4\uc2dc \ud55c\ubc88 \ub9d0\uc500\ub4e4\uc774\uc9c0\ub9cc, \uc774 \uba54\uc11c\ub4dc\ub97c FMLCommonSetupEvent \ub3c4\uc911 \ud638\ucd9c\ud558\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694).","title":"\uce90\ud328\ube4c\ub9ac\ud2f0"},{"location":"datastorage/capabilities/#_1","text":"\uce90\ud328\ube4c\ub9ac\ud2f0\ub294 \uc5ec\ub7ec \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\ud558\ub290\ub77c \uace0\uc0dd\ud560 \ud544\uc694 \uc5c6\uc774 \ub3d9\uc801\uc774\uace0 \uc720\uc5f0\ud558\uac8c \uc5ec\ub7ec \uae30\ub2a5\ub4e4\uc744 \ub178\ucd9c\uc2dc\ud0ac \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc774 \uc2dc\uc2a4\ud15c\uc740 \ud2b9\uc815 \uac1d\uccb4\uc5d0 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ucd94\uac00\ud558\uac70\ub098 \ub178\ucd9c\uc2dc\ucf1c, \ub3d9\uc801\uc73c\ub85c \uae30\ub2a5\uc744 \ucd94\uac00\ud558\uac70\ub098 \ub370\uc774\ud130\ub97c \ucd94\uac00\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 \uaddc\uaca9\uc744 \uc815\uc758\ud558\ub294 \uc778\ud130\ud398\uc774\uc2a4 , \uadf8 \uc778\ud130\ud398\uc774\uc2a4\uc758 \uae30\ubcf8 \uad6c\ud604 , \uadf8\ub9ac\uace0 \ub370\uc774\ud130 \ud578\ub4e4\ub7ec \uc774 3\uac00\uc9c0\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \ud074\ub798\uc2a4\ub294 \uc5ec\ub7ec\uac1c \uc788\uc744 \uc218 \uc788\uc73c\ub098, \ubb34\uc870\uac74 \ud558\ub098 \uc774\uc0c1\uc740 \uc788\uc5b4\uc57c \ud558\uae30\uc5d0 \uae30\ubcf8 \uad6c\ud604\uc774 \uc694\uad6c\ub429\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \ub370\uc774\ud130 \ud578\ub4e4\ub7ec\ub294 \uae30\ubcf8 \uad6c\ud604\ub9cc \uc9c0\uc6d0\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\ub294 TileEntity, Entity, ItemStack, World, \uadf8\ub9ac\uace0 Chunk \uac00 \uae30\ubcf8\uc801\uc73c\ub85c \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc744 \uc9c0\uc6d0\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4, \uadf8\ub807\uae30\uc5d0 \uc774 \uac1d\uccb4\ub4e4\uc5d0\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc774\ubca4\ud2b8\ub97c \ud1b5\ud574\uc11c \ucd94\uac00\ud558\uac70\ub098, \uac1d\uccb4\ub4e4\uc744 \uad6c\ud604\ud558\uba70 \ub178\ucd9c\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud574\uc11c\ub294 \uc544\ub798 \ub354 \uc790\uc138\ud788 \ub2e4\ub8e8\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","title":"\uce90\ud328\ube4c\ub9ac\ud2f0"},{"location":"datastorage/capabilities/#_2","text":"\ud3ec\uc9c0\uc5d0\uc11c\ub294 IItemHandler , IFluidHandler , \uadf8\ub9ac\uace0 IEnergyStorage \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. IItemHandler \ub294 \uc778\ubca4\ud1a0\ub9ac \uc2ac\ub86f\uc744 \uad00\ub9ac\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uaddc\uaca9\uc785\ub2c8\ub2e4. \uc774 \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 TileEntity, Entity, \ub610\ub294 ItemStack \uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IInventory \uc640 ISidedInventory \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc138\uc694. IFluidHandler \ub294 \uc561\uccb4 \uc800\uc7a5 \uacf5\uac04\uc744 \uad00\ub9ac\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uaddc\uaca9\uc785\ub2c8\ub2e4. \uc774 \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 TileEntity, Entity, \ub610\ub294 ItemStack \uc5d0 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IEnergyStorage \ub294 \uc5d0\ub108\uc9c0 \uc800\uc7a5 \uacf5\uac04\uc744 \uad00\ub9ac\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uaddc\uaca9\uc785\ub2c8\ub2e4. \uc774\ub294 TileEntity, Entity, \ub610\ub294 ItemStack \uc5d0 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. TeamCoFH \uc758 RedstoneFlux API \ub97c \uae30\ubc18\uc73c\ub85c \ud558\uc5ec \ub9cc\ub4e4\uc5b4 \uc84c\uc2b5\ub2c8\ub2e4. \uc5ec\ub2f4\uc73c\ub85c, \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4 \uc0ac\uc774\uc5d0\uc120 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uce90\ud328\ube4c\ub9ac\ud2f0 \uadf8 \uc790\uccb4\uc778\uac83 \ucc98\ub7fc \ud45c\ud604\ud558\uae30\ub3c4 \ud569\ub2c8\ub2e4, IItemHandler \uce90\ud328\ube4c\ub9ac\ud2f0\ub77c\uace0 \ud558\uba74, IItemHandler \uc778\ud130\ud398\uc774\uc2a4\ub97c \uaddc\uaca9\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub9d0\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.","title":"\ud3ec\uc9c0\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0"},{"location":"datastorage/capabilities/#_3","text":"\uc774\ubbf8 \uc774\uc804\uc5d0 \ub9d0\ud588\ub2e4\uc2f6\uc774, TileEntity , Entity , \uadf8\ub9ac\uace0 ItemStack \uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. ICapabilityProvider \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \uac83\uc73c\ub85c \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc744 \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \uac1d\uccb4\ub4e4\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub77c\uace0 \ud569\ub2c8\ub2e4. \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub294 #getCapability \uba54\uc11c\ub4dc\ub97c \uc815\uc758\ud558\ub294\ub370, \uc774 \uba54\uc11c\ub4dc\ub294 \uc81c\uacf5\uc790\uac00 \uac00\uc9c4 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uac10\uc2f8\ub294 LazyOptional \uc774 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud574\uc11c\ub294 \uc544\ub798\uc5d0\uc11c \ub354 \ub2e4\ub8e8\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. \ud55c \uc81c\uacf5\uc790\uac00 \uc5ec\ub7ec \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uac00\uc9c0\uace0 \uc788\uc744 \uc218 \uc788\ub2e4 \ubcf4\ub2c8, \uadf8\uc911 \ud558\ub098\ub9cc \uc120\ud0dd\ud558\uc5ec \ucc38\uc870\ud558\uae30 \uc704\ud574\uc11c\ub294, \ud574\ub2f9 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \uc774 \uc778\uc2a4\ud134\uc2a4\ub294 \uac01 \uce90\ud328\ube4c\ub9ac\ud2f0\ub9c8\ub2e4 \uace0\uc720\ud569\ub2c8\ub2e4. @CapabilityInject \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc544\ub798\ucc98\ub7fc \ud65c\uc6a9\ud558\uc5ec \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uadf8\ub7ec\ub098 \ud3ec\uc9c0\uc5d0\uc11c \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uacf5\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83 \uc774\uc678\uc5d0\ub3c4 CapabilityItemHandler#ITEM_HANDLER_CAPABILITY \uc640 \uac19\uc740 \uc815\uc801 \ucc38\uc870\ub97c \uc774\uc6a9\ud558\uc5ec \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5bb\uc744 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. //IItemHandler \uc758 \uace0\uc720\ud55c \uc778\uc2a4\ud134\uc2a4\ub97c \uc5bb\ub294 \ubc29\ubc95\uc911 \ud558\ub098 @CapabilityInject(IItemHandler.class) static Capability<IItemHandler> ITEM_HANDLER_CAPABILITY = null; static Capability<IItemHandler> STATIC_REFERENCE = CapabilityItemHandler#ITEM_HANDLER_CAPABILITY; @CapabilityInject(IItemHandler.class) static Capability<IItemHandler> A = null; @CapabilityInject(IItemHandler.class) static Capability<IItemHandler> B = null; //\uc774\ub54c ITEM_HANDLER_CAPABILITY, STATIC_REFERENCE, A, \uadf8\ub9ac\uace0 B \uc804\ubd80 \uc815\ud655\ud788 \ub3d9\uc77c\ud55c \uc778\uc2a4\ud134\uc2a4\ub97c \ucc38\uc870\ud568. \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc740 \ud544\ub4dc \ub9d0\uace0\ub3c4 \uba54\uc11c\ub4dc\uc5d0\ub3c4 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud544\ub4dc\uc5d0 \uc801\uc6a9\ud560 \uacbd\uc6b0, \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \ub4f1\ub85d\ub420\ub54c, \ud574\ub2f9 \ud544\ub4dc\uc5d0 \ub2e8\uc21c\ud788 \uadf8 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ud560\ub2f9\ud558\uae30\ub9cc \ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud574\ub2f9 \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \ubaa8\uc885\uc758 \uc774\uc720\ub85c \ub4f1\ub85d\ub418\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc6d0\ub798 \uc874\uc7ac\ud558\ub358 \uac12 null \ub85c \ub0a8\uc544\uc788\uac8c \ub429\ub2c8\ub2e4. \uba54\uc11c\ub4dc\uc5d0 \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc801\uc6a9\ud560 \uacbd\uc6b0, \uadf8 \uba54\uc11c\ub4dc\ub294 \ud574\ub2f9 \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \ub4f1\ub85d\ub420 \ub54c \uc2e4\ud589\ud560 \ucf5c\ubc31\uc774 \ub429\ub2c8\ub2e4. \uc774\ub97c \uc751\uc6a9\ud558\uc5ec \ud2b9\uc815 \uae30\ub2a5\ub4e4\uc744 \uc870\uac74\uc801\uc73c\ub85c \ud65c\uc131\ud654 \uc2dc\ud0ac \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \uc5bb\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\uc2a4\ud134\uc2a4\ub97c #getCapability \uc758 \uc778\uc790\ub85c \uc0ac\uc6a9\ud558\uc5ec TileEntity, Entity, ItemStack \ub4f1\uc5d0 \ud638\ucd9c\ud558\uba74 LazyOptional<T> \uac00 \ubc18\ud658\ub429\ub2c8\ub2e4. \uc774\ub54c T \ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\uc785\ub2c8\ub2e4, \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \ud544\uc694\ud560 \ub54c \ub9c8\ub2e4 #getCapability \ub97c \ud638\ucd9c\ud558\ub294 \uac83\uc740 \uc131\ub2a5 \uc800\ud558\ub97c \uc77c\uc73c\ud0ac \uc218 \uc788\uc73c\ub2c8, \uce90\ud328\ube4c\ub9ac\ud2f0\uc5d0 \uc790\uc8fc \uc811\uadfc\ud574\uc57c \ud55c\ub2e4\uba74 \uc774 LazyOptional<T> \ub97c \ud2b9\uc815 \ud544\ub4dc\uc5d0 \ud560\ub2f9\ud574 \uc800\uc7a5\ud558\ub294 \uac83\ub3c4 \uace0\ub824\ud574\ubcf4\uc544\uc57c \ud569\ub2c8\ub2e4. #getCapability \uba54\uc11c\ub4dc\ub294 Direction \ub610\ud55c \uc778\uc790\ub85c \ubc1b\ub294\ub370, \uc774\ub294 \ubc29\ud5a5(\ub610\ub294 \uba74)\uc5d0 \ub530\ub77c \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \ub9cc\uc57d \ubc29\ud5a5\uc73c\ub85c null \uc774 \uc804\ub2ec\ub418\uc5c8\ub2e4\uba74, \ube14\ub85d \uc548\ucabd\uc5d0\uc11c \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc694\uccad\ud558\uc600\uac70\ub098, \ub9e5\ub77d\uc0c1 \ubc29\ud5a5\uc774 \ud544\uc694\uac00 \uc5c6\uc5b4, \ubc29\ud5a5\uc744 \uc2e0\uacbd\uc4f0\uc9c0 \uc54a\ub294 \ubc94\uc6a9\uc801\uc778 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc694\uccad\ud558\uc600\ub2e4\uace0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d #getCapability \uba54\uc11c\ub4dc\uac00 \uc694\uccad\ubc1b\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubc18\ud658\ud560 \uc218 \uc5c6\ub2e4\uba74, \ube44\uc5b4\uc788\ub294 LazyOptional \uc774 \ub300\uc2e0 \ubc18\ud658\ub429\ub2c8\ub2e4, \uc81c\uacf5\uc790\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc694\uccad\ud558\ub294 \uac83\uc774 \uadf8 \uc608\uc785\ub2c8\ub2e4.","title":"\uc774\ubbf8 \uc874\uc7ac\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc0ac\uc6a9\ud558\uae30"},{"location":"datastorage/capabilities/#_4","text":"\uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub178\ucd9c\ud558\uae30 \uc704\ud574\uc11c\ub294 \uccab\ubc88\uca30\ub85c \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\uc758 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ud558\ub098 \uc54c\uc544\ub450\uc154\uc57c \ud560 \uc810\uc740, \uac01 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub4e4\uc740 \uac01\uc790 \ub2e4\ub978 \ub370\uc774\ud130\ub97c \uac00\uc9c8 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4, \uc774\ub97c \ud65c\uc6a9\ud55c \uc608\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\uc758 \uad6c\ud604\uc758 \uac01\uae30 \ub2e4\ub978 \uc778\uc2a4\ud134\uc2a4\ub4e4\uc744 \uc5ec\ub7ec \uc5d4\ud2f0\ud2f0\uc5d0 \uac01\uac01 \ud560\ub2f9\ud558\uc5ec \uac01\uac01\uc758 \uc5d4\ud2f0\ud2f0\uac00 \ub2e4\ub978 \ub370\uc774\ud130\ub97c \uac00\uc9c0\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc774\ub7f0\uc2dd\uc73c\ub85c \ud65c\uc6a9\ud558\ub294 \uac83\uc740 \ubcf4\ud3b8\uc801\uc774\uba70 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\uc758 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5bb\ub294 \ubc29\ubc95\uc740 \ub450\uac00\uc9c0\uac00 \uc788\ub294\ub370, Capability \ub97c \ud1b5\ud574\uc11c \uae30\ubcf8 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5bb\uac70\ub098, \ub610\ub294 \uc9c1\uc811 \uadf8 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc804\uc790\uc758 \uacbd\uc6b0\ub294 Capability#getDefaultInstance \ub97c \ud1b5\ud574 \uae30\ubcf8 \uad6c\ud604\uc744 \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uae30\ubcf8 \uac12\uc744 \uc0ac\uc6a9\ud574\ub3c4 \uad1c\ucc2e\uc740 \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\ud558\uc138\uc694. IItemHandler \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uacbd\uc6b0, \uc774 \ubc29\ubc95\uc73c\ub85c \uae30\ubcf8 \uad6c\ud604\uc744 \uc5bb\uc744 \uc2dc \uc778\ubca4\ud1a0\ub9ac\uac00 \ud55c\uce78\uc9dc\ub9ac\uc778 \uac83\uc744 \ubc18\ud658\ud558\uae30 \ub54c\ubb38\uc5d0 \ubcc4\ub85c \uc4f8\ubaa8\uac00 \ub9ce\uc9c4 \uc54a\uc744\uac81\ub2c8\ub2e4. \ud6c4\uc790\uc758 \uacbd\uc6b0, \uae30\ubcf8 \uad6c\ud604 \uc774\uc678 \ub2e4\ub978 \uad6c\ud604\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IItemHandler \uc758 \uae30\ubcf8 \uad6c\ud604\uc740 ItemStackhandler \uc778\ub370, \uc774 \ud074\ub798\uc2a4\uc758 \uc0dd\uc131\uc790\ub294 \uc778\ubca4\ud1a0\ub9ac \ud06c\uae30\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc73c\uba70, \uadf8 \uae30\ubcf8\uac12\uc740 1\uc785\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\ub294 \uac83\uc740 \ub298 \uc8fc\uc758\ub97c \uae30\uc6b8\uc5ec\uc57c \ud569\ub2c8\ub2e4, \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\ub824\uace0 \ud558\uba74 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4, \uadf8\ub7ec\ub2c8 \uadf8 \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \uc874\uc7ac\ud558\ub294\uc9c0 \uba3c\uc800 \ud655\uc778\ud558\uc154\uc57c\ub9cc \ud569\ub2c8\ub2e4 (\uc774\uc804 \uc139\uc158\uc5d0\uc11c @CapabilityInject \uc5d0 \ub300\ud55c \ubd80\ubd84\uc744 \ucc38\uace0\ud558\uc138\uc694). \uc774\uc81c \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\uc600\uc73c\ub2c8, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c \uc0ac\uc6a9\uc790\ub4e4\uc5d0\uac8c \uc0c8\ub85c\uc6b4 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub178\ucd9c\ud55c\ub2e4\uace0 \uc54c\ub9ac\uace0 LazyOptional \uc744 \ud1b5\ud55c \ucc38\uc870\ub97c \uc81c\uacf5\ud574\uc57c \ud569\ub2c8\ub2e4. #getCapability \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uace0, \uc778\uc790\ub85c \uc804\ub2ec\ubc1b\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\uc2a4\ud134\uc2a4\ub97c \ub178\ucd9c\ud558\uace0\uc790 \ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc640 \ube44\uad50\ud558\uc138\uc694. \ub9cc\uc57d \ud574\ub2f9 \uc81c\uacf5\uc790\uac00 \ubc29\ud5a5\uc5d0 \ub530\ub77c \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubc18\ud658\ud574\uc57c \ud55c\ub2e4\uba74 \uc804\ub2ec\ubc1b\uc740 side \uc778\uc790\ub97c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uc0ac\uc6a9 \uc608\uc2dc\ub85c\ub294 \ubc29\ud5a5\uc5d0 \ub530\ub77c \ub2e4\ub978 \uc778\ubca4\ud1a0\ub9ac \uc2ac\ub86f\uc744 \uac00\uc9c0\ub294 \uae30\uacc4\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc5d4\ud2f0\ud2f0\uc640 \uc544\uc774\ud15c \uc2a4\ud0dd\uc758 \uacbd\uc6b0 side \ub97c \ubb34\uc2dc\ud560 \uc218 \uc788\uc73c\ub098, \ud50c\ub808\uc774\uc5b4 \uac11\uc637 ( Direction#UP \ub294 \ud50c\ub808\uc774\uc5b4\uc758 \ud22c\uad6c \uc2ac\ub86f\uc758 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub178\ucd9c\ud568) \ub4f1\uacfc \uac19\uc740 \uc6a9\ub3c4\uc5d0 \uc0ac\uc6a9\ud558\uc2e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. super \uba54\uc11c\ub4dc \ud638\ucd9c\uc744 \ud558\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694, \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc774\ubbf8 \ubd80\ucc29\ub41c \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc81c\uacf5\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 \uc81c\uacf5\uc790\uc758 \uc0dd\uba85\uc8fc\uae30\uac00 \ub05d\ub098\uba74 \ubb34\uc870\uac74 LazyOptional#invalidate \ub97c \ud638\ucd9c\ud558\uc5ec \ubb34\ud6a8\ud654 \ud558\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4, \uc5d4\ud2f0\ud2f0\uc640 \ud0c0\uc77c \uc5d4\ud2f0\ud2f0\uc758 \uacbd\uc6b0 \uc6d4\ub4dc\uc5d0\uc11c \uc81c\uac70\ub420 \ub54c #invalidateCaps \ub97c \uc790\ub3d9\uc73c\ub85c \ud638\ucd9c\ud558\uae30 \ub54c\ubb38\uc5d0, \ub9cc\uc57d \uc9c1\uc811 \uc774\ub4e4\uc744 \uad6c\ud604\ud558\uace0 \uacc4\uc2e0\ub2e4\uba74 #invalidateCaps \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc5ec \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubb34\ud6a8\ud654 \uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\uc678 \ub2e4\ub978 \uc81c\uacf5\uc790\ub4e4\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubb34\ud6a8\ud654\uc2dc\ud0a4\ub294 Runnable \uc744 AttachCapabilitiesEvent#addListener \uc5d0 \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4. // \ud0c0\uc77c \uc5d4\ud2f0\ud2f0 \uc790\uc2dd \ud074\ub798\uc2a4 \uc5b4\ub518\uac00\uc5d0 \uc544\ub798 \ub0b4\uc6a9\uc744 \ucd94\uac00\ud558\uc138\uc694 LazyOptional<IItemHandler> inventoryHandlerLazyOptional; // inventoryHandlerSupplier \ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\uc744 \ubc18\ud658\ud558\ub294 Supplier \uc785\ub2c8\ub2e4 (\uc608: () -> inventoryHandler). // \uac1c\uc73c\ub978 \ucd08\uae30\ud654\ub97c \ud558\ub3c4\ub85d \ud558\uc5ec \uaf2d \ud544\uc694\ud560 \ub54c\ub9cc \ucd08\uae30\ud654 \ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. inventoryHandlerLazyOptional = LazyOptional.of(inventoryHandlerSupplier); @Override public <T> LazyOptional<T> getCapability(Capability<T> cap, Direction side) { // cap \uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\uc2a4\ud134\uc2a4 if (cap == CapabilityItemHandler.ITEM_HANDLER_CAPABILITY) { return inventoryHandlerLazyOptional.cast(); } // super \ub97c \ud638\ucd9c\ud558\uc9c0 \uc54a\uc73c\uba74 \ubd80\ucc29\ub41c \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4!! return super.getCapability(cap, side); } @Override public void invalidateCaps() { super.invalidateCaps(); inventoryHandlerLazyOptional.invalidate(); } Item \ub4e4\uc740 \uc870\uae08 \ud2b9\uc774\ud558\uac8c \ub2e4\ub8e8\uc5b4\uc57c \ud558\ub294\ub370, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub4e4\uc744 Item \uc774 \uc544\ub2c8\ub77c ItemStack \uc5d0 \ubd80\ucc29\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 Item#initCapabilities \uc5d0\uc11c \uc0c8\ub85c\uc6b4 \uc81c\uacf5\uc790\ub4e4\uc744 \ubd80\ucc29\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774\ub54c \ubd80\ucc29\ub41c \uce90\ud328\ube4c\ub9ac\ud2f0\ub4e4\uc740 \uadf8 \uc544\uc774\ud15c \uc2a4\ud0dd\uc758 \uc0dd\uba85\uc8fc\uae30\uac00 \ub05d\ub098\uba74 \ubb34\ud6a8\ud654 \ub429\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0 \uc694\uccad\uc740 \ub9e4 \ud2f1\ub9c8\ub2e4, \uc218\uc2ed\ubc88\uc529 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc73c\ub2c8, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub294 \ub9e4\uc6b0 \ube68\ub77c\uc57c\ub9cc \ud569\ub2c8\ub2e4, \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uac8c\uc784\uc758 \uc804\ubc18\uc801\uc778 \uc131\ub2a5\uc744 \uc800\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \uc678\ubd80 \uc790\ub8cc\uad6c\uc870 \ub4f1\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uad8c\uc7a5\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"\uce90\ud328\ube4c\ub9ac\ud2f0 \ub178\ucd9c\ud558\uae30"},{"location":"datastorage/capabilities/#_5","text":"\uc774\ubbf8 \uc774\uc804\uc5d0 \uc5b8\uae09\ud588\ub4ef\uc774, \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc774\ubbf8 \uc874\uc7ac\ud558\ub294 World \ub098 Chunk \uc640 \uac19\uc740 \uc81c\uacf5\uc790\uc5d0 \ubd80\ucc29\ud558\ub294 \uac83\uc740 AttachCapabilitiesEvent \ub97c \ud1b5\ud574 \uc774\ub8e8\uc5b4\uc9d1\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 \ubaa8\ub4e0 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. AttachCapabilitiesEvent \ub294 5\uac1c\uc758 \uc81c\ub108\ub9ad \ud0c0\uc785\uc774 \uc788\ub294\ub370, \uc774\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: AttachCapabilitiesEvent<Entity> : \uc5d4\ud2f0\ud2f0\uc5d0\ub9cc \ubc29\uc1a1\ub428. AttachCapabilitiesEvent<TileEntity> : \ud0c0\uc77c \uc5d4\ud2f0\ud2f0\uc5d0\ub9cc \ubc29\uc1a1\ub428. AttachCapabilitiesEvent<ItemStack> : \uc544\uc774\ud15c \uc2a4\ud0dd\uc5d0\ub9cc \ubc29\uc1a1\ub428. AttachCapabilitiesEvent<World> : \uc6d4\ub4dc\uc5d0\ub9cc \ubc29\uc1a1\ub428. AttachCapabilitiesEvent<Chunk> : \uccad\ud06c\uc5d0\ub9cc \ubc29\uc1a1\ub428. \uc774 \uc81c\ub108\ub9ad \ud0c0\uc785\ub4e4\uc740 \uc704\uc5d0 \uc9c0\uc815\ub41c \ud0c0\uc785\ub4e4\ubcf4\ub2e4 \ub354 \uad6c\uccb4\uc801\uc77c \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4, \uc608\ub97c \ub4e4\uc5b4, PlayerEntity \uc5d0\ub2e4\uac00 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubd80\ucc29\uc2dc\ud0a4\uace0 \uc2f6\ub2e4\uba74 AttachCapabilitiesEvent<Event> \uc774\ubca4\ud2b8\ub97c \uad6c\ub3c5\ud55c \uc774\ud6c4, \uc804\ub2ec\ub41c \uc81c\uacf5\uc790 \uac1d\uccb4\uac00 PlayerEntity \uc778\uc9c0 \ud655\uc778\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 #addCapability \uba54\uc11c\ub4dc\uac00 \uc788\ub294\ub370, \uc774 \uc774\ubca4\ud2b8\ub294 \ub300\uc0c1 \uc81c\uacf5\uc790 \uac1d\uccb4\uc5d0\ub2e4\uac00 \uc0c8\ub85c\uc6b4 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubd80\ucc29\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uc2a4\ud2b8\uc5d0 \uce90\ud328\ube4c\ub9ac\ud2f0 \uadf8 \uc790\uccb4\ub97c \ucd94\uac00\ud558\uae30 \ubcf4\ub2e4\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4, \uc989 \uc774\ubbf8 \uc874\uc7ac\ud558\ub294 \uc81c\uacf5\uc790\uc5d0\ub2e4\uac00 \ub610 \ub2e4\ub978 \uc81c\uacf5\uc790\ub97c \ucd94\uac00\ud558\ub294 \uac83\uc774\uc9c0\uc694. \uc774\ub54c, \ucd94\uac00\ub418\ub294 \uc81c\uacf5\uc790\ub4e4\uc740 \ubcf4\ud3b8\uc801\uc73c\ub85c \uc775\uba85\ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \ub610\ud55c, \ucd94\uac00\ub418\ub294 \uc81c\uacf5\uc790\ub4e4\uc740 \ubc29\ud5a5\uc5d0 \ub530\ub77c \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubc18\ud658\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub294 ICapabilityProvider \ub9cc \uad6c\ud604\ud558\uba74 \ub418\uc9c0\ub9cc, \ub9cc\uc57d \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\uac00 \uc720\uc9c0\ub418\uc5b4\uc57c \ud560 \uacbd\uc6b0, ICapabilitySerializable<T extends INBT> \ub97c \ub300\uc2e0 \uad6c\ud604\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4, \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc81c\uacf5\ud558\ub294 \uba54\uc11c\ub4dc \ubfd0\ub9cc \uc544\ub2c8\ub77c NBT\ub97c \uc800\uc7a5\ud558\uace0 \ubd88\ub7ec\uc624\ub294 \uba54\uc11c\ub4dc \ub610\ud55c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. ICapabilityProvider \uad6c\ud604\uc5d0 \uad00\ud574\uc11c\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \ub178\ucd9c\uc2dc\ud0a4\uae30 \uc139\uc158\uc744 \ucc38\uace0\ud558\uc138\uc694.","title":"\uce90\ud328\ube4c\ub9ac\ud2f0 \ubd80\ucc29\ud558\uae30"},{"location":"datastorage/capabilities/#_6","text":"\uc77c\ubc18\uc801\uc73c\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 CapabilityManager.INSTANCE.register(...) \ub97c FMLCommenSetupEvent \ub3c4\uc911 \ud638\ucd9c\ud558\uc5ec \ub4f1\ub85d\ud569\ub2c8\ub2e4, \ub530\ub85c \ud074\ub798\uc2a4\ub97c \ud558\ub098 \ub9cc\ub4e4\uc5b4\uc11c \uce90\ud328\ube4c\ub9ac\ud2f0\uc640 \uad00\ub828 \ubaa8\ub4e0 \ucf54\ub4dc\ub97c \uadf8\uacf3\uc5d0 \uc791\uc131\ud558\ub294 \uac83\ub3c4 \ubc29\ubc95\uc774\uae34 \ud558\ub098 \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. \uc774 \ubb38\uc11c\uc5d0\uc11c\ub294 \uc775\uba85 \ud074\ub798\uc2a4\uac00 \uc544\ub2cc \uc774\ub984\uc774 \uc788\ub294 \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud560 \uac83\uc774\ub098, \uc775\uba85 \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc154\ub3c4 \uc544\ubb34\ub7f0 \ubb38\uc81c\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. public void onCommonSet(FMLCommonSetupEvent event) { CapabilityManager.INSTANCE.register(<\uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\uc758 \ud074\ub798\uc2a4>, <\ub370\uc774\ud130 \ud578\ub4e4\ub7ec>, <\uae30\ubcf8 \uad6c\ud604 Factory>); } \uc774 \uba54\uc11c\ub4dc\uc758 \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\uc785\ub2c8\ub2e4, \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uae30\ub2a5\uc744 \uc124\uba85\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \uc608\uc2dc\uc5d0\uc11c\ub294 \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub97c IExampleCapability.class \ub77c\uace0 \ud558\uaca0\uc2b5\ub2c8\ub2e4. \ub450\ubc88\uc9f8 \uc778\uc790\ub294 Capability$IStorage<T> \ub97c \uad6c\ud604\ud558\ub294 \ud074\ub798\uc2a4 \uc785\ub2c8\ub2e4, \uc774\ub54c T\ub294 \uccab\ubc88\uc9f8 \uc778\uc790\ub85c \uc0ac\uc6a9\ud55c \uc778\ud130\ud398\uc774\uc2a4 \uc785\ub2c8\ub2e4. \uc774 \ud074\ub798\uc2a4\ub294 \ub370\uc774\ud130 \ud578\ub4e4\ub7ec\uc774\uba70, \uc774 \ub370\uc774\ud130 \ud578\ub4e4\ub7ec\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uae30\ubcf8 \uad6c\ud604\uc758 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uace0 \ubd88\ub7ec\uc624\ub294 \uc77c\uc744 \ud560 \uac83\uc785\ub2c8\ub2e4. \ub370\uc774\ud130 \ud578\ub4e4\ub7ec\ub294 \uae30\ubcf8 \uad6c\ud604 \uc774\uc678\uc758 \uad6c\ud604\ub4e4\ub610\ud55c \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud074\ub798\uc2a4\ub294 \ub2e8\uc21c\ud788 \ub3c4\uc6b0\ubbf8 \ud074\ub798\uc2a4 \uc785\ub2c8\ub2e4, ICapabilitySerializable \uc5d0 \uc758\ud574 \uc774 \ud074\ub798\uc2a4\uc758 \uba54\uc11c\ub4dc\uac00 \ud638\ucd9c \ub418\uc5b4\uc5b4\uc57c\uc9c0\ub9cc \ub370\uc774\ud130\ub97c \uc77d\uac70\ub098 \uc501\ub2c8\ub2e4. private static class Storage implements Capability.IStorage<IExampleCapability> { @Override public INBT writeNBT(Capability<IExampleCapability> capability, IExampleCapability instance, Direction side) { // NBT \ud0dc\uadf8 \ubc18\ud658 } @Override public void readNBT(Capability<IExampleCapability> capability, IExampleCapability instance, Direction side, INBT nbt) { // NBT \ud0dc\uadf8\ub85c\ubd80\ud130 \uc77d\uc5b4\ub4e4\uc784 } } \ub9c8\uc9d0\uac00 \uc778\uc790\ub294 \uae30\ubcf8 \uad6c\ud604\uc758 \uc0c8\ub85c\uc6b4 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\uace0 \ubc18\ud658\ud558\ub294 factory \uc785\ub2c8\ub2e4. private static class Factory implements Callable<IExampleCapability> { @Override public IExampleCapability call() throws Exception { return new Implementation(); } } \ub9c8\uc9c0\ub9c9\uc73c\ub85c \uae30\ubcf8 \uad6c\ud604\uc744 \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4, \uadf8\ub798\uc57c \ubc29\uae08 \ub9cc\ub4e0 Factory \uc5d0\uc11c \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uaca0\uc9c0\uc694. \uc774 \uacbd\uc6b0\uc5d0\ub294 \uae30\ubcf8 \uad6c\ud604\uc774 Implementation \uc774\ub77c\ub294 \ud074\ub798\uc2a4 \uc785\ub2c8\ub2e4. \uae30\ubcf8 \uad6c\ud604\uc744 \ub514\uc790\uc778\ud558\ub294 \uac83\uc740 \ub3c5\uc790\ubd84\uc5d0\uac8c \ub2ec\ub824 \uc788\uc73c\ub098, \ub9cc\uc57d \uae30\ubcf8 \uad6c\ud604\uc774 \uadf8\ub807\uac8c \uc4f8\ub9cc\ud558\uc9c4 \uc54a\ub2e4\uba74 \ucd5c\uc18c\ud55c \ub2e4\ub978 \uc0ac\ub78c\ub4e4\uc774 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ud14c\uc2a4\ud2b8\ud560 \ub54c \uc4f8 \uc218 \uc788\ub3c4\ub85d \uae30\ubcf8\uc801\uc778 \ubf08\ub300\ub294 \uc7a1\uc544\ub450\uc154\uc57c \ud569\ub2c8\ub2e4.","title":"\uce90\ud328\ube4c\ub9ac\ud2f0 \uc9c1\uc811 \ub9cc\ub4e4\uae30"},{"location":"datastorage/capabilities/#_7","text":"\uc6d4\ub4dc, \uc5d4\ud2f0\ud2f0, \uc544\uc774\ud15c \uc2a4\ud0dd\uacfc \ub2e4\ub974\uac8c, \uccad\ud06c\uc640 \ud0c0\uc77c \uc5d4\ud2f0\ud2f0\ub4e4\uc740 \uadf8 \ub370\uc774\ud130\uac00 \uc218\uc815\ub418\uc5c8\ub2e4\uace0 \ud45c\uae30\ub418\uc5c8\uc744 \uacbd\uc6b0\uc5d0\ub9cc \ub514\uc2a4\ud06c\uc5d0 \uc368\uc9d1\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \uccad\ud06c \ub610\ub294 \ud0c0\uc77c \uc5d4\ud2f0\ud2f0\uc5d0 \uc0ac\uc6a9\ud560 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\ub97c \uc62c\ubc14\ub974\uac8c \uc720\uc9c0\uc2dc\ud0a4\uc9c0 \uc704\ud574\uc11c\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\uac00 \ubcc0\uacbd\ub418\uc5c8\uc744 \ub54c \ud574\ub2f9 \uac1d\uccb4\uc758 \ub370\uc774\ud130\uac00 \uc218\uc815\ub418\uc5c8\ub2e4\uace0 \ud45c\uae30\ud558\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4. \ud0c0\uc77c \uc5d4\ud2f0\ud2f0\uc5d0 \uc778\ubca4\ud1a0\ub9ac\ub97c \ucd94\uac00\ud558\ub294 ItemStackHandler \ub294 \uc624\ubc84\ub77c\uc774\ub4dc\ud560 \uc218 \uc788\ub294 \uba54\uc11c\ub4dc\uc778 void onContentsChanged(int slot) \uc774\ub77c\ub294 \uba54\uc11c\ub4dc\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 \ud0c0\uc77c \uc5d4\ud2f0\ud2f0\uc758 \ub370\uc774\ud130\uac00 \uc218\uc815\ub418\uc5c8\ub2e4\uace0 \ud45c\uae30\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. public class MyTileEntity extends TileEntity { private final IItemHandler inventory = new ItemStackHandler(...) { @Override protected void onContentsChanged(int slot) { super.onContentsChanged(slot); setChanged(); } } ... }","title":"\uccad\ud06c\uc640 \ud0c0\uc77c \uc5d4\ud2f0\ud2f0 \uce90\ud328\ube4c\ub9ac\ud2f0 \ub370\uc774\ud130 \uc720\uc9c0\uc2dc\ud0a4\uc9c0"},{"location":"datastorage/capabilities/#_8","text":"\uae30\ubcf8\uc801\uc73c\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uac8c \uc804\uc1a1\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \ubaa8\ub4dc\ub4e4\uc740 \uc2a4\uc2a4\ub85c \ud328\ud0b7\uc744 \uc0ac\uc6a9\ud574\uc11c \ub370\uc774\ud130\ub97c \uc9c1\uc811 \ub3d9\uae30\ud654 \ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654\ud574\uc57c \ud558\ub294 \uc0c1\ud669\uc740 \ud06c\uac8c \uc544\ub798 3\uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4, \uc774\ub7ec\ud55c \uc0c1\ud669\ub4e4\uc744 \ucc98\ub9ac\ud558\ub294 \uac83\uc740 \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. \uc5d4\ud2f0\ud2f0\uac00 \uc6d4\ub4dc\uc5d0 \uc2a4\ud3f0\ub420\ub54c\ub098, \ube14\ub85d\uc774 \uc124\uce58\ub418\ub294 \uacbd\uc6b0. \uc774\ub7f4\ub550 \ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uc5d0 \ucd08\uae30 \uac12\uc744 \ubcf4\ub0b4\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc800\uc7a5\ub41c \ub370\uc774\ud130\uac00 \uc218\uc815\ub418\ub294 \uacbd\uc6b0, \uc774\uacbd\uc6b0 \ub370\uc774\ud130\ub97c \uc8fc\uc2dc\ud558\uace0 \uc788\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uc5d0 \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ud2b9\uc815 \uc5d4\ud2f0\ud2f0\ub098 \ube14\ub85d\uc744 \ucc98\ub2e4\ubcf4\uae30 \uc2dc\uc791\ud560 \ub54c, \uc774 \uacbd\uc6b0 \uc774\ubbf8 \uc874\uc7ac\ud558\ub294 \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud0b9 \ub97c \ucc38\uace0\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \ud328\ud0b7\uc744 \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc138\uc694. Refer to the Networking page for more information on implementing network packets.","title":"\ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ub370\uc774\ud130 \ub3d9\uae30\ud654 \ud558\uae30"},{"location":"datastorage/capabilities/#_9","text":"\uae30\ubcf8\uc801\uc73c\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\ub294 \uc0ac\ub9dd\ud558\uba74 \ub2e4 \uc0ac\ub77c\uc9d1\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \ud50c\ub808\uc774\uc5b4\uac00 \uc0ac\ub9dd\uc2dc \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\ub97c \ub9ac\uc2a4\ud3f0 \uacfc\uc815\uc5d0\uc11c \uc218\ub3d9\uc73c\ub85c \ubcf5\uc0ac\ud558\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4. PlayerEvent$Clone \uc758 \uc774\ubca4\ud2b8\ub97c \uad6c\ub3c5\ud558\uc5ec \uc774\ub97c \uad6c\ud604\ud560 \uc218 \uc788\ub294\ub370, \uc8fd\uae30 \uc804 \ud50c\ub808\uc774\uc5b4 \uc5d4\ud2f0\ud2f0\ub85c \ubd80\ud130 \ub370\uc774\ud130\ub97c \uc77d\uc5b4 \uc640 \uc0c8\ub85c\uc6b4 \ud50c\ub808\uc774\uc5b4 \uc5d4\ud2f0\ud2f0\uc5d0 \ub370\uc774\ud130\ub97c \uc791\uc131\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 wasDead \ub77c\ub294 \ud544\ub4dc\ub97c \uc81c\uacf5\ud558\uc5ec, \ud50c\ub808\uc774\uc5b4\uac00 \uc9c4\uc9dc \uc8fd\uc740 \uac83\uc778\uc9c0, \uc544\ub2c8\uba74 \uc5d4\ub4dc\uc5d0\uc11c \ub3cc\uc544\uc624\ub294 \uac83\uc778\uc9c0 \uad6c\ubd84\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uac00 \uc911\uc694\ud55c \uc774\uc720\ub294, \uc5d4\ub4dc\uc5d0\uc11c \ub3cc\uc544\uc62c \ub54c\ub294 \ub370\uc774\ud130\uac00 \uadf8\ub300\ub85c \ub0a8\uc544\uc788\uae30 \ub54c\ubb38\uc5d0 \uc911\ubcf5\uc744 \ubc29\uc9c0\ud574\uc57c \ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.","title":"\ud50c\ub808\uc774\uc5b4\uac00 \uc8fd\uc5b4\ub3c4 \ub370\uc774\ud130 \uc720\uc9c0\uc2dc\ud0a4\uae30"},{"location":"datastorage/capabilities/#iextendedentityproperties","text":"Warning \uc774\ubd80\ubd84\uc740 \ubc88\uc5ed\uac00\uac00 \uc775\uc219\ud558\uc9c0 \uc54a\uc740 \ubd80\ubd84\uc774\ub77c \ubc88\uc5ed\uc774 \uc644\uc804\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4, IEEP \ub97c \uce90\ud328\ube4c\ub9ac\ud2f0\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud574\uc57c \ud560 \ud544\uc694\uac00 \uc5c6\ub2e4\uba74 \ub118\uc5b4\uac00\uc154\ub3c4 \ub429\ub2c8\ub2e4! \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc740 \uc774\ubbf8 IEEP \ubcf4\ub2e4 \ubaa8\ub4e0 \ubc29\uba74\uc5d0\uc11c \uc6b0\uc6d4\ud558\uc9c0\ub9cc, \uc774 \ub450 \uc2dc\uc2a4\ud15c\uc740 1\ub3001\ub85c \ub300\uc751\ub418\uc9c4 \uc54a\uc2b5\ub2c8\ub2e4, \uc774 \uc139\uc158\uc5d0\uc11c\ub294 IEEP \ub97c \uce90\ud328\ube4c\ub9ac\ud2f0\ub85c \ubc14\uafb8\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \ub2e4\ub8e8\uaca0\uc2b5\ub2c8\ub2e4. \uc544\ub798\ub294 IEEP\uc640 \uce90\ud328\ube4c\ub9ac\ud2f0\uc5d0\uc11c \ub3d9\uc77c\ud55c \uac1c\ub150\ub4e4\uc785\ub2c8\ub2e4: \uc18d\uc131 \uc774\ub984/\uc544\uc774\ub514 ( String ): \uce90\ud328\ube4c\ub9ac\ud2f0 \ud0a4 ( ResourceLocation ) \ub4f1\ub85d ( EntityConstructing ): \ubd80\ucc29 ( AttachCapabilitiesEvent<Entity> ), \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 FMLCommonSetupEvent \uc774\ubca4\ud2b8 \ub3c4\uc911 \ub4f1\ub85d\ud569\ub2c8\ub2e4. NBT \uc77d\uae30/\uc4f0\uae30 \uba54\uc11c\ub4dc: \ub370\uc774\ud130 \uc77d\uae30/\uc4f0\uae30\ub294 \uc790\ub3d9\uc73c\ub85c \uc77c\uc5b4\ub098\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. ICapabilitySerializable \ub97c AttachCapabilitiesEvent<T> \uc5d0\uc11c \ubd80\ucc29\uc2dc\ud0a4\uace0, serializeNBT / deserializeNBT \uc5d0\uc11c IStorage \uc758 writeNBT / readNBT \ub97c \ud638\ucd9c\ud558\uc138\uc694. (IEEP \ub97c \ubaa8\ub4dc \ub0b4\ubd80\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud558\uc600\ub2e4\uba74) \ud06c\uac8c \ud544\uc694\ud558\uc9c0 \uc54a\uc744\ub9cc\ud55c \uae30\ub2a5\ub4e4: \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc740 \uae30\ubcf8 \uad6c\ud604\uc774\ub77c\ub294 \uac1c\ub150\uc744 \ud1b5\ud574, \uc81c 3\uc790\uac00 \ub3c5\uc790\ubd84\uc774 \ub9cc\ub4e0 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc0ac\uc6a9\ud558\uae30 \ud3b8\ud558\ub3c4\ub85d \uac04\ud3b8\ud654 \ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ubaa8\ub4dc \ub0b4\ubd80\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud560 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uacbd\uc6b0 \uae30\ubcf8 \uad6c\ud604\uc774 \ud06c\uac8c \ud544\uc694\uac00 \uc5c6\uae30 \ub54c\ubb38\uc5d0 Factory \uc5d0\uc11c null \uc744 \ubc18\ud658\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 IStorage \ub97c \ud1b5\ud574 \uae30\ubcf8 \uad6c\ud604\uc758 \ub370\uc774\ud130\ub97c \uc77d\uac70\ub098 \uc4f0\ub294 \ub3c4\uc6b0\ubbf8 \ud074\ub798\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \uac83. \uc544\ub798 \ub2e8\uacc4\ub4e4\uc740 \uc774\ubbf8 \ub3c5\uc790\ubd84\uc774 \uc774 \ubb38\uc11c \uc804\uccb4\ub97c \uc77d\uc5c8\uace0 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc744 \uc774\ud574\ud55c\ub2e4\ub294 \uac00\uc815\ud558\uc5d0 \uc791\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4. IEEP \ub97c \uce90\ud328\ube4c\ub9ac\ud2f0\ub85c \ubcc0\ud658\ud558\ub294\ubc95: IEEP\uc758 \ud0a4/\uc544\uc774\ub514 \ubb38\uc790\uc5f4\uc744 ResourceLocation \uc73c\ub85c \ubc14\uafb8\uc138\uc694. (modid \ub97c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub85c \uc0ac\uc6a9\ud558\uc138\uc694). \ub370\uc774\ud130 \ud578\ub4e4\ub7ec\uc5d0 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ucc38\uc870\ud558\ub294 \ud544\ub4dc\ub97c \ub9cc\ub4dc\uc138\uc694. EntityConstructing \uc774\ubca4\ud2b8\ub97c AttachCapabilityEvent \ub85c \ubc14\uafb8\uc138\uc694, \uadf8\ub9ac\uace0 IEEP \ub97c \ubc14\ub85c \ub4f1\ub85d\ud558\ub294 \ub300\uc2e0 ICapabilityProvider \ub97c \ubd80\ucc29\ud558\uc138\uc694(\ub370\uc774\ud130\ub97c \ub514\uc2a4\ud06c\uc5d0 \uc800\uc7a5\ud560 \ud544\uc694\uac00 \uc788\ub2e4\uba74 ICapabilitySerializable \uc744 \ub300\uc2e0 \ubd80\ucc29\ud558\uc138\uc694). IEEP\ub97c \uc0ac\uc6a9\ud558\uc168\ub2e4\uba74, \uc544\ub9c8 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \ub4f1\ub85d\ud558\ub294 register() \ub77c\ub294 \uba54\uc11c\ub4dc\ub97c IEEP \uc5d0 \uc815\uc758\ud574 \ub450\uc168\uc744 \ud150\ub370, \uc5c6\ub2e4\uba74 \ud558\ub098 \ub9cc\ub4dc\uc138\uc694. \uc774 \uba54\uc11c\ub4dc\uc5d0\uc11c\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub4f1\ub85d\ud558\ub294 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\uc138\uc694 (\uadf8\ub9ac\uace0 \ub2e4\uc2dc \ud55c\ubc88 \ub9d0\uc500\ub4e4\uc774\uc9c0\ub9cc, \uc774 \uba54\uc11c\ub4dc\ub97c FMLCommonSetupEvent \ub3c4\uc911 \ud638\ucd9c\ud558\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694).","title":"IExtendedEntityProperties \ub85c \ubd80\ud130 \uc774\uc804\ud558\uae30"},{"location":"datastorage/worldsaveddata/","text":"\uc6d4\ub4dc \uc800\uc7a5 \ub370\uc774\ud130 \uc6d4\ub4dc \uc800\uc7a5 \ub370\uc774\ud130 (\ub610\ub294 World Saved Data, WSD) \uce90\ud328\ube4c\ub9ac\ud2f0 \ub300\uc2e0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc2dc\uc2a4\ud15c\uc73c\ub85c \uac01 \uc6d4\ub4dc\uc5d0\ub2e4\uac00 \ub370\uc774\ud130\ub97c \ubd80\ucc29\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc120\uc5b8\ud558\uae30 \uac01 WSD \uad6c\ud604\ub4e4\uc740 WorldSavedData \ud074\ub798\uc2a4\uc758 \ud558\uc704 \ud074\ub798\uc2a4\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4. \uc774\ub54c \uc8fc\ubaa9\ud574\uc57c \ud560 \uba54\uc11c\ub4dc\uac00 3\uac1c\uac00 \uc788\ub294\ub370: save : NBT \ub370\uc774\ud130\ub97c \uc6d4\ub4dc\uc5d0 \uc791\uc131\ud569\ub2c8\ub2e4. load : \uc774\uc804\uc5d0 \uc800\uc7a5\ub41c NBT \ub370\uc774\ud130\ub97c \uc77d\uc5b4\ub4e4\uc785\ub2c8\ub2e4. setDirty : \uc6d4\ub4dc\uc758 \ub370\uc774\ud130\uac00 \uc218\uc815\ub41c \uc774\ud6c4, \uac8c\uc784\uc5d0 \uc6d4\ub4dc\uc758 \ub370\uc774\ud130\uac00 \ubcc0\uacbd\ub418\uc5c8\uc74c\uc744 \uc54c\ub9ac\uae30 \uc704\ud574 \ubb34\uc870\uac74 \ud638\ucd9c\ub418\uc5b4\uc57c \ud558\ub294 \uba54\uc11c\ub4dc\uc785\ub2c8\ub2e4. \ub9cc\uc57d \uc774 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 #save \uba54\uc11c\ub4dc\ub294 \ud638\ucd9c\ub418\uc9c0 \uc54a\uc744 \uac83\uc774\uace0, \ubcc0\uacbd\ub41c \ub370\uc774\ud130\ub294 \uc720\uc9c0\ub418\uc9c0 \uc54a\uc744 \uac83\uc785\ub2c8\ub2e4. The constructor of the class also requires a String . This is the name of the .dat file stored within the data folder for the implemented world. For example, if a WSD was named \u201cexample\u201d within the Nether, then a file would be created at ./<level_folder>/DIM-1/data/example.dat . Attaching to a World Any WorldSavedData is loaded and/or attached to a world dynamically. As such, if one is never created on a world, then it will not exist. WorldSavedData s are created and loaded from the DimensionSavedDataManager , which can be accessed by either ServerChunkProvider#getDataStorage or ServerWorld#getChunkSource . From there, you can get or create an instance of your WSD by calling DimensionSavedDataManager#computeIfAbsent . This will attempt to get the current instance of the WSD if present or create a new one and load all available data. To persist a WSD across worlds, a WSD should be attached to the Overworld dimension, which can be obtained from MinecraftServer#overworld . The Overworld is the only dimension that is never fully unloaded and as such makes it perfect to store multi-world data on.","title":"\uc6d4\ub4dc \uc800\uc7a5 \ub370\uc774\ud130"},{"location":"datastorage/worldsaveddata/#_1","text":"\uc6d4\ub4dc \uc800\uc7a5 \ub370\uc774\ud130 (\ub610\ub294 World Saved Data, WSD) \uce90\ud328\ube4c\ub9ac\ud2f0 \ub300\uc2e0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc2dc\uc2a4\ud15c\uc73c\ub85c \uac01 \uc6d4\ub4dc\uc5d0\ub2e4\uac00 \ub370\uc774\ud130\ub97c \ubd80\ucc29\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc6d4\ub4dc \uc800\uc7a5 \ub370\uc774\ud130"},{"location":"datastorage/worldsaveddata/#_2","text":"\uac01 WSD \uad6c\ud604\ub4e4\uc740 WorldSavedData \ud074\ub798\uc2a4\uc758 \ud558\uc704 \ud074\ub798\uc2a4\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4. \uc774\ub54c \uc8fc\ubaa9\ud574\uc57c \ud560 \uba54\uc11c\ub4dc\uac00 3\uac1c\uac00 \uc788\ub294\ub370: save : NBT \ub370\uc774\ud130\ub97c \uc6d4\ub4dc\uc5d0 \uc791\uc131\ud569\ub2c8\ub2e4. load : \uc774\uc804\uc5d0 \uc800\uc7a5\ub41c NBT \ub370\uc774\ud130\ub97c \uc77d\uc5b4\ub4e4\uc785\ub2c8\ub2e4. setDirty : \uc6d4\ub4dc\uc758 \ub370\uc774\ud130\uac00 \uc218\uc815\ub41c \uc774\ud6c4, \uac8c\uc784\uc5d0 \uc6d4\ub4dc\uc758 \ub370\uc774\ud130\uac00 \ubcc0\uacbd\ub418\uc5c8\uc74c\uc744 \uc54c\ub9ac\uae30 \uc704\ud574 \ubb34\uc870\uac74 \ud638\ucd9c\ub418\uc5b4\uc57c \ud558\ub294 \uba54\uc11c\ub4dc\uc785\ub2c8\ub2e4. \ub9cc\uc57d \uc774 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 #save \uba54\uc11c\ub4dc\ub294 \ud638\ucd9c\ub418\uc9c0 \uc54a\uc744 \uac83\uc774\uace0, \ubcc0\uacbd\ub41c \ub370\uc774\ud130\ub294 \uc720\uc9c0\ub418\uc9c0 \uc54a\uc744 \uac83\uc785\ub2c8\ub2e4. The constructor of the class also requires a String . This is the name of the .dat file stored within the data folder for the implemented world. For example, if a WSD was named \u201cexample\u201d within the Nether, then a file would be created at ./<level_folder>/DIM-1/data/example.dat .","title":"\uc120\uc5b8\ud558\uae30"},{"location":"datastorage/worldsaveddata/#attaching-to-a-world","text":"Any WorldSavedData is loaded and/or attached to a world dynamically. As such, if one is never created on a world, then it will not exist. WorldSavedData s are created and loaded from the DimensionSavedDataManager , which can be accessed by either ServerChunkProvider#getDataStorage or ServerWorld#getChunkSource . From there, you can get or create an instance of your WSD by calling DimensionSavedDataManager#computeIfAbsent . This will attempt to get the current instance of the WSD if present or create a new one and load all available data. To persist a WSD across worlds, a WSD should be attached to the Overworld dimension, which can be obtained from MinecraftServer#overworld . The Overworld is the only dimension that is never fully unloaded and as such makes it perfect to store multi-world data on.","title":"Attaching to a World"},{"location":"effects/particles/","text":"Particles Particles are an effect within the game used as polish to better improve immersion. Their usefulness also requires great caution because of their methods of creation and reference. Creating a Particle Particles are broken up between its client only implementation to display the particle and its common implementation to reference the particle or sync data from the server. Class Side Description ParticleType BOTH The registry object of a particle\u2019s type definition used to reference the particle on either side IParticleData BOTH A data holder used to sync information from the network or a command to the associated client(s) IParticleFactory CLIENT A factory registered by the ParticleType used to construct a Particle from the associated IParticleData . Particle CLIENT The renderable logic to display on the associated client(s) ParticleType A ParticleType is the registry object defining what a particular particle type is and provides an available reference to the specific particle on both sides. As such, every ParticleType must be registered . Each ParticleType takes in two parameters: an overrideLimiter which determines whether the particle renders regardless of distance, and a IParticleData$IDeserializer which is used to read the sent IParticleData on the client. As the base ParticleType is abstract, a single method needs to be implemented: #codec . This represents how to encode and decode the associated IParticleData of the type. Note ParticleType#codec is only used within the biome codec for vanilla implementations. In most cases, there is no need to have any particle data sent to the client. For these instances, it is easier to create a new instance of BasicParticleType : an implementation of ParticleType and IParticleData which does not send any custom data to the client besides the type. Most vanilla implementations use BasicParticleType besides redstone dust for coloring and block/item dependent particles. Important A ParticleType is not needed to make a particle spawn if only referenced on the client. However, it is necessary to use any of the prebuilt logic within ParticleManager or spawn a particle from the server. IParticleData An IParticleData represents the data that each particle takes in. It is also used to send data from particles spawned via the server. All particle spawning methods take in a IParticleData such that it knows the type of the particle and the data associated with spawning one. IParticleData is broken down into three methods: Method Description getType Gets the type definition of the particle, or the ParticleType writeToNetwork Writes the particle data to a buffer on the server to send to the client writeToString Writes the particle data to a string These objects are either constructed on the fly as needed, or they are singletons as a result of being a BasicParticleType . IDeserializer To receive the IParticleData on the client, or to reference the data within a command, the particle data must be deserialized via IDeserializer . Each method within IDeserializer has a parity encoding method within IParticleData : Method IParticleData Encoder Description fromCommand writeToString Decodes a particle data from a string, usually from a command. fromNetwork writeToNetwork Decodes a particle data from a buffer on the client. This object, when needing to send custom particle data, is passed into the constructor of the ParticleType . Particle A Particle provides the rendering logic needed to draw said data onto the screen. To create any Particle , two methods must be implemented: Method Description render Renders the particle onto the screen getRenderType Gets the render type of the particle A common subclass of Particle to render textures is SpriteTexturedParticle . While #getRenderType needs to be implemented, whatever the texture sprite is set will be rendered at the particle\u2019s location. IParticleRenderType IParticleRenderType is a variation on RenderType which constructs the startup and teardown phase for every particle of that type and then renders them all at once via the Tessellator . There are six different render types a particle can be in. Render Type Description TERRAIN_SHEET Renders a particle whose texture is located within the available blocks PARTICLE_SHEET_OPAQUE Renders a particle whose texture is opaque and located within the available particles PARTICLE_SHEET_TRANSLUCENT Renders a particle whose texture is translucent and located within the available particles PARTICLE_SHEET_LIT Same as PARTICLE_SHEET_OPAQUE ; this renders after all PARTICLE_SHEET_OPAQUE particles have been rendered CUSTOM Provides setup for blending and depth mask but provides no rendering functionality as that would be implemented within Particle#render NO_RENDER The particle will never render Implementing a custom render type will be left as an exercise to the reader. IParticleFactory Finally, a particle is usually created via an IParticleFactory . A factory has a single method #createParticle which is used to create a particle given the particle data, client world, position, and movement delta. Since a Particle is not beholden to any particular ParticleType , it can be reused in different factories as necessary. An IParticleFactory must be registered by subscribing to the ParticleFactoryRegisterEvent on the mod event bus . Within the event, the factory can be registered via ParticleManager#register by supplying an instance of the factory to the method. Important ParticleFactoryRegisterEvent should only be called on the client and thus sided off in some isolated client class, referenced by either DistExecutor or @EventBusSubscriber . TexturesParticle, IAnimatedSprite, and IParticleMetaFactory There are three particle render types that cannot use the above method of registration: PARTICLE_SHEET_OPAQUE , PARTICLE_SHEET_TRANSLUCENT , and PARTICLE_SHEET_LIT . This is because all three of these particle render types use a sprite set that is loaded by the ParticleManager directly. As such, the textures supplied must be obtained and registered through a different method. This will assume your particle is a subtype of SpriteTexturedParticle as that is the only vanilla implementation for this logic. To add a texture to a particle, a new JSON file must be added to assets/<modid>/particles . This is known as the TexturesParticle . The name of this file will represent the registry name of the ParticleType the factory is being attached to. Each particle JSON is an object. The object stores a single key textures which holds an array of ResourceLocation s. Any <modid>:<path> texture represented here will point to a texture at assets/<modid>/textures/particle/<path>.png . { \"textures\": [ // Will point to a texture located in // assets/mymod/textures/particle/particle_texture.png \"mymod:particle_texture\", // Textures should by ordered by drawing order // e.g. particle_texture will render first, then particle_texture2 // after some time \"mymod:particle_texture2\" ] } To reference a particle texture, the subtype of SpriteTexturedParticle should either take in an IAnimatedSprite or a TextureAtlasSprite obtained from IAnimatedSprite . IAnimatedSprite holds a list of textures which refer to the sprites as defined by our TexturesParticle . IAnimatedSprite has two methods, both of which grab a TextureAtlasSprite in different methods. The first method takes in two integers. The backing implementation allows the sprite to have a texture change as it ages. The second method takes in a Random instance to get a random texture from the sprite set. The sprite can be set within SpriteTexturedParticle by using one of the helper methods that takes in the IAnimatedSprite : #pickSprite which uses the random method of picking a texture, and #setSpriteFromAge which uses the percentage method of two integers to pick the texture. To register these particle textures, an IParticleMetaFactory needs to be supplied to the ParticleManager#register method. This method takes in an IAnimatedSprite holding the associated sprite set for the particle and creates an IParticleFactory to create the particle. The simplest method of implementation can be done by implementing IParticleFactory on some class and having the constructor take in an IAnimatedSprite . Then the IAnimatedSprite can be passed to the particle as normal. Spawning a Particle Particles can be spawned from either world instance. However, each side has a specific way to spawn a particle. If on the ClientWorld , #addParticle can be called to spawn a particle or #addAlwaysVisibleParticle can be called to spawn a particle that is visible from any distance. If on the ServerWorld , #sendParticles can be called to send a packet to the client to spawn the particle. Calling the two ClientWorld methods on the server will result in nothing.","title":"\ud30c\ud2f0\ud074"},{"location":"effects/particles/#particles","text":"Particles are an effect within the game used as polish to better improve immersion. Their usefulness also requires great caution because of their methods of creation and reference.","title":"Particles"},{"location":"effects/particles/#creating-a-particle","text":"Particles are broken up between its client only implementation to display the particle and its common implementation to reference the particle or sync data from the server. Class Side Description ParticleType BOTH The registry object of a particle\u2019s type definition used to reference the particle on either side IParticleData BOTH A data holder used to sync information from the network or a command to the associated client(s) IParticleFactory CLIENT A factory registered by the ParticleType used to construct a Particle from the associated IParticleData . Particle CLIENT The renderable logic to display on the associated client(s)","title":"Creating a Particle"},{"location":"effects/particles/#particletype","text":"A ParticleType is the registry object defining what a particular particle type is and provides an available reference to the specific particle on both sides. As such, every ParticleType must be registered . Each ParticleType takes in two parameters: an overrideLimiter which determines whether the particle renders regardless of distance, and a IParticleData$IDeserializer which is used to read the sent IParticleData on the client. As the base ParticleType is abstract, a single method needs to be implemented: #codec . This represents how to encode and decode the associated IParticleData of the type. Note ParticleType#codec is only used within the biome codec for vanilla implementations. In most cases, there is no need to have any particle data sent to the client. For these instances, it is easier to create a new instance of BasicParticleType : an implementation of ParticleType and IParticleData which does not send any custom data to the client besides the type. Most vanilla implementations use BasicParticleType besides redstone dust for coloring and block/item dependent particles. Important A ParticleType is not needed to make a particle spawn if only referenced on the client. However, it is necessary to use any of the prebuilt logic within ParticleManager or spawn a particle from the server.","title":"ParticleType"},{"location":"effects/particles/#iparticledata","text":"An IParticleData represents the data that each particle takes in. It is also used to send data from particles spawned via the server. All particle spawning methods take in a IParticleData such that it knows the type of the particle and the data associated with spawning one. IParticleData is broken down into three methods: Method Description getType Gets the type definition of the particle, or the ParticleType writeToNetwork Writes the particle data to a buffer on the server to send to the client writeToString Writes the particle data to a string These objects are either constructed on the fly as needed, or they are singletons as a result of being a BasicParticleType .","title":"IParticleData"},{"location":"effects/particles/#ideserializer","text":"To receive the IParticleData on the client, or to reference the data within a command, the particle data must be deserialized via IDeserializer . Each method within IDeserializer has a parity encoding method within IParticleData : Method IParticleData Encoder Description fromCommand writeToString Decodes a particle data from a string, usually from a command. fromNetwork writeToNetwork Decodes a particle data from a buffer on the client. This object, when needing to send custom particle data, is passed into the constructor of the ParticleType .","title":"IDeserializer"},{"location":"effects/particles/#particle","text":"A Particle provides the rendering logic needed to draw said data onto the screen. To create any Particle , two methods must be implemented: Method Description render Renders the particle onto the screen getRenderType Gets the render type of the particle A common subclass of Particle to render textures is SpriteTexturedParticle . While #getRenderType needs to be implemented, whatever the texture sprite is set will be rendered at the particle\u2019s location.","title":"Particle"},{"location":"effects/particles/#iparticlerendertype","text":"IParticleRenderType is a variation on RenderType which constructs the startup and teardown phase for every particle of that type and then renders them all at once via the Tessellator . There are six different render types a particle can be in. Render Type Description TERRAIN_SHEET Renders a particle whose texture is located within the available blocks PARTICLE_SHEET_OPAQUE Renders a particle whose texture is opaque and located within the available particles PARTICLE_SHEET_TRANSLUCENT Renders a particle whose texture is translucent and located within the available particles PARTICLE_SHEET_LIT Same as PARTICLE_SHEET_OPAQUE ; this renders after all PARTICLE_SHEET_OPAQUE particles have been rendered CUSTOM Provides setup for blending and depth mask but provides no rendering functionality as that would be implemented within Particle#render NO_RENDER The particle will never render Implementing a custom render type will be left as an exercise to the reader.","title":"IParticleRenderType"},{"location":"effects/particles/#iparticlefactory","text":"Finally, a particle is usually created via an IParticleFactory . A factory has a single method #createParticle which is used to create a particle given the particle data, client world, position, and movement delta. Since a Particle is not beholden to any particular ParticleType , it can be reused in different factories as necessary. An IParticleFactory must be registered by subscribing to the ParticleFactoryRegisterEvent on the mod event bus . Within the event, the factory can be registered via ParticleManager#register by supplying an instance of the factory to the method. Important ParticleFactoryRegisterEvent should only be called on the client and thus sided off in some isolated client class, referenced by either DistExecutor or @EventBusSubscriber .","title":"IParticleFactory"},{"location":"effects/particles/#texturesparticle-ianimatedsprite-and-iparticlemetafactory","text":"There are three particle render types that cannot use the above method of registration: PARTICLE_SHEET_OPAQUE , PARTICLE_SHEET_TRANSLUCENT , and PARTICLE_SHEET_LIT . This is because all three of these particle render types use a sprite set that is loaded by the ParticleManager directly. As such, the textures supplied must be obtained and registered through a different method. This will assume your particle is a subtype of SpriteTexturedParticle as that is the only vanilla implementation for this logic. To add a texture to a particle, a new JSON file must be added to assets/<modid>/particles . This is known as the TexturesParticle . The name of this file will represent the registry name of the ParticleType the factory is being attached to. Each particle JSON is an object. The object stores a single key textures which holds an array of ResourceLocation s. Any <modid>:<path> texture represented here will point to a texture at assets/<modid>/textures/particle/<path>.png . { \"textures\": [ // Will point to a texture located in // assets/mymod/textures/particle/particle_texture.png \"mymod:particle_texture\", // Textures should by ordered by drawing order // e.g. particle_texture will render first, then particle_texture2 // after some time \"mymod:particle_texture2\" ] } To reference a particle texture, the subtype of SpriteTexturedParticle should either take in an IAnimatedSprite or a TextureAtlasSprite obtained from IAnimatedSprite . IAnimatedSprite holds a list of textures which refer to the sprites as defined by our TexturesParticle . IAnimatedSprite has two methods, both of which grab a TextureAtlasSprite in different methods. The first method takes in two integers. The backing implementation allows the sprite to have a texture change as it ages. The second method takes in a Random instance to get a random texture from the sprite set. The sprite can be set within SpriteTexturedParticle by using one of the helper methods that takes in the IAnimatedSprite : #pickSprite which uses the random method of picking a texture, and #setSpriteFromAge which uses the percentage method of two integers to pick the texture. To register these particle textures, an IParticleMetaFactory needs to be supplied to the ParticleManager#register method. This method takes in an IAnimatedSprite holding the associated sprite set for the particle and creates an IParticleFactory to create the particle. The simplest method of implementation can be done by implementing IParticleFactory on some class and having the constructor take in an IAnimatedSprite . Then the IAnimatedSprite can be passed to the particle as normal.","title":"TexturesParticle, IAnimatedSprite, and IParticleMetaFactory"},{"location":"effects/particles/#spawning-a-particle","text":"Particles can be spawned from either world instance. However, each side has a specific way to spawn a particle. If on the ClientWorld , #addParticle can be called to spawn a particle or #addAlwaysVisibleParticle can be called to spawn a particle that is visible from any distance. If on the ServerWorld , #sendParticles can be called to send a packet to the client to spawn the particle. Calling the two ClientWorld methods on the server will result in nothing.","title":"Spawning a Particle"},{"location":"effects/sounds/","text":"Sounds Terminology Term Description Sound Events Something that triggers a sound effect. Examples include minecraft:block.anvil.hit or botania:spreader_fire . Sound Category The category of the sound, for example player , block or simply master . The sliders in the sound settings GUI represent these categories. Sound File The literal file on disk that is played: an .ogg file. sounds.json This JSON defines sound events, and defines which sound files they play, the subtitle, etc. Sound events are identified with ResourceLocation s. sounds.json should be located at the root of a resource namespace ( assets/<namespace>/sounds.json ), and it defines sound events in that namespace ( assets/<namespace>/sounds.json defines sound events in the namespace namespace .). A full specification is available on the vanilla wiki , but this example highlights the important parts: { \"open_chest\": { \"subtitle\": \"mymod.subtitle.open_chest\", \"sounds\": [ \"mymod:open_chest_sound_file\" ] }, \"epic_music\": { \"sounds\": [ { \"name\": \"mymod:music/epic_music\", \"stream\": true } ] } } Underneath the top-level object, each key corresponds to a sound event. Note that the namespace is not given, as it is taken from the namespace of the JSON itself. Each event specifies a localization key to be shown when subtitles are enabled. Finally, the actual sound files to be played are specified. Note that the value is an array; if multiple sound files are specified, the game will randomly choose one to play whenever the sound event is triggered. The two examples represent two different ways to specify a sound file. The wiki has precise details, but generally, long sound files such as background music or music discs should use the second form, because the \u201cstream\u201d argument tells Minecraft to not load the entire sound file into memory but to stream it from disk. The second form can also specify the volume, pitch, and weight of a sound file. In all cases, the path to a sound file for namespace namespace and path path is assets/<namespace>/sounds/<path>.ogg . Therefore mymod:open_chest_sound_file points to assets/mymod/sounds/open_chest_sound_file.ogg , and mymod:music/epic_music points to assets/mymod/sounds/music/epic_music.ogg . Creating Sound Events In order to actually be able to play sounds, a SoundEvent corresponding to an entry in sounds.json must be created. This SoundEvent must then be registered . Normally, the location used to create a sound event should be set as it\u2019s registry name. The SoundEvent acts as a reference to the sound and is passed around to play them. If a mod has an API, it should expose its SoundEvent s in the API. Playing Sounds Vanilla has lots of methods for playing sounds, and it is unclear which to use at times. Note that each takes a SoundEvent , the ones registered above. Additionally, the terms \u201cServer Behavior\u201d and \u201cClient Behavior\u201d refer to the respective logical side . World playSound(PlayerEntity, BlockPos, SoundEvent, SoundCategory, volume, pitch) Simply forwards to overload (2) , adding 0.5 to each coordinate of the BlockPos given. playSound(PlayerEntity, double x, double y, double z, SoundEvent, SoundCategory, volume, pitch) Client Behavior : If the passed in player is the client player, plays the sound event to the client player. Server Behavior : Plays the sound event to everyone nearby except the passed in player. Player can be null . Usage : The correspondence between the behaviors implies that these two methods are to be called from some player-initiated code that will be run on both logical sides at the same time: the logical client handles playing it to the user, and the logical server handles everyone else hearing it without re-playing it to the original user. They can also be used to play any sound in general at any position server-side by calling it on the logical server and passing in a null player, thus letting everyone hear it. playLocalSound(double x, double y, double z, SoundEvent, SoundCategory, volume, pitch, distanceDelay) Client Behavior : Just plays the sound event in the client world. If distanceDelay is true , then delays the sound based on how far it is from the player. Server Behavior : Does nothing. Usage : This method only works client-side, and thus is useful for sounds sent in custom packets, or other client-only effect-type sounds. Used for thunder. ClientWorld playLocalSound(BlockPos, SoundEvent, SoundCategory, volume, pitch, distanceDelay) Simply forwards to World \u2018s overload (3) , adding 0.5 to each coordinate of the BlockPos given. Entity playSound(SoundEvent, volume, pitch) Forwards to World \u2018s overload (2) , passing in null as the player. Client Behavior : Does nothing. Server Behavior : Plays the sound event to everyone at this entity\u2019s position. Usage : Emitting any sound from any non-player entity server-side. PlayerEntity playSound(SoundEvent, volume, pitch) (overriding the one in Entity ) Forwards to World \u2018s overload (2) , passing in this as the player. Client Behavior : Does nothing, see override in ClientPlayerEntity . Server Behavior : Plays the sound to everyone nearby except this player. Usage : See ClientPlayerEntity . ClientPlayerEntity playSound(SoundEvent, volume, pitch) (overriding the one in PlayerEntity ) Forwards to World \u2018s overload (2) , passing in this as the player. Client Behavior : Just plays the Sound Event. Server Behavior : Method is client-only. Usage : Just like the ones in World , these two overrides in the player classes seem to be for code that runs together on both sides. The client handles playing the sound to the user, while the server handles everyone else hearing it without re-playing to the original user.","title":"\uc18c\ub9ac"},{"location":"effects/sounds/#sounds","text":"","title":"Sounds"},{"location":"effects/sounds/#terminology","text":"Term Description Sound Events Something that triggers a sound effect. Examples include minecraft:block.anvil.hit or botania:spreader_fire . Sound Category The category of the sound, for example player , block or simply master . The sliders in the sound settings GUI represent these categories. Sound File The literal file on disk that is played: an .ogg file.","title":"Terminology"},{"location":"effects/sounds/#soundsjson","text":"This JSON defines sound events, and defines which sound files they play, the subtitle, etc. Sound events are identified with ResourceLocation s. sounds.json should be located at the root of a resource namespace ( assets/<namespace>/sounds.json ), and it defines sound events in that namespace ( assets/<namespace>/sounds.json defines sound events in the namespace namespace .). A full specification is available on the vanilla wiki , but this example highlights the important parts: { \"open_chest\": { \"subtitle\": \"mymod.subtitle.open_chest\", \"sounds\": [ \"mymod:open_chest_sound_file\" ] }, \"epic_music\": { \"sounds\": [ { \"name\": \"mymod:music/epic_music\", \"stream\": true } ] } } Underneath the top-level object, each key corresponds to a sound event. Note that the namespace is not given, as it is taken from the namespace of the JSON itself. Each event specifies a localization key to be shown when subtitles are enabled. Finally, the actual sound files to be played are specified. Note that the value is an array; if multiple sound files are specified, the game will randomly choose one to play whenever the sound event is triggered. The two examples represent two different ways to specify a sound file. The wiki has precise details, but generally, long sound files such as background music or music discs should use the second form, because the \u201cstream\u201d argument tells Minecraft to not load the entire sound file into memory but to stream it from disk. The second form can also specify the volume, pitch, and weight of a sound file. In all cases, the path to a sound file for namespace namespace and path path is assets/<namespace>/sounds/<path>.ogg . Therefore mymod:open_chest_sound_file points to assets/mymod/sounds/open_chest_sound_file.ogg , and mymod:music/epic_music points to assets/mymod/sounds/music/epic_music.ogg .","title":"sounds.json"},{"location":"effects/sounds/#creating-sound-events","text":"In order to actually be able to play sounds, a SoundEvent corresponding to an entry in sounds.json must be created. This SoundEvent must then be registered . Normally, the location used to create a sound event should be set as it\u2019s registry name. The SoundEvent acts as a reference to the sound and is passed around to play them. If a mod has an API, it should expose its SoundEvent s in the API.","title":"Creating Sound Events"},{"location":"effects/sounds/#playing-sounds","text":"Vanilla has lots of methods for playing sounds, and it is unclear which to use at times. Note that each takes a SoundEvent , the ones registered above. Additionally, the terms \u201cServer Behavior\u201d and \u201cClient Behavior\u201d refer to the respective logical side .","title":"Playing Sounds"},{"location":"effects/sounds/#world","text":"playSound(PlayerEntity, BlockPos, SoundEvent, SoundCategory, volume, pitch) Simply forwards to overload (2) , adding 0.5 to each coordinate of the BlockPos given. playSound(PlayerEntity, double x, double y, double z, SoundEvent, SoundCategory, volume, pitch) Client Behavior : If the passed in player is the client player, plays the sound event to the client player. Server Behavior : Plays the sound event to everyone nearby except the passed in player. Player can be null . Usage : The correspondence between the behaviors implies that these two methods are to be called from some player-initiated code that will be run on both logical sides at the same time: the logical client handles playing it to the user, and the logical server handles everyone else hearing it without re-playing it to the original user. They can also be used to play any sound in general at any position server-side by calling it on the logical server and passing in a null player, thus letting everyone hear it. playLocalSound(double x, double y, double z, SoundEvent, SoundCategory, volume, pitch, distanceDelay) Client Behavior : Just plays the sound event in the client world. If distanceDelay is true , then delays the sound based on how far it is from the player. Server Behavior : Does nothing. Usage : This method only works client-side, and thus is useful for sounds sent in custom packets, or other client-only effect-type sounds. Used for thunder.","title":"World"},{"location":"effects/sounds/#clientworld","text":"playLocalSound(BlockPos, SoundEvent, SoundCategory, volume, pitch, distanceDelay) Simply forwards to World \u2018s overload (3) , adding 0.5 to each coordinate of the BlockPos given.","title":"ClientWorld"},{"location":"effects/sounds/#entity","text":"playSound(SoundEvent, volume, pitch) Forwards to World \u2018s overload (2) , passing in null as the player. Client Behavior : Does nothing. Server Behavior : Plays the sound event to everyone at this entity\u2019s position. Usage : Emitting any sound from any non-player entity server-side.","title":"Entity"},{"location":"effects/sounds/#playerentity","text":"playSound(SoundEvent, volume, pitch) (overriding the one in Entity ) Forwards to World \u2018s overload (2) , passing in this as the player. Client Behavior : Does nothing, see override in ClientPlayerEntity . Server Behavior : Plays the sound to everyone nearby except this player. Usage : See ClientPlayerEntity .","title":"PlayerEntity"},{"location":"effects/sounds/#clientplayerentity","text":"playSound(SoundEvent, volume, pitch) (overriding the one in PlayerEntity ) Forwards to World \u2018s overload (2) , passing in this as the player. Client Behavior : Just plays the Sound Event. Server Behavior : Method is client-only. Usage : Just like the ones in World , these two overrides in the player classes seem to be for code that runs together on both sides. The client handles playing the sound to the user, while the server handles everyone else hearing it without re-playing to the original user.","title":"ClientPlayerEntity"},{"location":"events/intro/","text":"\uc774\ubca4\ud2b8 \ud3ec\uc9c0\ub294 \uc774\ubca4\ud2b8 \ubc84\uc2a4\ub97c \uc774\uc6a9\ud558\uc5ec \uc5ec\ub7ec \ubaa8\ub4dc\ub4e4\uc774 \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \uc5ec\ub7ec \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub9c9\ub300\uae30\ub97c \uc6b0\ud074\ub9ad \ud558\uc600\uc744\ub54c \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub418\uace0 \ubaa8\ub4dc\ub294 \uc774\uc5d0 \ubc18\uc751\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub418\ub294 \uc8fc \uc774\ubca4\ud2b8 \ubc84\uc2a4\ub294 MinecraftForge#EVENT_BUS \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4. \ub610\ud55c, \uac01 \ubaa8\ub4dc\ubcc4 \uc774\ubca4\ud2b8 \ubc84\uc2a4\ub610\ud55c \uc874\uc7ac\ud558\ub294\ub370, \uc774\ub294 FMLJavaModLoadingContext#getModEventBus \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4. \uc774 \ubc84\uc2a4\ub294 \uc624\uc9c1 \ud2b9\uc815\ud55c \uc0c1\ud669\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \ubc84\uc2a4\ub97c \uc5b4\ub514\uc5d0 \uc0ac\uc6a9\ud558\ub294\uc9c0\ub294 \uc544\ub798 \uc790\uc138\ud558\uac8c \ub098\uc640\uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \uc774\ubca4\ud2b8\ub294 \uc774 2 \ubc84\uc2a4\uc911 \ud558\ub098\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4: \ub300\ubd80\ubd84\uc758 \uc774\ubca4\ud2b8\ub294 \uc8fc \ud3ec\uc9c0 \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub418\uc9c0\ub9cc, \uadf8\uc911 \uc77c\ubd80\ub294 \ubaa8\ub4dc\ubcc4 \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uc774\ubca4\ud2b8 \ubc84\uc2a4\uc5d0 \ub4f1\ub85d\ub418\uc5b4, \ud2b9\uc815 \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud558\ub294 \uba54\uc11c\ub4dc \uc785\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \ub9cc\ub4e4\uae30 public class MyForgeEventHandler { @SubscribeEvent public void pickupItem(EntityItemPickupEvent event) { System.out.println(\"\uc544\uc774\ud15c\uc744 \uc8fc\uc6e0\uc2b5\ub2c8\ub2e4!!\"); } } \uc774 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uc774\ubca4\ud2b8 EntityItemPickupEvent \uc5d0 \ubc18\uc751\ud569\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294, \uc774\ub984\uc5d0\uc11c \uc554\uc2dc\ud558\ub4ef\uc774, \uc5d4\ud2f0\ud2f0\uac00 \uc544\uc774\ud15c\uc744 \ud719\ub4dd\ud560 \ub54c \ub9c8\ub2e4 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \ub4f1\ub85d\ud558\uae30 \uc704\ud574\uc11c\ub294 MinecraftForge.EVENT_BUS.register(...) \ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uadf8\ub9ac\uace0 \uc774 \uba54\uc11c\ub4dc\uc5d0 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\uac00 \uc788\ub294 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9e4\uac1c\ubcc0\uc218\ub85c \uc804\ub2ec\ud558\uc138\uc694. \ub9cc\uc57d \ud578\ub4e4\ub7ec\ub97c \ubaa8\ub4dc\ubcc4 \ubc84\uc2a4\uc5d0 \ub4f1\ub85d\ud558\uace0 \uc2f6\ub2e4\uba74 FMLJavaModLoadingContext.get().getModEventBus().register(...) \ub97c \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc138\uc694. \uc815\uc801 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \uc815\uc801\uc73c\ub85c \ub9cc\ub4e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\uc5d0\ub3c4 @SubscribeEvent \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc5d0\uc11c \uc0ac\uc6a9\ud55c \uc778\uc2a4\ud134\uc2a4\ub97c \ud1b5\ud55c \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uc640\uc758 \ucc28\uc774\uc810\uc740 \uba54\uc11c\ub4dc\uac00 \uc815\uc801\uc774\ub77c\ub294 \uac83\uc785\ub2c8\ub2e4. \uc815\uc801 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \ub4f1\ub85d\ud558\uae30 \uc704\ud574\uc11c\ub294 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \uc544\ub2c8\uace0, \ud074\ub798\uc2a4 \uadf8 \uc790\uccb4\uac00 \uc804\ub2ec\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8 \uc608\ub85c: public class MyStaticForgeEventHandler { @SubscribeEvent public static void arrowNocked(ArrowNockEvent event) { System.out.println(\"\ud654\uc0b4 \ub2f9\uaca8\uc9d0!\"); } } \uc774\ub294 MinecraftForge.EVENT_BUS.register(MyStaticForgeEventHandler.class) \ub97c \ud1b5\ud574 \ub4f1\ub85d\ud569\ub2c8\ub2e4. \uc790\ub3d9\uc73c\ub85c \uc815\uc801 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \ub4f1\ub85d\ud558\uae30 @Mod$EventBusSubscriber \uc5b4\ub178\ud14c\uc774\uc158\uc740 \ud074\ub798\uc2a4\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc774\ub97c \uc0ac\uc6a9\ud560 \uc2dc, \uadf8 \ud074\ub798\uc2a4\ub294 \uc790\ub3d9\uc73c\ub85c MinecraftForge#EVENT_BUS \uc5d0 @Mod \ud074\ub798\uc2a4\uac00 \ucd08\uae30\ud654\ub420 \ub54c \ub4f1\ub85d\ub429\ub2c8\ub2e4. \uc774\ub294 MinecraftForge.EVENT_BUS.register(AnnotatedClass.class) \uad6c\ubb38\uc744 @Mod \ud074\ub798\uc2a4\uc758 \uc0dd\uc131\uc790\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uac83\uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4. @Mod$EventBusSubscriber \ub294 \uc544\ubb34 \ubc84\uc2a4\ub098 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc0ac\uc6a9\ud560 \ub54c \ubaa8\ub4dc\uc758 \uc544\uc774\ub514\ub97c \uc804\ub2ec\ud558\ub294 \uac83\uc774 \uad8c\uc7a5\ub418\ub294\ub370, \uc774\ub294 \uc5b4\ub178\ud14c\uc774\uc158\ub9cc\uc73c\ub85c\ub294 \ubb34\uc2a8 \ubaa8\ub4dc\uc758 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uc778\uc9c0 \uad6c\ubcc4\ud560 \uc218 \uc5c6\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ub610, \uc774\ubca4\ud2b8\ub97c \ub4e4\uc744 \ubc84\uc2a4\ub97c \uc804\ub2ec\ud558\ub294 \uac83 \ub610\ud55c \uad8c\uc7a5\ub418\ub294\ub370, \ubb34\uc2a8 \ubc84\uc2a4\uc758 \uc774\ubca4\ud2b8\ub97c \ub4e3\ub294\uc9c0 \ud45c\uc2dc\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ub610, Dist \uac12\uc744 \uc9c0\uc815\ud558\uc5ec \uc5b4\ub5a4 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\uc11c \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uac00 \ub3d9\uc791\ud560 \uac83\uc778\uc9c0\ub97c \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ud2b9\uc815 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\uc11c\ub294 \uc544\uc608 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uac00 \ub4f1\ub85d\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc774\uc6a9\ud55c, RenderWorldLastEvent \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud558\ub294, \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub9cc \uc874\uc7ac\ud558\ub294 \uc815\uc801 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \uc785\ub2c8\ub2e4. @Mod.EventBusSubscriber(modid = \"mymod\", bus = Bus.FORGE, value = Dist.CLIENT) public class MyStaticClientOnlyEventHandler { @SubscribeEvent public static void drawLast(RenderWorldLastEvent event) { System.out.println(\"\uc6d4\ub4dc \uadf8\ub9ac\ub294\uc911!\"); } } Note \uc774\ub97c \uc774\uc6a9\ud558\uba74 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \uc544\ub2cc \ud074\ub798\uc2a4 \uadf8 \uc790\uccb4\uac00 \ub4f1\ub85d\ub429\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \ub4f1\ub85d\ub418\ub294 \ubaa8\ub4e0 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uc815\uc801\uc774\uc5b4\uc57c \uc81c\ub300\ub85c \ub3d9\uc791\ud569\ub2c8\ub2e4! \uc774\ubca4\ud2b8 \ucde8\uc18c\ud558\uae30 \ub9cc\uc57d \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub420 \uc218 \uc788\ub2e4\uba74, @Cancelable \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\uc744 \uac83\uc785\ub2c8\ub2e4, \uadf8\ub9ac\uace0 \uba54\uc11c\ub4dc Event#isCancelable() \ub294 true \ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774\ubca4\ud2b8\uc758 \ucde8\uc18c \uc5ec\ubd80\ub294 Event#setCanceled(boolean canceled \uba54\uc11c\ub4dc\ub97c \ud1b5\ud574 \ubcc0\uacbd\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4, true \ub97c \uc804\ub2ec\ud560 \uc2dc \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub418\uace0 false \ub97c \uc804\ub2ec\ud560 \uc2dc \uc774\ubca4\ud2b8\uc758 \u201c\ucde8\uc18c\ub97c \ucde8\uc18c\ud569\ub2c8\ub2e4\u201d. \uadf8\ub7ec\ub098 \ub9cc\uc57d\uc5d0 \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub420 \uc218 \uc5c6\ub2e4\uba74, \uc774 \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83 \ub9cc\uc73c\ub85c UnsupportedOperationException \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ucd5c\uc18c\ub420 \uc218 \uc5c6\ub294 \uc774\ubca4\ud2b8\uc758 \ucde8\uc18c \uc5ec\ubd80\ub294 \ubd88\ubcc0\uac12\uc73c\ub85c \ucde8\uae09\ub418\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. Important \ubaa8\ub4e0 \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub420 \uc218 \uc788\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4! \ucde8\uc18c\ud560 \uc218 \uc5c6\ub294 \uc774\ubca4\ud2b8\ub97c \ucde8\uc18c\ud558\ub824\uace0 \ud560 \uc2dc UnsuppoortedOperationException \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uace0 \uac8c\uc784\uc774 \ud295\uae30\uac8c \ub429\ub2c8\ub2e4! \uadf8\ub807\uae30\uc5d0 \uc774\ubca4\ud2b8\ub97c \ucde8\uc18c\ud558\uae30 \uc804\uc5d0 Event#isCancelable() \uc744 \uc0ac\uc6a9\ud558\ub294 \ub4f1 \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub420 \uc218 \uc788\ub294\uc9c0\ub97c \uba3c\uc800 \ud655\uc2e4\ud558\uac8c \ud655\uc778\ud558\uc138\uc694! \uacb0\uacfc \uc77c\ubd80 \uc774\ubca4\ud2b8\ub4e4\uc740 Event$Result \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4 \uacb0\uacfc\ub294 \uc774\ubca4\ud2b8\ub97c \uc911\ub2e8\ud558\ub294 DENY , \uae30\ubcf8 \ubc14\ub2d0\ub77c \ucf54\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 DEFAULT , \uac15\uc81c\uc801\uc73c\ub85c \ud2b9\uc815 \ub3d9\uc791\uc744 \uc218\ud589\ud558\ub3c4\ub85d \ud558\ub294 ALLOW , \uc774\ub807\uac8c 3\uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubca4\ud2b8\uc758 \uacb0\uacfc\ub294 \uc774\ubca4\ud2b8 \ub3c4\uc911 #setResult \ub97c \uc0ac\uc6a9\ud574 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \uc774\ubca4\ud2b8\uac00 \uacb0\uacfc\uac00 \uc788\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4; \uacb0\uacfc\uac00 \uc788\ub294 \uc774\ubca4\ud2b8\ub294 @HasResult \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. Important \uc5ec\ub7ec \uc774\ubca4\ud2b8\ub4e4\uc740 \uac01\uc790 \ub2e4\ub978 \ubc29\uc2dd\uc73c\ub85c \uacb0\uacfc\ub97c \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uadf8\ub807\uae30\uc5d0 \uc774\ubca4\ud2b8\uc758 JavaDoc \uc5d0\uc11c \uc774\ubca4\ud2b8\uac00 \uacb0\uacfc\ub97c \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud560\uc9c0\ub97c \ubbf8\ub9ac \uc219\uc9c0\ud558\ub3c4\ub85d \ud558\uc138\uc694! \uc6b0\uc120\uc21c\uc704 ( @SubscribeEvent \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\ub294)\uc774\ubca4\ud2b8 \ud5e8\ub4e4\ub7ec \uba54\uc11c\ub4dc\uc5d0\ub294 \uc6b0\uc120\uc21c\uc704\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uc758 \uc6b0\uc120\uc21c\uc758\ub294 @SubscribeEvent \uc758 priority \uac12\uc744 \ubcc0\uacbd\ud558\uc5ec \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc774 \uc6b0\uc120\uc21c\uc704\ub294 EventPriority \uc758 \uc5f4\uac70\ud615( HIGHEST , HIGH , NORMAL , LOW , LOWEST )\uc785\ub2c8\ub2e4. HIGHEST \uc6b0\uc120\uc21c\uc704\ub97c \uac00\uc9c4 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub4e4\uc740 \uac00\uc7a5 \uba3c\uc800 \uc2e4\ud589\ub418\uace0, LOWEST \uc6b0\uc120\uc21c\uc704\ub97c \uac00\uc9c4 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uac00\uc7a5 \ub098\uc911\uc5d0 \uc2e4\ud589\ub429\ub2c8\ub2e4. \ud558\uc704 \uc774\ubca4\ud2b8 \ub9ce\uc740 \uc774\ubca4\ud2b8\ub4e4\uc740 \uc870\uae08\uc529 \ub2e4\ub978 \ubc88\ud615\uc774 \uc874\uc7ac\ud569\ub2c8\ub2e4. \uc774 \ubcc0\ud615\ub41c \uc774\ubca4\ud2b8\ub4e4\uc740 \uc5ed\ud560\uc774 \uc870\uae08\uc529 \ub2e4 \ub2e4\ub974\uc9c0\ub9cc, \uc804\ubd80 \ud558\ub098\uc758 \uae30\ubc18 \uc774\ubca4\ud2b8\ub97c \uc0c1\uc18d\ud558\uc5ec \ub9cc\ub4e4\uc5b4\uc838 \uc788\uac70\ub098, (\uc608: PlayerEvent ) \ub610\ub294 \ud558\ub098\uc758 \uc774\ubca4\ud2b8\ub97c \uc5ec\ub7ec \ub2e8\uacc4\ub85c \ub098\ub204\uc5b4 \ub454 \uac83\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. (\uc608: PotionBrewEvent , PotionBrewEvent$Pre \uc640 PotionBrewEvent$Post \uac00 \uc788\uc74c). \ub9cc\uc57d \uae30\ubc18\uc774 \ub418\ub294 \ubd80\ubaa8 \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud558\ub294 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uac00 \uc788\ub2e4\uba74, \uadf8 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uadf8 \uc774\ubca4\ud2b8\uc758 \ubaa8\ub4e0 \uc790\uc2dd \ud074\ub798\uc2a4\uc758 \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud569\ub2c8\ub2e4. \ubaa8\ub4dc \uc774\ubca4\ud2b8 \ubc84\uc2a4 \ubaa8\ub4dc \uc774\ubca4\ud2b8 \ubc84\uc2a4\ub294 \uc8fc\ub85c \ubaa8\ub4dc\uc758 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub97c \ubc29\uc1a1\ud558\ub294\ub370\uc5d0 \uc0ac\uc6a9\ub418\uc5b4 \ubaa8\ub4dc\uc758 \ucd08\uae30\ud654\ub97c \ub3d5\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub418\ub294 \uc774\ubca4\ud2b8\ub4e4\uc740 IModBusEvent \uc778\ud130\ud398\uc774\uc2a4\ub97c \ubb34\uc870\uac74 \uad6c\ud604\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \ub610\ud55c \uc774 \uc774\ubca4\ud2b8\ub4e4\uc740 \ubcd1\ub82c\uc801\uc73c\ub85c \ubc29\uc1a1\ub418\uc5b4 \uc5ec\ub7ec \ubaa8\ub4dc\uac00 \ub3d9\uc2dc\uc5d0 \ucd08\uae30\ud654 \ub420 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc774\ub85c \uc778\ud574 \ubaa8\ub4dc\uc5d0\uc120 \ub2e4\ub978 \ubaa8\ub4dc\uc758 \ucf54\ub4dc\ub97c \uc9c1\uc811\uc801\uc73c\ub85c \uc2e4\ud589\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ubb34\uc870\uac74 InterModComms \uc2dc\uc2a4\ud15c\uc744 \uac70\uccd0\uc57c\ub9cc \ud569\ub2c8\ub2e4. \uc774 4\uac00\uc9c0\ub294 \ubaa8\ub4dc \ucd08\uae30\ud654\uac00 \uc774\ub8e8\uc5b4 \uc9c8 \ub54c \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub418\ub294 \uac00\uc7a5 \uc720\uc6a9\ud55c \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4 \uc785\ub2c8\ub2e4. FMLCommonSetupEvent FMLClientSetupEvent & FMLDedicatedServerSetupEvent InterModEnqueueEvent InterModProcessEvent Note FMLClientSetupEvent \uc640 FMLDedicatedServerSetupEvent \ub294 \uc62c\ubc14\ub978 \ubc30\ud3ec\ud310\uc5d0\uc11c\ub9cc \ubc29\uc1a1\ub429\ub2c8\ub2e4! \uc774 4\uac1c\uc758 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4\uc740 \ubaa8\ub450 ParallelDispatchEvent \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\uc774\uae30 \ub54c\ubb38\uc5d0 \ubcd1\ub82c\uc801\uc73c\ub85c \ubc29\uc1a1\ub429\ub2c8\ub2e4. \ub9cc\uc57d ParallelDispatchEvent \ub610\ub294 \uadf8 \uc790\uc2dd \ud074\ub798\uc2a4 \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub418\ub294 \ub3c4\uc911 \uba54\uc778 \uc2a4\ub808\ub4dc\uc5d0\uc11c \ucf54\ub4dc\ub97c \uc2e4\ud589\ud558\uace0 \uc2f6\ub2e4\uba74 #enqueueWork \ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8 \ub9d0\uace0, \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub418\ub294 \ub2e4\ub978 \uc774\ubca4\ud2b8\ub4e4\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub4e4 \ub610\ud55c \ubb34\uc5b8\uac00\ub97c \ub4f1\ub85d\ud558\uac70\ub098, \ucd08\uae30\ud654 \ud558\ub294 \ub4f1\uc758 \uc6a9\ub3c4\ub85c \uc4f0\uc785\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub4e4\uc740 \ub300\ubd80\ubd84 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4\uacfc \ub2e4\ub974\uac8c \ube44\ub3d9\uae30\uc801\uc774\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc774\ubca4\ud2b8\ub4e4\uc758 \uc608\ub85c: ColorHandlerEvent ModelBakeEvent TextureStitchEvent RegistryEvent \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc774\ubca4\ud2b8\uac00 \ubaa8\ub4dc \ucd08\uae30\ud654 \ub3c4\uc911 \ubc29\uc1a1\ub41c\ub2e4\uba74, \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub41c\ub2e4\uace0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uae30\ubcf8\uc801\uc778 \uc0ac\uc6a9\ubc95"},{"location":"events/intro/#_1","text":"\ud3ec\uc9c0\ub294 \uc774\ubca4\ud2b8 \ubc84\uc2a4\ub97c \uc774\uc6a9\ud558\uc5ec \uc5ec\ub7ec \ubaa8\ub4dc\ub4e4\uc774 \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \uc5ec\ub7ec \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub9c9\ub300\uae30\ub97c \uc6b0\ud074\ub9ad \ud558\uc600\uc744\ub54c \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub418\uace0 \ubaa8\ub4dc\ub294 \uc774\uc5d0 \ubc18\uc751\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub418\ub294 \uc8fc \uc774\ubca4\ud2b8 \ubc84\uc2a4\ub294 MinecraftForge#EVENT_BUS \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4. \ub610\ud55c, \uac01 \ubaa8\ub4dc\ubcc4 \uc774\ubca4\ud2b8 \ubc84\uc2a4\ub610\ud55c \uc874\uc7ac\ud558\ub294\ub370, \uc774\ub294 FMLJavaModLoadingContext#getModEventBus \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4. \uc774 \ubc84\uc2a4\ub294 \uc624\uc9c1 \ud2b9\uc815\ud55c \uc0c1\ud669\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \ubc84\uc2a4\ub97c \uc5b4\ub514\uc5d0 \uc0ac\uc6a9\ud558\ub294\uc9c0\ub294 \uc544\ub798 \uc790\uc138\ud558\uac8c \ub098\uc640\uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \uc774\ubca4\ud2b8\ub294 \uc774 2 \ubc84\uc2a4\uc911 \ud558\ub098\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4: \ub300\ubd80\ubd84\uc758 \uc774\ubca4\ud2b8\ub294 \uc8fc \ud3ec\uc9c0 \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub418\uc9c0\ub9cc, \uadf8\uc911 \uc77c\ubd80\ub294 \ubaa8\ub4dc\ubcc4 \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uc774\ubca4\ud2b8 \ubc84\uc2a4\uc5d0 \ub4f1\ub85d\ub418\uc5b4, \ud2b9\uc815 \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud558\ub294 \uba54\uc11c\ub4dc \uc785\ub2c8\ub2e4.","title":"\uc774\ubca4\ud2b8"},{"location":"events/intro/#_2","text":"public class MyForgeEventHandler { @SubscribeEvent public void pickupItem(EntityItemPickupEvent event) { System.out.println(\"\uc544\uc774\ud15c\uc744 \uc8fc\uc6e0\uc2b5\ub2c8\ub2e4!!\"); } } \uc774 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uc774\ubca4\ud2b8 EntityItemPickupEvent \uc5d0 \ubc18\uc751\ud569\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294, \uc774\ub984\uc5d0\uc11c \uc554\uc2dc\ud558\ub4ef\uc774, \uc5d4\ud2f0\ud2f0\uac00 \uc544\uc774\ud15c\uc744 \ud719\ub4dd\ud560 \ub54c \ub9c8\ub2e4 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \ub4f1\ub85d\ud558\uae30 \uc704\ud574\uc11c\ub294 MinecraftForge.EVENT_BUS.register(...) \ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uadf8\ub9ac\uace0 \uc774 \uba54\uc11c\ub4dc\uc5d0 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\uac00 \uc788\ub294 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9e4\uac1c\ubcc0\uc218\ub85c \uc804\ub2ec\ud558\uc138\uc694. \ub9cc\uc57d \ud578\ub4e4\ub7ec\ub97c \ubaa8\ub4dc\ubcc4 \ubc84\uc2a4\uc5d0 \ub4f1\ub85d\ud558\uace0 \uc2f6\ub2e4\uba74 FMLJavaModLoadingContext.get().getModEventBus().register(...) \ub97c \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc138\uc694.","title":"\uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \ub9cc\ub4e4\uae30"},{"location":"events/intro/#_3","text":"\uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \uc815\uc801\uc73c\ub85c \ub9cc\ub4e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\uc5d0\ub3c4 @SubscribeEvent \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc5d0\uc11c \uc0ac\uc6a9\ud55c \uc778\uc2a4\ud134\uc2a4\ub97c \ud1b5\ud55c \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uc640\uc758 \ucc28\uc774\uc810\uc740 \uba54\uc11c\ub4dc\uac00 \uc815\uc801\uc774\ub77c\ub294 \uac83\uc785\ub2c8\ub2e4. \uc815\uc801 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \ub4f1\ub85d\ud558\uae30 \uc704\ud574\uc11c\ub294 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \uc544\ub2c8\uace0, \ud074\ub798\uc2a4 \uadf8 \uc790\uccb4\uac00 \uc804\ub2ec\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8 \uc608\ub85c: public class MyStaticForgeEventHandler { @SubscribeEvent public static void arrowNocked(ArrowNockEvent event) { System.out.println(\"\ud654\uc0b4 \ub2f9\uaca8\uc9d0!\"); } } \uc774\ub294 MinecraftForge.EVENT_BUS.register(MyStaticForgeEventHandler.class) \ub97c \ud1b5\ud574 \ub4f1\ub85d\ud569\ub2c8\ub2e4.","title":"\uc815\uc801 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec"},{"location":"events/intro/#_4","text":"@Mod$EventBusSubscriber \uc5b4\ub178\ud14c\uc774\uc158\uc740 \ud074\ub798\uc2a4\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc774\ub97c \uc0ac\uc6a9\ud560 \uc2dc, \uadf8 \ud074\ub798\uc2a4\ub294 \uc790\ub3d9\uc73c\ub85c MinecraftForge#EVENT_BUS \uc5d0 @Mod \ud074\ub798\uc2a4\uac00 \ucd08\uae30\ud654\ub420 \ub54c \ub4f1\ub85d\ub429\ub2c8\ub2e4. \uc774\ub294 MinecraftForge.EVENT_BUS.register(AnnotatedClass.class) \uad6c\ubb38\uc744 @Mod \ud074\ub798\uc2a4\uc758 \uc0dd\uc131\uc790\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uac83\uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4. @Mod$EventBusSubscriber \ub294 \uc544\ubb34 \ubc84\uc2a4\ub098 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc0ac\uc6a9\ud560 \ub54c \ubaa8\ub4dc\uc758 \uc544\uc774\ub514\ub97c \uc804\ub2ec\ud558\ub294 \uac83\uc774 \uad8c\uc7a5\ub418\ub294\ub370, \uc774\ub294 \uc5b4\ub178\ud14c\uc774\uc158\ub9cc\uc73c\ub85c\ub294 \ubb34\uc2a8 \ubaa8\ub4dc\uc758 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uc778\uc9c0 \uad6c\ubcc4\ud560 \uc218 \uc5c6\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ub610, \uc774\ubca4\ud2b8\ub97c \ub4e4\uc744 \ubc84\uc2a4\ub97c \uc804\ub2ec\ud558\ub294 \uac83 \ub610\ud55c \uad8c\uc7a5\ub418\ub294\ub370, \ubb34\uc2a8 \ubc84\uc2a4\uc758 \uc774\ubca4\ud2b8\ub97c \ub4e3\ub294\uc9c0 \ud45c\uc2dc\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ub610, Dist \uac12\uc744 \uc9c0\uc815\ud558\uc5ec \uc5b4\ub5a4 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\uc11c \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uac00 \ub3d9\uc791\ud560 \uac83\uc778\uc9c0\ub97c \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ud2b9\uc815 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\uc11c\ub294 \uc544\uc608 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uac00 \ub4f1\ub85d\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc774\uc6a9\ud55c, RenderWorldLastEvent \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud558\ub294, \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub9cc \uc874\uc7ac\ud558\ub294 \uc815\uc801 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \uc785\ub2c8\ub2e4. @Mod.EventBusSubscriber(modid = \"mymod\", bus = Bus.FORGE, value = Dist.CLIENT) public class MyStaticClientOnlyEventHandler { @SubscribeEvent public static void drawLast(RenderWorldLastEvent event) { System.out.println(\"\uc6d4\ub4dc \uadf8\ub9ac\ub294\uc911!\"); } } Note \uc774\ub97c \uc774\uc6a9\ud558\uba74 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \uc544\ub2cc \ud074\ub798\uc2a4 \uadf8 \uc790\uccb4\uac00 \ub4f1\ub85d\ub429\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \ub4f1\ub85d\ub418\ub294 \ubaa8\ub4e0 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uc815\uc801\uc774\uc5b4\uc57c \uc81c\ub300\ub85c \ub3d9\uc791\ud569\ub2c8\ub2e4!","title":"\uc790\ub3d9\uc73c\ub85c \uc815\uc801 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \ub4f1\ub85d\ud558\uae30"},{"location":"events/intro/#_5","text":"\ub9cc\uc57d \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub420 \uc218 \uc788\ub2e4\uba74, @Cancelable \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\uc744 \uac83\uc785\ub2c8\ub2e4, \uadf8\ub9ac\uace0 \uba54\uc11c\ub4dc Event#isCancelable() \ub294 true \ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774\ubca4\ud2b8\uc758 \ucde8\uc18c \uc5ec\ubd80\ub294 Event#setCanceled(boolean canceled \uba54\uc11c\ub4dc\ub97c \ud1b5\ud574 \ubcc0\uacbd\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4, true \ub97c \uc804\ub2ec\ud560 \uc2dc \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub418\uace0 false \ub97c \uc804\ub2ec\ud560 \uc2dc \uc774\ubca4\ud2b8\uc758 \u201c\ucde8\uc18c\ub97c \ucde8\uc18c\ud569\ub2c8\ub2e4\u201d. \uadf8\ub7ec\ub098 \ub9cc\uc57d\uc5d0 \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub420 \uc218 \uc5c6\ub2e4\uba74, \uc774 \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83 \ub9cc\uc73c\ub85c UnsupportedOperationException \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ucd5c\uc18c\ub420 \uc218 \uc5c6\ub294 \uc774\ubca4\ud2b8\uc758 \ucde8\uc18c \uc5ec\ubd80\ub294 \ubd88\ubcc0\uac12\uc73c\ub85c \ucde8\uae09\ub418\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. Important \ubaa8\ub4e0 \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub420 \uc218 \uc788\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4! \ucde8\uc18c\ud560 \uc218 \uc5c6\ub294 \uc774\ubca4\ud2b8\ub97c \ucde8\uc18c\ud558\ub824\uace0 \ud560 \uc2dc UnsuppoortedOperationException \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uace0 \uac8c\uc784\uc774 \ud295\uae30\uac8c \ub429\ub2c8\ub2e4! \uadf8\ub807\uae30\uc5d0 \uc774\ubca4\ud2b8\ub97c \ucde8\uc18c\ud558\uae30 \uc804\uc5d0 Event#isCancelable() \uc744 \uc0ac\uc6a9\ud558\ub294 \ub4f1 \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub420 \uc218 \uc788\ub294\uc9c0\ub97c \uba3c\uc800 \ud655\uc2e4\ud558\uac8c \ud655\uc778\ud558\uc138\uc694!","title":"\uc774\ubca4\ud2b8 \ucde8\uc18c\ud558\uae30"},{"location":"events/intro/#_6","text":"\uc77c\ubd80 \uc774\ubca4\ud2b8\ub4e4\uc740 Event$Result \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4 \uacb0\uacfc\ub294 \uc774\ubca4\ud2b8\ub97c \uc911\ub2e8\ud558\ub294 DENY , \uae30\ubcf8 \ubc14\ub2d0\ub77c \ucf54\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 DEFAULT , \uac15\uc81c\uc801\uc73c\ub85c \ud2b9\uc815 \ub3d9\uc791\uc744 \uc218\ud589\ud558\ub3c4\ub85d \ud558\ub294 ALLOW , \uc774\ub807\uac8c 3\uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubca4\ud2b8\uc758 \uacb0\uacfc\ub294 \uc774\ubca4\ud2b8 \ub3c4\uc911 #setResult \ub97c \uc0ac\uc6a9\ud574 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \uc774\ubca4\ud2b8\uac00 \uacb0\uacfc\uac00 \uc788\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4; \uacb0\uacfc\uac00 \uc788\ub294 \uc774\ubca4\ud2b8\ub294 @HasResult \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. Important \uc5ec\ub7ec \uc774\ubca4\ud2b8\ub4e4\uc740 \uac01\uc790 \ub2e4\ub978 \ubc29\uc2dd\uc73c\ub85c \uacb0\uacfc\ub97c \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uadf8\ub807\uae30\uc5d0 \uc774\ubca4\ud2b8\uc758 JavaDoc \uc5d0\uc11c \uc774\ubca4\ud2b8\uac00 \uacb0\uacfc\ub97c \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud560\uc9c0\ub97c \ubbf8\ub9ac \uc219\uc9c0\ud558\ub3c4\ub85d \ud558\uc138\uc694!","title":"\uacb0\uacfc"},{"location":"events/intro/#_7","text":"( @SubscribeEvent \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\ub294)\uc774\ubca4\ud2b8 \ud5e8\ub4e4\ub7ec \uba54\uc11c\ub4dc\uc5d0\ub294 \uc6b0\uc120\uc21c\uc704\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uc758 \uc6b0\uc120\uc21c\uc758\ub294 @SubscribeEvent \uc758 priority \uac12\uc744 \ubcc0\uacbd\ud558\uc5ec \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc774 \uc6b0\uc120\uc21c\uc704\ub294 EventPriority \uc758 \uc5f4\uac70\ud615( HIGHEST , HIGH , NORMAL , LOW , LOWEST )\uc785\ub2c8\ub2e4. HIGHEST \uc6b0\uc120\uc21c\uc704\ub97c \uac00\uc9c4 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub4e4\uc740 \uac00\uc7a5 \uba3c\uc800 \uc2e4\ud589\ub418\uace0, LOWEST \uc6b0\uc120\uc21c\uc704\ub97c \uac00\uc9c4 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uac00\uc7a5 \ub098\uc911\uc5d0 \uc2e4\ud589\ub429\ub2c8\ub2e4.","title":"\uc6b0\uc120\uc21c\uc704"},{"location":"events/intro/#_8","text":"\ub9ce\uc740 \uc774\ubca4\ud2b8\ub4e4\uc740 \uc870\uae08\uc529 \ub2e4\ub978 \ubc88\ud615\uc774 \uc874\uc7ac\ud569\ub2c8\ub2e4. \uc774 \ubcc0\ud615\ub41c \uc774\ubca4\ud2b8\ub4e4\uc740 \uc5ed\ud560\uc774 \uc870\uae08\uc529 \ub2e4 \ub2e4\ub974\uc9c0\ub9cc, \uc804\ubd80 \ud558\ub098\uc758 \uae30\ubc18 \uc774\ubca4\ud2b8\ub97c \uc0c1\uc18d\ud558\uc5ec \ub9cc\ub4e4\uc5b4\uc838 \uc788\uac70\ub098, (\uc608: PlayerEvent ) \ub610\ub294 \ud558\ub098\uc758 \uc774\ubca4\ud2b8\ub97c \uc5ec\ub7ec \ub2e8\uacc4\ub85c \ub098\ub204\uc5b4 \ub454 \uac83\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. (\uc608: PotionBrewEvent , PotionBrewEvent$Pre \uc640 PotionBrewEvent$Post \uac00 \uc788\uc74c). \ub9cc\uc57d \uae30\ubc18\uc774 \ub418\ub294 \ubd80\ubaa8 \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud558\ub294 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uac00 \uc788\ub2e4\uba74, \uadf8 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uadf8 \uc774\ubca4\ud2b8\uc758 \ubaa8\ub4e0 \uc790\uc2dd \ud074\ub798\uc2a4\uc758 \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud569\ub2c8\ub2e4.","title":"\ud558\uc704 \uc774\ubca4\ud2b8"},{"location":"events/intro/#_9","text":"\ubaa8\ub4dc \uc774\ubca4\ud2b8 \ubc84\uc2a4\ub294 \uc8fc\ub85c \ubaa8\ub4dc\uc758 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub97c \ubc29\uc1a1\ud558\ub294\ub370\uc5d0 \uc0ac\uc6a9\ub418\uc5b4 \ubaa8\ub4dc\uc758 \ucd08\uae30\ud654\ub97c \ub3d5\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub418\ub294 \uc774\ubca4\ud2b8\ub4e4\uc740 IModBusEvent \uc778\ud130\ud398\uc774\uc2a4\ub97c \ubb34\uc870\uac74 \uad6c\ud604\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \ub610\ud55c \uc774 \uc774\ubca4\ud2b8\ub4e4\uc740 \ubcd1\ub82c\uc801\uc73c\ub85c \ubc29\uc1a1\ub418\uc5b4 \uc5ec\ub7ec \ubaa8\ub4dc\uac00 \ub3d9\uc2dc\uc5d0 \ucd08\uae30\ud654 \ub420 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc774\ub85c \uc778\ud574 \ubaa8\ub4dc\uc5d0\uc120 \ub2e4\ub978 \ubaa8\ub4dc\uc758 \ucf54\ub4dc\ub97c \uc9c1\uc811\uc801\uc73c\ub85c \uc2e4\ud589\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ubb34\uc870\uac74 InterModComms \uc2dc\uc2a4\ud15c\uc744 \uac70\uccd0\uc57c\ub9cc \ud569\ub2c8\ub2e4. \uc774 4\uac00\uc9c0\ub294 \ubaa8\ub4dc \ucd08\uae30\ud654\uac00 \uc774\ub8e8\uc5b4 \uc9c8 \ub54c \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub418\ub294 \uac00\uc7a5 \uc720\uc6a9\ud55c \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4 \uc785\ub2c8\ub2e4. FMLCommonSetupEvent FMLClientSetupEvent & FMLDedicatedServerSetupEvent InterModEnqueueEvent InterModProcessEvent Note FMLClientSetupEvent \uc640 FMLDedicatedServerSetupEvent \ub294 \uc62c\ubc14\ub978 \ubc30\ud3ec\ud310\uc5d0\uc11c\ub9cc \ubc29\uc1a1\ub429\ub2c8\ub2e4! \uc774 4\uac1c\uc758 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4\uc740 \ubaa8\ub450 ParallelDispatchEvent \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\uc774\uae30 \ub54c\ubb38\uc5d0 \ubcd1\ub82c\uc801\uc73c\ub85c \ubc29\uc1a1\ub429\ub2c8\ub2e4. \ub9cc\uc57d ParallelDispatchEvent \ub610\ub294 \uadf8 \uc790\uc2dd \ud074\ub798\uc2a4 \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub418\ub294 \ub3c4\uc911 \uba54\uc778 \uc2a4\ub808\ub4dc\uc5d0\uc11c \ucf54\ub4dc\ub97c \uc2e4\ud589\ud558\uace0 \uc2f6\ub2e4\uba74 #enqueueWork \ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8 \ub9d0\uace0, \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub418\ub294 \ub2e4\ub978 \uc774\ubca4\ud2b8\ub4e4\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub4e4 \ub610\ud55c \ubb34\uc5b8\uac00\ub97c \ub4f1\ub85d\ud558\uac70\ub098, \ucd08\uae30\ud654 \ud558\ub294 \ub4f1\uc758 \uc6a9\ub3c4\ub85c \uc4f0\uc785\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub4e4\uc740 \ub300\ubd80\ubd84 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4\uacfc \ub2e4\ub974\uac8c \ube44\ub3d9\uae30\uc801\uc774\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc774\ubca4\ud2b8\ub4e4\uc758 \uc608\ub85c: ColorHandlerEvent ModelBakeEvent TextureStitchEvent RegistryEvent \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc774\ubca4\ud2b8\uac00 \ubaa8\ub4dc \ucd08\uae30\ud654 \ub3c4\uc911 \ubc29\uc1a1\ub41c\ub2e4\uba74, \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub41c\ub2e4\uace0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubaa8\ub4dc \uc774\ubca4\ud2b8 \ubc84\uc2a4"},{"location":"forgedev/","text":"Getting Started If you have decided to contribute to Forge, you will have to take some special steps to get started with developing. A simple mod development environment will not suffice to work with Forge\u2019s codebase directly. Instead, you can use the following guide to help you with your setup and get you started with improving Forge! Forking and Cloning the Repository Like most major open source projects you will find, Forge is hosted on GitHub . If you have contributed to another project before, you will know this process already and can skip right ahead to the next section. For those who are beginners when it comes to collaboration via Git, here are two easy steps to get you started. Note This guide assumes that you already have a GitHub account set up. If you do not, visit their registration page to create an account. Furthermore, this guide is not a tutorial for git\u2019s usage. Please consult different sources first if you are struggling to get it working. Forking First of all, you have to \u201cfork\u201d the MinecraftForge repository by clicking the \u201cFork\u201d button in the upper right hand corner. If you are in an organization, select the account you want your fork to be hosted on. Forking the repository is necessary since not every GitHub user can have free access to every repository. Instead, you create a copy of the original repository to later contribute your changes via a so called Pull Request, which you will learn more about later. Cloning After forking the repository, it is time to get local access to actually make some changes. For this, you need to clone the repository onto your local machine. Using your favorite git client, simply clone your fork into a directory of your choice. As general example, here is a command line snippet that should work on all correctly configured systems and clones the repository into a directory called \u201cMinecraftForge\u201d under the current directory (note that you have to replace <User> with your username): git clone https://github.com/<User>/MinecraftForge Checking out the Correct Branch Forking and cloning the repository are the only mandatory steps to develop for Forge. However, to ease the process of creating Pull Requests for you, it is best to work with branches. It is recommended to create and check out a branch for each PR you plan to submit. This way, you can always keep around the latest changes of Forge for new PRs while you still work on older patches. After completing this step, you are ready to go and set up your development environment. Setting Up the Environment Depending on your favorite IDE, there is a different set of recommended steps you have to follow to successfully set up a development environment. Eclipse Due to the way Eclipse workspaces work, ForgeGradle can do most of the work involved to get you started with a Forge workspace. Open a terminal/command prompt and navigate to the directory of your cloned fork. Type ./gradlew setup and hit enter. Wait until ForgeGradle is done. Type ./gradlew eclipse and hit enter. This allows Eclipse to detect the \u201cForge\u201d and \u201cClean\u201d subdirectories within projects to import them into the workspace. Open your Eclipse workspace and go to File -> Import -> General -> Existing Projects into workspace . Browse to the <repo>/projects/ directory for the \u201cRoot directory\u201d option in the dialog that opens. Make sure both \u201cForge\u201d and \u201cClean\u201d are checked and adjust the other settings to your liking. Complete the import by clicking the \u201cFinish\u201d button. That is all it takes to get you up and running with Eclipse. There is no extra steps required to get the test mods running. Simply hit \u201cRun\u201d like in any other project and select the appropriate run configuration. IntelliJ IDEA JetBrains\u2019 flagship IDE comes with great integrated support for Gradle : Forge\u2019s build system of choice. Due to some peculiarities of Minecraft mod development, however, there are additional steps required to get everything to work properly. IDEA 2021 onwards Start IntelliJ IDEA 2021. If you already have another project open, close the project with the File -> Close project option. In the projects tab of the \u201cWelcome to IntelliJ IDEA\u201d window, click the \u201cOpen\u201d button on the top right and select the MinecraftForge folder you cloned earlier. Click \u201cTrust Project\u201d if prompted. After IDEA is done importing the project and indexing its files, run the Gradle setup task. You can do this by: Open the Gradle sidebar on the right hand side of your screen, then open the forge project tree, select Tasks, then other and double-click the setup task (may also appear as MinecraftForge[Setup] ) found in Forge -> Tasks -> other -> setup . If you get a licensing error during build before making any changes, running the updateLicenses task may help. This task is found in Forge -> Tasks -> other as well. IDEA 2019-2020 There are a few minor differences between IDEA 2021 and these versions for setup. Import Forge\u2019s build.gradle as an IDEA project. For this, simply click Import Project from the Welcome to IntelliJ IDEA splash screen, then select the build.gradle file. After IDEA is done importing the project and indexing the files, run the Gradle setup task. Either: Open the Gradle sidebar on the right hand side of your screen, then open the forge project tree, select Tasks , then other and double-click the setup task (may also appear as MinecraftForge[Setup] . Or alternatively: Tap the CTRL key twice, and type gradle setup in the Run command window that pops up. You can then run Forge using the forge_client gradle task ( Tasks -> fg_runs -> forge_client ): right-click the task and select either Run or Debug as desired. IDEA older versions Versions older than 2016 will not work because they did not have the appropriate Gradle support nor support Forge development multi-project workspaces. IDEA 2016 - 2018 will work with extra manual steps required, but it is strongly recommended to update to IDEA 2019+ instead. cpw has uploaded a video for IDEA 2016.1 explaining very similar steps which will lead to a working setup. That is all there is to creating a Forge development environment in IntelliJ IDEA. However, you will not be able to run tests and debug mods included in Forge straight away. This takes some extra effort. Enabling test mods To enable the test mods coming with Forge, you will need to add the compiler output to the classpath. Again, cpw has put up a video explaining these steps for IDEA 2016.1. Build the test classes by selecting the src/main/test directory in your project view and then run Build -> Build module 'Forge_test' from the menu bar. Open the \u201cProject Structure\u201d window under File -> Project Structure . Head to the \u201cModules\u201d section and expand the Forge module. Select the Forge_test submodule and head to the \u201cPaths\u201d tab. Remember the path listed under the \u201cTest output path\u201d label and select the Forge_main submodule from the tree. Open the \u201cDependencies\u201d tab, hit the green plus button on the right-hand side, and select \u201cJARs or directories\u201d. Navigate to the path previously displayed as the Forge_test output path and confirm your selection. For the \u201cScope\u201d of this newly added dependency (currently \u201cCompile\u201d) choose \u201cRuntime\u201d, since the main code does not rely on the test code for compilation. Now that you have added the test mods to the classpath, you need to rebuild them each time you make a change, as they will not be built automatically. To do so, repeat step 1 from the above list or, in case you make changes to a single test mod file and want them to get rebuilt, simply hit Build -> Rebuild project or the corresponding keyboard shortcut (CTRL+F9 by default). Testing with existing mods You might want to test changes in Forge with an existing project. The video by cpw linked in the test mods section also covers this for IDEA 2016.1. Getting the mod to run requires similar steps to the test mod, but getting your project added to the workspace requires some additional work. Open the \u201cProject Structure\u201d Window under File -> Project Structure . Head to the \u201cModules\u201d section and press the green plus icon above the tree view. Select \u201cImport Module\u201d, navigate to your project\u2019s build.gradle file, and confirm your selection as well as the import settings. Close the \u201cProject Structure\u201d window by clicking the \u201cOK\u201d button. Reopen the window after IDEA is done importing the project and select your project\u2019s _main module from the tree. Open the \u201cDependencies\u201d tab, click the green plus icon on the right-hand side, and select \u201cModule dependency\u201d. In the window that just opened, select the Forge_main module. From here on, reproduce the steps from the test mods section, just with your project\u2019s _main module instead of the Forge_test one. Note You might need to remove existing dependencies from a normal development environment (mainly references to a forgeSrc JAR) or move the Forge module higher up in the dependency list. You should now be able to work with your mod using the changes you introduce to the Forge and Vanilla codebase. Making Changes and Pull Requests Once you have set up your development environment, it is time to make some changes to Forge\u2019s codebase. There are, however, some pitfalls you have to avoid when editing the project\u2019s code. The most important thing to note is that if you wish to edit Minecraft source code, you must only do so in the \u201cForge\u201d sub-project. Any changes in the \u201cClean\u201d project will mess with ForgeGradle and generating the patches. This can have disastrous consequences and might render your environment completely useless. If you wish to have a flawless experience, make sure you only edit code in the \u201cForge\u201d project! Generating Patches After you have made changes to the code base and tested them thoroughly, you may go ahead and generate patches. This is only necessary if you work on the Minecraft code base (i.e. in the \u201cForge\u201d project), but this step is vital for your changes to work elsewhere. Forge works by injecting only changed things into Vanilla Minecraft and hence needs those changes available in an appropriate format. Thankfully, ForgeGradle is capable of generating the changeset for you to commit it. To initiate the patch generation, simply run the genPatches Gradle task from your IDE or the command line. After its completion, you can commit all your changes (make sure you do not add any unnecessary files) and submit your Pull Request! Pull Requests The last step before your contribution is added to Forge is a Pull Request (PR in short). This is a formal request to incorporate your fork\u2019s changes into the live code base. Creating a PR is easy. Simply go to this GitHub page and follow the proposed steps. It is now that a good setup with branches pays off, since you are able to select precisely the changes you want to submit. Note Pull Requests are bound to rules; not every request will blindly be accepted. Follow this document to get further information and to ensure the best quality of your PR! If you want to maximize the chances of your PR getting accepted, follow these PR guidelines !","title":"\uc2dc\uc791\ud558\uae30"},{"location":"forgedev/#getting-started","text":"If you have decided to contribute to Forge, you will have to take some special steps to get started with developing. A simple mod development environment will not suffice to work with Forge\u2019s codebase directly. Instead, you can use the following guide to help you with your setup and get you started with improving Forge!","title":"Getting Started"},{"location":"forgedev/#forking-and-cloning-the-repository","text":"Like most major open source projects you will find, Forge is hosted on GitHub . If you have contributed to another project before, you will know this process already and can skip right ahead to the next section. For those who are beginners when it comes to collaboration via Git, here are two easy steps to get you started. Note This guide assumes that you already have a GitHub account set up. If you do not, visit their registration page to create an account. Furthermore, this guide is not a tutorial for git\u2019s usage. Please consult different sources first if you are struggling to get it working.","title":"Forking and Cloning the Repository"},{"location":"forgedev/#forking","text":"First of all, you have to \u201cfork\u201d the MinecraftForge repository by clicking the \u201cFork\u201d button in the upper right hand corner. If you are in an organization, select the account you want your fork to be hosted on. Forking the repository is necessary since not every GitHub user can have free access to every repository. Instead, you create a copy of the original repository to later contribute your changes via a so called Pull Request, which you will learn more about later.","title":"Forking"},{"location":"forgedev/#cloning","text":"After forking the repository, it is time to get local access to actually make some changes. For this, you need to clone the repository onto your local machine. Using your favorite git client, simply clone your fork into a directory of your choice. As general example, here is a command line snippet that should work on all correctly configured systems and clones the repository into a directory called \u201cMinecraftForge\u201d under the current directory (note that you have to replace <User> with your username): git clone https://github.com/<User>/MinecraftForge","title":"Cloning"},{"location":"forgedev/#checking-out-the-correct-branch","text":"Forking and cloning the repository are the only mandatory steps to develop for Forge. However, to ease the process of creating Pull Requests for you, it is best to work with branches. It is recommended to create and check out a branch for each PR you plan to submit. This way, you can always keep around the latest changes of Forge for new PRs while you still work on older patches. After completing this step, you are ready to go and set up your development environment.","title":"Checking out the Correct Branch"},{"location":"forgedev/#setting-up-the-environment","text":"Depending on your favorite IDE, there is a different set of recommended steps you have to follow to successfully set up a development environment.","title":"Setting Up the Environment"},{"location":"forgedev/#eclipse","text":"Due to the way Eclipse workspaces work, ForgeGradle can do most of the work involved to get you started with a Forge workspace. Open a terminal/command prompt and navigate to the directory of your cloned fork. Type ./gradlew setup and hit enter. Wait until ForgeGradle is done. Type ./gradlew eclipse and hit enter. This allows Eclipse to detect the \u201cForge\u201d and \u201cClean\u201d subdirectories within projects to import them into the workspace. Open your Eclipse workspace and go to File -> Import -> General -> Existing Projects into workspace . Browse to the <repo>/projects/ directory for the \u201cRoot directory\u201d option in the dialog that opens. Make sure both \u201cForge\u201d and \u201cClean\u201d are checked and adjust the other settings to your liking. Complete the import by clicking the \u201cFinish\u201d button. That is all it takes to get you up and running with Eclipse. There is no extra steps required to get the test mods running. Simply hit \u201cRun\u201d like in any other project and select the appropriate run configuration.","title":"Eclipse"},{"location":"forgedev/#intellij-idea","text":"JetBrains\u2019 flagship IDE comes with great integrated support for Gradle : Forge\u2019s build system of choice. Due to some peculiarities of Minecraft mod development, however, there are additional steps required to get everything to work properly.","title":"IntelliJ IDEA"},{"location":"forgedev/#idea-2021-onwards","text":"Start IntelliJ IDEA 2021. If you already have another project open, close the project with the File -> Close project option. In the projects tab of the \u201cWelcome to IntelliJ IDEA\u201d window, click the \u201cOpen\u201d button on the top right and select the MinecraftForge folder you cloned earlier. Click \u201cTrust Project\u201d if prompted. After IDEA is done importing the project and indexing its files, run the Gradle setup task. You can do this by: Open the Gradle sidebar on the right hand side of your screen, then open the forge project tree, select Tasks, then other and double-click the setup task (may also appear as MinecraftForge[Setup] ) found in Forge -> Tasks -> other -> setup . If you get a licensing error during build before making any changes, running the updateLicenses task may help. This task is found in Forge -> Tasks -> other as well.","title":"IDEA 2021 onwards"},{"location":"forgedev/#idea-2019-2020","text":"There are a few minor differences between IDEA 2021 and these versions for setup. Import Forge\u2019s build.gradle as an IDEA project. For this, simply click Import Project from the Welcome to IntelliJ IDEA splash screen, then select the build.gradle file. After IDEA is done importing the project and indexing the files, run the Gradle setup task. Either: Open the Gradle sidebar on the right hand side of your screen, then open the forge project tree, select Tasks , then other and double-click the setup task (may also appear as MinecraftForge[Setup] . Or alternatively: Tap the CTRL key twice, and type gradle setup in the Run command window that pops up. You can then run Forge using the forge_client gradle task ( Tasks -> fg_runs -> forge_client ): right-click the task and select either Run or Debug as desired.","title":"IDEA 2019-2020"},{"location":"forgedev/#idea-older-versions","text":"Versions older than 2016 will not work because they did not have the appropriate Gradle support nor support Forge development multi-project workspaces. IDEA 2016 - 2018 will work with extra manual steps required, but it is strongly recommended to update to IDEA 2019+ instead. cpw has uploaded a video for IDEA 2016.1 explaining very similar steps which will lead to a working setup. That is all there is to creating a Forge development environment in IntelliJ IDEA. However, you will not be able to run tests and debug mods included in Forge straight away. This takes some extra effort.","title":"IDEA older versions"},{"location":"forgedev/#enabling-test-mods","text":"To enable the test mods coming with Forge, you will need to add the compiler output to the classpath. Again, cpw has put up a video explaining these steps for IDEA 2016.1. Build the test classes by selecting the src/main/test directory in your project view and then run Build -> Build module 'Forge_test' from the menu bar. Open the \u201cProject Structure\u201d window under File -> Project Structure . Head to the \u201cModules\u201d section and expand the Forge module. Select the Forge_test submodule and head to the \u201cPaths\u201d tab. Remember the path listed under the \u201cTest output path\u201d label and select the Forge_main submodule from the tree. Open the \u201cDependencies\u201d tab, hit the green plus button on the right-hand side, and select \u201cJARs or directories\u201d. Navigate to the path previously displayed as the Forge_test output path and confirm your selection. For the \u201cScope\u201d of this newly added dependency (currently \u201cCompile\u201d) choose \u201cRuntime\u201d, since the main code does not rely on the test code for compilation. Now that you have added the test mods to the classpath, you need to rebuild them each time you make a change, as they will not be built automatically. To do so, repeat step 1 from the above list or, in case you make changes to a single test mod file and want them to get rebuilt, simply hit Build -> Rebuild project or the corresponding keyboard shortcut (CTRL+F9 by default).","title":"Enabling test mods"},{"location":"forgedev/#testing-with-existing-mods","text":"You might want to test changes in Forge with an existing project. The video by cpw linked in the test mods section also covers this for IDEA 2016.1. Getting the mod to run requires similar steps to the test mod, but getting your project added to the workspace requires some additional work. Open the \u201cProject Structure\u201d Window under File -> Project Structure . Head to the \u201cModules\u201d section and press the green plus icon above the tree view. Select \u201cImport Module\u201d, navigate to your project\u2019s build.gradle file, and confirm your selection as well as the import settings. Close the \u201cProject Structure\u201d window by clicking the \u201cOK\u201d button. Reopen the window after IDEA is done importing the project and select your project\u2019s _main module from the tree. Open the \u201cDependencies\u201d tab, click the green plus icon on the right-hand side, and select \u201cModule dependency\u201d. In the window that just opened, select the Forge_main module. From here on, reproduce the steps from the test mods section, just with your project\u2019s _main module instead of the Forge_test one. Note You might need to remove existing dependencies from a normal development environment (mainly references to a forgeSrc JAR) or move the Forge module higher up in the dependency list. You should now be able to work with your mod using the changes you introduce to the Forge and Vanilla codebase.","title":"Testing with existing mods"},{"location":"forgedev/#making-changes-and-pull-requests","text":"Once you have set up your development environment, it is time to make some changes to Forge\u2019s codebase. There are, however, some pitfalls you have to avoid when editing the project\u2019s code. The most important thing to note is that if you wish to edit Minecraft source code, you must only do so in the \u201cForge\u201d sub-project. Any changes in the \u201cClean\u201d project will mess with ForgeGradle and generating the patches. This can have disastrous consequences and might render your environment completely useless. If you wish to have a flawless experience, make sure you only edit code in the \u201cForge\u201d project!","title":"Making Changes and Pull Requests"},{"location":"forgedev/#generating-patches","text":"After you have made changes to the code base and tested them thoroughly, you may go ahead and generate patches. This is only necessary if you work on the Minecraft code base (i.e. in the \u201cForge\u201d project), but this step is vital for your changes to work elsewhere. Forge works by injecting only changed things into Vanilla Minecraft and hence needs those changes available in an appropriate format. Thankfully, ForgeGradle is capable of generating the changeset for you to commit it. To initiate the patch generation, simply run the genPatches Gradle task from your IDE or the command line. After its completion, you can commit all your changes (make sure you do not add any unnecessary files) and submit your Pull Request!","title":"Generating Patches"},{"location":"forgedev/#pull-requests","text":"The last step before your contribution is added to Forge is a Pull Request (PR in short). This is a formal request to incorporate your fork\u2019s changes into the live code base. Creating a PR is easy. Simply go to this GitHub page and follow the proposed steps. It is now that a good setup with branches pays off, since you are able to select precisely the changes you want to submit. Note Pull Requests are bound to rules; not every request will blindly be accepted. Follow this document to get further information and to ensure the best quality of your PR! If you want to maximize the chances of your PR getting accepted, follow these PR guidelines !","title":"Pull Requests"},{"location":"forgedev/prguidelines/","text":"Pull Request Guidelines Mods are built on top of Forge, but there are some things that Forge does not support, and that limits what mods can do. When modders run into something like that, they can make a change to Forge to support it, and submit that change as a Pull Request on Github. To make the best use of both your and the Forge team\u2019s time, it is recommended to follow some rough guidelines when preparing a Pull Request. The following points are the most important aspects to keep in mind when it comes to writing a good Pull Request. What Exactly is Forge? At a high level, Forge is a mod compatibility layer on top of Minecraft. Early mods edited Minecraft\u2019s code directly (like coremods do now), but they ran into conflicts with each other when they edited the same things. They also ran into issues when one mod changed behavior in ways that the other mods could not anticipate (like coremods do now), causing mysterious issues and lots of headaches. By using something like Forge, mods can centralize common changes and avoid conflicts. Forge also includes supporting structures for common mod features like Capabilities, Registries, and others that allow mods to work together better. When writing a good Forge Pull Request, you also have to know what Forge is at a lower level. There are two main types of code in Forge: Minecraft patches, and Forge code. Patches Patches are applied as direct changes to Minecraft\u2019s source code, and aim to be as minimal as possible. Every time Minecraft code changes, all the Forge patches need to be looked over carefully and applied correctly to the new code. This means that large patches that change lots of things are difficult to maintain, so Forge aims to avoid those and keep patches as small as possible. In addition to making sure the code makes sense, reviews for patches will focus on minimizing the size. There are many strategies to make small patches, and reviews will often point out better methods to do things. Forge patches often insert a single line that fires an event or a code hook, which affects the code after it if the event meets some condition. This allows most of the code to exist outside of the patch, which keeps the patch small and simple. For more detailed information about creating patches, see the GitHub wiki . Forge Code Aside from the patches, Forge code is just normal Java code. It can be event code, compatibility features, or anything else that is not directly editing Minecraft code. When Minecraft updates, Forge code has to update just like everything else. However, it is much easier because it is not directly entangled in the Minecraft code. Because this code stands on its own, there is no size restriction like there is with the patches. In addition to making sure the code makes sense, reviews will focus on making the code clean: with proper formatting and Java documentation. Explain Yourself All Pull Requests need to answer the question: why is this necessary? Any code added to Forge needs to be maintained, and more code means more potential for bugs, so solid justification is needed for adding code. A common Pull Request issue is offering no explanation, or giving cryptic examples for how the Pull Request might theoretically be used. This only delays the Pull Request process. A clear explanation for the general case is good, but also give a concrete example of how your mod needs this Pull Request. Sometimes there is better way to do what you wanted, or a way to do it without a Pull Request at all. Code changes can not be accepted until those possibilities have been completely ruled out. Show that it Works The code you submit to Forge should work perfectly, and it is up to you to convince the reviewers that it does. One of the best ways to do that is to add an example mod or JUnit test to Forge that makes use of your new code and shows it working. To set up and run a Forge Environment with the example mods, see this guide . Breaking Changes in Forge Forge cannot make changes that break the mods that depend on it. This means that Pull Requests have to ensure that they do not break binary compatibility with previous Forge versions. A change that breaks binary compatibility is called a Breaking Change. There are some exceptions to this: Forge accepts Breaking Changes at the beginning of new Minecraft versions, where Minecraft itself already causes Breaking Changes for modders. Sometimes an emergency breaking change is required outside of that time window, but it is rare and can cause dependency headaches for everyone in the modded Minecraft community. Outside of those exceptional times, Pull Requests with breaking changes are not accepted. They must be adapted to support the old behavior or wait for the next Minecraft version. Be Patient, Civil, and Empathetic When submitting Pull Requests, you will often have to survive code review and make several changes before it is the best Pull Request possible. Keep in mind that code review is not judgement against you. Bugs in your code are not personal. Nobody is perfect, and that is why we are working together. Negativity will not help. Threatening to give up on your Pull Request and write a coremod instead will just make people upset and make the modded ecosystem worse. It is important that while working together you assume the best intentions of the people who are reviewing your Pull Request and not take things personally. Review If you do your best to understand the slow and perfectionistic nature of the Pull Request process, we will do our best to understand your point of view as well. After your Pull Request has been reviewed and cleaned up to the best of everyone\u2019s ability, it will be marked for a final review by Lex, who has the final say on what is included in the project or not.","title":"PR \uac00\uc774\ub4dc\ub77c\uc778"},{"location":"forgedev/prguidelines/#pull-request-guidelines","text":"Mods are built on top of Forge, but there are some things that Forge does not support, and that limits what mods can do. When modders run into something like that, they can make a change to Forge to support it, and submit that change as a Pull Request on Github. To make the best use of both your and the Forge team\u2019s time, it is recommended to follow some rough guidelines when preparing a Pull Request. The following points are the most important aspects to keep in mind when it comes to writing a good Pull Request.","title":"Pull Request Guidelines"},{"location":"forgedev/prguidelines/#what-exactly-is-forge","text":"At a high level, Forge is a mod compatibility layer on top of Minecraft. Early mods edited Minecraft\u2019s code directly (like coremods do now), but they ran into conflicts with each other when they edited the same things. They also ran into issues when one mod changed behavior in ways that the other mods could not anticipate (like coremods do now), causing mysterious issues and lots of headaches. By using something like Forge, mods can centralize common changes and avoid conflicts. Forge also includes supporting structures for common mod features like Capabilities, Registries, and others that allow mods to work together better. When writing a good Forge Pull Request, you also have to know what Forge is at a lower level. There are two main types of code in Forge: Minecraft patches, and Forge code.","title":"What Exactly is Forge?"},{"location":"forgedev/prguidelines/#patches","text":"Patches are applied as direct changes to Minecraft\u2019s source code, and aim to be as minimal as possible. Every time Minecraft code changes, all the Forge patches need to be looked over carefully and applied correctly to the new code. This means that large patches that change lots of things are difficult to maintain, so Forge aims to avoid those and keep patches as small as possible. In addition to making sure the code makes sense, reviews for patches will focus on minimizing the size. There are many strategies to make small patches, and reviews will often point out better methods to do things. Forge patches often insert a single line that fires an event or a code hook, which affects the code after it if the event meets some condition. This allows most of the code to exist outside of the patch, which keeps the patch small and simple. For more detailed information about creating patches, see the GitHub wiki .","title":"Patches"},{"location":"forgedev/prguidelines/#forge-code","text":"Aside from the patches, Forge code is just normal Java code. It can be event code, compatibility features, or anything else that is not directly editing Minecraft code. When Minecraft updates, Forge code has to update just like everything else. However, it is much easier because it is not directly entangled in the Minecraft code. Because this code stands on its own, there is no size restriction like there is with the patches. In addition to making sure the code makes sense, reviews will focus on making the code clean: with proper formatting and Java documentation.","title":"Forge Code"},{"location":"forgedev/prguidelines/#explain-yourself","text":"All Pull Requests need to answer the question: why is this necessary? Any code added to Forge needs to be maintained, and more code means more potential for bugs, so solid justification is needed for adding code. A common Pull Request issue is offering no explanation, or giving cryptic examples for how the Pull Request might theoretically be used. This only delays the Pull Request process. A clear explanation for the general case is good, but also give a concrete example of how your mod needs this Pull Request. Sometimes there is better way to do what you wanted, or a way to do it without a Pull Request at all. Code changes can not be accepted until those possibilities have been completely ruled out.","title":"Explain Yourself"},{"location":"forgedev/prguidelines/#show-that-it-works","text":"The code you submit to Forge should work perfectly, and it is up to you to convince the reviewers that it does. One of the best ways to do that is to add an example mod or JUnit test to Forge that makes use of your new code and shows it working. To set up and run a Forge Environment with the example mods, see this guide .","title":"Show that it Works"},{"location":"forgedev/prguidelines/#breaking-changes-in-forge","text":"Forge cannot make changes that break the mods that depend on it. This means that Pull Requests have to ensure that they do not break binary compatibility with previous Forge versions. A change that breaks binary compatibility is called a Breaking Change. There are some exceptions to this: Forge accepts Breaking Changes at the beginning of new Minecraft versions, where Minecraft itself already causes Breaking Changes for modders. Sometimes an emergency breaking change is required outside of that time window, but it is rare and can cause dependency headaches for everyone in the modded Minecraft community. Outside of those exceptional times, Pull Requests with breaking changes are not accepted. They must be adapted to support the old behavior or wait for the next Minecraft version.","title":"Breaking Changes in Forge"},{"location":"forgedev/prguidelines/#be-patient-civil-and-empathetic","text":"When submitting Pull Requests, you will often have to survive code review and make several changes before it is the best Pull Request possible. Keep in mind that code review is not judgement against you. Bugs in your code are not personal. Nobody is perfect, and that is why we are working together. Negativity will not help. Threatening to give up on your Pull Request and write a coremod instead will just make people upset and make the modded ecosystem worse. It is important that while working together you assume the best intentions of the people who are reviewing your Pull Request and not take things personally.","title":"Be Patient, Civil, and Empathetic"},{"location":"forgedev/prguidelines/#review","text":"If you do your best to understand the slow and perfectionistic nature of the Pull Request process, we will do our best to understand your point of view as well. After your Pull Request has been reviewed and cleaned up to the best of everyone\u2019s ability, it will be marked for a final review by Lex, who has the final say on what is included in the project or not.","title":"Review"},{"location":"gettingstarted/","text":"\ud3ec\uc9c0 \ubaa8\ub4dc \uac1c\ubc1c \uc2dc\uc791\ud558\uae30 \uc774 \ud398\uc774\uc9c0\ub294 \uac04\ub2e8\ud55c \ubaa8\ub4dc\ub97c \ub9cc\ub4e4 \uc218 \uc788\ub3c4\ub85d \ud574\uc8fc\ub294 \uac00\uc774\ub4dc \uc785\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \uc774 \ubb38\uc11c\uc758 \ub2e4\ub978 \ud398\uc774\uc9c0\ub4e4\uc744 \ubcf4\uc2dc\uae30 \uc804\uc5d0 \uc774 \ud398\uc774\uc9c0\ub97c \uba3c\uc800 \uc77d\ub294 \uac83\uc744 \uad8c\uc7a5\ub4dc\ub9bd\ub2c8\ub2e4. \uccab \ubaa8\ub4dc \uac1c\ubc1c \ud574\ubcf4\uae30 \uba3c\uc800, Java 8 \uac1c\ubc1c \ud0a4\ud2b8(JDK)\uc640 64\ube44\ud2b8 Java \uac00\uc0c1 \uba38\uc2e0(JVM)\uc744 \ub2e4\uc6b4\ubc1b\uc73c\uc138\uc694. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc640 \ud3ec\uc9c0\ub294 \ub458\ub2e4 Java 8\ub85c \ucef4\ud30c\uc77c\uc774 \uac00\ub2a5\ud558\uae30\uc5d0 \uc774\ub97c \uc0ac\uc6a9\ud558\uc2dc\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. 32\ube44\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc2dc\uba74 \uc544\ub798 \uba85\uc2dc\ub41c Gradle \uc791\uc5c5 \uc218\ud589\ub3c4\uc911 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AdoptOpenJDK \uc5d0\uc11c \ub2e4\uc6b4\ubc1b\uc73c\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0 \uc0ac\uc774\ud2b8 \uc5d0\uc11c \ubaa8\ub4dc \uac1c\ubc1c \ud0a4\ud2b8(MDK)\ub97c \ub2e4\uc6b4\ubc1b\uc73c\uc138\uc694. \ub2e4\uc6b4\ubc1b\uc740 MDK \uc758 \uc555\ucd95\uc744 \ub97c \ube44\uc5b4\uc788\ub294 \ud3f4\ub354\uc5d0 \ud574\uc81c\ud558\ub3c4\ub85d \ud558\uc138\uc694. \uadf8\ub7ec\uba74 \uc5ec\ub7ec \ud30c\uc77c\ub4e4\uacfc src/main/java \uc5d0 \uc788\ub294 \uc608\uc81c \ubaa8\ub4dc\uac00 \ubcf4\uc774\uc2e4\ud150\ub370, \ubaa8\ub4dc \uac1c\ubc1c\ud560\ub54c, \uc544\ub798 \uba85\uc2dc\ub41c \ud30c\uc77c\ub4e4\uc740 \uac74\ub4dc\uc2e4 \ud544\uc694\uac00 \uc788\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc9c0 \uc54a\uc73c\uba70 \uc5ec\ub7ec \ubaa8\ub4dc \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uc7ac\uc0ac\uc6a9\ud558\uc154\ub3c4 \uad28\ucc2e\uc2b5\ub2c8\ub2e4: build.gradle gradlew.bat gradlew gradle \ud3f4\ub354 \uc704 \ud30c\uc77c\ub4e4\uc744 \uc0c8\ub85c\uc6b4 \ud3f4\ub354\ub85c \uc62e\uae30\uc138\uc694. \uadf8 \uc0c8 \ud3f4\ub354\ub294 \ubaa8\ub4dc \ud504\ub85c\uc81d\ud2b8 \ud3f4\ub354\uac00 \ub420 \uac83\uc785\ub2c8\ub2e4. IDE \ub97c \uace0\ub974\uc138\uc694: \ud3ec\uc9c0\uc5d0\uc11c \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc6d0\ub418\ub294 IDE \ub294 Eclipse \uac00 \uc720\uc77c\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 Intellij IDEA \ub098 Visual Studio Code \uc5d0\uc11c \uac1c\ubc1c\ud558\uae30 \uc704\ud574 \ucd94\uac00\uc801\uc778 run \uc791\uc5c5\ub4e4 \ub610\ud55c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc0ac\uc2e4 \uc5b4\ub5a4 IDE \ub4e0 \ubaa8\ub4dc \uac1c\ubc1c\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ub9cc\ub4e4 \uc218 \uc788\uae34 \ud569\ub2c8\ub2e4. Eclipse \uc640 Intellij IDEA \ub294 Gradle \uc744 \uad00\ub9ac\ud574 \uc8fc\uae30 \ub54c\ubb38\uc5d0 \ucd08\uae30 \uac1c\ubc1c\ud658\uacbd \uc124\uc815\uc744 \uac04\ub2e8\ud558\uac8c \ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \ucd08\uae30 \uac1c\ubc1c\ud658\uacbd \uc124\uc815\uc5d0\ub294, \ubaa8\uc7a5 \ub610\ub294 \ud3ec\uc9c0\uc640 \uac19\uc740 \uc5ec\ub7ec \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uacf5\uc720 \uc0ac\uc774\ud2b8\uc5d0\uc11c \ud328\ud0a4\uc9c0\ub97c \ubc1b\ub294 \uac83\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. VSCode \ub294 Gradle Tasks \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud574 \ucd08\uae30 \uac1c\ubc1c\ud658\uacbd \uc124\uc815\uc744 \uad00\ub9ac\ud558\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84, \ub610\ub294 \ubaa8\ub4e0 \uc0c1\ud669\uc5d0\uc120, build.gradle \uc744 \uc218\uc815\ud558\uace0 \uc774\ub97c \uc801\uc6a9\ud558\uae30 \uc704\ud574\uc11c\ub294 Gradle \uc744 \ud638\ucd9c\ud558\uc5ec \ud504\ub85c\uc81d\ud2b8\ub97c \ub2e4\uc2dc \ucc98\ub9ac\ud558\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4. \uc704\uc5d0\uc11c \uc5b8\uae09\ud55c \ub450 IDE \ub294 Gradle \ud328\ub110\uc758 \uc0c8\ub85c\uace0\uce68 \ubc84\ud2bc\uc73c\ub85c \ud504\ub85c\uc81d\ud2b8\ub97c \ub2e4\uc2dc \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IDE \uc2e4\ud589 \uc124\uc815 \uc0dd\uc131: \uc774\ud074\ub9bd\uc2a4: runEclipseRuns \ub97c \uc2e4\ud589\ud558\uc138\uc694( gradlew genEclipseRuns ). \uc774\ub294 \uac8c\uc784 \uc2e4\ud589 \uc124\uc815\uc744 \uc0dd\uc131\ud558\uace0 \uac8c\uc784\uc5d0 \ud544\uc694\ud55c \uc5d0\uc14b\ub4e4\uc744 \ub2e4\uc6b4\ubc1b\uc2b5\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc774 \ub05d\ub09c \uc774\ud6c4 \ud504\ub85c\uc81d\ud2b8\ub97c \uc0c8\ub85c\uace0\uce58\uc138\uc694. Intellij: genIntellijRuns \ub97c \uc2e4\ud589\ud558\uc138\uc694( gradlew genIntellijRuns ). \uc774\ub294 \uac8c\uc784 \uc2e4\ud589 \uc124\uc815\uc744 \uc0dd\uc131\ud558\uace0 \uac8c\uc784\uc5d0 \ud544\uc694\ud55c \uc5d0\uc14b\ub4e4\uc744 \ub2e4\uc6b4\ubc1b\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \u201cmodule not specified\u201d \uc640 \uac19\uc740 \uc624\ub958\uac00 \ub09c\ub2e4\uba74 \uc124\uc815\uc744 \uc218\uc815\ud558\uc5ec \u201cmain\u201d \ubaa8\ub4c8\uc744 \uc120\ud0dd\ud558\uc2dc\uac70\ub098 ideaModule \uc18d\uc131\uc744 \uc0ac\uc6a9\ud574 \ubaa8\ub4c8\uc744 \uc120\ud0dd\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VSCode: genVSCodeRuns \ub97c \uc2e4\ud589\ud558\uc138\uc694( gradlew genVSCodeRuns ). \uc774\ub294 \uac8c\uc784 \uc2e4\ud589 \uc124\uc815\uc744 \uc0dd\uc131\ud558\uace0 \uac8c\uc784\uc5d0 \ud544\uc694\ud55c \uc5d0\uc14b\ub4e4\uc744 \ub2e4\uc6b4\ubc1b\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc \uc815\ubcf4 \uc218\uc815\ud558\uae30 build.gradle \ud30c\uc77c\uc744 \uc218\uc815\ud574 \ubaa8\ub4dc\uac00 \uc5b4\ub5bb\uac8c \ube4c\ub4dc\ub418\uc5b4\uc57c \ud560\uc9c0 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(\ubaa8\ub4dc \ud30c\uc77c \uc774\ub984, \ubc84\uc804, \ub4f1). Important buildscript {} \ubd80\ubd84\uc744 \uc808\ub54c \uc218\uc815\ud558\uc9c0 \ub9c8\uc138\uc694. \uae30\ubcf8\uc801\uc73c\ub85c \uc801\ud600\uc788\ub294 \ub0b4\uc6a9\uc740 ForgeGradle \uc774 \ub3d9\uc791\ud558\uae30 \uc704\ud574 \ud544\uc694\ud569\ub2c8\ub2e4. // Only edit below this line, the above code adds and enables the necessary things for Forge to be setup. \uc544\ub798 \uc788\ub294 \ub0b4\uc6a9\ub4e4\uc740 \uac70\uc758 \uc218\uc815\ud558\uc154\ub3c4 \uad1c\ucc2e\uc740 \uac83\ub4e4\uc785\ub2c8\ub2e4. \uac04\ub2e8\ud55c build.gradle \uc124\uc815 \uc774 \uc124\uc815\ub4e4\uc740 \ubaa8\ub4e0 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \ube4c\ub4dc\ub418\ub294 \ud30c\uc77c\uc758 \uc774\ub984\uc744 \ubcc0\uacbd\ud558\uc2dc\ub824\uba74 - archivesBaseName \uc758 \uac12\uc744 \uc218\uc815\ud558\uc138\uc694. \u201cmaven \ucf54\ub514\ub124\uc774\ud2b8\u201d\ub97c \ubcc0\uacbd\ud558\uc2dc\ub824\uba74 - group \uc758 \uac12\uc744 \uc218\uc815\ud558\uc138\uc694. \ubaa8\ub4dc\uc758 \ubc84\uc804\uc744 \ubcc0\uacbd\ud558\uc2dc\ub824\uba74 - version \uc758 \uac12\uc744 \uc218\uc815\ud558\uc138\uc694. \uc2e4\ud589 \uc124\uc815\uc5d0\uc11c mod id\ub97c \ubc14\uafb8\uc2dc\ub824\uba74 - examplemod \ub97c \uc804\ubd80 \ubaa8\ub4dc\uc758 id \ub85c \ubcc0\uacbd\ud558\uc138\uc694. \ubaa8\uc7a5 \uacf5\uc2dd \ub9e4\ud551\uc73c\ub85c \ubcc0\uacbd\ud558\uae30. 1.16.5 \ubd80\ud130 Forge \ub294 \ubaa8\uc7a5\uc758 \uacf5\uc2dd \ub9e4\ud551(MojMaps)\uc744 \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4. \uacf5\uc2dd \ub9e4\ud551\uc740 \uc0ac\uc6a9\ud560 \ubaa8\ub4e0 \ud544\ub4dc\uc640 \uba54\uc11c\ub4dc \uc774\ub984, \uadf8\ub9ac\uace0 1.17 \uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ud074\ub798\uc2a4 \uc774\ub984\uc744 \ud3ec\ud568\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c Javadoc \uc774\ub791 \ud568\uc218 \uc778\uc790 \uc774\ub984\uc740 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud604\uc7ac\ub85c\uc36c \uc774 \ub9e4\ud551\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \ubc95\uc801\uc73c\ub85c \uc644\uc804\ud788 \uc548\uc804\ud55c\uc9c0 \ud655\uc2e4\ud558\uc9c4 \uc54a\uc73c\ub098 \ubaa8\uc7a5\uce21\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30\ub97c \ubc14\ub77c\ub2c8 \ud3ec\uc9c0\uc5d0\uc11c\ub294 \uc774\ub97c \uc0ac\uc6a9\ud558\uae30\ub85c \uacb0\uc84d\ud558\uc600\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\ud300\uc758 \uc785\uc7a5\uc740 \uc774\uacf3 \uc5d0\uc11c \ub354 \uc54c\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc774 \ub9e4\ud551\uc744 \uc0ac\uc6a9\ud558\uc2dc\uace0 \uc2f6\uc9c0 \uc54a\uc73c\uc2dc\ub2e4\uba74 \uacf5\uc2dd \ub9e4\ud551 \uc774\uc804\uc5d0 \uc0ac\uc6a9\ud558\ub358 MCP \ub97c \ub300\uc2e0 \uc774\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. MCP \ub294 \uc77c\ubd80 \uba54\uc11c\ub4dc, \ud544\ub4dc, \uadf8\ub9ac\uace0 \ud568\uc218 \uc778\uc790 \uc774\ub984\uacfc Javadoc \uc744 \ud3ec\ud568\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c MCP \ubc84\uc804\uc740 \uc544\ub9c8\ub3c4 \ub9c8\uc9c0\ub9c9 MCP \ub9e4\ud551\uc758 \ubc84\uc804\uc774 \ub420 \uac83\uc778\ub370, \uc65c\ub0d0\ud558\uba74 \uc774\ub294 \ub354\uc774\uc0c1 \uad00\ub9ac\ud558\uc5d0 \uc788\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. minecraft { mappings channel: 'snapshot', version: '20210309-1.16.5' } \ubaa8\ub4dc \ube4c\ub4dc \ubc0f \ud14c\uc2a4\ud2b8 \ubaa8\ub4dc\ub97c \ube4c\ub4dc\ud558\uae30 \uc704\ud574\uc11c\ub294 gradlew build \ub97c \uc2e4\ud589\ud558\uc138\uc694. \uc774\ub294 build/libs \uc5d0 \ube4c\ub4dc\ub41c Jar \ud30c\uc77c\uc744 \uc774\ub984 [archivesBaseName]-[version],jar \ub85c \ucd9c\ub825\ud560 \uac83\uc785\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc740 \ud3ec\uc9c0\uac00 \uc124\uce58\ub41c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3f4\ub354\uc758 mods \uc5d0 \ub123\uc5b4 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\ub97c \ud14c\uc2a4\ud2b8\ud560\ub54c \uac00\uc7a5 \uc26c\uc6b4 \ubc29\ubc95\uc740, \ud504\ub85c\uc81d\ud2b8\ub97c \uc124\uc815\ud560\ub54c \uc0dd\uc131\ub41c \uc2e4\ud589 \uc124\uc815 \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec \uac8c\uc784\uc744 \uc2e4\ud589\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ub54c \uac8c\uc784\uc740 <runDir> \uc5d0 \uc2e4\ud589\ub418\uba70, \uc774\ub54c \uc2e4\ud589 \uc124\uc815\uc5d0 \uc815\uc758\ub41c \ubaa8\ub4dc \uc18c\uc2a4 \ucf54\ub4dc\ub4e4\uacfc \ud568\uaed8 \uc2e4\ud589\ub429\ub2c8\ub2e4. MDK \ub294 \uae30\ubcf8\uc73c\ub85c main \uc18c\uc2a4\uc14b\uc744 \ud3ec\ud568\ud558\ub2c8, src/main/java \uc5d0 \uc791\uc131\ud558\uc2e0 \ucf54\ub4dc\ub4e4\uc740 \uac8c\uc784 \uc2e4\ud589\uc2dc \uc0ac\uc6a9\ud560 \ucf54\ub4dc\uc5d0 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ub610\ud55c gradlew runServer \ub97c \ud1b5\ud574 \uc804\uc6a9 \uc11c\ubc84\ub97c \uc2e4\ud589\ud558\uc2e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc804\uc6a9 \uc11c\ubc84\ub97c \uc774\ub807\uac8c \uc2e4\ud589\ud558\uc2dc\uba74 GUI \uc640 \ud568\uaed8 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc11c\ubc84\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. \ucd5c\ucd08 \uc2e4\ud589\uc2dc EULA \ub3d9\uc758\ub97c \uc704\ud574 \uc11c\ubc84\uac00 \ubc14\ub85c \uaebc\uc9c0\ub294\ub370, run/eula.txt \uc5d0 \ub3d9\uc758\ud558\uc2e0 \uc774\ud6c4\uc5d0\ub294 \uc11c\ubc84\uac00 \uc815\uc0c1\uc801\uc73c\ub85c \uc2e4\ud589\ub420 \uac83\uc785\ub2c8\ub2e4. \uc774\ud6c4 \uc8fc\uc18c localhost \ub97c \ud1b5\ud574 \uc811\uc18d\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note \ub9cc\uc57d \ubaa8\ub4dc\uac00 \uc804\uc6a9 \uc11c\ubc84\uc5d0\uc11c\ub3c4 \uc0ac\uc6a9\ub418\uc5b4\uc57c \ud55c\ub2e4\uba74, \uc804\uc6a9 \uc11c\ubc84\uc5d0\uc11c\ub3c4 \ubaa8\ub4dc\ub97c \ud14c\uc2a4\ud2b8\ud574\ubcf4\ub294 \uac83\uc774 \ub298 \uad8c\uc7a5\ub429\ub2c8\ub2e4.","title":"\uc2dc\uc791\ud558\uae30"},{"location":"gettingstarted/#_1","text":"\uc774 \ud398\uc774\uc9c0\ub294 \uac04\ub2e8\ud55c \ubaa8\ub4dc\ub97c \ub9cc\ub4e4 \uc218 \uc788\ub3c4\ub85d \ud574\uc8fc\ub294 \uac00\uc774\ub4dc \uc785\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \uc774 \ubb38\uc11c\uc758 \ub2e4\ub978 \ud398\uc774\uc9c0\ub4e4\uc744 \ubcf4\uc2dc\uae30 \uc804\uc5d0 \uc774 \ud398\uc774\uc9c0\ub97c \uba3c\uc800 \uc77d\ub294 \uac83\uc744 \uad8c\uc7a5\ub4dc\ub9bd\ub2c8\ub2e4.","title":"\ud3ec\uc9c0 \ubaa8\ub4dc \uac1c\ubc1c \uc2dc\uc791\ud558\uae30"},{"location":"gettingstarted/#_2","text":"\uba3c\uc800, Java 8 \uac1c\ubc1c \ud0a4\ud2b8(JDK)\uc640 64\ube44\ud2b8 Java \uac00\uc0c1 \uba38\uc2e0(JVM)\uc744 \ub2e4\uc6b4\ubc1b\uc73c\uc138\uc694. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc640 \ud3ec\uc9c0\ub294 \ub458\ub2e4 Java 8\ub85c \ucef4\ud30c\uc77c\uc774 \uac00\ub2a5\ud558\uae30\uc5d0 \uc774\ub97c \uc0ac\uc6a9\ud558\uc2dc\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. 32\ube44\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc2dc\uba74 \uc544\ub798 \uba85\uc2dc\ub41c Gradle \uc791\uc5c5 \uc218\ud589\ub3c4\uc911 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AdoptOpenJDK \uc5d0\uc11c \ub2e4\uc6b4\ubc1b\uc73c\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0 \uc0ac\uc774\ud2b8 \uc5d0\uc11c \ubaa8\ub4dc \uac1c\ubc1c \ud0a4\ud2b8(MDK)\ub97c \ub2e4\uc6b4\ubc1b\uc73c\uc138\uc694. \ub2e4\uc6b4\ubc1b\uc740 MDK \uc758 \uc555\ucd95\uc744 \ub97c \ube44\uc5b4\uc788\ub294 \ud3f4\ub354\uc5d0 \ud574\uc81c\ud558\ub3c4\ub85d \ud558\uc138\uc694. \uadf8\ub7ec\uba74 \uc5ec\ub7ec \ud30c\uc77c\ub4e4\uacfc src/main/java \uc5d0 \uc788\ub294 \uc608\uc81c \ubaa8\ub4dc\uac00 \ubcf4\uc774\uc2e4\ud150\ub370, \ubaa8\ub4dc \uac1c\ubc1c\ud560\ub54c, \uc544\ub798 \uba85\uc2dc\ub41c \ud30c\uc77c\ub4e4\uc740 \uac74\ub4dc\uc2e4 \ud544\uc694\uac00 \uc788\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc9c0 \uc54a\uc73c\uba70 \uc5ec\ub7ec \ubaa8\ub4dc \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uc7ac\uc0ac\uc6a9\ud558\uc154\ub3c4 \uad28\ucc2e\uc2b5\ub2c8\ub2e4: build.gradle gradlew.bat gradlew gradle \ud3f4\ub354 \uc704 \ud30c\uc77c\ub4e4\uc744 \uc0c8\ub85c\uc6b4 \ud3f4\ub354\ub85c \uc62e\uae30\uc138\uc694. \uadf8 \uc0c8 \ud3f4\ub354\ub294 \ubaa8\ub4dc \ud504\ub85c\uc81d\ud2b8 \ud3f4\ub354\uac00 \ub420 \uac83\uc785\ub2c8\ub2e4. IDE \ub97c \uace0\ub974\uc138\uc694: \ud3ec\uc9c0\uc5d0\uc11c \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc6d0\ub418\ub294 IDE \ub294 Eclipse \uac00 \uc720\uc77c\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 Intellij IDEA \ub098 Visual Studio Code \uc5d0\uc11c \uac1c\ubc1c\ud558\uae30 \uc704\ud574 \ucd94\uac00\uc801\uc778 run \uc791\uc5c5\ub4e4 \ub610\ud55c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc0ac\uc2e4 \uc5b4\ub5a4 IDE \ub4e0 \ubaa8\ub4dc \uac1c\ubc1c\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ub9cc\ub4e4 \uc218 \uc788\uae34 \ud569\ub2c8\ub2e4. Eclipse \uc640 Intellij IDEA \ub294 Gradle \uc744 \uad00\ub9ac\ud574 \uc8fc\uae30 \ub54c\ubb38\uc5d0 \ucd08\uae30 \uac1c\ubc1c\ud658\uacbd \uc124\uc815\uc744 \uac04\ub2e8\ud558\uac8c \ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \ucd08\uae30 \uac1c\ubc1c\ud658\uacbd \uc124\uc815\uc5d0\ub294, \ubaa8\uc7a5 \ub610\ub294 \ud3ec\uc9c0\uc640 \uac19\uc740 \uc5ec\ub7ec \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uacf5\uc720 \uc0ac\uc774\ud2b8\uc5d0\uc11c \ud328\ud0a4\uc9c0\ub97c \ubc1b\ub294 \uac83\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. VSCode \ub294 Gradle Tasks \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud574 \ucd08\uae30 \uac1c\ubc1c\ud658\uacbd \uc124\uc815\uc744 \uad00\ub9ac\ud558\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84, \ub610\ub294 \ubaa8\ub4e0 \uc0c1\ud669\uc5d0\uc120, build.gradle \uc744 \uc218\uc815\ud558\uace0 \uc774\ub97c \uc801\uc6a9\ud558\uae30 \uc704\ud574\uc11c\ub294 Gradle \uc744 \ud638\ucd9c\ud558\uc5ec \ud504\ub85c\uc81d\ud2b8\ub97c \ub2e4\uc2dc \ucc98\ub9ac\ud558\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4. \uc704\uc5d0\uc11c \uc5b8\uae09\ud55c \ub450 IDE \ub294 Gradle \ud328\ub110\uc758 \uc0c8\ub85c\uace0\uce68 \ubc84\ud2bc\uc73c\ub85c \ud504\ub85c\uc81d\ud2b8\ub97c \ub2e4\uc2dc \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IDE \uc2e4\ud589 \uc124\uc815 \uc0dd\uc131: \uc774\ud074\ub9bd\uc2a4: runEclipseRuns \ub97c \uc2e4\ud589\ud558\uc138\uc694( gradlew genEclipseRuns ). \uc774\ub294 \uac8c\uc784 \uc2e4\ud589 \uc124\uc815\uc744 \uc0dd\uc131\ud558\uace0 \uac8c\uc784\uc5d0 \ud544\uc694\ud55c \uc5d0\uc14b\ub4e4\uc744 \ub2e4\uc6b4\ubc1b\uc2b5\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc774 \ub05d\ub09c \uc774\ud6c4 \ud504\ub85c\uc81d\ud2b8\ub97c \uc0c8\ub85c\uace0\uce58\uc138\uc694. Intellij: genIntellijRuns \ub97c \uc2e4\ud589\ud558\uc138\uc694( gradlew genIntellijRuns ). \uc774\ub294 \uac8c\uc784 \uc2e4\ud589 \uc124\uc815\uc744 \uc0dd\uc131\ud558\uace0 \uac8c\uc784\uc5d0 \ud544\uc694\ud55c \uc5d0\uc14b\ub4e4\uc744 \ub2e4\uc6b4\ubc1b\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \u201cmodule not specified\u201d \uc640 \uac19\uc740 \uc624\ub958\uac00 \ub09c\ub2e4\uba74 \uc124\uc815\uc744 \uc218\uc815\ud558\uc5ec \u201cmain\u201d \ubaa8\ub4c8\uc744 \uc120\ud0dd\ud558\uc2dc\uac70\ub098 ideaModule \uc18d\uc131\uc744 \uc0ac\uc6a9\ud574 \ubaa8\ub4c8\uc744 \uc120\ud0dd\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VSCode: genVSCodeRuns \ub97c \uc2e4\ud589\ud558\uc138\uc694( gradlew genVSCodeRuns ). \uc774\ub294 \uac8c\uc784 \uc2e4\ud589 \uc124\uc815\uc744 \uc0dd\uc131\ud558\uace0 \uac8c\uc784\uc5d0 \ud544\uc694\ud55c \uc5d0\uc14b\ub4e4\uc744 \ub2e4\uc6b4\ubc1b\uc2b5\ub2c8\ub2e4.","title":"\uccab \ubaa8\ub4dc \uac1c\ubc1c \ud574\ubcf4\uae30"},{"location":"gettingstarted/#_3","text":"build.gradle \ud30c\uc77c\uc744 \uc218\uc815\ud574 \ubaa8\ub4dc\uac00 \uc5b4\ub5bb\uac8c \ube4c\ub4dc\ub418\uc5b4\uc57c \ud560\uc9c0 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(\ubaa8\ub4dc \ud30c\uc77c \uc774\ub984, \ubc84\uc804, \ub4f1). Important buildscript {} \ubd80\ubd84\uc744 \uc808\ub54c \uc218\uc815\ud558\uc9c0 \ub9c8\uc138\uc694. \uae30\ubcf8\uc801\uc73c\ub85c \uc801\ud600\uc788\ub294 \ub0b4\uc6a9\uc740 ForgeGradle \uc774 \ub3d9\uc791\ud558\uae30 \uc704\ud574 \ud544\uc694\ud569\ub2c8\ub2e4. // Only edit below this line, the above code adds and enables the necessary things for Forge to be setup. \uc544\ub798 \uc788\ub294 \ub0b4\uc6a9\ub4e4\uc740 \uac70\uc758 \uc218\uc815\ud558\uc154\ub3c4 \uad1c\ucc2e\uc740 \uac83\ub4e4\uc785\ub2c8\ub2e4.","title":"\ubaa8\ub4dc \uc815\ubcf4 \uc218\uc815\ud558\uae30"},{"location":"gettingstarted/#buildgradle","text":"\uc774 \uc124\uc815\ub4e4\uc740 \ubaa8\ub4e0 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \ube4c\ub4dc\ub418\ub294 \ud30c\uc77c\uc758 \uc774\ub984\uc744 \ubcc0\uacbd\ud558\uc2dc\ub824\uba74 - archivesBaseName \uc758 \uac12\uc744 \uc218\uc815\ud558\uc138\uc694. \u201cmaven \ucf54\ub514\ub124\uc774\ud2b8\u201d\ub97c \ubcc0\uacbd\ud558\uc2dc\ub824\uba74 - group \uc758 \uac12\uc744 \uc218\uc815\ud558\uc138\uc694. \ubaa8\ub4dc\uc758 \ubc84\uc804\uc744 \ubcc0\uacbd\ud558\uc2dc\ub824\uba74 - version \uc758 \uac12\uc744 \uc218\uc815\ud558\uc138\uc694. \uc2e4\ud589 \uc124\uc815\uc5d0\uc11c mod id\ub97c \ubc14\uafb8\uc2dc\ub824\uba74 - examplemod \ub97c \uc804\ubd80 \ubaa8\ub4dc\uc758 id \ub85c \ubcc0\uacbd\ud558\uc138\uc694.","title":"\uac04\ub2e8\ud55c build.gradle \uc124\uc815"},{"location":"gettingstarted/#_4","text":"1.16.5 \ubd80\ud130 Forge \ub294 \ubaa8\uc7a5\uc758 \uacf5\uc2dd \ub9e4\ud551(MojMaps)\uc744 \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4. \uacf5\uc2dd \ub9e4\ud551\uc740 \uc0ac\uc6a9\ud560 \ubaa8\ub4e0 \ud544\ub4dc\uc640 \uba54\uc11c\ub4dc \uc774\ub984, \uadf8\ub9ac\uace0 1.17 \uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ud074\ub798\uc2a4 \uc774\ub984\uc744 \ud3ec\ud568\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c Javadoc \uc774\ub791 \ud568\uc218 \uc778\uc790 \uc774\ub984\uc740 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud604\uc7ac\ub85c\uc36c \uc774 \ub9e4\ud551\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \ubc95\uc801\uc73c\ub85c \uc644\uc804\ud788 \uc548\uc804\ud55c\uc9c0 \ud655\uc2e4\ud558\uc9c4 \uc54a\uc73c\ub098 \ubaa8\uc7a5\uce21\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30\ub97c \ubc14\ub77c\ub2c8 \ud3ec\uc9c0\uc5d0\uc11c\ub294 \uc774\ub97c \uc0ac\uc6a9\ud558\uae30\ub85c \uacb0\uc84d\ud558\uc600\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\ud300\uc758 \uc785\uc7a5\uc740 \uc774\uacf3 \uc5d0\uc11c \ub354 \uc54c\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc774 \ub9e4\ud551\uc744 \uc0ac\uc6a9\ud558\uc2dc\uace0 \uc2f6\uc9c0 \uc54a\uc73c\uc2dc\ub2e4\uba74 \uacf5\uc2dd \ub9e4\ud551 \uc774\uc804\uc5d0 \uc0ac\uc6a9\ud558\ub358 MCP \ub97c \ub300\uc2e0 \uc774\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. MCP \ub294 \uc77c\ubd80 \uba54\uc11c\ub4dc, \ud544\ub4dc, \uadf8\ub9ac\uace0 \ud568\uc218 \uc778\uc790 \uc774\ub984\uacfc Javadoc \uc744 \ud3ec\ud568\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c MCP \ubc84\uc804\uc740 \uc544\ub9c8\ub3c4 \ub9c8\uc9c0\ub9c9 MCP \ub9e4\ud551\uc758 \ubc84\uc804\uc774 \ub420 \uac83\uc778\ub370, \uc65c\ub0d0\ud558\uba74 \uc774\ub294 \ub354\uc774\uc0c1 \uad00\ub9ac\ud558\uc5d0 \uc788\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. minecraft { mappings channel: 'snapshot', version: '20210309-1.16.5' }","title":"\ubaa8\uc7a5 \uacf5\uc2dd \ub9e4\ud551\uc73c\ub85c \ubcc0\uacbd\ud558\uae30."},{"location":"gettingstarted/#_5","text":"\ubaa8\ub4dc\ub97c \ube4c\ub4dc\ud558\uae30 \uc704\ud574\uc11c\ub294 gradlew build \ub97c \uc2e4\ud589\ud558\uc138\uc694. \uc774\ub294 build/libs \uc5d0 \ube4c\ub4dc\ub41c Jar \ud30c\uc77c\uc744 \uc774\ub984 [archivesBaseName]-[version],jar \ub85c \ucd9c\ub825\ud560 \uac83\uc785\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc740 \ud3ec\uc9c0\uac00 \uc124\uce58\ub41c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3f4\ub354\uc758 mods \uc5d0 \ub123\uc5b4 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\ub97c \ud14c\uc2a4\ud2b8\ud560\ub54c \uac00\uc7a5 \uc26c\uc6b4 \ubc29\ubc95\uc740, \ud504\ub85c\uc81d\ud2b8\ub97c \uc124\uc815\ud560\ub54c \uc0dd\uc131\ub41c \uc2e4\ud589 \uc124\uc815 \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec \uac8c\uc784\uc744 \uc2e4\ud589\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ub54c \uac8c\uc784\uc740 <runDir> \uc5d0 \uc2e4\ud589\ub418\uba70, \uc774\ub54c \uc2e4\ud589 \uc124\uc815\uc5d0 \uc815\uc758\ub41c \ubaa8\ub4dc \uc18c\uc2a4 \ucf54\ub4dc\ub4e4\uacfc \ud568\uaed8 \uc2e4\ud589\ub429\ub2c8\ub2e4. MDK \ub294 \uae30\ubcf8\uc73c\ub85c main \uc18c\uc2a4\uc14b\uc744 \ud3ec\ud568\ud558\ub2c8, src/main/java \uc5d0 \uc791\uc131\ud558\uc2e0 \ucf54\ub4dc\ub4e4\uc740 \uac8c\uc784 \uc2e4\ud589\uc2dc \uc0ac\uc6a9\ud560 \ucf54\ub4dc\uc5d0 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ub610\ud55c gradlew runServer \ub97c \ud1b5\ud574 \uc804\uc6a9 \uc11c\ubc84\ub97c \uc2e4\ud589\ud558\uc2e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc804\uc6a9 \uc11c\ubc84\ub97c \uc774\ub807\uac8c \uc2e4\ud589\ud558\uc2dc\uba74 GUI \uc640 \ud568\uaed8 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc11c\ubc84\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. \ucd5c\ucd08 \uc2e4\ud589\uc2dc EULA \ub3d9\uc758\ub97c \uc704\ud574 \uc11c\ubc84\uac00 \ubc14\ub85c \uaebc\uc9c0\ub294\ub370, run/eula.txt \uc5d0 \ub3d9\uc758\ud558\uc2e0 \uc774\ud6c4\uc5d0\ub294 \uc11c\ubc84\uac00 \uc815\uc0c1\uc801\uc73c\ub85c \uc2e4\ud589\ub420 \uac83\uc785\ub2c8\ub2e4. \uc774\ud6c4 \uc8fc\uc18c localhost \ub97c \ud1b5\ud574 \uc811\uc18d\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note \ub9cc\uc57d \ubaa8\ub4dc\uac00 \uc804\uc6a9 \uc11c\ubc84\uc5d0\uc11c\ub3c4 \uc0ac\uc6a9\ub418\uc5b4\uc57c \ud55c\ub2e4\uba74, \uc804\uc6a9 \uc11c\ubc84\uc5d0\uc11c\ub3c4 \ubaa8\ub4dc\ub97c \ud14c\uc2a4\ud2b8\ud574\ubcf4\ub294 \uac83\uc774 \ub298 \uad8c\uc7a5\ub429\ub2c8\ub2e4.","title":"\ubaa8\ub4dc \ube4c\ub4dc \ubc0f \ud14c\uc2a4\ud2b8"},{"location":"gettingstarted/autoupdate/","text":"Forge Update Checker Forge provides a very lightweight, opt-in, update-checking framework. If any mods have an available update, it will show a flashing icon on the \u2018Mods\u2019 button of the main menu and mod list along with the respective changelogs. It does not download updates automatically. Getting Started The first thing you want to do is specify the updateJSONURL parameter in your mods.toml file. The value of this parameter should be a valid URL pointing to an update JSON file. This file can be hosted on your own web server, GitHub, or wherever you want as long as it can be reliably reached by all users of your mod. Update JSON format The JSON itself has a relatively simple format as follows: { \"homepage\": \"<homepage/download page for your mod>\", \"<mcversion>\": { \"<modversion>\": \"<changelog for this version>\", // List all versions of your mod for the given Minecraft version, along with their changelogs ... }, \"promos\": { \"<mcversion>-latest\": \"<modversion>\", // Declare the latest \"bleeding-edge\" version of your mod for the given Minecraft version \"<mcversion>-recommended\": \"<modversion>\", // Declare the latest \"stable\" version of your mod for the given Minecraft version ... } } This is fairly self-explanatory, but some notes: The link under homepage is the link the user will be shown when the mod is outdated. Forge uses an internal algorithm to determine whether one version string of your mod is \u201cnewer\u201d than another. Most versioning schemes should be compatible, but see the ComparableVersion class if you are concerned about whether your scheme is supported. Adherence to semantic versioning is highly recommended. The changelog string can be separated into lines using \\n . Some prefer to include a abbreviated changelog, then link to an external site that provides a full listing of changes. Manually inputting data can be chore. You can configure your build.gradle to automatically update this file when building a release as Groovy has native JSON parsing support. Doing this is left as an exercise to the reader. Some examples can be found here for nocubes , Corail Tombstone and Chisels & Bits 2 . Retrieving Update Check Results You can retrieve the results of the Forge Update Checker using VersionChecker#getResult(ModInfo) . You can obtain your ModInfo via ModContainer#getModInfo . You can get your ModContainer using ModLoadingContext.get().getActiveContainer() inside your constructor, ModList.get().getModContainerById(<your modId>) , or ModList.get().getModContainerByObject(<your mod instance>) . You can obtain any other mod\u2019s ModContainer using ModList.get().getModContainerById(<modId>) . The returned object has a field status which indicates the status of the version check. Status Description FAILED The version checker could not connect to the URL provided. UP_TO_DATE The current version is equal to or newer than the latest stable version. OUTDATED There is a new stable version. BETA_OUTDATED There is a new unstable version. BETA The current version is equal to or newer than the latest unstable version. PENDING The result requested has not finished yet, so you should try again in a little bit. The returned object will also have the target version and any changelog lines as specified in update.json .","title":"\ud3ec\uc9c0 \uc790\ub3d9 \uc5c5\ub370\uc774\ud2b8 \ud45c\uc2dc\uae30"},{"location":"gettingstarted/autoupdate/#forge-update-checker","text":"Forge provides a very lightweight, opt-in, update-checking framework. If any mods have an available update, it will show a flashing icon on the \u2018Mods\u2019 button of the main menu and mod list along with the respective changelogs. It does not download updates automatically.","title":"Forge Update Checker"},{"location":"gettingstarted/autoupdate/#getting-started","text":"The first thing you want to do is specify the updateJSONURL parameter in your mods.toml file. The value of this parameter should be a valid URL pointing to an update JSON file. This file can be hosted on your own web server, GitHub, or wherever you want as long as it can be reliably reached by all users of your mod.","title":"Getting Started"},{"location":"gettingstarted/autoupdate/#update-json-format","text":"The JSON itself has a relatively simple format as follows: { \"homepage\": \"<homepage/download page for your mod>\", \"<mcversion>\": { \"<modversion>\": \"<changelog for this version>\", // List all versions of your mod for the given Minecraft version, along with their changelogs ... }, \"promos\": { \"<mcversion>-latest\": \"<modversion>\", // Declare the latest \"bleeding-edge\" version of your mod for the given Minecraft version \"<mcversion>-recommended\": \"<modversion>\", // Declare the latest \"stable\" version of your mod for the given Minecraft version ... } } This is fairly self-explanatory, but some notes: The link under homepage is the link the user will be shown when the mod is outdated. Forge uses an internal algorithm to determine whether one version string of your mod is \u201cnewer\u201d than another. Most versioning schemes should be compatible, but see the ComparableVersion class if you are concerned about whether your scheme is supported. Adherence to semantic versioning is highly recommended. The changelog string can be separated into lines using \\n . Some prefer to include a abbreviated changelog, then link to an external site that provides a full listing of changes. Manually inputting data can be chore. You can configure your build.gradle to automatically update this file when building a release as Groovy has native JSON parsing support. Doing this is left as an exercise to the reader. Some examples can be found here for nocubes , Corail Tombstone and Chisels & Bits 2 .","title":"Update JSON format"},{"location":"gettingstarted/autoupdate/#retrieving-update-check-results","text":"You can retrieve the results of the Forge Update Checker using VersionChecker#getResult(ModInfo) . You can obtain your ModInfo via ModContainer#getModInfo . You can get your ModContainer using ModLoadingContext.get().getActiveContainer() inside your constructor, ModList.get().getModContainerById(<your modId>) , or ModList.get().getModContainerByObject(<your mod instance>) . You can obtain any other mod\u2019s ModContainer using ModList.get().getModContainerById(<modId>) . The returned object has a field status which indicates the status of the version check. Status Description FAILED The version checker could not connect to the URL provided. UP_TO_DATE The current version is equal to or newer than the latest stable version. OUTDATED There is a new stable version. BETA_OUTDATED There is a new unstable version. BETA The current version is equal to or newer than the latest unstable version. PENDING The result requested has not finished yet, so you should try again in a little bit. The returned object will also have the target version and any changelog lines as specified in update.json .","title":"Retrieving Update Check Results"},{"location":"gettingstarted/debugprofiler/","text":"\ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 \ucf54\ub4dc\uac00 \uc5bc\ub9c8\ub098 \uc2dc\uac04\uc744 \uc18c\uc694\ud558\ub294\uc9c0 \uce21\uc815\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. TickEvent \ub098 \ud0c0\uc77c \uc5d4\ud2f0\ud2f0 tick \ucc98\ub9ac \ub4f1\uc5d0\uc11c \uc774\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc720\uc6a9\ud560 \uc218 \uc788\ub294\ub370, \ubaa8\ub4dc \uac1c\ubc1c\uc790 \ub610\ub294 \uc11c\ubc84 \uc5b4\ub4dc\ubbfc\uc774 \ub799\uc758 \uc6d0\uc778\uc744 \uc27d\uac8c \ud30c\uc545\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec \uc0ac\uc6a9\ud558\uae30 \ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec\ub294 \uc4f0\uae30 \uac04\ub2e8\ud569\ub2c8\ub2e4. \uba85\ub839\uc5b4 \ub450\ubc88\uc774\uba74 \ub418\ub294\ub370, /debug start \ub85c \ud504\ub85c\ud30c\uc77c\ub9c1\uc744 \uc2dc\uc791\ud558\uace0 /debug stop \uc73c\ub85c \ub05d\ub0c5\ub2c8\ub2e4. \uae30\uc5b5\ud574 \ub450\uc154\uc57c \ud560 \uc810\uc740 \ub370\uc774\ud130 \uc218\uc9d1\uc744 \uc624\ub7ab\ub3d9\uc548 \ud560 \uc218\ub85d \ub354\uc6b1 \uc815\ud655\ud55c \uacb0\uacfc\ub97c \uc5bb\uc73c\uc2e4 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \ucd5c\uc18c\ud55c 1\ubd84 \uc815\ub3c4\ub294 \ub370\uc774\ud130\ub97c \uc218\uc9d1\ud558\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. Note \ub2f9\uc5f0\ud558\uac8c\ub3c4, \ud504\ub85c\ud30c\uc77c\ub9c1\uc740 \uc2e4\uc81c\ub85c \uc874\uc7ac\ud558\ub294 \ucf54\ub4dc\uc5d0\ub9cc \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5d4\ud2f0\ud2f0\ub098 \ud0c0\uc77c \uc5d4\ud2f0\ud2f0\uc5d0 \ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \uc0ac\uc6a9\ud558\uc2e4\ub824\uba74 \uc6d4\ub4dc\uc5d0 \uc874\uc7ac\ud558\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4. \ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \ub05d\ub0b8 \uc774\ud6c4 \uac8c\uc784\uc744 \uc2e4\ud589\ud55c \ub514\ub809\ud1a0\ub9ac \uc544\ub798 debug \ub77c\ub294 \uc0c8\ub85c\uc6b4 \ub514\ub809\ud1a0\ub9ac\uac00 \uc0dd\uc131\ub418\uc5c8\uc744 \uac83\uc785\ub2c8\ub2e4. \ud30c\uc77c\uc758 \uc774\ub984\uc740 \ud604\uc7ac \uc2dc\uac04\uc73c\ub85c \ub2e4\uc74c\uacfc \uac19\uc774 \ud3ec\ub9e4\ud305 \ub429\ub2c8\ub2e4: profile-results-yyyy-mm-dd_hh.mi.ss.txt \ud504\ub85c\ud30c\uc77c\ub7ec \uacb0\uacfc \ubcf4\uae30 \ud30c\uc77c \ub9e8 \uc704\uc5d0\ub294 \uac8c\uc784 \ubc84\uc804\uacfc \ud504\ub85c\ud30c\uc77c\ub9c1\uc774 \uc9c4\ud589\ub41c \uc2dc\uac04\uc774 \ubc00\ub9ac\uc138\ucee8\ub4dc\ub85c \ud45c\uc2dc\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \uc544\ub798\ub294 \ud558\uc704\uc640 \ube44\uc2b7\ud55c \ud615\uc2dd\uc73c\ub85c \ud504\ub85c\ud30c\uc77c\ub9c1 \uacb0\uacfc\uac00 \ud45c\uc2dc\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. [00] levels - 96.70%/96.70% [01] | World Name - 99.76%/96.47% [02] | | tick - 99.31%/95.81% [03] | | | entities - 47.72%/45.72% [04] | | | | regular - 98.32%/44.95% [04] | | | | blockEntities - 0.90%/0.41% [05] | | | | | unspecified - 64.26%/0.26% [05] | | | | | minecraft:furnace - 33.35%/0.14% [05] | | | | | minecraft:chest - 2.39%/0.01% \uac01 \ubd80\ubd84\uc774 \ubb34\uc2a8 \ub73b\uc744 \uac00\uc9c0\ub294\uc9c0 \uac04\ub7b5\ud558\uac8c \uc124\uba85\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: [02] tick 99.31% 95.81% \ubd80\ubd84\uc758 \uae4a\uc774 \ubd80\ubd84\uc758 \uc774\ub984 \ubd80\ubaa8 \uae30\uc900\uc73c\ub85c \ubd80\ubd84\uc774 \uc18c\uc694\ud55c \uc2dc\uac04\uc758 \ubc31\ubd84\uc728. \uae4a\uc774 0\uc740 \ud2f1 \uc804\uccb4\uc5d0\uc11c \uc18c\uc694\ud55c \uc2dc\uac04\uc758 \ubc31\ubd84\uc728. \uae4a\uc774 1\uc740 \uadf8 \ubd80\ubaa8(\uae4a\uc774 0)\uc5d0\uc11c \uc18c\uc694\ub41c \uc2dc\uac04\uc911 \uc18c\uc694\ud55c \uc2dc\uac04\uc758 \ubc31\ubd84\uc728 \ud2f1 \uc804\uccb4\uc5d0\uc11c \uc18c\uc694\ud55c \uc2dc\uac04\uc758 \ubc31\ubd84\uc728. \uc9c1\uc811 \uc9e0 \ucf54\ub4dc \ud504\ub85c\ud30c\uc77c\ub9c1 \ud558\uae30 \ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec\ub294 Entity \uc640 TileEntity \ud504\ub85c\ud30c\uc77c\ub9c1\uc744 \uc790\ub3d9\uc73c\ub85c \ud574\uc8fc\uc9c0\ub9cc \uadf8\uac83 \uc774\uc678\uc5d0 \ub2e4\ub978 \uac83\uc5d0 \ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \uc4f0\uace0 \uc2f6\ub2e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \ubd80\ubd84\uc744 \uc9c1\uc811 \ub9cc\ub4dc\uc154\uc57c \ud569\ub2c8\ub2e4: IProfiler#push(\ubd80\ubd84\uc774\ub984 : String); //\ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \uc0ac\uc6a9\ud560 \ucf54\ub4dc IProfiler#pop(); IProfiler \uc778\uc2a4\ud134\uc2a4\ub294 World , MinecraftServer \ub610\ub294 Minecraft \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc811\uadfc\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc0ac\uc6a9\ud558\uc2e0 \ubd80\ubd84 \uc774\ub984\uc744 \ud504\ub85c\ud30c\uc77c\ub9c1 \uacb0\uacfc\uc5d0\uc11c \ucc3e\uc544\ubcf4\uc2dc\uba74 \ub429\ub2c8\ub2e4.","title":"\ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec"},{"location":"gettingstarted/debugprofiler/#_1","text":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 \ucf54\ub4dc\uac00 \uc5bc\ub9c8\ub098 \uc2dc\uac04\uc744 \uc18c\uc694\ud558\ub294\uc9c0 \uce21\uc815\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. TickEvent \ub098 \ud0c0\uc77c \uc5d4\ud2f0\ud2f0 tick \ucc98\ub9ac \ub4f1\uc5d0\uc11c \uc774\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc720\uc6a9\ud560 \uc218 \uc788\ub294\ub370, \ubaa8\ub4dc \uac1c\ubc1c\uc790 \ub610\ub294 \uc11c\ubc84 \uc5b4\ub4dc\ubbfc\uc774 \ub799\uc758 \uc6d0\uc778\uc744 \uc27d\uac8c \ud30c\uc545\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4.","title":"\ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec"},{"location":"gettingstarted/debugprofiler/#_2","text":"\ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec\ub294 \uc4f0\uae30 \uac04\ub2e8\ud569\ub2c8\ub2e4. \uba85\ub839\uc5b4 \ub450\ubc88\uc774\uba74 \ub418\ub294\ub370, /debug start \ub85c \ud504\ub85c\ud30c\uc77c\ub9c1\uc744 \uc2dc\uc791\ud558\uace0 /debug stop \uc73c\ub85c \ub05d\ub0c5\ub2c8\ub2e4. \uae30\uc5b5\ud574 \ub450\uc154\uc57c \ud560 \uc810\uc740 \ub370\uc774\ud130 \uc218\uc9d1\uc744 \uc624\ub7ab\ub3d9\uc548 \ud560 \uc218\ub85d \ub354\uc6b1 \uc815\ud655\ud55c \uacb0\uacfc\ub97c \uc5bb\uc73c\uc2e4 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \ucd5c\uc18c\ud55c 1\ubd84 \uc815\ub3c4\ub294 \ub370\uc774\ud130\ub97c \uc218\uc9d1\ud558\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. Note \ub2f9\uc5f0\ud558\uac8c\ub3c4, \ud504\ub85c\ud30c\uc77c\ub9c1\uc740 \uc2e4\uc81c\ub85c \uc874\uc7ac\ud558\ub294 \ucf54\ub4dc\uc5d0\ub9cc \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5d4\ud2f0\ud2f0\ub098 \ud0c0\uc77c \uc5d4\ud2f0\ud2f0\uc5d0 \ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \uc0ac\uc6a9\ud558\uc2e4\ub824\uba74 \uc6d4\ub4dc\uc5d0 \uc874\uc7ac\ud558\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4. \ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \ub05d\ub0b8 \uc774\ud6c4 \uac8c\uc784\uc744 \uc2e4\ud589\ud55c \ub514\ub809\ud1a0\ub9ac \uc544\ub798 debug \ub77c\ub294 \uc0c8\ub85c\uc6b4 \ub514\ub809\ud1a0\ub9ac\uac00 \uc0dd\uc131\ub418\uc5c8\uc744 \uac83\uc785\ub2c8\ub2e4. \ud30c\uc77c\uc758 \uc774\ub984\uc740 \ud604\uc7ac \uc2dc\uac04\uc73c\ub85c \ub2e4\uc74c\uacfc \uac19\uc774 \ud3ec\ub9e4\ud305 \ub429\ub2c8\ub2e4: profile-results-yyyy-mm-dd_hh.mi.ss.txt","title":"\ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec \uc0ac\uc6a9\ud558\uae30"},{"location":"gettingstarted/debugprofiler/#_3","text":"\ud30c\uc77c \ub9e8 \uc704\uc5d0\ub294 \uac8c\uc784 \ubc84\uc804\uacfc \ud504\ub85c\ud30c\uc77c\ub9c1\uc774 \uc9c4\ud589\ub41c \uc2dc\uac04\uc774 \ubc00\ub9ac\uc138\ucee8\ub4dc\ub85c \ud45c\uc2dc\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \uc544\ub798\ub294 \ud558\uc704\uc640 \ube44\uc2b7\ud55c \ud615\uc2dd\uc73c\ub85c \ud504\ub85c\ud30c\uc77c\ub9c1 \uacb0\uacfc\uac00 \ud45c\uc2dc\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. [00] levels - 96.70%/96.70% [01] | World Name - 99.76%/96.47% [02] | | tick - 99.31%/95.81% [03] | | | entities - 47.72%/45.72% [04] | | | | regular - 98.32%/44.95% [04] | | | | blockEntities - 0.90%/0.41% [05] | | | | | unspecified - 64.26%/0.26% [05] | | | | | minecraft:furnace - 33.35%/0.14% [05] | | | | | minecraft:chest - 2.39%/0.01% \uac01 \ubd80\ubd84\uc774 \ubb34\uc2a8 \ub73b\uc744 \uac00\uc9c0\ub294\uc9c0 \uac04\ub7b5\ud558\uac8c \uc124\uba85\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: [02] tick 99.31% 95.81% \ubd80\ubd84\uc758 \uae4a\uc774 \ubd80\ubd84\uc758 \uc774\ub984 \ubd80\ubaa8 \uae30\uc900\uc73c\ub85c \ubd80\ubd84\uc774 \uc18c\uc694\ud55c \uc2dc\uac04\uc758 \ubc31\ubd84\uc728. \uae4a\uc774 0\uc740 \ud2f1 \uc804\uccb4\uc5d0\uc11c \uc18c\uc694\ud55c \uc2dc\uac04\uc758 \ubc31\ubd84\uc728. \uae4a\uc774 1\uc740 \uadf8 \ubd80\ubaa8(\uae4a\uc774 0)\uc5d0\uc11c \uc18c\uc694\ub41c \uc2dc\uac04\uc911 \uc18c\uc694\ud55c \uc2dc\uac04\uc758 \ubc31\ubd84\uc728 \ud2f1 \uc804\uccb4\uc5d0\uc11c \uc18c\uc694\ud55c \uc2dc\uac04\uc758 \ubc31\ubd84\uc728.","title":"\ud504\ub85c\ud30c\uc77c\ub7ec \uacb0\uacfc \ubcf4\uae30"},{"location":"gettingstarted/debugprofiler/#_4","text":"\ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec\ub294 Entity \uc640 TileEntity \ud504\ub85c\ud30c\uc77c\ub9c1\uc744 \uc790\ub3d9\uc73c\ub85c \ud574\uc8fc\uc9c0\ub9cc \uadf8\uac83 \uc774\uc678\uc5d0 \ub2e4\ub978 \uac83\uc5d0 \ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \uc4f0\uace0 \uc2f6\ub2e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \ubd80\ubd84\uc744 \uc9c1\uc811 \ub9cc\ub4dc\uc154\uc57c \ud569\ub2c8\ub2e4: IProfiler#push(\ubd80\ubd84\uc774\ub984 : String); //\ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \uc0ac\uc6a9\ud560 \ucf54\ub4dc IProfiler#pop(); IProfiler \uc778\uc2a4\ud134\uc2a4\ub294 World , MinecraftServer \ub610\ub294 Minecraft \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc811\uadfc\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc0ac\uc6a9\ud558\uc2e0 \ubd80\ubd84 \uc774\ub984\uc744 \ud504\ub85c\ud30c\uc77c\ub9c1 \uacb0\uacfc\uc5d0\uc11c \ucc3e\uc544\ubcf4\uc2dc\uba74 \ub429\ub2c8\ub2e4.","title":"\uc9c1\uc811 \uc9e0 \ucf54\ub4dc \ud504\ub85c\ud30c\uc77c\ub9c1 \ud558\uae30"},{"location":"gettingstarted/structuring/","text":"\ubaa8\ub4dc \uad6c\uc870 \uc9dc\uae30 \ud55c\ubc88 \ubaa8\ub4dc \ud30c\uc77c\ub4e4\uc744 \uc5b4\ub5bb\uac8c \ub098\ub204\uace0 \uc815\ub9ac\ud558\ub294\uc9c0, \uadf8\ub9ac\uace0 \uc5b4\ub5a4 \ud30c\uc77c\uc774 \ubb34\uc2a8 \uc5ed\ud560\uc744 \ud558\ub294\uc9c0 \uc0b4\ud3b4\ubcf4\ub3c4\ub85d \ud558\uc8e0. \ud328\uce90\uc9c0 \uc774\ub984 \uc4f0\uae30 \ud328\ud0a4\uc9c0 \uc774\ub984\uc73c\ub85c\ub294 \uace0\uc720\ud55c \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc138\uc694, \ub9cc\uc57d \ud504\ub85c\uc81d\ud2b8\uc640 \uc5f0\uad00\ub41c URL \uc774 \uc788\ub2e4\uba74 \ucd5c\uc0c1\uc704 \ud328\ud0a4\uc9c0\ub85c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \u201cexample.com\u201d \uc744 \uc18c\uc720\ud558\uace0 \uacc4\uc2e0\ub2e4\uba74 com.example \uc744 \ucd5c\uc0c1\uc704 \ud328\ud0a4\uc9c0\ub85c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd5c\uc0c1\uc704 \ud328\uce90\uc9c0\ub97c \ub9cc\ub4dc\ub294 \uac83\uc740 \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. Important \uc18c\uc720\ud558\uace0 \uacc4\uc2dc\uc9c0 \uc54a\uc740 \ub3c4\uba54\uc778\uc744 \ucd5c\uc0c1\uc704 \ud328\uce90\uc9c0\ub85c \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc138\uc694. \uace0\uc720\ud558\uae30\ub9cc \ud558\ub2e4\uba74 \ub3c4\uba54\uc778 \ub9d0\uace0\ub3c4 \uc774\uba54\uc77c\uc774\ub098, \uc774\ub984 \ub610\ub294 \ub2c9\ub124\uc784\uc744 \uc0ac\uc6a9\ud558\uc2e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \ub2e4\uc74c\uc73c\ub860, \ubaa8\ub4dc\ub9cc\uc758 \uace0\uc720\ud55c \uc774\ub984\uc744 \ub4a4\uc5d0 \ubd99\uc785\ub2c8\ub2e4, \uc608\ub97c \ub4e4\uc5b4 \uace0\uc720\ud55c \uc774\ub984\uc774 examplemod \ub77c\uba74 \ucd5c\uc885\uc801\uc73c\ub85c \ud328\uce90\uc9c0\ub294 com.example.examplemod \uac00 \ub420 \uac83\uc785\ub2c8\ub2e4. mods.toml \ud30c\uc77c Important \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 1.16 \ubd80\ud130 mods.toml \uc5d0 \ub77c\uc774\uc13c\uc2a4\uac00 \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\ub2e4\uba74 \ubaa8\ub4dc\uac00 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\uacf3\uc744 \ucc38\uc870\ud558\uc5ec \ub77c\uc774\uc13c\uc2a4\ub97c \uc120\ud0dd\ud558\uc138\uc694.: https://choosealicense.com/ \ubaa8\ub4e0 \ub77c\uc774\uc13c\uc2a4 \ub9ac\uc2a4\ud2b8\ub294 \uc774\uacf3\uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4: https://www.olis.or.kr/license/compareGuide.do \uc774 \ud30c\uc77c\uc740 \ubaa8\ub4dc\uc758 \uba54\ud0c0\ub370\uc774\ud130\ub97c \uc815\uc758\ud569\ub2c8\ub2e4. \uc774 \uba54\ud0c0\ub370\uc774\ud130\uc758 \uc77c\ubd80\ub294 \uba54\uc778 \ud654\uba74\uc758 \u2018Mods\u2019 \ud0ed\uc5d0 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \ub610\ud55c \ud30c\uc77c \ud558\ub098\ub85c \ubaa8\ub4dc \uc5ec\ub7ec\uac1c\ub97c \uae30\uc220\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. mods.toml \ud30c\uc77c\uc740 TOML \ud615\uc2dd\uc73c\ub85c \uc791\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4, MDK \uc5d0 \ub4e4\uc5b4\uc788\ub294 \uc608\uc81c mods.toml \ud30c\uc77c\uc740 \ud30c\uc77c\uc758 \ub0b4\uc6a9\uc744 \uae30\uc220\ud558\ub294\uc5ec\ub7ec \uc8fc\uc11d\ub4e4\uc774 \uc791\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc740 src/main/resources/META-INF/mods.toml \uc5d0 \uc704\uce58\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc 1\uac1c\ub97c \uae30\uc220\ud558\ub294 \uac04\ub2e8\ud55c mods.toml \uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \uc791\uc131\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4: # \uc0ac\uc6a9\ud560 \ubaa8\ub4dc\ub85c\ub354\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. - \ub300\ub2e4\uc218\uc758 \ud3ec\uc9c0 @Mod \ubaa8\ub4dc\ub4e4\uc740 javafml \uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. modLoader=\"javafml\" # \uc0ac\uc6a9\ud560 \ubaa8\ub4dc \ub85c\ub354\uc758 \ubc84\uc804 \ubc94\uc704\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4 - \ub300\ub2e4\uc218\uc758 \ud3ec\uc9c0 @Mod \ubaa8\ub4dc\ub4e4\uc740 \ud3ec\uc9c0 \ubc84\uc804\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. # 1.16.5 \ud3ec\uc9c0 \ubc84\uc804\uc740 36 \uc785\ub2c8\ub2e4. loaderVersion=\"[36,)\" # \ubaa8\ub4dc\uc758 \ub77c\uc774\uc13c\uc2a4\uc785\ub2c8\ub2e4. \ub77c\uc774\uc120\uc2a4 \uc124\uc815\uc740 \ud544\uc218\uc801\uc774\uba70, \uc7ac\ubc30\ud3ec \uc18d\uc131\uacfc \uad00\ub828 \uad8c\ub9ac\ub97c \uc81c 3\uc790\uac00 \uc27d\uac8c \uc774\ud574\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. # \ub77c\uc774\uc120\uc2a4 \uc120\ud0dd\uc740 \uc774\uacf3\uc744 \ucc38\uace0\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4: https://choosealicense.com/ \uc800\uc791\uad8c\uc740 \uae30\ubcf8\uc73c\ub85c \uc800\uc791\uc790\uac00 \ubaa8\ub4e0 \uad8c\ub9ac\ub97c \ubcf4\uc720\ud569\ub2c8\ub2e4(All rights reserved), \uadf8\ub807\uae30\uc5d0 \ud3ec\uc9c0\uc5d0\uc11c\ub3c4 \uc774\ub97c \uae30\ubcf8\uac12\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. license=\"All Rights Reserved\" # \ubaa8\ub4dc\uc5d0 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc2dc \ubb38\uc81c \uc81c\uae30\ub97c \ud560 URL \uc785\ub2c8\ub2e4. issueTrackerURL=\"github.com/MinecraftForge/MinecraftForge/issues\" # \uc774 \ud30c\uc77c\uc5d0 \uc815\uc758\ub41c \ubaa8\ub4dc\ub4e4\uc774 \ubcc4\ub3c4\uc758 \ub9ac\uc18c\uc2a4\ud329\uc73c\ub85c \ud45c\uc2dc\ub418\uc5b4\uc57c \ud560\uc9c0\ub97c \uc815\uc758\ud569\ub2c8\ub2e4. showAsResourcePack=false [[mods]] modId=\"examplemod\" version=\"1.0.0.0\" displayName=\"\uc608\uc81c \ubaa8\ub4dc\" updateJSONURL=\"minecraftforge.net/versions.json\" displayURL=\"minecraftforge.net\" logoFile=\"logo.png\" credits=\"\uc800\ud76c \ubd80\ubaa8\ub2d8\uc5d0\uac8c \uac10\uc0ac\ub4dc\ub9ac\uace0 \uc2f6\uc2b5\ub2c8\ub2e4..\" authors=\"Author\" description=''' \ud759\uc744 \ub2e4\uc774\uc544\ubaac\ub4dc\ub85c \uc870\ud569\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc774 \uc608\uc81c\ubaa8\ub4dc\ub294 \uc601\uac81\uc758 \uc2dc\uac04\ub3d9\uc548 \uc774\uc5b4\uc838 \ub0b4\ub824\uc628 \uace0\ub300\uc758 \uc804\ud1b5\uc785\ub2c8\ub2e4. \uc2e0\uc131\ud55c \ub178\uce58\uaed8\uc11c \uc2dc\uc791\ud558\uc168\uace0 \uc82d\uc774 \ud658\uc131\uc801\uc778 \ubb34\uc9c0\uac1c\ub97c \ub2ec\uc558\uc73c\uba70, \ub514\ub108\ubcf8\uc774 \ub4a4\uc9d1\uc5c8\uace0...(\uc0dd\ub7b5) ''' [[dependencies.examplemod]] modId=\"forge\" mandatory=true versionRange=\"[36,)\" ordering=\"NONE\" side=\"BOTH\" [[dependencies.examplemod]] modId=\"minecraft\" mandatory=true versionRange=\"[1.16.5,1.17)\" ordering=\"NONE\" side=\"BOTH\" \ub9cc\uc57d \ubb38\uc790\uc5f4\uc774 ${file.jarVersion} \ucc98\ub7fc \uc791\uc131\ub418\uc5c8\ub2e4\uba74 \ud3ec\uc9c0\ub294 \ub7f0\ud0c0\uc784 \ub3c4\uc911 \uc774 \ubb38\uc790\uc5f4\uc744 manifest \uc758 Implementation Version \uc73c\ub85c \ub300\uccb4\ud569\ub2c8\ub2e4. \ubaa8\ub4dc \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c\ub294 manifest \ub97c \uc77d\uc5b4\ub4e4\uc77c \ubaa8\ub4dc jar \uac00 \uc5c6\uae30 \ub54c\ubb38\uc5d0 NONE \uc774 \ub300\uc2e0 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \uc774 \ud544\ub4dc\ub294 \uadf8\ub300\ub85c \ub0c5\ub450\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \uc544\ub798 \ud45c\uc5d0\ub294 \ubaa8\ub4dc\uac00 \uac00\uc9c8 \uc218 \uc788\ub294 \uc18d\uc131\ub4e4\uc774 \ud45c\uc2dc\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4, \ud544\uc218 \ub85c \ud45c\uc2dc\ub418\uc5b4 \uc788\ub294 \uc18d\uc131\uc740 \uae30\ubcf8\uac12\uc774 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \ubb34\uc870\uac74 \uc815\uc758\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc624\ub958\uac00 \ub0a0 \uac83\uc785\ub2c8\ub2e4. \uc18d\uc131 \ud0c0\uc785 \uae30\ubcf8\uac12 \uc124\uba85 modid string \ud544\uc218 \uc774 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514. version string \ud544\uc218 \ubaa8\ub4dc\uc758 \ubc84\uc804, \uc5ec\ub7ec \uc22b\uc790\uac00 \ub9c8\uce68\ud45c\ub85c \ubd84\ub9ac\ub41c \ud615\ud0dc\uc5ec\uc57c \ud569\ub2c8\ub2e4, \ubc84\uc804 \uba85\uba85 \uaddc\uce59\uc744 \ub530\ub978\ub2e4\uba74 \ub354 \uc88b\uc2b5\ub2c8\ub2e4. displayName string \ud544\uc218 \uc77d\uae30 \uc26c\uc6b4 \ubaa8\ub4dc \uc774\ub984. updateJSONURL string \"\" \ubc84\uc804 JSON URL. displayURL string \"\" \ubaa8\ub4dc\uc758 \ud648\ud398\uc774\uc9c0 URL. logoFile string \"\" \ubaa8\ub4dc\uc758 \ub85c\uace0 \ud30c\uc77c \uc774\ub984. \ub85c\uace0 \uc774\ubbf8\uc9c0 \ud30c\uc77c\uc740 \ub9ac\uc18c\uc2a4 \ud3f4\ub354 \ucd5c\uc0c1\uc704\uc5d0 \uc874\uc7ac\ud558\uc5ec\uc57c \ud558\uba70, \uadf8 \ud558\uc704 \ud3f4\ub354\uc5d0 \uc874\uc7ac\ud558\uba74 \uc548\ub429\ub2c8\ub2e4. credits string \"\" \uc5b8\uae09\ud558\uace0 \uc2f6\uc740 \ud569\uc758\uc0ac\ud56d \ub610\ub294 \uacf5\ub85c. authors string \"\" \ubaa8\ub4dc\uc758 \uc800\uc790. description string \ud544\uc218 \ubaa8\ub4dc \uc124\uba85. dependencies [list] [] \ubaa8\ub4dc\uc758 \uc885\uc18d\uc131 \ubaa9\ub85d. * \ubaa8\ub4e0 \ubc84\uc804 \ubc94\uc704\ub294 Maven \ubc84\uc804 \ubc94\uc704 \uaddc\uc545 \uc744 \ub530\ub985\ub2c8\ub2e4. \ubaa8\ub4dc \ud30c\uc77c \uc77c\ubc18\uc801\uc73c\ub85c \ud328\ud0a4\uc9c0 \uc548\uc5d0 \uc774\ub984\uc774 \ubaa8\ub4dc \uc774\ub984\uc778 \ud30c\uc77c\uc744 \ub9cc\ub4e4\uace0 \uac70\uae30\uc11c\ubd80\ud130 \uc2dc\uc791\ud569\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc740 \ubaa8\ub4dc\uc758 \uc2dc\uc791 \uc9c0\uc810 \uc774\uba70, \ub530\ub85c \ud2b9\uc218\ud558\uac8c \ud45c\uc2dc\ub97c \ud574 \ub450\uc5b4 \uc774\ub97c \uc54c\ub9bd\ub2c8\ub2e4. @Mod \ub294 \ubb34\uc5c7\uc778\uac00\uc694? \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc740 \ud3ec\uc9c0 \ubaa8\ub4dc \ub85c\ub354\uc5d0\uac8c \ud074\ub798\uc2a4\uac00 \ubaa8\ub4dc\uc758 \uc2dc\uc791 \uc9c0\uc810\uc784\uc744 \ub098\ud0c0\ub0b4\uae30 \uc704\ud574 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \ub294 src/main/resources/META-INF/mods.toml \uc5d0 \uc815\uc758\ub41c mod id \uc640 \ub3d9\uc77c\ud574\uc57c \ud569\ub2c8\ub2e4. \ud558\uc704 \ud328\uce90\uc9c0\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucf54\ub4dc \ub9d0\ub054\ud558\uac8c \uc815\ub9ac\ud558\uae30 \ubaa8\ub4e0\uac78 \ud328\ud0a4\uc9c0 \ud558\ub098\uc5d0, \ud074\ub798\uc2a4 \ud558\ub098\uc5d0 \ub2e4 \ubc00\uc5b4\ub123\ub294 \uac83 \ubcf4\ub2e4 \ud558\uc704 \ud328\uce90\uc9c0\ub97c \ub9cc\ub4e4\uc5b4 \ubd84\ub9ac\ud558\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c, common \uacfc client \ud558\uc704 \ud328\uce90\uc9c0\ub97c \ub9cc\ub4e4\uc5b4 \ucf54\ub4dc\ub97c \ubd84\ub9ac\ud569\ub2c8\ub2e4, \uc774\ub54c common \uc740 \uc11c\ubc84/\ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc2e4\ud589\ub420 \ucf54\ub4dc, client \ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub420 \ucf54\ub4dc\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. common \ud328\uce90\uc9c0\uc5d0\ub294 \uc544\uc774\ud15c, \ube14\ub85d, \ud0c0\uc77c \uc5d4\ud2f0\ud2f0 \uc785\ub2c8\ub2e4(\uac01\uac01 \ubcc4\ub3c4\uc758 \ud328\uce90\uc9c0\uc5d0 \ub4e4\uc5b4\uac08 \uc218\ub3c4 \uc788\uc74c). \ub80c\ub354\ub7ec\ub098 UI \ub4e4\uc740 client \ud328\uce90\uc9c0\uc5d0 \ub4e4\uc5b4\uac08 \uac83\uc785\ub2c8\ub2e4. Note \ud328\uce90\uc9c0\ub97c \uc774\ub807\uac8c \ub098\ub204\ub294 \uac83\uc774 \uc77c\ubc18\uc801\uc774\ub098 \uc644\uc804\ud788 \uc120\ud0dd\uc0ac\ud56d \uc785\ub2c8\ub2e4, \ud328\uce90\uc9c0\ub294 \ub9c8\uc74c\ub300\ub85c \ub098\ub204\uc154\ub3c4 \ub429\ub2c8\ub2e4. \ud558\uc704 \ud328\uce90\uc9c0\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucf54\ub4dc\ub97c \ub098\ub214\uc73c\ub85c\uc368 \ubaa8\ub4dc\ub97c \uc870\uae08\ub354 \uc815\ub3c8\ud558\uace0 \uc870\uc9c1\ud654\ud558\uc5ec \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub798\uc2a4 \uc774\ub984 \uaddc\uce59 \ud074\ub798\uc2a4 \uc774\ub984 \uaddc\uce59\uc740 \ud074\ub798\uc2a4\uac00 \uc5b4\ub514 \uc0ac\uc6a9\ub418\ub294\uc9c0 \ud574\uc11d\ud558\uae30 \uc27d\ub3c4\ub85d \ub9cc\ub4e4\uc5b4 \uc8fc\uba70, \ubb50\uac00 \uc5b4\ub514\uc788\ub294\uc9c0 \ucc3e\uae30 \uc27d\ub3c4\ub85d\ub3c4 \ud574\uc90d\ub2c8\ub2e4. \uc5d0\ub97c \ub4e4\uc5b4: PowerRing \uc774\ub780 Item \uc740 item \ud328\uce90\uc9c0\uc5d0 PowerRingItem \uc774\ub780 \uc774\ub984\uc73c\ub85c \uc788\uc744 \uac83\uc785\ub2c8\ub2e4. NotDirt \ub77c\ub294 Block \uc740 block \ud328\uce90\uc9c0\uc5d0 NotDirtBlock \uc774\ub780 \uc774\ub984\uc73c\ub85c \uc788\uc744 \uac83\uc785\ub2c8\ub2e4. SuperChewer \ub77c\ub294 TileEntity \ub294 tile \ub610\ub294 tileentity \ub77c\ub294 \ud328\uce90\uc9c0\uc5d0 SuperChewerTile \uc774\ub77c\ub294 \uc774\ub984\uc73c\ub85c \uc788\uc744 \uac83\uc785\ub2c8\ub2e4. \ud074\ub798\uc2a4 \uc774\ub984 \ub4a4\uc5d0 \ud074\ub798\uc2a4\uc758 \uc885\ub958 \ub97c \uc368\ub193\uc73c\uc2dc\uba74 \ub098\uc911\uc5d0 \ubb34\uc2a8 \ud074\ub798\uc2a4\uc778\uc9c0 \uc2dd\ubcc4\ud558\uae30 \uc27d\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4.","title":"\ubaa8\ub4dc \uae30\ubcf8 \uad6c\uc870 \uc791\uc131\ud558\uae30"},{"location":"gettingstarted/structuring/#_1","text":"\ud55c\ubc88 \ubaa8\ub4dc \ud30c\uc77c\ub4e4\uc744 \uc5b4\ub5bb\uac8c \ub098\ub204\uace0 \uc815\ub9ac\ud558\ub294\uc9c0, \uadf8\ub9ac\uace0 \uc5b4\ub5a4 \ud30c\uc77c\uc774 \ubb34\uc2a8 \uc5ed\ud560\uc744 \ud558\ub294\uc9c0 \uc0b4\ud3b4\ubcf4\ub3c4\ub85d \ud558\uc8e0.","title":"\ubaa8\ub4dc \uad6c\uc870 \uc9dc\uae30"},{"location":"gettingstarted/structuring/#_2","text":"\ud328\ud0a4\uc9c0 \uc774\ub984\uc73c\ub85c\ub294 \uace0\uc720\ud55c \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc138\uc694, \ub9cc\uc57d \ud504\ub85c\uc81d\ud2b8\uc640 \uc5f0\uad00\ub41c URL \uc774 \uc788\ub2e4\uba74 \ucd5c\uc0c1\uc704 \ud328\ud0a4\uc9c0\ub85c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \u201cexample.com\u201d \uc744 \uc18c\uc720\ud558\uace0 \uacc4\uc2e0\ub2e4\uba74 com.example \uc744 \ucd5c\uc0c1\uc704 \ud328\ud0a4\uc9c0\ub85c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd5c\uc0c1\uc704 \ud328\uce90\uc9c0\ub97c \ub9cc\ub4dc\ub294 \uac83\uc740 \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. Important \uc18c\uc720\ud558\uace0 \uacc4\uc2dc\uc9c0 \uc54a\uc740 \ub3c4\uba54\uc778\uc744 \ucd5c\uc0c1\uc704 \ud328\uce90\uc9c0\ub85c \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc138\uc694. \uace0\uc720\ud558\uae30\ub9cc \ud558\ub2e4\uba74 \ub3c4\uba54\uc778 \ub9d0\uace0\ub3c4 \uc774\uba54\uc77c\uc774\ub098, \uc774\ub984 \ub610\ub294 \ub2c9\ub124\uc784\uc744 \uc0ac\uc6a9\ud558\uc2e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \ub2e4\uc74c\uc73c\ub860, \ubaa8\ub4dc\ub9cc\uc758 \uace0\uc720\ud55c \uc774\ub984\uc744 \ub4a4\uc5d0 \ubd99\uc785\ub2c8\ub2e4, \uc608\ub97c \ub4e4\uc5b4 \uace0\uc720\ud55c \uc774\ub984\uc774 examplemod \ub77c\uba74 \ucd5c\uc885\uc801\uc73c\ub85c \ud328\uce90\uc9c0\ub294 com.example.examplemod \uac00 \ub420 \uac83\uc785\ub2c8\ub2e4.","title":"\ud328\uce90\uc9c0 \uc774\ub984 \uc4f0\uae30"},{"location":"gettingstarted/structuring/#modstoml","text":"Important \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 1.16 \ubd80\ud130 mods.toml \uc5d0 \ub77c\uc774\uc13c\uc2a4\uac00 \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\ub2e4\uba74 \ubaa8\ub4dc\uac00 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\uacf3\uc744 \ucc38\uc870\ud558\uc5ec \ub77c\uc774\uc13c\uc2a4\ub97c \uc120\ud0dd\ud558\uc138\uc694.: https://choosealicense.com/ \ubaa8\ub4e0 \ub77c\uc774\uc13c\uc2a4 \ub9ac\uc2a4\ud2b8\ub294 \uc774\uacf3\uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4: https://www.olis.or.kr/license/compareGuide.do \uc774 \ud30c\uc77c\uc740 \ubaa8\ub4dc\uc758 \uba54\ud0c0\ub370\uc774\ud130\ub97c \uc815\uc758\ud569\ub2c8\ub2e4. \uc774 \uba54\ud0c0\ub370\uc774\ud130\uc758 \uc77c\ubd80\ub294 \uba54\uc778 \ud654\uba74\uc758 \u2018Mods\u2019 \ud0ed\uc5d0 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \ub610\ud55c \ud30c\uc77c \ud558\ub098\ub85c \ubaa8\ub4dc \uc5ec\ub7ec\uac1c\ub97c \uae30\uc220\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. mods.toml \ud30c\uc77c\uc740 TOML \ud615\uc2dd\uc73c\ub85c \uc791\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4, MDK \uc5d0 \ub4e4\uc5b4\uc788\ub294 \uc608\uc81c mods.toml \ud30c\uc77c\uc740 \ud30c\uc77c\uc758 \ub0b4\uc6a9\uc744 \uae30\uc220\ud558\ub294\uc5ec\ub7ec \uc8fc\uc11d\ub4e4\uc774 \uc791\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc740 src/main/resources/META-INF/mods.toml \uc5d0 \uc704\uce58\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc 1\uac1c\ub97c \uae30\uc220\ud558\ub294 \uac04\ub2e8\ud55c mods.toml \uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \uc791\uc131\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4: # \uc0ac\uc6a9\ud560 \ubaa8\ub4dc\ub85c\ub354\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. - \ub300\ub2e4\uc218\uc758 \ud3ec\uc9c0 @Mod \ubaa8\ub4dc\ub4e4\uc740 javafml \uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. modLoader=\"javafml\" # \uc0ac\uc6a9\ud560 \ubaa8\ub4dc \ub85c\ub354\uc758 \ubc84\uc804 \ubc94\uc704\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4 - \ub300\ub2e4\uc218\uc758 \ud3ec\uc9c0 @Mod \ubaa8\ub4dc\ub4e4\uc740 \ud3ec\uc9c0 \ubc84\uc804\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. # 1.16.5 \ud3ec\uc9c0 \ubc84\uc804\uc740 36 \uc785\ub2c8\ub2e4. loaderVersion=\"[36,)\" # \ubaa8\ub4dc\uc758 \ub77c\uc774\uc13c\uc2a4\uc785\ub2c8\ub2e4. \ub77c\uc774\uc120\uc2a4 \uc124\uc815\uc740 \ud544\uc218\uc801\uc774\uba70, \uc7ac\ubc30\ud3ec \uc18d\uc131\uacfc \uad00\ub828 \uad8c\ub9ac\ub97c \uc81c 3\uc790\uac00 \uc27d\uac8c \uc774\ud574\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. # \ub77c\uc774\uc120\uc2a4 \uc120\ud0dd\uc740 \uc774\uacf3\uc744 \ucc38\uace0\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4: https://choosealicense.com/ \uc800\uc791\uad8c\uc740 \uae30\ubcf8\uc73c\ub85c \uc800\uc791\uc790\uac00 \ubaa8\ub4e0 \uad8c\ub9ac\ub97c \ubcf4\uc720\ud569\ub2c8\ub2e4(All rights reserved), \uadf8\ub807\uae30\uc5d0 \ud3ec\uc9c0\uc5d0\uc11c\ub3c4 \uc774\ub97c \uae30\ubcf8\uac12\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. license=\"All Rights Reserved\" # \ubaa8\ub4dc\uc5d0 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc2dc \ubb38\uc81c \uc81c\uae30\ub97c \ud560 URL \uc785\ub2c8\ub2e4. issueTrackerURL=\"github.com/MinecraftForge/MinecraftForge/issues\" # \uc774 \ud30c\uc77c\uc5d0 \uc815\uc758\ub41c \ubaa8\ub4dc\ub4e4\uc774 \ubcc4\ub3c4\uc758 \ub9ac\uc18c\uc2a4\ud329\uc73c\ub85c \ud45c\uc2dc\ub418\uc5b4\uc57c \ud560\uc9c0\ub97c \uc815\uc758\ud569\ub2c8\ub2e4. showAsResourcePack=false [[mods]] modId=\"examplemod\" version=\"1.0.0.0\" displayName=\"\uc608\uc81c \ubaa8\ub4dc\" updateJSONURL=\"minecraftforge.net/versions.json\" displayURL=\"minecraftforge.net\" logoFile=\"logo.png\" credits=\"\uc800\ud76c \ubd80\ubaa8\ub2d8\uc5d0\uac8c \uac10\uc0ac\ub4dc\ub9ac\uace0 \uc2f6\uc2b5\ub2c8\ub2e4..\" authors=\"Author\" description=''' \ud759\uc744 \ub2e4\uc774\uc544\ubaac\ub4dc\ub85c \uc870\ud569\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc774 \uc608\uc81c\ubaa8\ub4dc\ub294 \uc601\uac81\uc758 \uc2dc\uac04\ub3d9\uc548 \uc774\uc5b4\uc838 \ub0b4\ub824\uc628 \uace0\ub300\uc758 \uc804\ud1b5\uc785\ub2c8\ub2e4. \uc2e0\uc131\ud55c \ub178\uce58\uaed8\uc11c \uc2dc\uc791\ud558\uc168\uace0 \uc82d\uc774 \ud658\uc131\uc801\uc778 \ubb34\uc9c0\uac1c\ub97c \ub2ec\uc558\uc73c\uba70, \ub514\ub108\ubcf8\uc774 \ub4a4\uc9d1\uc5c8\uace0...(\uc0dd\ub7b5) ''' [[dependencies.examplemod]] modId=\"forge\" mandatory=true versionRange=\"[36,)\" ordering=\"NONE\" side=\"BOTH\" [[dependencies.examplemod]] modId=\"minecraft\" mandatory=true versionRange=\"[1.16.5,1.17)\" ordering=\"NONE\" side=\"BOTH\" \ub9cc\uc57d \ubb38\uc790\uc5f4\uc774 ${file.jarVersion} \ucc98\ub7fc \uc791\uc131\ub418\uc5c8\ub2e4\uba74 \ud3ec\uc9c0\ub294 \ub7f0\ud0c0\uc784 \ub3c4\uc911 \uc774 \ubb38\uc790\uc5f4\uc744 manifest \uc758 Implementation Version \uc73c\ub85c \ub300\uccb4\ud569\ub2c8\ub2e4. \ubaa8\ub4dc \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c\ub294 manifest \ub97c \uc77d\uc5b4\ub4e4\uc77c \ubaa8\ub4dc jar \uac00 \uc5c6\uae30 \ub54c\ubb38\uc5d0 NONE \uc774 \ub300\uc2e0 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \uc774 \ud544\ub4dc\ub294 \uadf8\ub300\ub85c \ub0c5\ub450\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \uc544\ub798 \ud45c\uc5d0\ub294 \ubaa8\ub4dc\uac00 \uac00\uc9c8 \uc218 \uc788\ub294 \uc18d\uc131\ub4e4\uc774 \ud45c\uc2dc\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4, \ud544\uc218 \ub85c \ud45c\uc2dc\ub418\uc5b4 \uc788\ub294 \uc18d\uc131\uc740 \uae30\ubcf8\uac12\uc774 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \ubb34\uc870\uac74 \uc815\uc758\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc624\ub958\uac00 \ub0a0 \uac83\uc785\ub2c8\ub2e4. \uc18d\uc131 \ud0c0\uc785 \uae30\ubcf8\uac12 \uc124\uba85 modid string \ud544\uc218 \uc774 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514. version string \ud544\uc218 \ubaa8\ub4dc\uc758 \ubc84\uc804, \uc5ec\ub7ec \uc22b\uc790\uac00 \ub9c8\uce68\ud45c\ub85c \ubd84\ub9ac\ub41c \ud615\ud0dc\uc5ec\uc57c \ud569\ub2c8\ub2e4, \ubc84\uc804 \uba85\uba85 \uaddc\uce59\uc744 \ub530\ub978\ub2e4\uba74 \ub354 \uc88b\uc2b5\ub2c8\ub2e4. displayName string \ud544\uc218 \uc77d\uae30 \uc26c\uc6b4 \ubaa8\ub4dc \uc774\ub984. updateJSONURL string \"\" \ubc84\uc804 JSON URL. displayURL string \"\" \ubaa8\ub4dc\uc758 \ud648\ud398\uc774\uc9c0 URL. logoFile string \"\" \ubaa8\ub4dc\uc758 \ub85c\uace0 \ud30c\uc77c \uc774\ub984. \ub85c\uace0 \uc774\ubbf8\uc9c0 \ud30c\uc77c\uc740 \ub9ac\uc18c\uc2a4 \ud3f4\ub354 \ucd5c\uc0c1\uc704\uc5d0 \uc874\uc7ac\ud558\uc5ec\uc57c \ud558\uba70, \uadf8 \ud558\uc704 \ud3f4\ub354\uc5d0 \uc874\uc7ac\ud558\uba74 \uc548\ub429\ub2c8\ub2e4. credits string \"\" \uc5b8\uae09\ud558\uace0 \uc2f6\uc740 \ud569\uc758\uc0ac\ud56d \ub610\ub294 \uacf5\ub85c. authors string \"\" \ubaa8\ub4dc\uc758 \uc800\uc790. description string \ud544\uc218 \ubaa8\ub4dc \uc124\uba85. dependencies [list] [] \ubaa8\ub4dc\uc758 \uc885\uc18d\uc131 \ubaa9\ub85d. * \ubaa8\ub4e0 \ubc84\uc804 \ubc94\uc704\ub294 Maven \ubc84\uc804 \ubc94\uc704 \uaddc\uc545 \uc744 \ub530\ub985\ub2c8\ub2e4.","title":"mods.toml \ud30c\uc77c"},{"location":"gettingstarted/structuring/#_3","text":"\uc77c\ubc18\uc801\uc73c\ub85c \ud328\ud0a4\uc9c0 \uc548\uc5d0 \uc774\ub984\uc774 \ubaa8\ub4dc \uc774\ub984\uc778 \ud30c\uc77c\uc744 \ub9cc\ub4e4\uace0 \uac70\uae30\uc11c\ubd80\ud130 \uc2dc\uc791\ud569\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc740 \ubaa8\ub4dc\uc758 \uc2dc\uc791 \uc9c0\uc810 \uc774\uba70, \ub530\ub85c \ud2b9\uc218\ud558\uac8c \ud45c\uc2dc\ub97c \ud574 \ub450\uc5b4 \uc774\ub97c \uc54c\ub9bd\ub2c8\ub2e4.","title":"\ubaa8\ub4dc \ud30c\uc77c"},{"location":"gettingstarted/structuring/#mod","text":"\uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc740 \ud3ec\uc9c0 \ubaa8\ub4dc \ub85c\ub354\uc5d0\uac8c \ud074\ub798\uc2a4\uac00 \ubaa8\ub4dc\uc758 \uc2dc\uc791 \uc9c0\uc810\uc784\uc744 \ub098\ud0c0\ub0b4\uae30 \uc704\ud574 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \ub294 src/main/resources/META-INF/mods.toml \uc5d0 \uc815\uc758\ub41c mod id \uc640 \ub3d9\uc77c\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"@Mod \ub294 \ubb34\uc5c7\uc778\uac00\uc694?"},{"location":"gettingstarted/structuring/#_4","text":"\ubaa8\ub4e0\uac78 \ud328\ud0a4\uc9c0 \ud558\ub098\uc5d0, \ud074\ub798\uc2a4 \ud558\ub098\uc5d0 \ub2e4 \ubc00\uc5b4\ub123\ub294 \uac83 \ubcf4\ub2e4 \ud558\uc704 \ud328\uce90\uc9c0\ub97c \ub9cc\ub4e4\uc5b4 \ubd84\ub9ac\ud558\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c, common \uacfc client \ud558\uc704 \ud328\uce90\uc9c0\ub97c \ub9cc\ub4e4\uc5b4 \ucf54\ub4dc\ub97c \ubd84\ub9ac\ud569\ub2c8\ub2e4, \uc774\ub54c common \uc740 \uc11c\ubc84/\ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc2e4\ud589\ub420 \ucf54\ub4dc, client \ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub420 \ucf54\ub4dc\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. common \ud328\uce90\uc9c0\uc5d0\ub294 \uc544\uc774\ud15c, \ube14\ub85d, \ud0c0\uc77c \uc5d4\ud2f0\ud2f0 \uc785\ub2c8\ub2e4(\uac01\uac01 \ubcc4\ub3c4\uc758 \ud328\uce90\uc9c0\uc5d0 \ub4e4\uc5b4\uac08 \uc218\ub3c4 \uc788\uc74c). \ub80c\ub354\ub7ec\ub098 UI \ub4e4\uc740 client \ud328\uce90\uc9c0\uc5d0 \ub4e4\uc5b4\uac08 \uac83\uc785\ub2c8\ub2e4. Note \ud328\uce90\uc9c0\ub97c \uc774\ub807\uac8c \ub098\ub204\ub294 \uac83\uc774 \uc77c\ubc18\uc801\uc774\ub098 \uc644\uc804\ud788 \uc120\ud0dd\uc0ac\ud56d \uc785\ub2c8\ub2e4, \ud328\uce90\uc9c0\ub294 \ub9c8\uc74c\ub300\ub85c \ub098\ub204\uc154\ub3c4 \ub429\ub2c8\ub2e4. \ud558\uc704 \ud328\uce90\uc9c0\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucf54\ub4dc\ub97c \ub098\ub214\uc73c\ub85c\uc368 \ubaa8\ub4dc\ub97c \uc870\uae08\ub354 \uc815\ub3c8\ud558\uace0 \uc870\uc9c1\ud654\ud558\uc5ec \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud558\uc704 \ud328\uce90\uc9c0\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucf54\ub4dc \ub9d0\ub054\ud558\uac8c \uc815\ub9ac\ud558\uae30"},{"location":"gettingstarted/structuring/#_5","text":"\ud074\ub798\uc2a4 \uc774\ub984 \uaddc\uce59\uc740 \ud074\ub798\uc2a4\uac00 \uc5b4\ub514 \uc0ac\uc6a9\ub418\ub294\uc9c0 \ud574\uc11d\ud558\uae30 \uc27d\ub3c4\ub85d \ub9cc\ub4e4\uc5b4 \uc8fc\uba70, \ubb50\uac00 \uc5b4\ub514\uc788\ub294\uc9c0 \ucc3e\uae30 \uc27d\ub3c4\ub85d\ub3c4 \ud574\uc90d\ub2c8\ub2e4. \uc5d0\ub97c \ub4e4\uc5b4: PowerRing \uc774\ub780 Item \uc740 item \ud328\uce90\uc9c0\uc5d0 PowerRingItem \uc774\ub780 \uc774\ub984\uc73c\ub85c \uc788\uc744 \uac83\uc785\ub2c8\ub2e4. NotDirt \ub77c\ub294 Block \uc740 block \ud328\uce90\uc9c0\uc5d0 NotDirtBlock \uc774\ub780 \uc774\ub984\uc73c\ub85c \uc788\uc744 \uac83\uc785\ub2c8\ub2e4. SuperChewer \ub77c\ub294 TileEntity \ub294 tile \ub610\ub294 tileentity \ub77c\ub294 \ud328\uce90\uc9c0\uc5d0 SuperChewerTile \uc774\ub77c\ub294 \uc774\ub984\uc73c\ub85c \uc788\uc744 \uac83\uc785\ub2c8\ub2e4. \ud074\ub798\uc2a4 \uc774\ub984 \ub4a4\uc5d0 \ud074\ub798\uc2a4\uc758 \uc885\ub958 \ub97c \uc368\ub193\uc73c\uc2dc\uba74 \ub098\uc911\uc5d0 \ubb34\uc2a8 \ud074\ub798\uc2a4\uc778\uc9c0 \uc2dd\ubcc4\ud558\uae30 \uc27d\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4.","title":"\ud074\ub798\uc2a4 \uc774\ub984 \uaddc\uce59"},{"location":"items/globallootmodifiers/","text":"Global Loot Modifiers Global Loot Modifiers are a data-driven method of handling modification of harvested drops without the need to overwrite dozens to hundreds of vanilla loot tables or to handle effects that would require interactions with another mod\u2019s loot tables without knowing what mods may be loaded. Global Loot Modifiers are also stacking, rather than last-load-wins, similar to tags. Registering a Global Loot Modifier You will need 4 things: Create a global_loot_modifiers.json . This will tell Forge about your modifiers and works similar to tags . A serialized json representing your modifier. This will contain all of the data about your modification and allows data packs to tweak your effect. A class that extends IGlobalLootModifier . The operational code that makes your modifier work. Most modders can extend LootModifier as it supplies base functionality. Finally, a class that extends GlobalLootModifierSerializer for your operational class. This is registered as any other IForgeRegistryEntry . The global_loot_modifiers.json The global_loot_modifiers.json represents all loot modifiers to be loaded into the game. This file MUST be placed within data/forge/loot_modifiers/global_loot_modifiers.json . Important global_loot_modifiers.json will only be read in the forge namespace. The file will be neglected if it is under the mod\u2019s namespace. entries is an ordered list of the modifiers that will be loaded. The ResourceLocation s specified points to their associated entry within data/<namespace>/loot_modifiers/<path>.json . This is primarily relevant to data pack makers for resolving conflicts between modifiers from separate mods. replace , when true , changes the behavior from appending loot modifiers to the global list to replacing the global list entries entirely. Modders will want to use false for compatibility with other mod implementations. Datapack makers may want to specify their overrides with true . { \"replace\": false, // Must be present \"entries\": [ // Represents a loot modifier in 'data/examplemod/loot_modifiers/example_glm.json' \"examplemod:example_glm\", \"examplemod:example_glm2\" // ... ] } The Serialized JSON This file contains all of the potential variables related to your modifier, including the conditions that must be met prior to modifying any loot. Avoid hard-coded values wherever possible so that data pack makers can adjust balance if they wish to. type represents the registry name of the [ GlobalLootModifierSerializer ][serializer] used to read the associated JSON file. This must always be present. conditions should represent the loot table conditions for this modifier to activate. Conditions should avoid being hardcoded to allow datapack creators as much flexibility to adjust the criteria. This must also be always present. Important Although conditions should represent what is needed for the modifier to activate, this is only the case if using the bundled Forge classes. If using LootModifier as a subclass, all conditions will be ANDed together and checked to see if the modifier should be applied. Any additional properties read by the serializer and defined by the modifier can also be specified. // Within data/examplemod/loot_modifiers/example_glm.json { \"type\": \"examplemod:example_loot_modifier\", \"conditions\": [ // Normal loot table conditions // ... ], \"prop1\": \"val1\", \"prop2\": 10, \"prop3\": \"minecraft:dirt\" } IGlobalLootModifier To supply the functionality a global loot modifier specifies, a IGlobalLootModifier implementation must be specified. These are instances generated each time a serializer decodes the information from JSON and supplies it into this object. There is only one method that needs to be defined in order to create a new modifier: #apply . This takes in the current loot that will be generated along with the context information such as the currently level or additional defined parameters. It returns the list of drops to generate. Note The returned list of drops from any one modifier is fed into other modifiers in the order they are registered. As such, modified loot can be modified by another loot modifier. The LootModifier Subclass LootModifier is an abstract implementation of IGlobalLootModifier to provide the base functionality which most modders can easily extend and implement. This expands upon the existing interface by defining the #apply method to check the conditions to determine whether or not to modify the generated loot. There are two things of note within the subclass implementation: the constructor which must take in an array of ILootCondition s and the #doApply method. The array of ILootCondition s define the list of conditions that must be true before the loot can be modified. The supplied conditions are ANDed together, meaning that all conditions must be true. The #doApply method works the same as the #apply method except that it only executes once all conditions return true. public class ExampleModifier extends LootModifier { public ExampleModifier(ILootCondition[] conditionsIn, String prop1, int prop2, Item prop3) { super(conditionsIn); // Store the rest of the parameters } @Nonnull @Override protected List<ItemStack> doApply(List<ItemStack> generatedLoot, LootContext context) { // Modify the loot and return the new drops } } GlobalLootModifierSerializer The connector between the JSON and the IGlobalLootModifier instance is the GlobalLootModifierSerializer<T> implementation, where T represents the type of the IGlobalLootModifier to use. Two methods must be defined within the serializer implementation: #read and #write . #read takes in the registry name of the JSON, the serialized JsonObject , and the array of conditions that, by most implementations, must be true to allow the loot modifier to execute. The only data that should be deserialized from the JsonObject are the custom properties specified for use by the implemented loot modifier. If no custom properties are needed, then no data should be deserialized from the JsonObject as the conditions are supplied as a parameter. #write is responsible for turning the defined loot modifier and writing it to a JsonObject . This requires that all conditions along with any custom properties must be written. For ease of convenience, #makeConditions can be called to create a new JsonObject with the conditions already serialized within. Any additional properties to be serialized can then be added to this JsonObject . This is utilized for data generation of the associated loot modifier. public ExampleModifierSerializer extends GlobalLootModifierSerializer<ExampleModifier> { @Override public ExampleModifier read(ResourceLocation location, JsonObject object, ILootCondition[] conditions) { String prop1 = JSONUtils.getAsString(object, \"prop1\"); // Deserialize other properties return new ExampleModifier(conditions, prop1, prop2, prop3); } @Override public JsonObject write(ExampleModifier instance) { // Create json object with conditions in modifier JsonObject res = this.makeConditions(instance.conditionsIn); res.addProperty(\"prop1\", instance.prop1); // Add other properties in modifier return res; } } Examples can be found on the Forge Git repository, including silk touch and smelting effects.","title":"Loot Modification"},{"location":"items/globallootmodifiers/#global-loot-modifiers","text":"Global Loot Modifiers are a data-driven method of handling modification of harvested drops without the need to overwrite dozens to hundreds of vanilla loot tables or to handle effects that would require interactions with another mod\u2019s loot tables without knowing what mods may be loaded. Global Loot Modifiers are also stacking, rather than last-load-wins, similar to tags.","title":"Global Loot Modifiers"},{"location":"items/globallootmodifiers/#registering-a-global-loot-modifier","text":"You will need 4 things: Create a global_loot_modifiers.json . This will tell Forge about your modifiers and works similar to tags . A serialized json representing your modifier. This will contain all of the data about your modification and allows data packs to tweak your effect. A class that extends IGlobalLootModifier . The operational code that makes your modifier work. Most modders can extend LootModifier as it supplies base functionality. Finally, a class that extends GlobalLootModifierSerializer for your operational class. This is registered as any other IForgeRegistryEntry .","title":"Registering a Global Loot Modifier"},{"location":"items/globallootmodifiers/#the-global_loot_modifiersjson","text":"The global_loot_modifiers.json represents all loot modifiers to be loaded into the game. This file MUST be placed within data/forge/loot_modifiers/global_loot_modifiers.json . Important global_loot_modifiers.json will only be read in the forge namespace. The file will be neglected if it is under the mod\u2019s namespace. entries is an ordered list of the modifiers that will be loaded. The ResourceLocation s specified points to their associated entry within data/<namespace>/loot_modifiers/<path>.json . This is primarily relevant to data pack makers for resolving conflicts between modifiers from separate mods. replace , when true , changes the behavior from appending loot modifiers to the global list to replacing the global list entries entirely. Modders will want to use false for compatibility with other mod implementations. Datapack makers may want to specify their overrides with true . { \"replace\": false, // Must be present \"entries\": [ // Represents a loot modifier in 'data/examplemod/loot_modifiers/example_glm.json' \"examplemod:example_glm\", \"examplemod:example_glm2\" // ... ] }","title":"The global_loot_modifiers.json"},{"location":"items/globallootmodifiers/#the-serialized-json","text":"This file contains all of the potential variables related to your modifier, including the conditions that must be met prior to modifying any loot. Avoid hard-coded values wherever possible so that data pack makers can adjust balance if they wish to. type represents the registry name of the [ GlobalLootModifierSerializer ][serializer] used to read the associated JSON file. This must always be present. conditions should represent the loot table conditions for this modifier to activate. Conditions should avoid being hardcoded to allow datapack creators as much flexibility to adjust the criteria. This must also be always present. Important Although conditions should represent what is needed for the modifier to activate, this is only the case if using the bundled Forge classes. If using LootModifier as a subclass, all conditions will be ANDed together and checked to see if the modifier should be applied. Any additional properties read by the serializer and defined by the modifier can also be specified. // Within data/examplemod/loot_modifiers/example_glm.json { \"type\": \"examplemod:example_loot_modifier\", \"conditions\": [ // Normal loot table conditions // ... ], \"prop1\": \"val1\", \"prop2\": 10, \"prop3\": \"minecraft:dirt\" }","title":"The Serialized JSON"},{"location":"items/globallootmodifiers/#igloballootmodifier","text":"To supply the functionality a global loot modifier specifies, a IGlobalLootModifier implementation must be specified. These are instances generated each time a serializer decodes the information from JSON and supplies it into this object. There is only one method that needs to be defined in order to create a new modifier: #apply . This takes in the current loot that will be generated along with the context information such as the currently level or additional defined parameters. It returns the list of drops to generate. Note The returned list of drops from any one modifier is fed into other modifiers in the order they are registered. As such, modified loot can be modified by another loot modifier.","title":"IGlobalLootModifier"},{"location":"items/globallootmodifiers/#the-lootmodifier-subclass","text":"LootModifier is an abstract implementation of IGlobalLootModifier to provide the base functionality which most modders can easily extend and implement. This expands upon the existing interface by defining the #apply method to check the conditions to determine whether or not to modify the generated loot. There are two things of note within the subclass implementation: the constructor which must take in an array of ILootCondition s and the #doApply method. The array of ILootCondition s define the list of conditions that must be true before the loot can be modified. The supplied conditions are ANDed together, meaning that all conditions must be true. The #doApply method works the same as the #apply method except that it only executes once all conditions return true. public class ExampleModifier extends LootModifier { public ExampleModifier(ILootCondition[] conditionsIn, String prop1, int prop2, Item prop3) { super(conditionsIn); // Store the rest of the parameters } @Nonnull @Override protected List<ItemStack> doApply(List<ItemStack> generatedLoot, LootContext context) { // Modify the loot and return the new drops } }","title":"The LootModifier Subclass"},{"location":"items/globallootmodifiers/#globallootmodifierserializer","text":"The connector between the JSON and the IGlobalLootModifier instance is the GlobalLootModifierSerializer<T> implementation, where T represents the type of the IGlobalLootModifier to use. Two methods must be defined within the serializer implementation: #read and #write . #read takes in the registry name of the JSON, the serialized JsonObject , and the array of conditions that, by most implementations, must be true to allow the loot modifier to execute. The only data that should be deserialized from the JsonObject are the custom properties specified for use by the implemented loot modifier. If no custom properties are needed, then no data should be deserialized from the JsonObject as the conditions are supplied as a parameter. #write is responsible for turning the defined loot modifier and writing it to a JsonObject . This requires that all conditions along with any custom properties must be written. For ease of convenience, #makeConditions can be called to create a new JsonObject with the conditions already serialized within. Any additional properties to be serialized can then be added to this JsonObject . This is utilized for data generation of the associated loot modifier. public ExampleModifierSerializer extends GlobalLootModifierSerializer<ExampleModifier> { @Override public ExampleModifier read(ResourceLocation location, JsonObject object, ILootCondition[] conditions) { String prop1 = JSONUtils.getAsString(object, \"prop1\"); // Deserialize other properties return new ExampleModifier(conditions, prop1, prop2, prop3); } @Override public JsonObject write(ExampleModifier instance) { // Create json object with conditions in modifier JsonObject res = this.makeConditions(instance.conditionsIn); res.addProperty(\"prop1\", instance.prop1); // Add other properties in modifier return res; } } Examples can be found on the Forge Git repository, including silk touch and smelting effects.","title":"GlobalLootModifierSerializer"},{"location":"items/items/","text":"\uc544\uc774\ud15c \ube14\ub85d\ub4e4\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc544\uc774\ud15c\uc740 \ub300\ubd80\ubd84\uc758 \ubaa8\ub4dc\uc758 \ud575\uc2ec\uc774 \ub418\ub294 \uc694\uc18c\uc785\ub2c8\ub2e4. \ube14\ub85d\uc774 \ud50c\ub808\uc774\uc5b4 \uc8fc\ubcc0\uc758 \uc6d4\ub4dc\ub97c \uad6c\uc131\ud55c\ub2e4\uba74 \uc544\uc774\ud15c\uc740 \ud50c\ub808\uc774\uc5b4\uc758 \uc778\ubca4\ud1a0\ub9ac\ub97c \uad6c\uc131\ud569\ub2c8\ub2e4. \uc544\uc774\ud15c \ub9cc\ub4e4\uae30 \uac04\ub2e8\ud55c \uc544\uc774\ud15c \ub530\ub85c \ud2b9\uc218\ud55c \uae30\ub2a5\uc774 \uc5c6\ub294 \uac04\ub2e8\ud55c \uc544\uc774\ud15c\ub4e4(\ub9c9\ub300\uae30\ub098 \uc124\ud0d5)\uc740 \ub530\ub85c \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4, \uadf8\ub0e5 Item \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c Item$Properties \uac1d\uccb4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4e4\uae30\ub9cc \ud558\uc5ec\ub3c4 \ucda9\ubd84\ud569\ub2c8\ub2e4. Item$Properties \uac1d\uccb4\ub294 \uc0dd\uc131\uc790\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4e0 \uc774\ud6c4 \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc544\uc774\ud15c\uc758 \uc18d\uc131\uc744 \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: \uba54\uc11c\ub4dc \uc124\uba85 tab \uc5b4\ub5a4 ItemGroup(\uc774\uc804\uc5d0\ub294 \ud06c\ub9ac\uc5d0\uc774\ud2f0\ube0c \ud0ed \uc774\ub77c \ubd88\ub838\uc74c) \uc5d0 \uc544\uc774\ud15c\uc744 \ucd94\uac00\ud560 \uac83\uc778\uc9c0\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \uc544\uc774\ud15c\uc744 \ud06c\ub9ac\uc5d0\uc774\ud2f0\ube0c \uba54\ub274\uc5d0 \ud45c\uc2dc\ud558\ub824\uba74 \ubb34\uc870\uac74 \ud638\ucd9c\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uae30\ubcf8 \uc544\uc774\ud15c \uadf8\ub8f9\ub4e4\uc740 ItemGroup \ud074\ub798\uc2a4\uc5d0\uc11c \ucc3e\uc73c\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. durability \uc544\uc774\ud15c\uc758 \ucd5c\ub300 damage \uac12\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. \ub9cc\uc57d 0\ubcf4\ub2e4 \ud070 \uac12\uc73c\ub85c \uc124\uc815\ub418\uc5c8\uc744 \uacbd\uc6b0 \u201cdamaged\u201d \uc640 \u201cdamage\u201d \uc18d\uc131\uc774 \uc544\uc774\ud15c\uc5d0 \ucd94\uac00\ub429\ub2c8\ub2e4. stacksTo \uc544\uc774\ud15c\uc774 \uc5bc\ub9c8\ub098 \uacb9\uce60 \uc218 \uc788\ub294\uac00\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \ub0b4\uad6c\ub3c4\uac00 \uc788\uc73c\uba74\uc11c \uacb9\uce60 \uc218 \uc788\ub294 \uc544\uc774\ud15c\uc740 \ub9cc\ub4e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. setNoRepair \uc544\uc774\ud15c\uc744 \u201cdamaged\u201d \uc18d\uc131\uc774 \uc788\uc5b4\ub3c4 \uc218\ub9ac\uac00 \ubd88\uac00\ub2a5\ud558\ub3c4\ub85d \ub9cc\ub4ed\ub2c8\ub2e4. craftRemainder \uc774 \uc544\uc774\ud15c\uc744 \uc870\ud569\uc5d0 \uc0ac\uc6a9\ud55c \uc774\ud6c4 \ub0a8\uc744 \uc544\uc774\ud15c\uc744 \uc124\uc815\ud569\ub2c8\ub2e4, \ub9c8\uce58 \uc6a9\uc554 \uc591\ub3d9\uc774\ub97c \uc870\ud569\uc5d0 \uc0ac\uc6a9\ud558\uba74 \ube48 \uc591\ub3d9\uc774\uac00 \ub0a8\ub294 \uac83 \ucc98\ub7fc \ub9d0\uc785\ub2c8\ub2e4. addToolType ToolType ( SHOVEL , AXE , PICKAXE ) \uacfc harvestLevel ( 0 \uc740 \ub098\ubb34/\uae08, 1 \uc740 \ub3cc, 2 \ub294 \ucca0, 3 \uc740 \ub2e4\uc774\uc544\ubaac\ub4dc) \uc73c\ub85c \ub41c \uc30d\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. \uc704 \uba54\uc11c\ub4dc\ub4e4\uc740 \uc5f0\uc18d\uc801\uc73c\ub85c \uc774\uc5b4 \ubd99\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uc989 \uac01 \uba54\uc11c\ub4dc\ub4e4 \ub05d\uc5d0 return this \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub2e4\ub978 \uba54\uc11c\ub4dc\ub97c \ub4a4\uc5d0 \ubc14\ub85c \uc774\uc5b4 \ubd99\uc77c \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \ubcf5\uc7a1\ud55c \uc544\uc774\ud15c \uc544\uc774\ud15c\uc744 \uc704\ucc98\ub7fc \uc989\uc11d\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc11c \uc124\uc815\ud558\ub294 \uac83\uc740 \uac04\ub2e8\ud55c \uc544\uc774\ud15c\uc5d0\ub9cc \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc870\uae08 \ub354 \ubcf5\uc7a1\ud55c \uc544\uc774\ud15c\uc744 \ub9cc\ub4e4\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74 \ub530\ub85c Item \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4\uace0 \ud544\uc694\uc5d0 \ub530\ub77c \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uc544\uc774\ud15c \ub4f1\ub85d\ud558\uae30 \uc544\uc774\u314f\ud15c\uc740 \ubb34\uc870\uac74 \ub4f1\ub85d \ub418\uc5b4\uc57c\ub9cc \uc815\uc0c1\uc801\uc73c\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4.","title":"\uc544\uc774\ud15c"},{"location":"items/items/#_1","text":"\ube14\ub85d\ub4e4\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc544\uc774\ud15c\uc740 \ub300\ubd80\ubd84\uc758 \ubaa8\ub4dc\uc758 \ud575\uc2ec\uc774 \ub418\ub294 \uc694\uc18c\uc785\ub2c8\ub2e4. \ube14\ub85d\uc774 \ud50c\ub808\uc774\uc5b4 \uc8fc\ubcc0\uc758 \uc6d4\ub4dc\ub97c \uad6c\uc131\ud55c\ub2e4\uba74 \uc544\uc774\ud15c\uc740 \ud50c\ub808\uc774\uc5b4\uc758 \uc778\ubca4\ud1a0\ub9ac\ub97c \uad6c\uc131\ud569\ub2c8\ub2e4.","title":"\uc544\uc774\ud15c"},{"location":"items/items/#_2","text":"","title":"\uc544\uc774\ud15c \ub9cc\ub4e4\uae30"},{"location":"items/items/#_3","text":"\ub530\ub85c \ud2b9\uc218\ud55c \uae30\ub2a5\uc774 \uc5c6\ub294 \uac04\ub2e8\ud55c \uc544\uc774\ud15c\ub4e4(\ub9c9\ub300\uae30\ub098 \uc124\ud0d5)\uc740 \ub530\ub85c \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4, \uadf8\ub0e5 Item \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c Item$Properties \uac1d\uccb4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4e4\uae30\ub9cc \ud558\uc5ec\ub3c4 \ucda9\ubd84\ud569\ub2c8\ub2e4. Item$Properties \uac1d\uccb4\ub294 \uc0dd\uc131\uc790\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4e0 \uc774\ud6c4 \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc544\uc774\ud15c\uc758 \uc18d\uc131\uc744 \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: \uba54\uc11c\ub4dc \uc124\uba85 tab \uc5b4\ub5a4 ItemGroup(\uc774\uc804\uc5d0\ub294 \ud06c\ub9ac\uc5d0\uc774\ud2f0\ube0c \ud0ed \uc774\ub77c \ubd88\ub838\uc74c) \uc5d0 \uc544\uc774\ud15c\uc744 \ucd94\uac00\ud560 \uac83\uc778\uc9c0\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \uc544\uc774\ud15c\uc744 \ud06c\ub9ac\uc5d0\uc774\ud2f0\ube0c \uba54\ub274\uc5d0 \ud45c\uc2dc\ud558\ub824\uba74 \ubb34\uc870\uac74 \ud638\ucd9c\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uae30\ubcf8 \uc544\uc774\ud15c \uadf8\ub8f9\ub4e4\uc740 ItemGroup \ud074\ub798\uc2a4\uc5d0\uc11c \ucc3e\uc73c\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. durability \uc544\uc774\ud15c\uc758 \ucd5c\ub300 damage \uac12\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. \ub9cc\uc57d 0\ubcf4\ub2e4 \ud070 \uac12\uc73c\ub85c \uc124\uc815\ub418\uc5c8\uc744 \uacbd\uc6b0 \u201cdamaged\u201d \uc640 \u201cdamage\u201d \uc18d\uc131\uc774 \uc544\uc774\ud15c\uc5d0 \ucd94\uac00\ub429\ub2c8\ub2e4. stacksTo \uc544\uc774\ud15c\uc774 \uc5bc\ub9c8\ub098 \uacb9\uce60 \uc218 \uc788\ub294\uac00\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \ub0b4\uad6c\ub3c4\uac00 \uc788\uc73c\uba74\uc11c \uacb9\uce60 \uc218 \uc788\ub294 \uc544\uc774\ud15c\uc740 \ub9cc\ub4e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. setNoRepair \uc544\uc774\ud15c\uc744 \u201cdamaged\u201d \uc18d\uc131\uc774 \uc788\uc5b4\ub3c4 \uc218\ub9ac\uac00 \ubd88\uac00\ub2a5\ud558\ub3c4\ub85d \ub9cc\ub4ed\ub2c8\ub2e4. craftRemainder \uc774 \uc544\uc774\ud15c\uc744 \uc870\ud569\uc5d0 \uc0ac\uc6a9\ud55c \uc774\ud6c4 \ub0a8\uc744 \uc544\uc774\ud15c\uc744 \uc124\uc815\ud569\ub2c8\ub2e4, \ub9c8\uce58 \uc6a9\uc554 \uc591\ub3d9\uc774\ub97c \uc870\ud569\uc5d0 \uc0ac\uc6a9\ud558\uba74 \ube48 \uc591\ub3d9\uc774\uac00 \ub0a8\ub294 \uac83 \ucc98\ub7fc \ub9d0\uc785\ub2c8\ub2e4. addToolType ToolType ( SHOVEL , AXE , PICKAXE ) \uacfc harvestLevel ( 0 \uc740 \ub098\ubb34/\uae08, 1 \uc740 \ub3cc, 2 \ub294 \ucca0, 3 \uc740 \ub2e4\uc774\uc544\ubaac\ub4dc) \uc73c\ub85c \ub41c \uc30d\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. \uc704 \uba54\uc11c\ub4dc\ub4e4\uc740 \uc5f0\uc18d\uc801\uc73c\ub85c \uc774\uc5b4 \ubd99\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uc989 \uac01 \uba54\uc11c\ub4dc\ub4e4 \ub05d\uc5d0 return this \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub2e4\ub978 \uba54\uc11c\ub4dc\ub97c \ub4a4\uc5d0 \ubc14\ub85c \uc774\uc5b4 \ubd99\uc77c \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4.","title":"\uac04\ub2e8\ud55c \uc544\uc774\ud15c"},{"location":"items/items/#_4","text":"\uc544\uc774\ud15c\uc744 \uc704\ucc98\ub7fc \uc989\uc11d\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc11c \uc124\uc815\ud558\ub294 \uac83\uc740 \uac04\ub2e8\ud55c \uc544\uc774\ud15c\uc5d0\ub9cc \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc870\uae08 \ub354 \ubcf5\uc7a1\ud55c \uc544\uc774\ud15c\uc744 \ub9cc\ub4e4\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74 \ub530\ub85c Item \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4\uace0 \ud544\uc694\uc5d0 \ub530\ub77c \uba54\uc11c\ub4dc\ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud558\uc154\uc57c \ud569\ub2c8\ub2e4.","title":"\ubcf5\uc7a1\ud55c \uc544\uc774\ud15c"},{"location":"items/items/#_5","text":"\uc544\uc774\u314f\ud15c\uc740 \ubb34\uc870\uac74 \ub4f1\ub85d \ub418\uc5b4\uc57c\ub9cc \uc815\uc0c1\uc801\uc73c\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4.","title":"\uc544\uc774\ud15c \ub4f1\ub85d\ud558\uae30"},{"location":"legacy/","text":"Documentation for Legacy Versions Forge has existed for years, and you can still easily access builds of Forge for Minecraft versions as old as Minecraft 1.1. There are significant differences between each and every version, and it would be an impossible task to support so many different versions. Therefore, Forge uses an LTS system where a previous major Minecraft version is deemed as \u201cLTS\u201d (Long Term Support). Only the latest version and any current LTS versions will have easily accessible documentation and be included in the version dropdown in the sidebar. However, some older versions were LTS once or the latest version at some point and had documentation written. Links to old sites with documentation for those versions can be found here. Important These old documentation sites are for reference purposes only. Do not ask for help with old versions on the Forge discord or the Forge forums. You will not receive support when you are using older versions. List of Previously Documented versions Unfortunately, not all versions were used for a significant amount of time, and the documentation for that version may be incomplete. Whenever a new version is released, the documentation from the previous version is copied and adjusted over time to include new and updated information. When a version wasn\u2019t supported for long, the information was never updated. The accuracy percentages represent how much of the information that should have been updated was actually updated. Version Accuracy Link 1.12.x 100% https://mcforge.readthedocs.io/en/1.12.x/ 1.13.x 10% https://mcforge.readthedocs.io/en/1.13.x/ 1.14.x 10% https://mcforge.readthedocs.io/en/1.14.x/ 1.15.x 85% https://mcforge.readthedocs.io/en/1.15.x/ RetroGradle RetroGradle is an archival initiative to update the older ForgeGradle 1.x to 2.3 toolchains and their Minecraft versions to use the modern ForgeGradle 4.x and above toolchain. The goal is to preserve all past released versions of Minecraft Forge by moving them to a verifiably working and modern toolchain which is data-driven and not hardcoded for version-specific workflows. If any developer wishes to contribute to this archival effort, please visit The Forge Project discord server and ask for directions to the designated channel. Please note that this initiative only aims to preserve these old versions for the benefit of the community, not to support developing mods for these old, unsupported versions. There will not be any support for using or developing for unsupported versions.","title":"\uc774\uc804 \ubc84\uc804"},{"location":"legacy/#documentation-for-legacy-versions","text":"Forge has existed for years, and you can still easily access builds of Forge for Minecraft versions as old as Minecraft 1.1. There are significant differences between each and every version, and it would be an impossible task to support so many different versions. Therefore, Forge uses an LTS system where a previous major Minecraft version is deemed as \u201cLTS\u201d (Long Term Support). Only the latest version and any current LTS versions will have easily accessible documentation and be included in the version dropdown in the sidebar. However, some older versions were LTS once or the latest version at some point and had documentation written. Links to old sites with documentation for those versions can be found here. Important These old documentation sites are for reference purposes only. Do not ask for help with old versions on the Forge discord or the Forge forums. You will not receive support when you are using older versions.","title":"Documentation for Legacy Versions"},{"location":"legacy/#list-of-previously-documented-versions","text":"Unfortunately, not all versions were used for a significant amount of time, and the documentation for that version may be incomplete. Whenever a new version is released, the documentation from the previous version is copied and adjusted over time to include new and updated information. When a version wasn\u2019t supported for long, the information was never updated. The accuracy percentages represent how much of the information that should have been updated was actually updated. Version Accuracy Link 1.12.x 100% https://mcforge.readthedocs.io/en/1.12.x/ 1.13.x 10% https://mcforge.readthedocs.io/en/1.13.x/ 1.14.x 10% https://mcforge.readthedocs.io/en/1.14.x/ 1.15.x 85% https://mcforge.readthedocs.io/en/1.15.x/","title":"List of Previously Documented versions"},{"location":"legacy/#retrogradle","text":"RetroGradle is an archival initiative to update the older ForgeGradle 1.x to 2.3 toolchains and their Minecraft versions to use the modern ForgeGradle 4.x and above toolchain. The goal is to preserve all past released versions of Minecraft Forge by moving them to a verifiably working and modern toolchain which is data-driven and not hardcoded for version-specific workflows. If any developer wishes to contribute to this archival effort, please visit The Forge Project discord server and ask for directions to the designated channel. Please note that this initiative only aims to preserve these old versions for the benefit of the community, not to support developing mods for these old, unsupported versions. There will not be any support for using or developing for unsupported versions.","title":"RetroGradle"},{"location":"legacy/porting/","text":"Porting to Minecraft 1.16 Here you can find a list of primers on how to port from old versions to the current version. Some versions are lumped together since that particular version never saw much usage. From -> To Primer 1.12 -> 1.13/1.14 Primer by williewillus 1.14 -> 1.15 Primer by williewillus 1.15 -> 1.16 Primer by 50ap5ud5","title":"1.16\uc73c\ub85c \ud3ec\ud305\ud558\uae30"},{"location":"legacy/porting/#porting-to-minecraft-116","text":"Here you can find a list of primers on how to port from old versions to the current version. Some versions are lumped together since that particular version never saw much usage. From -> To Primer 1.12 -> 1.13/1.14 Primer by williewillus 1.14 -> 1.15 Primer by williewillus 1.15 -> 1.16 Primer by 50ap5ud5","title":"Porting to Minecraft 1.16"},{"location":"models/color/","text":"Coloring Textures Many blocks and items in vanilla change their texture color depending on where they are or what properties they have, such as grass. Models support specifying \u201ctint indices\u201d on faces, which are integers that can then be handled by IBlockColor s and IItemColor s. See the wiki for information on how tint indices are defined in vanilla models. IBlockColor / IItemColor Both of these are single-method interfaces. IBlockColor takes a BlockState , an (nullable) IBlockDisplayReader , and a (nullable) BlockPos . IItemColor takes an ItemStack . Both of them take an int parameter tintIndex , which is the tint index of the face being colored. Both of them return an int , a color multiplier. This int is treated as 4 unsigned bytes, alpha, red, green, and blue, in that order, from most significant byte to least. For each pixel in the tinted face, the value of each color channel is (int)((float) base * multiplier / 255.0) , where base is the original value for the channel, and multiplier is the associated byte from the color multiplier. Note that blocks do not use the alpha channel. For example, the grass texture, untinted, looks white and gray. The IBlockColor and IItemColor for grass return color multipliers with low red and blue components, but high alpha and green components, (at least in warm biomes) so when the multiplication is performed, the green is brought out and the red/blue diminished. If an item inherits from the builtin/generated model, each layer (\u201clayer0\u201d, \u201clayer1\u201d, etc.) has a tint index corresponding to its layer index. Creating Color Handlers IBlockColor s need to be registered to the BlockColors instance of the game. BlockColors can be acquired through ColorHandlerEvent$Block , and an IBlockColor can be registered by BlockColors#register . Note that this does not cause the BlockItem for the given block to be colored. BlockItem s are items and need to be colored with an IItemColor . @SubscribeEvent public void registerBlockColors(ColorHandlerEvent.Block event){ event.getBlockColors().register(myIBlockColor, coloredBlock1, coloredBlock2, ...); } IItemColor s need to be registered to the ItemColors instance of the game. ItemColors can be acquired through ColorHandlerEvent$Item , and an IItemColor can be registered by ItemColors#register . This method is overloaded to also take Block s, which simply registers the color handler for the item Block#asItem (i.e. the block\u2019s BlockItem ). @SubscribeEvent public void registerItemColors(ColorHandlerEvent.Item event){ event.getItemColors().register(myIItemColor, coloredItem1, coloredItem2, ...); }","title":"\ud14d\uc2a4\uccd0 \uc0c9\uce60\ud558\uae30"},{"location":"models/color/#coloring-textures","text":"Many blocks and items in vanilla change their texture color depending on where they are or what properties they have, such as grass. Models support specifying \u201ctint indices\u201d on faces, which are integers that can then be handled by IBlockColor s and IItemColor s. See the wiki for information on how tint indices are defined in vanilla models.","title":"Coloring Textures"},{"location":"models/color/#iblockcoloriitemcolor","text":"Both of these are single-method interfaces. IBlockColor takes a BlockState , an (nullable) IBlockDisplayReader , and a (nullable) BlockPos . IItemColor takes an ItemStack . Both of them take an int parameter tintIndex , which is the tint index of the face being colored. Both of them return an int , a color multiplier. This int is treated as 4 unsigned bytes, alpha, red, green, and blue, in that order, from most significant byte to least. For each pixel in the tinted face, the value of each color channel is (int)((float) base * multiplier / 255.0) , where base is the original value for the channel, and multiplier is the associated byte from the color multiplier. Note that blocks do not use the alpha channel. For example, the grass texture, untinted, looks white and gray. The IBlockColor and IItemColor for grass return color multipliers with low red and blue components, but high alpha and green components, (at least in warm biomes) so when the multiplication is performed, the green is brought out and the red/blue diminished. If an item inherits from the builtin/generated model, each layer (\u201clayer0\u201d, \u201clayer1\u201d, etc.) has a tint index corresponding to its layer index.","title":"IBlockColor/IItemColor"},{"location":"models/color/#creating-color-handlers","text":"IBlockColor s need to be registered to the BlockColors instance of the game. BlockColors can be acquired through ColorHandlerEvent$Block , and an IBlockColor can be registered by BlockColors#register . Note that this does not cause the BlockItem for the given block to be colored. BlockItem s are items and need to be colored with an IItemColor . @SubscribeEvent public void registerBlockColors(ColorHandlerEvent.Block event){ event.getBlockColors().register(myIBlockColor, coloredBlock1, coloredBlock2, ...); } IItemColor s need to be registered to the ItemColors instance of the game. ItemColors can be acquired through ColorHandlerEvent$Item , and an IItemColor can be registered by ItemColors#register . This method is overloaded to also take Block s, which simply registers the color handler for the item Block#asItem (i.e. the block\u2019s BlockItem ). @SubscribeEvent public void registerItemColors(ColorHandlerEvent.Item event){ event.getItemColors().register(myIItemColor, coloredItem1, coloredItem2, ...); }","title":"Creating Color Handlers"},{"location":"models/files/","text":"Model Files A \u201cmodel\u201d is simply a shape. It can be a simple cube, it can be several cubes, it can be a truncated icosidodecahedron, or anything in between. Most models you\u2019ll see will be in the vanilla JSON format. Models in other formats are loaded into IModelGeometry s by an IModelLoader at runtime. Forge provides default implementations for WaveFront OBJ files, buckets, composite models, models in different render layers, and a reimplementation of Vanilla\u2019s builtin/generated item model. Most things do not care about what loaded the model or what format it\u2019s in as they are all eventually represented by an IBakedModel in code. When ResourceLocation refers to a model, the path is normally relative to models (e.g. examplemod:block/block \u2192 assets/examplemod/models/block/block.json ). Block and item models differ in a few ways, the major one being item property overrides . Textures Textures, like models, are contained within resource packs and are referred to with ResourceLocation s. When ResourceLocation s refer to textures in models, the paths are taken to be relative to textures/ (e.g. examplemod:block/test \u2192 assets/examplemod/textures/block/test.png ). Additionally, in Minecraft, the UV coordinates (0,0) are taken to mean the top-left corner. UVs are always from 0 to 16. If a texture is larger or smaller, the coordinates are scaled to fit. A texture should also be square, and the side length of a texture should be a power of two, as doing otherwise breaks mipmapping (e.g. 1x1, 2x2, 8x8, 16x16, and 128x128 are good. 5x5 and 30x30 are not recommended because they are not powers of 2. 5x10 and 4x8 are completely broken as they are not square.). If there is an mcmeta file associated with the texture, and an animation is defined, the image can be rectangular and is interpreted as a vertical sequence of square regions from top to bottom, where each square is a frame of the animation. JSON Models Vanilla Minecraft\u2019s JSON model format is rather simple. It defines cuboid (cube/rectangular prism) elements and assigns textures to their faces. On the wiki , there is a definition of its format. Note JSON models only support cuboid elements; there is no way to express a triangular wedge or anything like it. To have more complicated models, another format must be used. When a ResourceLocation refers to the location of a JSON model, it is not suffixed with .json , unlike OBJ models (e.g. minecraft:block/cube_all , not minecraft:block/cube_all.json ). WaveFront OBJ Models Forge adds a loader for the .obj file format. To use these models, the JSON must reference the forge:obj loader. This loader accepts any model location that is in a registered namespace and whose path ends in .obj . The .mtl file should be placed in the same location with the same name as the .obj to be used automatically. The .mtl file will probably have to be manually edited to change the paths pointing to textures defined within the JSON. Additionally, the V axis for textures may be flipped depending on the external program that created the model (i.e. V = 0 may be the bottom edge, not the top). This may be rectified in the modelling program itself or done in the model JSON like so: { \"__comment\": \"Add the following line on the same level as a 'model' declaration.\", \"loader\": \"forge:obj\", \"flip-v\": true, \"model\": \"examplemod:models/block/model.obj\", \"textures\": { \"_comment\": \"Can refer to in .mtl using #texture0\", \"texture0\": \"minecraft:block/dirt\", \"particle\": \"minecraft:block/dirt\" } }","title":"\ubaa8\ub378 \ud30c\uc77c"},{"location":"models/files/#model-files","text":"A \u201cmodel\u201d is simply a shape. It can be a simple cube, it can be several cubes, it can be a truncated icosidodecahedron, or anything in between. Most models you\u2019ll see will be in the vanilla JSON format. Models in other formats are loaded into IModelGeometry s by an IModelLoader at runtime. Forge provides default implementations for WaveFront OBJ files, buckets, composite models, models in different render layers, and a reimplementation of Vanilla\u2019s builtin/generated item model. Most things do not care about what loaded the model or what format it\u2019s in as they are all eventually represented by an IBakedModel in code. When ResourceLocation refers to a model, the path is normally relative to models (e.g. examplemod:block/block \u2192 assets/examplemod/models/block/block.json ). Block and item models differ in a few ways, the major one being item property overrides .","title":"Model Files"},{"location":"models/files/#textures","text":"Textures, like models, are contained within resource packs and are referred to with ResourceLocation s. When ResourceLocation s refer to textures in models, the paths are taken to be relative to textures/ (e.g. examplemod:block/test \u2192 assets/examplemod/textures/block/test.png ). Additionally, in Minecraft, the UV coordinates (0,0) are taken to mean the top-left corner. UVs are always from 0 to 16. If a texture is larger or smaller, the coordinates are scaled to fit. A texture should also be square, and the side length of a texture should be a power of two, as doing otherwise breaks mipmapping (e.g. 1x1, 2x2, 8x8, 16x16, and 128x128 are good. 5x5 and 30x30 are not recommended because they are not powers of 2. 5x10 and 4x8 are completely broken as they are not square.). If there is an mcmeta file associated with the texture, and an animation is defined, the image can be rectangular and is interpreted as a vertical sequence of square regions from top to bottom, where each square is a frame of the animation.","title":"Textures"},{"location":"models/files/#json-models","text":"Vanilla Minecraft\u2019s JSON model format is rather simple. It defines cuboid (cube/rectangular prism) elements and assigns textures to their faces. On the wiki , there is a definition of its format. Note JSON models only support cuboid elements; there is no way to express a triangular wedge or anything like it. To have more complicated models, another format must be used. When a ResourceLocation refers to the location of a JSON model, it is not suffixed with .json , unlike OBJ models (e.g. minecraft:block/cube_all , not minecraft:block/cube_all.json ).","title":"JSON Models"},{"location":"models/files/#wavefront-obj-models","text":"Forge adds a loader for the .obj file format. To use these models, the JSON must reference the forge:obj loader. This loader accepts any model location that is in a registered namespace and whose path ends in .obj . The .mtl file should be placed in the same location with the same name as the .obj to be used automatically. The .mtl file will probably have to be manually edited to change the paths pointing to textures defined within the JSON. Additionally, the V axis for textures may be flipped depending on the external program that created the model (i.e. V = 0 may be the bottom edge, not the top). This may be rectified in the modelling program itself or done in the model JSON like so: { \"__comment\": \"Add the following line on the same level as a 'model' declaration.\", \"loader\": \"forge:obj\", \"flip-v\": true, \"model\": \"examplemod:models/block/model.obj\", \"textures\": { \"_comment\": \"Can refer to in .mtl using #texture0\", \"texture0\": \"minecraft:block/dirt\", \"particle\": \"minecraft:block/dirt\" } }","title":"WaveFront OBJ Models"},{"location":"models/introduction/","text":"Intro to Models The model system is Minecraft\u2019s way of giving blocks and items their shapes. Through the model system, blocks and items are mapped to their models, which define how they look. One of the main goals of the model system is to allow not only textures but the entire shape of a block/item to be changed by resource packs. Indeed, any mod that adds items or blocks also contains a mini-resource pack for their blocks and items. In order to link code to models and textures on disk, there exists the class ResourceLocation . One may recognize them from the registry system; however, their original purpose was to identify files on disk; they just happened to be useful as unique identifiers as well. A ResourceLocation is a simple object composed of two String s: a namespace and a path. When a ResourceLocation is represented as a plain string, it looks like namespace:path . When a ResourceLocation is created and a namespace isn\u2019t explicitly given, the namespace defaults to minecraft . However, it is good practice to include the namespace anyway. The namespace of a ResourceLocation in the model system represents a directory directly underneath assets/ . Usually, the namespace is the same as the modid (e.g. in vanilla Minecraft the namespace is always minecraft ). The path portion of a ResourceLocation represents a context-sensitive path to file underneath the namespace. What the path means and where exactly it points depends on what\u2019s using it. For example, when referring to a model, the path is normally resolved under models , but when referring to a texture, it is under textures . Therefore, mod:file means assets/mod/models/file.json in one context but assets/mod/textures/file.png in another. When something is described as requiring a ResourceLocation , it will be defined what exactly the path means. All strings related to the model system (especially ResourceLocation s) should be in snake case (meaning_all_lowercase_and_underscore_separated_words_like_this). This is enforced since Minecraft 1.11.","title":"\ubaa8\ub378 \uc18c\uac1c"},{"location":"models/introduction/#intro-to-models","text":"The model system is Minecraft\u2019s way of giving blocks and items their shapes. Through the model system, blocks and items are mapped to their models, which define how they look. One of the main goals of the model system is to allow not only textures but the entire shape of a block/item to be changed by resource packs. Indeed, any mod that adds items or blocks also contains a mini-resource pack for their blocks and items. In order to link code to models and textures on disk, there exists the class ResourceLocation . One may recognize them from the registry system; however, their original purpose was to identify files on disk; they just happened to be useful as unique identifiers as well. A ResourceLocation is a simple object composed of two String s: a namespace and a path. When a ResourceLocation is represented as a plain string, it looks like namespace:path . When a ResourceLocation is created and a namespace isn\u2019t explicitly given, the namespace defaults to minecraft . However, it is good practice to include the namespace anyway. The namespace of a ResourceLocation in the model system represents a directory directly underneath assets/ . Usually, the namespace is the same as the modid (e.g. in vanilla Minecraft the namespace is always minecraft ). The path portion of a ResourceLocation represents a context-sensitive path to file underneath the namespace. What the path means and where exactly it points depends on what\u2019s using it. For example, when referring to a model, the path is normally resolved under models , but when referring to a texture, it is under textures . Therefore, mod:file means assets/mod/models/file.json in one context but assets/mod/textures/file.png in another. When something is described as requiring a ResourceLocation , it will be defined what exactly the path means. All strings related to the model system (especially ResourceLocation s) should be in snake case (meaning_all_lowercase_and_underscore_separated_words_like_this). This is enforced since Minecraft 1.11.","title":"Intro to Models"},{"location":"models/overrides/","text":"Item Property Overrides Item properties are a way for the \u201cproperties\u201d of items to be exposed to the model system. An example is the bow, where the most important property is how far the bow has been pulled. This information is then used to choose a model for the bow, creating an animation for pulling it. An item property assigns a certain float value to every ItemStack it is registered for, and vanilla item model definitions can use these values to define \u201coverrides\u201d, where an item defaults to a certain model, but if an override matches, it overrides the model and uses another. They are useful mainly because they are continuous. For example, bows use item properties to define their pull animation. The item models are decided by the \u2018float\u2019 number predicates, it is not limited but generally between 0.0F and 1.0F . This allows resource packs to add as many models as they want for the bow pulling animation along that spectrum, instead of being stuck with four \u201cslots\u201d for their models in the animation. The same is true of the compass and clock. Adding Properties to Items ItemModelsProperties#register is used to add a property to a certain item. The Item parameter is the item the property is being attached to (e.g. ExampleItems#APPLE ). The ResourceLocation parameter is the name given to the property (e.g. new ResourceLocation(\"pull\") ). The IItemPropertyGetter is a functional interface that takes the ItemStack , the ClientWorld it is in (may be null), and the LivingEntity that holds it (may be null), returning the float value for the property. For modded item properties, it is recommended that the modid of the mod is used as the namespace (e.g. examplemod:property and not just property , as that really means minecraft:property ). These should be done in FMLClientSetupEvent . There\u2019s also another private method ItemModelsProperties#registerGeneric that is used to add properties to all items, and it does not take Item as its parameter since all items will apply this property. Important Use FMLClientSetupEvent#enqueueWork to proceed with the tasks, since the data structures in ItemModelsProperties are not thread-safe. Using Overrides The format of an override can be seen on the wiki , and a good example can be found in model/item/bow.json . For reference, here is a hypothetical example of an item with an examplemod:power property. If the values have no match, the default is the current model, but if there are multiple matches, the last match in the list will be selected. Important A predicate applies to all values greater than or equal to the given value. { \"parent\": \"item/generated\", \"textures\": { \"__comment\": \"Default\", \"layer0\": \"examplemod:items/example_partial\" }, \"overrides\": [ { \"__comment\": \"power >= .75\", \"predicate\": { \"examplemod:power\": 0.75 }, \"model\": \"examplemod:item/example_powered\" } ] } And here is a hypothetical snippet from the supporting code. Unlike the older versions (lower than 1.16.x), this needs to be done on client side only because ItemModelsProperties does not exist on server. private void setup(final FMLClientSetupEvent event) { event.enqueueWork(() -> { ItemModelsProperties.register(ExampleItems.APPLE, new ResourceLocation(ExampleMod.MODID, \"pulling\"), (stack, world, living) -> { return living != null && living.isUsingItem() && living.getUseItem() == stack ? 1.0F : 0.0F; }); }); }","title":"\uc544\uc774\ud15c \ud2b9\uc131 \uc624\ubc84\ub77c\uc774\ub4dc"},{"location":"models/overrides/#item-property-overrides","text":"Item properties are a way for the \u201cproperties\u201d of items to be exposed to the model system. An example is the bow, where the most important property is how far the bow has been pulled. This information is then used to choose a model for the bow, creating an animation for pulling it. An item property assigns a certain float value to every ItemStack it is registered for, and vanilla item model definitions can use these values to define \u201coverrides\u201d, where an item defaults to a certain model, but if an override matches, it overrides the model and uses another. They are useful mainly because they are continuous. For example, bows use item properties to define their pull animation. The item models are decided by the \u2018float\u2019 number predicates, it is not limited but generally between 0.0F and 1.0F . This allows resource packs to add as many models as they want for the bow pulling animation along that spectrum, instead of being stuck with four \u201cslots\u201d for their models in the animation. The same is true of the compass and clock.","title":"Item Property Overrides"},{"location":"models/overrides/#adding-properties-to-items","text":"ItemModelsProperties#register is used to add a property to a certain item. The Item parameter is the item the property is being attached to (e.g. ExampleItems#APPLE ). The ResourceLocation parameter is the name given to the property (e.g. new ResourceLocation(\"pull\") ). The IItemPropertyGetter is a functional interface that takes the ItemStack , the ClientWorld it is in (may be null), and the LivingEntity that holds it (may be null), returning the float value for the property. For modded item properties, it is recommended that the modid of the mod is used as the namespace (e.g. examplemod:property and not just property , as that really means minecraft:property ). These should be done in FMLClientSetupEvent . There\u2019s also another private method ItemModelsProperties#registerGeneric that is used to add properties to all items, and it does not take Item as its parameter since all items will apply this property. Important Use FMLClientSetupEvent#enqueueWork to proceed with the tasks, since the data structures in ItemModelsProperties are not thread-safe.","title":"Adding Properties to Items"},{"location":"models/overrides/#using-overrides","text":"The format of an override can be seen on the wiki , and a good example can be found in model/item/bow.json . For reference, here is a hypothetical example of an item with an examplemod:power property. If the values have no match, the default is the current model, but if there are multiple matches, the last match in the list will be selected. Important A predicate applies to all values greater than or equal to the given value. { \"parent\": \"item/generated\", \"textures\": { \"__comment\": \"Default\", \"layer0\": \"examplemod:items/example_partial\" }, \"overrides\": [ { \"__comment\": \"power >= .75\", \"predicate\": { \"examplemod:power\": 0.75 }, \"model\": \"examplemod:item/example_powered\" } ] } And here is a hypothetical snippet from the supporting code. Unlike the older versions (lower than 1.16.x), this needs to be done on client side only because ItemModelsProperties does not exist on server. private void setup(final FMLClientSetupEvent event) { event.enqueueWork(() -> { ItemModelsProperties.register(ExampleItems.APPLE, new ResourceLocation(ExampleMod.MODID, \"pulling\"), (stack, world, living) -> { return living != null && living.isUsingItem() && living.getUseItem() == stack ? 1.0F : 0.0F; }); }); }","title":"Using Overrides"},{"location":"models/advanced/ibakedmodel/","text":"IBakedModel IBakedModel is the result of calling IUnbakedModel#bake for the vanilla model loader or IModelGeometry#bake for custom model loaders. Unlike IUnbakedModel or IModelGeometry , which purely represents a shape without any concept of items or blocks, IBakedModel is not as abstract. It represents geometry that has been optimized and reduced to a form where it is (almost) ready to go to the GPU. It can also process the state of an item or block to change the model. In a majority of cases, it is not really necessary to implement this interface manually. One can instead use one of the existing implementations. getOverrides Returns the ItemOverrideList to use for this model. This is only used if this model is being rendered as an item. useAmbientOcclusion If the model is rendered as a block in the world, the block in question does not emit any light, and ambient occlusion is enabled. This causes the model to be rendered with ambient occlusion . isGui3d If the model is rendered as an item in an inventory, on the ground as an entity, on an item frame, etc., this makes the model look \u201cflat.\u201d In GUIs, this also disables the lighting. isCustomRenderer Important Unless you know what you\u2019re doing, just return false from this and continue on. When rendering this as an item, returning true causes the model to not be rendered, instead falling back to ItemStackTileEntityRenderer#renderByItem . For certain vanilla items such as chests and banners, this method is hardcoded to copy data from the item into a TileEntity , before using a TileEntitySpecialRenderer to render that TE in place of the item. For all other items, it will use the ItemStackTileEntityRenderer instance provided by Item$Properties#setISTER . Refer to ItemStackTileEntityRenderer page for more information. getParticleIcon Whatever texture should be used for the particles. For blocks, this shows when an entity falls on it, when it breaks, etc. For items, this shows when it breaks or when it\u2019s eaten. Important The vanilla method with no parameters has been deprecated in favor of #getParticleTexture(IModelData) since model data can have an effect on how a particular model might be rendered. getTransforms Deprecated in favor of implementing #handlePerspective . The default implementation is fine if #handlePerspective is implemented. See Perspective . handlePerspective See Perspective . getQuads This is the main method of IBakedModel . It returns a list of BakedQuad s: objects which contain the low-level vertex data that will be used to render the model. If the model is being rendered as a block, then the BlockState passed in is non-null. If the model is being rendered as an item, the ItemOverrideList returned from #getOverrides is responsible for handling the state of the item, and the BlockState parameter will be null . The Direction passed in is used for face culling. If the block against the given side of another block being rendered is opaque, then the faces associated with that side are not rendered. If that parameter is null , all faces not associated with a side are returned (that will never be culled). The rand parameter is an instance of Random. It also takes in a non null IModelData instance. This can be used to define extra data when rendering the specific model via ModelProperty s. For example, one such property is CompositeModelData , which is used to store any additional submodel data for a model using the forge:composite model loader. Note that this method is called very often: once for every combination of non-culled face and supported block render layer (anywhere between 0 to 28 times) per block in a world . This method should be as fast as possible, and should probably cache heavily.","title":"IBakedModel"},{"location":"models/advanced/ibakedmodel/#ibakedmodel","text":"IBakedModel is the result of calling IUnbakedModel#bake for the vanilla model loader or IModelGeometry#bake for custom model loaders. Unlike IUnbakedModel or IModelGeometry , which purely represents a shape without any concept of items or blocks, IBakedModel is not as abstract. It represents geometry that has been optimized and reduced to a form where it is (almost) ready to go to the GPU. It can also process the state of an item or block to change the model. In a majority of cases, it is not really necessary to implement this interface manually. One can instead use one of the existing implementations.","title":"IBakedModel"},{"location":"models/advanced/ibakedmodel/#getoverrides","text":"Returns the ItemOverrideList to use for this model. This is only used if this model is being rendered as an item.","title":"getOverrides"},{"location":"models/advanced/ibakedmodel/#useambientocclusion","text":"If the model is rendered as a block in the world, the block in question does not emit any light, and ambient occlusion is enabled. This causes the model to be rendered with ambient occlusion .","title":"useAmbientOcclusion"},{"location":"models/advanced/ibakedmodel/#isgui3d","text":"If the model is rendered as an item in an inventory, on the ground as an entity, on an item frame, etc., this makes the model look \u201cflat.\u201d In GUIs, this also disables the lighting.","title":"isGui3d"},{"location":"models/advanced/ibakedmodel/#iscustomrenderer","text":"Important Unless you know what you\u2019re doing, just return false from this and continue on. When rendering this as an item, returning true causes the model to not be rendered, instead falling back to ItemStackTileEntityRenderer#renderByItem . For certain vanilla items such as chests and banners, this method is hardcoded to copy data from the item into a TileEntity , before using a TileEntitySpecialRenderer to render that TE in place of the item. For all other items, it will use the ItemStackTileEntityRenderer instance provided by Item$Properties#setISTER . Refer to ItemStackTileEntityRenderer page for more information.","title":"isCustomRenderer"},{"location":"models/advanced/ibakedmodel/#getparticleicon","text":"Whatever texture should be used for the particles. For blocks, this shows when an entity falls on it, when it breaks, etc. For items, this shows when it breaks or when it\u2019s eaten. Important The vanilla method with no parameters has been deprecated in favor of #getParticleTexture(IModelData) since model data can have an effect on how a particular model might be rendered.","title":"getParticleIcon"},{"location":"models/advanced/ibakedmodel/#gettransforms","text":"Deprecated in favor of implementing #handlePerspective . The default implementation is fine if #handlePerspective is implemented. See Perspective .","title":"getTransforms"},{"location":"models/advanced/ibakedmodel/#handleperspective","text":"See Perspective .","title":"handlePerspective"},{"location":"models/advanced/ibakedmodel/#getquads","text":"This is the main method of IBakedModel . It returns a list of BakedQuad s: objects which contain the low-level vertex data that will be used to render the model. If the model is being rendered as a block, then the BlockState passed in is non-null. If the model is being rendered as an item, the ItemOverrideList returned from #getOverrides is responsible for handling the state of the item, and the BlockState parameter will be null . The Direction passed in is used for face culling. If the block against the given side of another block being rendered is opaque, then the faces associated with that side are not rendered. If that parameter is null , all faces not associated with a side are returned (that will never be culled). The rand parameter is an instance of Random. It also takes in a non null IModelData instance. This can be used to define extra data when rendering the specific model via ModelProperty s. For example, one such property is CompositeModelData , which is used to store any additional submodel data for a model using the forge:composite model loader. Note that this method is called very often: once for every combination of non-culled face and supported block render layer (anywhere between 0 to 28 times) per block in a world . This method should be as fast as possible, and should probably cache heavily.","title":"getQuads"},{"location":"models/advanced/itemoverridelist/","text":"ItemOverrideList ItemOverrideList provides a way for an IBakedModel to process the state of an ItemStack and return a new IBakedModel ; thereafter, the returned model replaces the old one. ItemOverrideList represents an arbitrary function (IBakedModel, ItemStack, ClientWorld, LivingEntity) \u2192 IBakedModel , making it useful for dynamic models. In vanilla, it is used to implement item property overrides. ItemOverrideList() Given a list of ItemOverride s, the constructor copies that list and stores the copy. The list may be accessed with #getOverrides . resolve This takes an IBakedModel , an ItemStack , a ClientWorld , and an LivingEntity to produce another IBakedModel to use for rendering. This is where models can handle the state of their items. This should not mutate the world. getOverrides Returns an immutable list containing all the ItemOverride s used by this ItemOverrideList . If none are applicable, this returns the empty list. ItemOverride This class represents a vanilla item override, which holds several predicates for the properties on an item and a model to use in case those predicates are satisfied. They are the objects in the overrides array of a vanilla item JSON model: { \"__comment\": \"Inside a vanilla JSON item model.\", \"overrides\": [ { \"__comment\": \"This is an ItemOverride.\", \"predicate\": { \"__comment\": \"This is the Map<ResourceLocation, Float>, containing the names of properties and their minimum values.\", \"example1:prop\": 4 }, \"__comment\": \"This is the 'location', or target model, of the override, which is used if the predicate above matches.\", \"model\": \"example1:item/model\" }, { \"__comment\": \"This is another ItemOverride.\", \"predicate\": { \"prop\": 1 }, \"model\": \"example2:item/model\" } ] }","title":"ItemOverrideList"},{"location":"models/advanced/itemoverridelist/#itemoverridelist","text":"ItemOverrideList provides a way for an IBakedModel to process the state of an ItemStack and return a new IBakedModel ; thereafter, the returned model replaces the old one. ItemOverrideList represents an arbitrary function (IBakedModel, ItemStack, ClientWorld, LivingEntity) \u2192 IBakedModel , making it useful for dynamic models. In vanilla, it is used to implement item property overrides.","title":"ItemOverrideList"},{"location":"models/advanced/itemoverridelist/#itemoverridelist_1","text":"Given a list of ItemOverride s, the constructor copies that list and stores the copy. The list may be accessed with #getOverrides .","title":"ItemOverrideList()"},{"location":"models/advanced/itemoverridelist/#resolve","text":"This takes an IBakedModel , an ItemStack , a ClientWorld , and an LivingEntity to produce another IBakedModel to use for rendering. This is where models can handle the state of their items. This should not mutate the world.","title":"resolve"},{"location":"models/advanced/itemoverridelist/#getoverrides","text":"Returns an immutable list containing all the ItemOverride s used by this ItemOverrideList . If none are applicable, this returns the empty list.","title":"getOverrides"},{"location":"models/advanced/itemoverridelist/#itemoverride","text":"This class represents a vanilla item override, which holds several predicates for the properties on an item and a model to use in case those predicates are satisfied. They are the objects in the overrides array of a vanilla item JSON model: { \"__comment\": \"Inside a vanilla JSON item model.\", \"overrides\": [ { \"__comment\": \"This is an ItemOverride.\", \"predicate\": { \"__comment\": \"This is the Map<ResourceLocation, Float>, containing the names of properties and their minimum values.\", \"example1:prop\": 4 }, \"__comment\": \"This is the 'location', or target model, of the override, which is used if the predicate above matches.\", \"model\": \"example1:item/model\" }, { \"__comment\": \"This is another ItemOverride.\", \"predicate\": { \"prop\": 1 }, \"model\": \"example2:item/model\" } ] }","title":"ItemOverride"},{"location":"models/advanced/perspective/","text":"Perspective When an IBakedModel is being rendered as an item, it can apply special handling depending on which perspective it is being rendered in. \u201cPerspective\u201d means in what context the model is being rendered. The possible perspectives are represented in code by the ItemCameraTransforms$TransformType enum. There are two systems for handling perspective: the deprecated vanilla system, constituted by IBakedModel#getTransforms , ItemCameraTransforms , and ItemTransformVec3f , and the Forge system, embodied by the method IForgeBakedModel#handlePerspective . The vanilla code is patched to favor using handlePerspective over the vanilla system whenever possible. TransformType NONE - Unused. THIRD_PERSON_LEFT_HAND / THIRD_PERSON_RIGHT_HAND / FIRST_PERSON_LEFT_HAND / FIRST_PERSON_RIGHT_HAND - The first person values represent when the player is holding the item in their own hand. The third person values represent when another player is holding the item and the client is looking at them in the 3rd person. Hands are self-explanatory. HEAD - Represents when any player is wearing the item in the helmet slot (e.g. pumpkins). GUI - Represents when the item is being rendered in a GUI. GROUND - Represents when the item is being rendered in the world as an EntityItem . FIXED - Used for item frames. The Vanilla Way The vanilla way of handling perspective is through IBakedModel#getTransforms . This method returns an ItemCameraTransforms , which is a simple object that contains various ItemTransformVec3f s as public final fields. An ItemTransformVec3f represents a rotation, a translation, and a scale to be applied to the model. The ItemCameraTransforms is a container for these, holding one for each of the TransformType s except NONE . In the vanilla implementation, calling #getTransform for NONE results in the default transform, ItemTransformVec3f#NO_TRANSFORM . The entire vanilla system for handling transforms is deprecated by Forge, and most implementations of IBakedModel should simply return ItemCameraTransforms#NO_TRANSFORMS (which is the default implementation) from IBakedModel#getTransforms . Instead, they should implement #handlePerspective . The Forge Way The Forge way of handling transforms is #handlePerspective , a method patched into IBakedModel . It supersedes the ##getTransforms method. Additionally, the class PerspectiveMapWrapper is a simple implementation of an IBakedModel with the method; it is a wrapper around other IBakedModel s, augmenting them with a Map<TransformType, TransformationMatrix> to handle perspective. IBakedModel#handlePerspective Given a TransformType and MatrixStack , this method produces an IBakedModel to be rendered. Because the returned IBakedModel can be a totally new model, this method is more flexible than the vanilla method (e.g. a piece of paper that looks flat in hand but crumpled on the ground). PerspectiveMapWrapper A wrapper around other IBakedModel s, this class delegates to the wrapped model for all IBakedModel methods except #handlePerspective , and utilizes a simple Map<TransformType, TransformationMatrix> for #handlePerspective . However, the more interesting parts of this class are the static helper methods. getTransforms and getTransformsWithFallback Given an ItemCameraTransforms or an IModelTransform , this method will extract an ImmutableMap<TransformType, TransformationMatrix> from it. To extract this information from an IModelTransform , each TransformType is passed to #getPartTransformation . This is how models should support custom perspective transforms through IModelTransform . IUnbakedModel s should pass the IModelTransform in #bake . Then the IBakedModel can use these custom transforms in #handlePerspective , composing them on top of its own. handlePerspective Given either a map of transforms or an IModelTransform , an IBakedModel , a TransformType , and a MatrixStack , this finds the IBakedModel for the transform from the map or the IModelTransform , and then pairs it with the given model. To extract the transform from an IModelTransform , the TransformType is passed to #getPartTransformation . This method is meant to be a simple implementation of IBakedModel#handlePerspective .","title":"Perspective"},{"location":"models/advanced/perspective/#perspective","text":"When an IBakedModel is being rendered as an item, it can apply special handling depending on which perspective it is being rendered in. \u201cPerspective\u201d means in what context the model is being rendered. The possible perspectives are represented in code by the ItemCameraTransforms$TransformType enum. There are two systems for handling perspective: the deprecated vanilla system, constituted by IBakedModel#getTransforms , ItemCameraTransforms , and ItemTransformVec3f , and the Forge system, embodied by the method IForgeBakedModel#handlePerspective . The vanilla code is patched to favor using handlePerspective over the vanilla system whenever possible.","title":"Perspective"},{"location":"models/advanced/perspective/#transformtype","text":"NONE - Unused. THIRD_PERSON_LEFT_HAND / THIRD_PERSON_RIGHT_HAND / FIRST_PERSON_LEFT_HAND / FIRST_PERSON_RIGHT_HAND - The first person values represent when the player is holding the item in their own hand. The third person values represent when another player is holding the item and the client is looking at them in the 3rd person. Hands are self-explanatory. HEAD - Represents when any player is wearing the item in the helmet slot (e.g. pumpkins). GUI - Represents when the item is being rendered in a GUI. GROUND - Represents when the item is being rendered in the world as an EntityItem . FIXED - Used for item frames.","title":"TransformType"},{"location":"models/advanced/perspective/#the-vanilla-way","text":"The vanilla way of handling perspective is through IBakedModel#getTransforms . This method returns an ItemCameraTransforms , which is a simple object that contains various ItemTransformVec3f s as public final fields. An ItemTransformVec3f represents a rotation, a translation, and a scale to be applied to the model. The ItemCameraTransforms is a container for these, holding one for each of the TransformType s except NONE . In the vanilla implementation, calling #getTransform for NONE results in the default transform, ItemTransformVec3f#NO_TRANSFORM . The entire vanilla system for handling transforms is deprecated by Forge, and most implementations of IBakedModel should simply return ItemCameraTransforms#NO_TRANSFORMS (which is the default implementation) from IBakedModel#getTransforms . Instead, they should implement #handlePerspective .","title":"The Vanilla Way"},{"location":"models/advanced/perspective/#the-forge-way","text":"The Forge way of handling transforms is #handlePerspective , a method patched into IBakedModel . It supersedes the ##getTransforms method. Additionally, the class PerspectiveMapWrapper is a simple implementation of an IBakedModel with the method; it is a wrapper around other IBakedModel s, augmenting them with a Map<TransformType, TransformationMatrix> to handle perspective.","title":"The Forge Way"},{"location":"models/advanced/perspective/#ibakedmodelhandleperspective","text":"Given a TransformType and MatrixStack , this method produces an IBakedModel to be rendered. Because the returned IBakedModel can be a totally new model, this method is more flexible than the vanilla method (e.g. a piece of paper that looks flat in hand but crumpled on the ground).","title":"IBakedModel#handlePerspective"},{"location":"models/advanced/perspective/#perspectivemapwrapper","text":"A wrapper around other IBakedModel s, this class delegates to the wrapped model for all IBakedModel methods except #handlePerspective , and utilizes a simple Map<TransformType, TransformationMatrix> for #handlePerspective . However, the more interesting parts of this class are the static helper methods.","title":"PerspectiveMapWrapper"},{"location":"models/advanced/perspective/#gettransforms-and-gettransformswithfallback","text":"Given an ItemCameraTransforms or an IModelTransform , this method will extract an ImmutableMap<TransformType, TransformationMatrix> from it. To extract this information from an IModelTransform , each TransformType is passed to #getPartTransformation . This is how models should support custom perspective transforms through IModelTransform . IUnbakedModel s should pass the IModelTransform in #bake . Then the IBakedModel can use these custom transforms in #handlePerspective , composing them on top of its own.","title":"getTransforms and getTransformsWithFallback"},{"location":"models/advanced/perspective/#handleperspective","text":"Given either a map of transforms or an IModelTransform , an IBakedModel , a TransformType , and a MatrixStack , this finds the IBakedModel for the transform from the map or the IModelTransform , and then pairs it with the given model. To extract the transform from an IModelTransform , the TransformType is passed to #getPartTransformation . This method is meant to be a simple implementation of IBakedModel#handlePerspective .","title":"handlePerspective"},{"location":"models/blockstates/introduction/","text":"Introduction to Blockstate JSONs Blockstate JSONs are Minecraft\u2019s way to map \u201cvariant strings\u201d to models. A variant string can be absolutely anything, from \u201cinventory\u201d to \u201cpower=5\u201d to \u201cI am your father.\u201d They represent an actual model, where the blockstate is just a container for them. In code, a variant string within a blockstate JSON is represented by a ModelResourceLocation . When the game searches for a model corresponding to a block in the world, it takes the blockstate for that position, and then it uses a map within ModelManager to find the corresponding ModelResourceLocation for it, which then refers to the actual model. BlockModelShapes uses the block\u2019s registry name as the location of the blockstate JSON. (E.g. block examplemod:testblock goes to the ResourceLocation examplemod:testblock .) The variant string is pieced together from the blockstate\u2019s properties. As an example, let\u2019s take a look at the vanilla oak_log.json : { \"variants\": { \"axis=y\": { \"model\": \"block/oak_log\" }, \"axis=z\": { \"model\": \"block/oak_log\", \"x\": 90 }, \"axis=x\": { \"model\": \"block/oak_log\", \"x\": 90, \"y\": 90 } } } Here we define 3 variant strings, and for each we use a certain model, either the upright log and the sideways log (rotated in the y direction or not). These variants will define the look of a log depending on the property axis . A variant should be defined for every property that invokes a change in the model displayed. Any property not specified in the JSON will not have any bearing to determine the current model (e.g. waterlogged has no effect on how a model might look). Each blockstate can be specified using one of two methods: variants and multiparts. A variant defines an associated array of states which point to the associated model to render. Note that every single property that changes the model must be defined (e.g. If 4 properties defines how the model looks, then 2 ^ 4 = 16 variants must be defined). Multiparts, on the other hand, use conditions to display a certain model when true (e.g. If a model is only shown when north was true, then when that case occurs, the model will display along with any other models whose conditions are met). For a better understanding of multiparts, let\u2019s look at a variant built fence connection: \"east=true,north=false,south=false,west=false\": { \"model\": \"oak_fence_n\", \"y\": 90, \"uvlock\": true } This represents one variant out of 16 possible states. Even worse, there must be models that can uniquely define unique states (a state that can be rotated to become another state is not unique for this purpose). For fences, there are 6 models: one for no connections, one connection, two connections in a straight line, two perpendicular connections, three connections, and one for all four connections. Now let\u2019s view a modern day multipart built fence connection: { \"when\": { \"east\": \"true\" }, \"apply\": { \"model\": \"oak_fence_side\", \"y\": 90, \"uvlock\": true } } In this case, the JSON defines that if the east connector is true, then show the model oak_fence_side rotated 90 degrees. This allows the model to be broken up in only two files: the base post and the connection. It can also be represented as 5 statements, one that checks for each of the states is true and one that applies the base post unconditionally. You can find more explanations and examples of these formats on the wiki .","title":"BlockState JSON \uc18c\uac1c"},{"location":"models/blockstates/introduction/#introduction-to-blockstate-jsons","text":"Blockstate JSONs are Minecraft\u2019s way to map \u201cvariant strings\u201d to models. A variant string can be absolutely anything, from \u201cinventory\u201d to \u201cpower=5\u201d to \u201cI am your father.\u201d They represent an actual model, where the blockstate is just a container for them. In code, a variant string within a blockstate JSON is represented by a ModelResourceLocation . When the game searches for a model corresponding to a block in the world, it takes the blockstate for that position, and then it uses a map within ModelManager to find the corresponding ModelResourceLocation for it, which then refers to the actual model. BlockModelShapes uses the block\u2019s registry name as the location of the blockstate JSON. (E.g. block examplemod:testblock goes to the ResourceLocation examplemod:testblock .) The variant string is pieced together from the blockstate\u2019s properties. As an example, let\u2019s take a look at the vanilla oak_log.json : { \"variants\": { \"axis=y\": { \"model\": \"block/oak_log\" }, \"axis=z\": { \"model\": \"block/oak_log\", \"x\": 90 }, \"axis=x\": { \"model\": \"block/oak_log\", \"x\": 90, \"y\": 90 } } } Here we define 3 variant strings, and for each we use a certain model, either the upright log and the sideways log (rotated in the y direction or not). These variants will define the look of a log depending on the property axis . A variant should be defined for every property that invokes a change in the model displayed. Any property not specified in the JSON will not have any bearing to determine the current model (e.g. waterlogged has no effect on how a model might look). Each blockstate can be specified using one of two methods: variants and multiparts. A variant defines an associated array of states which point to the associated model to render. Note that every single property that changes the model must be defined (e.g. If 4 properties defines how the model looks, then 2 ^ 4 = 16 variants must be defined). Multiparts, on the other hand, use conditions to display a certain model when true (e.g. If a model is only shown when north was true, then when that case occurs, the model will display along with any other models whose conditions are met). For a better understanding of multiparts, let\u2019s look at a variant built fence connection: \"east=true,north=false,south=false,west=false\": { \"model\": \"oak_fence_n\", \"y\": 90, \"uvlock\": true } This represents one variant out of 16 possible states. Even worse, there must be models that can uniquely define unique states (a state that can be rotated to become another state is not unique for this purpose). For fences, there are 6 models: one for no connections, one connection, two connections in a straight line, two perpendicular connections, three connections, and one for all four connections. Now let\u2019s view a modern day multipart built fence connection: { \"when\": { \"east\": \"true\" }, \"apply\": { \"model\": \"oak_fence_side\", \"y\": 90, \"uvlock\": true } } In this case, the JSON defines that if the east connector is true, then show the model oak_fence_side rotated 90 degrees. This allows the model to be broken up in only two files: the base post and the connection. It can also be represented as 5 statements, one that checks for each of the states is true and one that applies the base post unconditionally. You can find more explanations and examples of these formats on the wiki .","title":"Introduction to Blockstate JSONs"},{"location":"networking/","text":"\ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0 \uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\uac04\uc758 \uc18c\ud1b5\uc740 \uc131\uacf5\uc801\uc778 \ubaa8\ub4dc\ub97c \ub9cc\ub4e4\uae30 \uc704\ud574 \ud544\uc218\uc801\uc73c\ub85c \ub4e4\uc5b4\uac00\ub294 \uc694\uc18c\uc911 \ud558\ub098\uc785\ub2c8\ub2e4. \uc65c \ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0\uc774 \uc911\uc694\ud55c\uc9c0\uc640 \uc774\ub97c \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uac1c\uc694\uc11c \ub97c \uba3c\uc800 \uc77d\ub294 \uac83\uc744 \ucd94\ucc9c\ub4dc\ub9bd\ub2c8\ub2e4. Forge \uc5d0\uc11c\ub294 netty \ub97c \uae30\ubc18\uc73c\ub85c \ub9cc\ub4e0 \ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0\uc744 \uc870\uae08 \ub354 \uac04\ud3b8\ud558\uac8c \uc4f8 \uc218 \uc788\ub294 \uc5ec\ub7ec\uac00\uc9c0 \ubc29\ubc95\ub4e4\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uadf8\uc911 \uc2e0\uc0dd \ubaa8\ub4dc\ub97c \uc704\ud55c \uac00\uc7a5 \uac04\ub2e8\ud55c \ubc29\ubc95\uc740 SimpleImpl \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4, netty \uc758 \ubcf5\uc7a1\ud55c \uc2dc\uc2a4\ud15c\uc744 \ucd94\uc0c1\ud654 \ud558\uace0 \uba54\uc138\uc9c0\uc640 \ud578\ub4e4\ub7ec\ub9cc \uc0ac\uc6a9\ud558\uc5ec \ud1b5\uc2e0\uc744 \uad6c\ud604\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4.","title":"\ub124\ud2b8\uc6cc\ud0b9"},{"location":"networking/#_1","text":"\uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\uac04\uc758 \uc18c\ud1b5\uc740 \uc131\uacf5\uc801\uc778 \ubaa8\ub4dc\ub97c \ub9cc\ub4e4\uae30 \uc704\ud574 \ud544\uc218\uc801\uc73c\ub85c \ub4e4\uc5b4\uac00\ub294 \uc694\uc18c\uc911 \ud558\ub098\uc785\ub2c8\ub2e4. \uc65c \ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0\uc774 \uc911\uc694\ud55c\uc9c0\uc640 \uc774\ub97c \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uac1c\uc694\uc11c \ub97c \uba3c\uc800 \uc77d\ub294 \uac83\uc744 \ucd94\ucc9c\ub4dc\ub9bd\ub2c8\ub2e4. Forge \uc5d0\uc11c\ub294 netty \ub97c \uae30\ubc18\uc73c\ub85c \ub9cc\ub4e0 \ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0\uc744 \uc870\uae08 \ub354 \uac04\ud3b8\ud558\uac8c \uc4f8 \uc218 \uc788\ub294 \uc5ec\ub7ec\uac00\uc9c0 \ubc29\ubc95\ub4e4\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uadf8\uc911 \uc2e0\uc0dd \ubaa8\ub4dc\ub97c \uc704\ud55c \uac00\uc7a5 \uac04\ub2e8\ud55c \ubc29\ubc95\uc740 SimpleImpl \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4, netty \uc758 \ubcf5\uc7a1\ud55c \uc2dc\uc2a4\ud15c\uc744 \ucd94\uc0c1\ud654 \ud558\uace0 \uba54\uc138\uc9c0\uc640 \ud578\ub4e4\ub7ec\ub9cc \uc0ac\uc6a9\ud558\uc5ec \ud1b5\uc2e0\uc744 \uad6c\ud604\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4.","title":"\ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0"},{"location":"networking/entities/","text":"\uc5d4\ud2f0\ud2f0 \ud1b5\uc2e0 \ub124\ud2b8\uc6cc\ud06c \uba54\uc138\uc9c0\ub85c \ud1b5\uc2e0\ud558\ub294 \uac83 \ub9d0\uace0\ub3c4 \uc5d4\ud2f0\ud2f0\uc758 \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654\uc2dc\ucf1c\uc8fc\ub294 \uc2dc\uc2a4\ud15c\uc740 \ub2e4\uc591\ud569\ub2c8\ub2e4. \uc2a4\ud3f0 \ub370\uc774\ud130 \uc77c\ubc18\uc801\uc73c\ub85c \ubaa8\ub4dc\uc5d0\uc11c \ucd94\uac00\ud558\ub294 \uc5d4\ud2f0\ud2f0\uc758 \uc2a4\ud3f0\uc740 \ud3ec\uc9c0\uc5d0\uc11c \ub530\ub85c \ucc98\ub9ac\ud569\ub2c8\ub2e4. Note \ub2e4\uc2dc \ub9d0\ud574\uc11c \ubc14\ub2d0\ub77c \uc5d4\ud2f0\ud2f0 \ud074\ub798\uc2a4\ub97c \uadf8\uc800 \uc0c1\uc18d\ud558\ub294 \uac83\ub9cc\uc73c\ub860 \uadf8 \ud074\ub798\uc2a4\uc758 \ubaa8\ub4e0 \ub3d9\uc791\uc744 \uc0c1\uc18d\ubc1b\uc9c0 \ubabb\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba87\uba87 \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \ub3d9\uc791\ub4e4\uc740 \uc9c1\uc811 \uad6c\ud604\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \ud3ec\uc9c0\uac00 \ubcf4\ub0b4\ub294 \uc5d4\ud2f0\ud2f0 \uc2a4\ud3f0 \ud328\ud0b7\uc5d0 \ub2e4\uc74c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucd94\uac00\uc801\uc778 \ub370\uc774\ud130\ub97c \uc2e4\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IEntityAdditionalSpawnData \ub9cc\uc57d \uc5d4\ud2f0\ud2f0\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc81c\ub300\ub85c \ud45c\uc2dc\ub418\uae30 \uc704\ud574 \ud544\uc694\ud55c \ub370\uc774\ud130\uac00 \uc788\uc9c0\ub9cc, \uc2dc\uac04\uc774 \uc9c0\ub098\ub3c4 \uadf8 \ub370\uc774\ud130\uac00 \ubcc0\uacbd\ub418\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2a4\ud3f0 \ud328\ud0b7\uc5d0 \ubcf4\ub0b4\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. #writeSpawnData \uc640 #readSpawnData \ub294 \ub370\uc774\ud130\uac00 \uc5b4\ub5bb\uac8c \ub124\ud2b8\uc6cc\ud06c \ubc84\ud37c\uc5d0 \uc77d\ud788\uace0 \uc4f0\uc774\ub294\uc9c0\ub97c \ud1b5\uc81c\ud569\ub2c8\ub2e4. \ub3d9\uc801\uc778 \ub370\uc774\ud130 \ub370\uc774\ud130 \ud30c\ub77c\ubbf8\ud130 \uc774\ub294 \ubc14\ub2d0\ub77c\uc5d0\uc11c \uc5d4\ud2f0\ud2f0\uc758 \ub370\uc774\ud130\ub97c \uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\ub07c\ub9ac \ub3d9\uae30\ud654 \uc2dc\ud0ac\ub54c \uc8fc\ub85c \uc0ac\uc6a9\ud558\ub294 \uc2dc\uc2a4\ud15c\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub2e4\ubcf4\ub2c8 \ubc14\ub2d0\ub77c\uc5d0\ub294 \uc774\ub97c \ucc38\uace0\ud560 \ub9cc\ud55c \uac83\ub4e4\uc774 \ub9ce\uc2b5\ub2c8\ub2e4. \uc77c\ub2e8, \uc6d0\ud558\ub294 \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654 \uc2dc\ud0ac DataParameter<T> \uac1d\uccb4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \uc774 \uac1d\uccb4\ub294 \uc5d4\ud2f0\ud2f0\uc758 static final \ud544\ub4dc\uc5d0 \ud560\ub2f9\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774 \uac1d\uccb4\uc758 \ucc38\uc870\ub294 EntityDataManager#defineId \uc5d0 \uc5d4\ud2f0\ud2f0\uc758 \ud074\ub798\uc2a4\uc640 \ub370\uc774\ud130\ub97c \uc9c1\ub82c\ud654\ud560 serializer \ub97c \uc804\ub2ec\ud558\ub294 \uac83\uc73c\ub85c \uc5bb\uc73c\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c serializer \ub294 DataSerializers \ud074\ub798\uc2a4\uc5d0\uc11c \ucc3e\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Warning \ub370\uc774\ud130 \ud30c\ub77c\ubbf8\ud130\ub294 \ubb34\uc870\uac74 \ub2f9\uc2e0\uc774 \uc9c1\uc811 \ub9cc\ub4dc\uc2dc\ub294 \uc5d4\ud2f0\ud2f0\uc5d0\ub9cc, \uadf8 \uc5d4\ud2f0\ud2f0 \ud074\ub798\uc2a4 \uc548\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \ub2f9\uc2e0\uc774 \ub9cc\ub4dc\ub294 \uc5d4\ud2f0\ud2f0 \uc774\uc678\uc758 \uc5d4\ud2f0\ud2f0\uc5d0 \ud30c\ub77c\ubbf8\ud130\ub97c \ucd94\uac00\ud558\uc2dc\uba74 \uadf8 \ub370\uc774\ud130\ub97c \ubcf4\ub0bc\ub54c \uc0ac\uc6a9\ud558\ub294 ID\uc758 \ub3d9\uae30\ud654\ub97c \uae68\ubc84\ub9b4 \uc218 \uc788\uc73c\uba70 \ub514\ubc84\uadf8\ud558\uae30 \ud798\ub4e0 \ud295\uae30\ub294 \uc624\ub958\ub4e4\uc744 \uc720\ubc1c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \ub2e4\uc74c Entity#defineSynchedData \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uace0 \uadf8 \uba54\uc11c\ub4dc \uc548\uc5d0\uc11c this.entityData.define(...) \ub97c \uac01\uac01\uc758 \ub370\uc774\ud130 \ud30c\ub77c\ubbf8\ud130\uc640 \uae30\ubcf8\uac12\uc744 \uc804\ub2ec\ud558\uc5ec \ud638\ucd9c\ud558\uc138\uc694. \ub298 super \uba54\uc11c\ub4dc\ub97c \uba3c\uc800 \ud638\ucd9c\ud558\uc2dc\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694! \uadf8\ub2e4\uc74c\uc5d0\ub294 \uc5d4\ud2f0\ud2f0\uc758 entityData \uc778\uc2a4\ud134\uc2a4\ub97c \ud1b5\ud574 \ub370\uc774\ud130 \ud30c\ub77c\ubbf8\ud130\uc758 \uac12\uc744 \ubcc0\uacbd\ud558\uace0 \uc77d\uc73c\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub294 \ubcc0\uacbd\uc0ac\ud56d\uc774 \uc790\ub3d9\uc73c\ub85c \ubcf4\ub0b4\uc9d1\ub2c8\ub2e4.","title":"\uc5d4\ud2f0\ud2f0 \ub124\ud2b8\uc6cc\ud0b9"},{"location":"networking/entities/#_1","text":"\ub124\ud2b8\uc6cc\ud06c \uba54\uc138\uc9c0\ub85c \ud1b5\uc2e0\ud558\ub294 \uac83 \ub9d0\uace0\ub3c4 \uc5d4\ud2f0\ud2f0\uc758 \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654\uc2dc\ucf1c\uc8fc\ub294 \uc2dc\uc2a4\ud15c\uc740 \ub2e4\uc591\ud569\ub2c8\ub2e4.","title":"\uc5d4\ud2f0\ud2f0 \ud1b5\uc2e0"},{"location":"networking/entities/#_2","text":"\uc77c\ubc18\uc801\uc73c\ub85c \ubaa8\ub4dc\uc5d0\uc11c \ucd94\uac00\ud558\ub294 \uc5d4\ud2f0\ud2f0\uc758 \uc2a4\ud3f0\uc740 \ud3ec\uc9c0\uc5d0\uc11c \ub530\ub85c \ucc98\ub9ac\ud569\ub2c8\ub2e4. Note \ub2e4\uc2dc \ub9d0\ud574\uc11c \ubc14\ub2d0\ub77c \uc5d4\ud2f0\ud2f0 \ud074\ub798\uc2a4\ub97c \uadf8\uc800 \uc0c1\uc18d\ud558\ub294 \uac83\ub9cc\uc73c\ub860 \uadf8 \ud074\ub798\uc2a4\uc758 \ubaa8\ub4e0 \ub3d9\uc791\uc744 \uc0c1\uc18d\ubc1b\uc9c0 \ubabb\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba87\uba87 \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \ub3d9\uc791\ub4e4\uc740 \uc9c1\uc811 \uad6c\ud604\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \ud3ec\uc9c0\uac00 \ubcf4\ub0b4\ub294 \uc5d4\ud2f0\ud2f0 \uc2a4\ud3f0 \ud328\ud0b7\uc5d0 \ub2e4\uc74c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucd94\uac00\uc801\uc778 \ub370\uc774\ud130\ub97c \uc2e4\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc2a4\ud3f0 \ub370\uc774\ud130"},{"location":"networking/entities/#ientityadditionalspawndata","text":"\ub9cc\uc57d \uc5d4\ud2f0\ud2f0\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc81c\ub300\ub85c \ud45c\uc2dc\ub418\uae30 \uc704\ud574 \ud544\uc694\ud55c \ub370\uc774\ud130\uac00 \uc788\uc9c0\ub9cc, \uc2dc\uac04\uc774 \uc9c0\ub098\ub3c4 \uadf8 \ub370\uc774\ud130\uac00 \ubcc0\uacbd\ub418\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2a4\ud3f0 \ud328\ud0b7\uc5d0 \ubcf4\ub0b4\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. #writeSpawnData \uc640 #readSpawnData \ub294 \ub370\uc774\ud130\uac00 \uc5b4\ub5bb\uac8c \ub124\ud2b8\uc6cc\ud06c \ubc84\ud37c\uc5d0 \uc77d\ud788\uace0 \uc4f0\uc774\ub294\uc9c0\ub97c \ud1b5\uc81c\ud569\ub2c8\ub2e4.","title":"IEntityAdditionalSpawnData"},{"location":"networking/entities/#_3","text":"","title":"\ub3d9\uc801\uc778 \ub370\uc774\ud130"},{"location":"networking/entities/#_4","text":"\uc774\ub294 \ubc14\ub2d0\ub77c\uc5d0\uc11c \uc5d4\ud2f0\ud2f0\uc758 \ub370\uc774\ud130\ub97c \uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\ub07c\ub9ac \ub3d9\uae30\ud654 \uc2dc\ud0ac\ub54c \uc8fc\ub85c \uc0ac\uc6a9\ud558\ub294 \uc2dc\uc2a4\ud15c\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub2e4\ubcf4\ub2c8 \ubc14\ub2d0\ub77c\uc5d0\ub294 \uc774\ub97c \ucc38\uace0\ud560 \ub9cc\ud55c \uac83\ub4e4\uc774 \ub9ce\uc2b5\ub2c8\ub2e4. \uc77c\ub2e8, \uc6d0\ud558\ub294 \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654 \uc2dc\ud0ac DataParameter<T> \uac1d\uccb4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \uc774 \uac1d\uccb4\ub294 \uc5d4\ud2f0\ud2f0\uc758 static final \ud544\ub4dc\uc5d0 \ud560\ub2f9\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774 \uac1d\uccb4\uc758 \ucc38\uc870\ub294 EntityDataManager#defineId \uc5d0 \uc5d4\ud2f0\ud2f0\uc758 \ud074\ub798\uc2a4\uc640 \ub370\uc774\ud130\ub97c \uc9c1\ub82c\ud654\ud560 serializer \ub97c \uc804\ub2ec\ud558\ub294 \uac83\uc73c\ub85c \uc5bb\uc73c\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c serializer \ub294 DataSerializers \ud074\ub798\uc2a4\uc5d0\uc11c \ucc3e\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Warning \ub370\uc774\ud130 \ud30c\ub77c\ubbf8\ud130\ub294 \ubb34\uc870\uac74 \ub2f9\uc2e0\uc774 \uc9c1\uc811 \ub9cc\ub4dc\uc2dc\ub294 \uc5d4\ud2f0\ud2f0\uc5d0\ub9cc, \uadf8 \uc5d4\ud2f0\ud2f0 \ud074\ub798\uc2a4 \uc548\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \ub2f9\uc2e0\uc774 \ub9cc\ub4dc\ub294 \uc5d4\ud2f0\ud2f0 \uc774\uc678\uc758 \uc5d4\ud2f0\ud2f0\uc5d0 \ud30c\ub77c\ubbf8\ud130\ub97c \ucd94\uac00\ud558\uc2dc\uba74 \uadf8 \ub370\uc774\ud130\ub97c \ubcf4\ub0bc\ub54c \uc0ac\uc6a9\ud558\ub294 ID\uc758 \ub3d9\uae30\ud654\ub97c \uae68\ubc84\ub9b4 \uc218 \uc788\uc73c\uba70 \ub514\ubc84\uadf8\ud558\uae30 \ud798\ub4e0 \ud295\uae30\ub294 \uc624\ub958\ub4e4\uc744 \uc720\ubc1c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \ub2e4\uc74c Entity#defineSynchedData \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uace0 \uadf8 \uba54\uc11c\ub4dc \uc548\uc5d0\uc11c this.entityData.define(...) \ub97c \uac01\uac01\uc758 \ub370\uc774\ud130 \ud30c\ub77c\ubbf8\ud130\uc640 \uae30\ubcf8\uac12\uc744 \uc804\ub2ec\ud558\uc5ec \ud638\ucd9c\ud558\uc138\uc694. \ub298 super \uba54\uc11c\ub4dc\ub97c \uba3c\uc800 \ud638\ucd9c\ud558\uc2dc\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694! \uadf8\ub2e4\uc74c\uc5d0\ub294 \uc5d4\ud2f0\ud2f0\uc758 entityData \uc778\uc2a4\ud134\uc2a4\ub97c \ud1b5\ud574 \ub370\uc774\ud130 \ud30c\ub77c\ubbf8\ud130\uc758 \uac12\uc744 \ubcc0\uacbd\ud558\uace0 \uc77d\uc73c\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub294 \ubcc0\uacbd\uc0ac\ud56d\uc774 \uc790\ub3d9\uc73c\ub85c \ubcf4\ub0b4\uc9d1\ub2c8\ub2e4.","title":"\ub370\uc774\ud130 \ud30c\ub77c\ubbf8\ud130"},{"location":"networking/overview/","text":"\ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0 \uac1c\uc694 \ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0\uc744 \ud558\ub294\ub370\uc5d0\ub294 \ub450 \uc8fc \ubaa9\uc801\uc774 \uc788\uc2b5\ub2c8\ub2e4: \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ud45c\uc2dc\ub418\ub294 \ub0b4\uc6a9\uc774 \uc11c\ubc84\uc640 \ub3d9\uc77c\ud558\ub3c4\ub85d \ud558\ub294 \uac83(\u201c\ub3d9\uae30\ud654\u201d\ub77c\uace0\ub3c4 \ud569\ub2c8\ub2e4.) (X, Y, Z) \uc5d0 \ubc29\uae08 \uc790\ub780 \uaf43\uc774 \ubc14\ub85c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ud45c\uc2dc\ub418\ub3c4\ub85d \ud558\ub294 \uac83 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc11c\ubc84\uc5d0\uac8c \ud50c\ub808\uc774\uc5b4\uc758 \uc0c1\ud0dc\uac00 \ubcc0\ud588\ub2e4\uace0 \uc54c\ub824\uc8fc\ub294 \uc218\ub2e8\uc774 \ub418\ub294 \uac83 \ud50c\ub808\uc774\uc5b4\uac00 \ud0a4\ub97c \ub20c\ub800\uc744 \ub54c \uc11c\ubc84\uc5d0 \uc54c\ub824\uc8fc\ub294 \uac83 \uc774\ub97c \uad6c\ud604\ud558\ub294 \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \ubc29\ubc95\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uc11c\ubc84\uac00 \uc11c\ub85c \uba54\uc138\uc9c0\ub97c \uc8fc\uace0 \ubc1b\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ub54c \uc8fc\uace0 \ubc1b\ub294 \uba54\uc138\uc9c0\ub294 \uc77c\ubc18\uc801\uc73c\ub860 \uad6c\uc870\ud654\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4, \uc5ec\ub7ec \ub370\uc774\ud130\ub97c \uc21c\uc11c\uc5d0 \ub9de\ucd94\uc5b4 \uc800\uc7a5\ud558\uc5ec \uc218\uc2e0\uacfc \uc1a1\uc2e0\uc744 \uac04\ud3b8\ud558\uac8c \ud569\ub2c8\ub2e4.","title":"\uac1c\uc694"},{"location":"networking/overview/#_1","text":"\ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0\uc744 \ud558\ub294\ub370\uc5d0\ub294 \ub450 \uc8fc \ubaa9\uc801\uc774 \uc788\uc2b5\ub2c8\ub2e4: \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ud45c\uc2dc\ub418\ub294 \ub0b4\uc6a9\uc774 \uc11c\ubc84\uc640 \ub3d9\uc77c\ud558\ub3c4\ub85d \ud558\ub294 \uac83(\u201c\ub3d9\uae30\ud654\u201d\ub77c\uace0\ub3c4 \ud569\ub2c8\ub2e4.) (X, Y, Z) \uc5d0 \ubc29\uae08 \uc790\ub780 \uaf43\uc774 \ubc14\ub85c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ud45c\uc2dc\ub418\ub3c4\ub85d \ud558\ub294 \uac83 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc11c\ubc84\uc5d0\uac8c \ud50c\ub808\uc774\uc5b4\uc758 \uc0c1\ud0dc\uac00 \ubcc0\ud588\ub2e4\uace0 \uc54c\ub824\uc8fc\ub294 \uc218\ub2e8\uc774 \ub418\ub294 \uac83 \ud50c\ub808\uc774\uc5b4\uac00 \ud0a4\ub97c \ub20c\ub800\uc744 \ub54c \uc11c\ubc84\uc5d0 \uc54c\ub824\uc8fc\ub294 \uac83 \uc774\ub97c \uad6c\ud604\ud558\ub294 \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \ubc29\ubc95\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uc11c\ubc84\uac00 \uc11c\ub85c \uba54\uc138\uc9c0\ub97c \uc8fc\uace0 \ubc1b\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ub54c \uc8fc\uace0 \ubc1b\ub294 \uba54\uc138\uc9c0\ub294 \uc77c\ubc18\uc801\uc73c\ub860 \uad6c\uc870\ud654\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4, \uc5ec\ub7ec \ub370\uc774\ud130\ub97c \uc21c\uc11c\uc5d0 \ub9de\ucd94\uc5b4 \uc800\uc7a5\ud558\uc5ec \uc218\uc2e0\uacfc \uc1a1\uc2e0\uc744 \uac04\ud3b8\ud558\uac8c \ud569\ub2c8\ub2e4.","title":"\ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0 \uac1c\uc694"},{"location":"networking/simpleimpl/","text":"SimpleImpl SimpleImpl \uc740 SimpleChannel \uc744 \uc0ac\uc6a9\ud558\ub294 \ud328\ud0b7 \ud1b5\uc2e0 \uc2dc\uc2a4\ud15c\uc5d0 \uc8fc\uc5b4\uc9c4 \uc774\ub984\uc785\ub2c8\ub2e4. \uc774 \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uac00\uc7a5 \uc27d\uac8c \uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\uac04 \ud1b5\uc2e0\uc744 \uad6c\ud604\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc2dc\uc791\ud558\uae30 \uac00\uc7a5 \uccab\ubc88\uc9f8\ub85c SimpleChannel \uac1d\uccb4\ub97c \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 ModidPacketHandler \ucc98\ub7fc \ub530\ub85c \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e0 \uc774\ud6c4 \uac70\uae30\uc11c \ud558\uc2dc\ub294 \uac83\uc744 \ucd94\ucc9c\ub4dc\ub9bd\ub2c8\ub2e4. \uc774\ub54c \ub9cc\ub4dc\uc2dc\ub294 SimpleChannel \uac1d\uccb4\ub294 \ub2e4\uc74c\ucc98\ub7fc \uc815\uc801 \ud544\ub4dc\ub85c \ub9cc\ub4dc\uc138\uc694: private static final String PROTOCOL_VERSION = \"1\"; public static final SimpleChannel INSTANCE = NetworkRegistry.newSimpleChannel( new ResourceLocation(\"mymodid\", \"main\"), () -> PROTOCOL_VERSION, PROTOCOL_VERSION::equals, PROTOCOL_VERSION::equals ); \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \ucc44\ub110\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \ub450\ubc88\uc9f8 \uc778\uc790\ub294 \ud604\uc7ac \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc744 \ubc18\ud658\ud558\ub294 Supplier<String> \uc785\ub2c8\ub2e4. \uc138\ubc88\uc9f8 \uc778\uc790\ub294 \uc5f0\uacb0\uc744 \uc2dc\ub3c4\ud558\ub294 \uce21\uc758 \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc774 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ud638\ud658\ub418\ub294\uc9c0 \ud655\uc778\ud558\ub294 Predicate<String> , \ub124\ubc88\uc9f8 \uc778\uc790\ub294 \uc5f0\uacb0\uc744 \uc2dc\ub3c4\ud558\ub294 \uce21\uc758 \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc774 \uc11c\ubc84\uc640 \ud638\ud658\ub418\ub294\uc9c0 \ud655\uc778\ud558\ub294 Predicate<String> \uc785\ub2c8\ub2e4. \uc774 \uc608\uc81c\uc5d0\uc11c\ub294 \ub2e8\uc21c\ud558\uac8c \uc811\uc18d\ud558\ub294 \uce21\uc758 \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc774 PROTOCOL_VERSION \uacfc \ub3d9\uc77c\ud55c\uc9c0 \ubc14\ub85c \ube44\uad50\ud569\ub2c8\ub2e4, \uc989 \uc774 \uacbd\uc6b0\uc5d0\uc11c\ub294 \uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 PROTOCOL_VERSION \uc774 \uc77c\uce58\ud574\uc57c\ub9cc FML \uc774 \ub85c\uadf8\uc778\uc744 \ud5c8\uc6a9\ud574 \uc90d\ub2c8\ub2e4. \ubc84\uc804 \ud655\uc778 \ub9cc\uc57d \ubaa8\ub4dc\uc5d0\uc11c \ub9cc\ub4e0 \ub124\ud2b8\uc6cc\ud06c \ucc44\ub110\uc774 \ubc18\ub300\ucabd\uc5d0 \uc5c6\uc5b4\ub3c4 \ub41c\ub2e4\uba74, \ub610\ub294 \uc544\uc608 \ud3ec\uc9c0\uac00 \uc5c6\uc5b4\ub3c4 \ub41c\ub2e4\uba74 \ubc84\uc804 \ud655\uc778\uc790\ub4e4 ( Predicate<String> \ud30c\ub77c\ubbf8\ud130\ub4e4)\uc744 \uc801\uc808\ud558\uac8c \uc815\uc758\ud558\uc5ec \ucd94\uac00\uc801\uc778 \u201c\uba54\ud0c0-\ubc84\uc804\u201d \ub4e4 \ub610\ud55c \ucc98\ub9ac\ud558\ub3c4\ub85d \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4 (\uba54\ud0c0 \ubc84\uc804\ub4e4\uc740 NetworkRegistry \uc5d0 \uc815\uc758\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4, \uc544\ub798 \ub098\uc640\uc788\ub294 \uac83\uc740 String \uc774 \uc544\ub2c8\uace0 \ud544\ub4dc \uc774\ub984\uc785\ub2c8\ub2e4). \uc774 \ubc84\uc804\ub4e4\uc758 \uc885\ub958\uc640 \uc758\ubbf8\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: ABSENT - \ucc44\ub110\uc774 \ubc18\ub300\ucabd\uc5d0 \uc5c6\ub294 \uacbd\uc6b0, \uc774\ub54c \ubc18\ub300\ucabd\uc740 \ud3ec\uc9c0\uac00 \uc124\uce58\ub418\uc5b4 \uc788\uc73c\uba70 \ub2e4\ub978 \ubaa8\ub4dc\uac00 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ACCEPTVANILLA - \ubc18\ub300\ucabd\uc774 \ubc14\ub2d0\ub77c\uac70\ub098 \ud3ec\uc9c0\uac00 \uc5c6\ub294 \uacbd\uc6b0. \uc704 \ub450 \ud544\ub4dc\ub4e4\uc740 \ubc18\ub300\ucabd\uc5d0 \ucc44\ub110\uc774 \uc544\uc608 \uc5c6\uc5b4 \ubc84\uc804 \ud655\uc778\uc790\uc5d0\uc11c \ube44\uad50\ud560 \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc774 \uc5c6\ub294 \uacbd\uc6b0 \ub300\uc2e0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \ub450 \uacbd\uc6b0\uc5d0 \ub2e4 false \ub97c \ubc18\ud658\ud558\uba74 \ubc18\ub300\ucabd\uc5d0 \ucc44\ub110\uc774 \uc788\ub3c4\ub85d \uac15\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc5d0 \uc608\uc81c \ucf54\ub4dc\ub97c \uadf8\ub300\ub85c \ubcf5\uc0ac\ud574\uc11c \uc4f0\uc2dc\uba74 \ubc18\ub300\ucabd\uc5d0 \ucc44\ub110\uc774 \uc788\ub3c4\ub85d \uac15\uc81c\ud569\ub2c8\ub2e4. \uc774 \ubc84\uc804 \ud655\uc778 \ubc29\uc2dd\uc740 \uc11c\ubc84 \ubaa9\ub85d \ud654\uba74\uc5d0\uc11c \ud638\ud658\uc131 \uccb4\ud06c\ub97c \ud560 \ub54c\uc5d0\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4, \uc774\ub85c \uc778\ud574 \ucd08\ub85d\uc0c9 \uccb4\ud06c \ubaa8\uc591 \ub610\ub294 \ube68\uac04\uc0c9 X\uac00 \uc11c\ubc84 \ubaa9\ub85d\uc5d0 \ud45c\uc2dc\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud328\ud0b7 \ub4f1\ub85d\ud558\uae30 \uadf8 \ub2e4\uc74c\uc73c\ub85c \uc8fc\uace0 \ubc1b\uc744 \uba54\uc138\uc9c0\ub4e4\uc744 \uc815\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 INSTANCE#registerMessage \ub97c \uc774\uc6a9\ud574 \ud560 \uc218 \uc788\ub294\ub370, \uc774 \uba54\uc11c\ub4dc\ub294 5\uac1c\uc758 \uc778\uc790\ub97c \ubc1b\uc2b5\ub2c8\ub2e4: \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \ud328\ud0b7\uc744 \ud310\ubcc4\ud560 \ub54c \uc0ac\uc6a9\ud560 \ud310\ubcc4\uc790 \uc785\ub2c8\ub2e4. ID \ub77c\uace0 \ubd80\ub974\uae30\ub3c4 \ud569\ub2c8\ub2e4. \uc774 \ud310\ubcc4\uc790\ub294 \uac19\uc740 \ucc44\ub110\uc5d0\uc11c\ub294 \uace0\uc720\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4, \ub2e4\ub978 \ucc44\ub110\ub07c\ub9ac\ub294 \ud310\ubcc4\uc790\uac00 \uac19\uc544\ub3c4 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud310\ubcc4\uc790\ub85c\ub294 \uc5b4\ub5a4 \uac12\uc744 \uc0ac\uc6a9\ud558\uc154\ub3c4 \uace0\uc720\ud558\uae30\ub9cc \ud55c\ub2e4\uba74 \uc0c1\uad00 \uc5c6\uc73c\ub2c8 \uc9c0\uc5ed \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uba54\uc138\uc9c0 \ud558\ub098 \ub4f1\ub85d\ud560 \ub54c \ub9c8\ub2e4 id++ \ub97c \ud558\uc5ec \ub298 \uace0\uc720\ud55c \uac12\uc774 \ub098\uc624\ub3c4\ub85d \ud558\uc138\uc694. \ub450\ubc88\uc9f8 \uc778\uc790\ub294 \ud328\ud0b7 \ud074\ub798\uc2a4 MSG \uc785\ub2c8\ub2e4. \uc138\ubc88\uc9f8 \uc778\uc790\ub294 BiConsumer<MSG, PacketBuffer> \uc785\ub2c8\ub2e4, \ud328\ud0b7 \ud074\ub798\uc2a4\ub97c PacketBuffer \uc5d0 \uc791\uc131\ud558\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \ub124\ubc88\uc9f8 \uc778\uc790\ub294 Function<PacketBuffer, MSG> \uc785\ub2c8\ub2e4, PacketBuffer \ub85c \ubd80\ud130 \ud328\ud0b7 \ud074\ub798\uc2a4\ub97c \uc77d\uc5b4\ub4e4\uc774\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9 \uc778\uc790\ub294 BiConsumer<MSG, Supplier<NetworkEvent.Context>> \uc785\ub2c8\ub2e4, \ud328\ud0b7\uc744 \ubc1b\uc744\uc2dc \uc0ac\uc6a9\ud560 \ud578\ub4e4\ub7ec \uc785\ub2c8\ub2e4. \ub4a4 3\uac1c\uc758 \uc778\uc790\ub4e4\uc740 \uc815\uc801 \ub610\ub294 \uc778\uc2a4\ud134\uc2a4 \uba54\uc11c\ub4dc\uc758 \ub808\ud37c\ub7f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec\ub3c4 \ub429\ub2c8\ub2e4. \uae30\uc5b5\ud574\ub450\uc154\uc57c \ud560 \uc810\uc740 MSG#encode(PacketBuffer) \uc778\uc2a4\ud134\uc2a4 \uba54\uc11c\ub4dc\ub294 BiConsumer<MSG, PacketBuffer> \ub85c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4; MSG \uc758 \uc778\uc2a4\ud134\uc2a4\ub294 \uc554\ubb35\uc801\uc73c\ub85c BiConsumer \uc758 \uccab\ubc88\uc9f8 \uc778\uc790\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ud328\ud0b7 \ud578\ub4e4\ub9c1 \ud558\uae30 \ud328\ud0b7 \ud578\ub4e4\ub7ec\uc5d0\ub294 \uba87\uac00\uc9c0 \uac15\uc870\ud560 \uc0ac\ud56d\uc774 \uc788\uc2b5\ub2c8\ub2e4: \ud328\ud0b7 \ud578\ub4e4\ub7ec\ub294 \uba54\uc138\uc9c0 \ud074\ub798\uc2a4 \ubfd0\ub9cc \uc544\ub2c8\ub77c, \ub124\ud2b8\uc6cc\ud06c \ucf58\ud14d\uc2a4\ud2b8\ub3c4 \uac19\uc774 \ubc18\uc2b5\ub2c8\ub2e4. \uc774 \ucf58\ud14d\uc2a4\ud2b8\ub97c \uc0ac\uc6a9\ud574\uc11c, (\uc11c\ubc84\uc5d0\uc11c \ud328\ud0b7\uc744 \ubc1b\uc558\ub2e4\uba74) \ud328\ud0b7\uc744 \ubcf4\ub0b8 \ud50c\ub808\uc774\uc5b4\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uace0 \uc2a4\ub808\ub4dc \uc548\uc804\uc131\uc744 \uc900\uc218\ud574\uc57c\ub9cc \ud558\ub294 \uc791\uc5c5\ub4e4\uc744 \uc694\uccad\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. public static void handle(MyMessage msg, Supplier<NetworkEvent.Context> ctx) { ctx.get().enqueueWork(() -> { // \uc2a4\ub808\ub4dc \uc548\uc804\uc131\uc744 \uc900\uc218\ud574\uc57c \ud558\ub294 \uc791\uc5c5\ub4e4 (\ub300\ubd80\ubd84\uc758 \uc791\uc5c5\ub4e4\uc774 \uc774\uc5d0 \ud3ec\ud568\ub420 \uac83\uc785\ub2c8\ub2e4) ServerPlayerEntity sender = ctx.get().getSender(); // the client that sent this packet // \ubb34\uc5b8\uac00 \uc544\ubb34\uac70\ub098 \ub354 \ud558\uae30 }); ctx.get().setPacketHandled(true); } \uc11c\ubc84\uc5d0\uc11c \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c \ubcf4\ub0b8 \ud328\ud0b7\uc740 \uc544\uc608 \ub2e4\ub978 \ud074\ub798\uc2a4\uc5d0\uc11c \ud578\ub4e4\ub9c1 \ud574\uc57c \ud558\uba70, DistExecutor#unsafeRunWhenOn \uc640 \uac19\uc740 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud574 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub418\ub3c4\ub85d \ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. // In Packet class public static void handle(MyClientMessage msg, Supplier<NetworkEvent.Context> ctx) { ctx.get().enqueueWork(() -> // \ud655\uc2e4\ud558\uac8c \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. DistExecutor.unsafeRunWhenOn(Dist.CLIENT, () -> () -> ClientPacketHandlerClass.handlePacket(msg, ctx)) ); ctx.get().setPacketHandled(true); } // ClientPacketHandlerClass \ub0b4\uc6a9 public static void handlePacket(MyClientMessage msg, Supplier<NetworkEvent.Context> ctx) { // \ubb34\uc5b8\uac00 \ud558\uae30 } #setPacketHandled \ub97c \uc5ec\ub7ec\ubc88 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \ubcf4\uc168\uc744\ud150\ub370, \uc774\ub294 \ub124\ud2b8\uc6cc\ud06c \uc2dc\uc2a4\ud15c\uc5d0\uac8c \ud328\ud0b7\uc774 \uc131\uacf5\uc801\uc73c\ub85c \ucc98\ub9ac\ub418\uc5c8\uc74c\uc744 \uc54c\ub9ac\ub294 \uac83\uc785\ub2c8\ub2e4. Warning \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 1.8 \uc774\ud6c4\ub85c\ub294 \ud328\ud0b7\uc740 \ub124\ud2b8\uc6cc\ud06c \uc2a4\ub808\ub4dc\uc5d0\uc11c \ucc98\ub9ac\ub429\ub2c8\ub2e4. \uc989 \ud328\ud0b7 \ud578\ub4e4\ub7ec\ub294 \uac8c\uc784\uacfc \uc9c1\uc811\uc801\uc73c\ub85c \uc0c1\ud638\uc791\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4 . \ud3ec\uc9c0\uc5d0\uc11c\ub294 NetworkEvent$Context \ub97c \ud1b5\ud574 \uac04\ub2e8\ud558\uac8c \ucf54\ub4dc\ub97c \uba54\uc778 \uc2a4\ub808\ub4dc\uc5d0\uc11c \uc2e4\ud589\ud558\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub294 \ub2e8\uc21c\ud558\uac8c NetworkEvent$Context#enqueueWork(Runnable) \uc744 \ud638\ucd9c\ud558\ub294 \uac83\uc778\ub370, \uba54\uc778 \uc2a4\ub808\ub4dc\ub294 \uc774\ub54c \uc804\ub2ec\ub41c Runnable \uc744 \ube60\ub978 \uc2dc\uc77c\ub0b4\uc5d0 \uc2e4\ud589\ud569\ub2c8\ub2e4. Warning \uc11c\ubc84\uc5d0\uc11c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \ubcf4\ub0b8 \ud328\ud0b7\uc744 \ucc98\ub9ac\ud558\ub294 \ud328\ud0b7 \ud578\ub4e4\ub7ec\ub97c \ub9cc\ub4e4 \ub54c \uc8fc\uc758\ud558\ub3c4\ub85d \ud558\uc138\uc694, \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc11c\ubc84\uc5d0\uc11c \uc608\uae30\uce58 \ubabb\ud55c \ub370\uc774\ud130\ub97c \ubcf4\ub0b4 \ucde8\uc57d\uc810\uc744 \uc545\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac00\uc7a5 \ud754\ud55c \uc0ac\ub840\ub294 \ubb34\uc791\uc704 \uccad\ud06c \uc0dd\uc131 \uc785\ub2c8\ub2e4. \uc11c\ubc84\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \ubcf4\ub0b8 \ube14\ub85d\uc758 \uc704\uce58\ub97c \uadf8\ub300\ub85c \ubbff\uace0 \uc774\ub97c \uc774\uc6a9\ud574 \ube14\ub85d/\ud0c0\uc77c \uc5d4\ud2f0\ud2f0\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \ud560 \ub54c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\ub294\ub370, \ub9cc\uc57d \uc544\uc9c1 \uccad\ud06c\uac00 \uba54\ubaa8\ub9ac \uc0c1\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uacf3\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \ud558\uba74 \uc11c\ubc84\uc5d0\uc11c\ub294 \ub514\uc2a4\ud06c\uc5d0\uc11c \ubd88\ub7ec\uc624\uac70\ub098 \uc0c8\ub85c \uccad\ud06c\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\ub294 \uc2ec\uac01\ud55c \ubcf4\uc548 \ucde8\uc57d\uc810\uc911 \ud558\ub098\ub85c, \uc11c\ubc84 \uc131\ub2a5\uacfc \ub514\uc2a4\ud06c \uc6a9\ub7c9\uc5d0 \ud754\uc801\ub3c4 \ub0a8\uae30\uc9c0 \uc54a\uace0 \ub9e4\uc6b0 \ud070 \ud53c\ud574\ub97c \ub07c\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uacf5\uaca9\uc744 \ub9c9\uae30 \uc704\ud574 \uc77c\ubc18\uc801\uc73c\ub85c \ub9ce\uc774 \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc740 World#hasChunkAt \uc774 \ucc38\uc778 \uacf3\ub9cc\uc758 \ube14\ub85d/\ud0c0\uc77c \uc5d4\ud2f0\ud2f0\uc5d0 \uc811\uadfc\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uba54\ubaa8\ub9ac\uc0c1\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uccad\ud06c\uc5d0 \uc811\uadfc\ud558\ub294 \uac83\uc744 \ub9c9\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud328\ud0b7 \ubcf4\ub0b4\uae30 \uc11c\ubc84\uc5d0 \ubcf4\ub0b4\uae30 \uc11c\ubc84\ub85c \ud328\ud0b7\uc744 \ubcf4\ub0b4\ub294 \ubc29\ubc95\uc740 \ud558\ub098\ubc16\uc5d0 \uc5c6\uc2b5\ub2c8\ub2e4. \uc65c\ub0d0\ud558\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \ud55c\ubc88\uc5d0 \ud558\ub098\uc758 \uc11c\ubc84\uc5d0\ub9cc \uc811\uc18d\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ud328\ud0b7\uc744 \ubcf4\ub0b4\uae30 \uc704\ud574\uc11c\ub294 \uc774\uc804\uc5d0 \uc815\uc758\ud55c SimpleChannel \uc744 \ub2e4\uc2dc \uc0ac\uc6a9\ud560 \uac83\uc778\ub370, \ub2e8\uc21c\ud788 INSTANCE.sendToServer(new MyMessage()) \ub97c \ud638\ucd9c\ud558\uc138\uc694. \uc774 \uba54\uc138\uc9c0\ub294 \ud328\ud0b7\uc5d0 \uc54c\ub9de\ub294 \ud578\ub4e4\ub7ec\ub85c (\ub9cc\uc57d \uc788\ub2e4\uba74)\ubcf4\ub0b4\uc9d1\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8(\ub4e4)\uc5d0 \ubcf4\ub0b4\uae30 \ud328\ud0b7\uc744 SimpleChannel \uc744 \uc0ac\uc6a9\ud574 \uc9c1\uc811\uc801\uc73c\ub85c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc804\uc1a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: INSTANCE.sendTo(new MyClientMessage(), serverPlayer.connection.getConnection(), NetworkDirection.PLAY_TO_CLIENT) . \uadf8\ub7ec\ub098 \uc774 \ubc29\uc2dd\uc740 \uc0ac\uc6a9\ud558\uae30 \ubd88\ud3b8\ud560 \uc218 \uc788\ub294\ub370, \ud3ec\uc9c0\uc5d0\uc11c\ub294 \uc870\uae08 \ub354 \uc27d\uac8c \ud328\ud0b7\uc744 \ubcf4\ub0b4\uc8fc\ub294 \ud568\uc218\ub4e4\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4: // \ud50c\ub808\uc774\uc5b4 \ud55c\uba85\uc5d0\uac8c \ubcf4\ub0b4\uae30 INSTANCE.send(PacketDistributor.PLAYER.with(serverPlayer), new MyMessage()); // \uc774 \uccad\ud06c\ub97c \ucd94\uc801\ud558\uace0 \uc788\ub294 \ubaa8\ub4e0 \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \ubcf4\ub0b4\uae30 INSTANCE.send(PacketDistributor.TRACKING_CHUNK.with(chunk), new MyMessage()); // \ubaa8\ub4e0 \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \ubcf4\ub0b4\uae30 INSTANCE.send(PacketDistributor.ALL.noArg(), new MyMessage()); PacketDistributor \ub294 \uc704\uc5d0 \ub098\uc628 \uac83 \ub9d0\uace0\ub3c4 \ub354 \ub9ce\uc740 \uc885\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4; PacketDistributor \ud074\ub798\uc2a4\uc758 \ubb38\uc11c\ub97c \ud1b5\ud574 \ub354 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"SimpleImpl"},{"location":"networking/simpleimpl/#simpleimpl","text":"SimpleImpl \uc740 SimpleChannel \uc744 \uc0ac\uc6a9\ud558\ub294 \ud328\ud0b7 \ud1b5\uc2e0 \uc2dc\uc2a4\ud15c\uc5d0 \uc8fc\uc5b4\uc9c4 \uc774\ub984\uc785\ub2c8\ub2e4. \uc774 \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uac00\uc7a5 \uc27d\uac8c \uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\uac04 \ud1b5\uc2e0\uc744 \uad6c\ud604\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4.","title":"SimpleImpl"},{"location":"networking/simpleimpl/#_1","text":"\uac00\uc7a5 \uccab\ubc88\uc9f8\ub85c SimpleChannel \uac1d\uccb4\ub97c \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 ModidPacketHandler \ucc98\ub7fc \ub530\ub85c \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e0 \uc774\ud6c4 \uac70\uae30\uc11c \ud558\uc2dc\ub294 \uac83\uc744 \ucd94\ucc9c\ub4dc\ub9bd\ub2c8\ub2e4. \uc774\ub54c \ub9cc\ub4dc\uc2dc\ub294 SimpleChannel \uac1d\uccb4\ub294 \ub2e4\uc74c\ucc98\ub7fc \uc815\uc801 \ud544\ub4dc\ub85c \ub9cc\ub4dc\uc138\uc694: private static final String PROTOCOL_VERSION = \"1\"; public static final SimpleChannel INSTANCE = NetworkRegistry.newSimpleChannel( new ResourceLocation(\"mymodid\", \"main\"), () -> PROTOCOL_VERSION, PROTOCOL_VERSION::equals, PROTOCOL_VERSION::equals ); \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \ucc44\ub110\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \ub450\ubc88\uc9f8 \uc778\uc790\ub294 \ud604\uc7ac \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc744 \ubc18\ud658\ud558\ub294 Supplier<String> \uc785\ub2c8\ub2e4. \uc138\ubc88\uc9f8 \uc778\uc790\ub294 \uc5f0\uacb0\uc744 \uc2dc\ub3c4\ud558\ub294 \uce21\uc758 \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc774 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ud638\ud658\ub418\ub294\uc9c0 \ud655\uc778\ud558\ub294 Predicate<String> , \ub124\ubc88\uc9f8 \uc778\uc790\ub294 \uc5f0\uacb0\uc744 \uc2dc\ub3c4\ud558\ub294 \uce21\uc758 \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc774 \uc11c\ubc84\uc640 \ud638\ud658\ub418\ub294\uc9c0 \ud655\uc778\ud558\ub294 Predicate<String> \uc785\ub2c8\ub2e4. \uc774 \uc608\uc81c\uc5d0\uc11c\ub294 \ub2e8\uc21c\ud558\uac8c \uc811\uc18d\ud558\ub294 \uce21\uc758 \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc774 PROTOCOL_VERSION \uacfc \ub3d9\uc77c\ud55c\uc9c0 \ubc14\ub85c \ube44\uad50\ud569\ub2c8\ub2e4, \uc989 \uc774 \uacbd\uc6b0\uc5d0\uc11c\ub294 \uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 PROTOCOL_VERSION \uc774 \uc77c\uce58\ud574\uc57c\ub9cc FML \uc774 \ub85c\uadf8\uc778\uc744 \ud5c8\uc6a9\ud574 \uc90d\ub2c8\ub2e4.","title":"\uc2dc\uc791\ud558\uae30"},{"location":"networking/simpleimpl/#_2","text":"\ub9cc\uc57d \ubaa8\ub4dc\uc5d0\uc11c \ub9cc\ub4e0 \ub124\ud2b8\uc6cc\ud06c \ucc44\ub110\uc774 \ubc18\ub300\ucabd\uc5d0 \uc5c6\uc5b4\ub3c4 \ub41c\ub2e4\uba74, \ub610\ub294 \uc544\uc608 \ud3ec\uc9c0\uac00 \uc5c6\uc5b4\ub3c4 \ub41c\ub2e4\uba74 \ubc84\uc804 \ud655\uc778\uc790\ub4e4 ( Predicate<String> \ud30c\ub77c\ubbf8\ud130\ub4e4)\uc744 \uc801\uc808\ud558\uac8c \uc815\uc758\ud558\uc5ec \ucd94\uac00\uc801\uc778 \u201c\uba54\ud0c0-\ubc84\uc804\u201d \ub4e4 \ub610\ud55c \ucc98\ub9ac\ud558\ub3c4\ub85d \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4 (\uba54\ud0c0 \ubc84\uc804\ub4e4\uc740 NetworkRegistry \uc5d0 \uc815\uc758\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4, \uc544\ub798 \ub098\uc640\uc788\ub294 \uac83\uc740 String \uc774 \uc544\ub2c8\uace0 \ud544\ub4dc \uc774\ub984\uc785\ub2c8\ub2e4). \uc774 \ubc84\uc804\ub4e4\uc758 \uc885\ub958\uc640 \uc758\ubbf8\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: ABSENT - \ucc44\ub110\uc774 \ubc18\ub300\ucabd\uc5d0 \uc5c6\ub294 \uacbd\uc6b0, \uc774\ub54c \ubc18\ub300\ucabd\uc740 \ud3ec\uc9c0\uac00 \uc124\uce58\ub418\uc5b4 \uc788\uc73c\uba70 \ub2e4\ub978 \ubaa8\ub4dc\uac00 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ACCEPTVANILLA - \ubc18\ub300\ucabd\uc774 \ubc14\ub2d0\ub77c\uac70\ub098 \ud3ec\uc9c0\uac00 \uc5c6\ub294 \uacbd\uc6b0. \uc704 \ub450 \ud544\ub4dc\ub4e4\uc740 \ubc18\ub300\ucabd\uc5d0 \ucc44\ub110\uc774 \uc544\uc608 \uc5c6\uc5b4 \ubc84\uc804 \ud655\uc778\uc790\uc5d0\uc11c \ube44\uad50\ud560 \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc774 \uc5c6\ub294 \uacbd\uc6b0 \ub300\uc2e0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \ub450 \uacbd\uc6b0\uc5d0 \ub2e4 false \ub97c \ubc18\ud658\ud558\uba74 \ubc18\ub300\ucabd\uc5d0 \ucc44\ub110\uc774 \uc788\ub3c4\ub85d \uac15\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc5d0 \uc608\uc81c \ucf54\ub4dc\ub97c \uadf8\ub300\ub85c \ubcf5\uc0ac\ud574\uc11c \uc4f0\uc2dc\uba74 \ubc18\ub300\ucabd\uc5d0 \ucc44\ub110\uc774 \uc788\ub3c4\ub85d \uac15\uc81c\ud569\ub2c8\ub2e4. \uc774 \ubc84\uc804 \ud655\uc778 \ubc29\uc2dd\uc740 \uc11c\ubc84 \ubaa9\ub85d \ud654\uba74\uc5d0\uc11c \ud638\ud658\uc131 \uccb4\ud06c\ub97c \ud560 \ub54c\uc5d0\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4, \uc774\ub85c \uc778\ud574 \ucd08\ub85d\uc0c9 \uccb4\ud06c \ubaa8\uc591 \ub610\ub294 \ube68\uac04\uc0c9 X\uac00 \uc11c\ubc84 \ubaa9\ub85d\uc5d0 \ud45c\uc2dc\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubc84\uc804 \ud655\uc778"},{"location":"networking/simpleimpl/#_3","text":"\uadf8 \ub2e4\uc74c\uc73c\ub85c \uc8fc\uace0 \ubc1b\uc744 \uba54\uc138\uc9c0\ub4e4\uc744 \uc815\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 INSTANCE#registerMessage \ub97c \uc774\uc6a9\ud574 \ud560 \uc218 \uc788\ub294\ub370, \uc774 \uba54\uc11c\ub4dc\ub294 5\uac1c\uc758 \uc778\uc790\ub97c \ubc1b\uc2b5\ub2c8\ub2e4: \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \ud328\ud0b7\uc744 \ud310\ubcc4\ud560 \ub54c \uc0ac\uc6a9\ud560 \ud310\ubcc4\uc790 \uc785\ub2c8\ub2e4. ID \ub77c\uace0 \ubd80\ub974\uae30\ub3c4 \ud569\ub2c8\ub2e4. \uc774 \ud310\ubcc4\uc790\ub294 \uac19\uc740 \ucc44\ub110\uc5d0\uc11c\ub294 \uace0\uc720\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4, \ub2e4\ub978 \ucc44\ub110\ub07c\ub9ac\ub294 \ud310\ubcc4\uc790\uac00 \uac19\uc544\ub3c4 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud310\ubcc4\uc790\ub85c\ub294 \uc5b4\ub5a4 \uac12\uc744 \uc0ac\uc6a9\ud558\uc154\ub3c4 \uace0\uc720\ud558\uae30\ub9cc \ud55c\ub2e4\uba74 \uc0c1\uad00 \uc5c6\uc73c\ub2c8 \uc9c0\uc5ed \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uba54\uc138\uc9c0 \ud558\ub098 \ub4f1\ub85d\ud560 \ub54c \ub9c8\ub2e4 id++ \ub97c \ud558\uc5ec \ub298 \uace0\uc720\ud55c \uac12\uc774 \ub098\uc624\ub3c4\ub85d \ud558\uc138\uc694. \ub450\ubc88\uc9f8 \uc778\uc790\ub294 \ud328\ud0b7 \ud074\ub798\uc2a4 MSG \uc785\ub2c8\ub2e4. \uc138\ubc88\uc9f8 \uc778\uc790\ub294 BiConsumer<MSG, PacketBuffer> \uc785\ub2c8\ub2e4, \ud328\ud0b7 \ud074\ub798\uc2a4\ub97c PacketBuffer \uc5d0 \uc791\uc131\ud558\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \ub124\ubc88\uc9f8 \uc778\uc790\ub294 Function<PacketBuffer, MSG> \uc785\ub2c8\ub2e4, PacketBuffer \ub85c \ubd80\ud130 \ud328\ud0b7 \ud074\ub798\uc2a4\ub97c \uc77d\uc5b4\ub4e4\uc774\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9 \uc778\uc790\ub294 BiConsumer<MSG, Supplier<NetworkEvent.Context>> \uc785\ub2c8\ub2e4, \ud328\ud0b7\uc744 \ubc1b\uc744\uc2dc \uc0ac\uc6a9\ud560 \ud578\ub4e4\ub7ec \uc785\ub2c8\ub2e4. \ub4a4 3\uac1c\uc758 \uc778\uc790\ub4e4\uc740 \uc815\uc801 \ub610\ub294 \uc778\uc2a4\ud134\uc2a4 \uba54\uc11c\ub4dc\uc758 \ub808\ud37c\ub7f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec\ub3c4 \ub429\ub2c8\ub2e4. \uae30\uc5b5\ud574\ub450\uc154\uc57c \ud560 \uc810\uc740 MSG#encode(PacketBuffer) \uc778\uc2a4\ud134\uc2a4 \uba54\uc11c\ub4dc\ub294 BiConsumer<MSG, PacketBuffer> \ub85c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4; MSG \uc758 \uc778\uc2a4\ud134\uc2a4\ub294 \uc554\ubb35\uc801\uc73c\ub85c BiConsumer \uc758 \uccab\ubc88\uc9f8 \uc778\uc790\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4.","title":"\ud328\ud0b7 \ub4f1\ub85d\ud558\uae30"},{"location":"networking/simpleimpl/#_4","text":"\ud328\ud0b7 \ud578\ub4e4\ub7ec\uc5d0\ub294 \uba87\uac00\uc9c0 \uac15\uc870\ud560 \uc0ac\ud56d\uc774 \uc788\uc2b5\ub2c8\ub2e4: \ud328\ud0b7 \ud578\ub4e4\ub7ec\ub294 \uba54\uc138\uc9c0 \ud074\ub798\uc2a4 \ubfd0\ub9cc \uc544\ub2c8\ub77c, \ub124\ud2b8\uc6cc\ud06c \ucf58\ud14d\uc2a4\ud2b8\ub3c4 \uac19\uc774 \ubc18\uc2b5\ub2c8\ub2e4. \uc774 \ucf58\ud14d\uc2a4\ud2b8\ub97c \uc0ac\uc6a9\ud574\uc11c, (\uc11c\ubc84\uc5d0\uc11c \ud328\ud0b7\uc744 \ubc1b\uc558\ub2e4\uba74) \ud328\ud0b7\uc744 \ubcf4\ub0b8 \ud50c\ub808\uc774\uc5b4\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uace0 \uc2a4\ub808\ub4dc \uc548\uc804\uc131\uc744 \uc900\uc218\ud574\uc57c\ub9cc \ud558\ub294 \uc791\uc5c5\ub4e4\uc744 \uc694\uccad\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. public static void handle(MyMessage msg, Supplier<NetworkEvent.Context> ctx) { ctx.get().enqueueWork(() -> { // \uc2a4\ub808\ub4dc \uc548\uc804\uc131\uc744 \uc900\uc218\ud574\uc57c \ud558\ub294 \uc791\uc5c5\ub4e4 (\ub300\ubd80\ubd84\uc758 \uc791\uc5c5\ub4e4\uc774 \uc774\uc5d0 \ud3ec\ud568\ub420 \uac83\uc785\ub2c8\ub2e4) ServerPlayerEntity sender = ctx.get().getSender(); // the client that sent this packet // \ubb34\uc5b8\uac00 \uc544\ubb34\uac70\ub098 \ub354 \ud558\uae30 }); ctx.get().setPacketHandled(true); } \uc11c\ubc84\uc5d0\uc11c \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c \ubcf4\ub0b8 \ud328\ud0b7\uc740 \uc544\uc608 \ub2e4\ub978 \ud074\ub798\uc2a4\uc5d0\uc11c \ud578\ub4e4\ub9c1 \ud574\uc57c \ud558\uba70, DistExecutor#unsafeRunWhenOn \uc640 \uac19\uc740 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud574 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub418\ub3c4\ub85d \ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. // In Packet class public static void handle(MyClientMessage msg, Supplier<NetworkEvent.Context> ctx) { ctx.get().enqueueWork(() -> // \ud655\uc2e4\ud558\uac8c \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. DistExecutor.unsafeRunWhenOn(Dist.CLIENT, () -> () -> ClientPacketHandlerClass.handlePacket(msg, ctx)) ); ctx.get().setPacketHandled(true); } // ClientPacketHandlerClass \ub0b4\uc6a9 public static void handlePacket(MyClientMessage msg, Supplier<NetworkEvent.Context> ctx) { // \ubb34\uc5b8\uac00 \ud558\uae30 } #setPacketHandled \ub97c \uc5ec\ub7ec\ubc88 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \ubcf4\uc168\uc744\ud150\ub370, \uc774\ub294 \ub124\ud2b8\uc6cc\ud06c \uc2dc\uc2a4\ud15c\uc5d0\uac8c \ud328\ud0b7\uc774 \uc131\uacf5\uc801\uc73c\ub85c \ucc98\ub9ac\ub418\uc5c8\uc74c\uc744 \uc54c\ub9ac\ub294 \uac83\uc785\ub2c8\ub2e4. Warning \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 1.8 \uc774\ud6c4\ub85c\ub294 \ud328\ud0b7\uc740 \ub124\ud2b8\uc6cc\ud06c \uc2a4\ub808\ub4dc\uc5d0\uc11c \ucc98\ub9ac\ub429\ub2c8\ub2e4. \uc989 \ud328\ud0b7 \ud578\ub4e4\ub7ec\ub294 \uac8c\uc784\uacfc \uc9c1\uc811\uc801\uc73c\ub85c \uc0c1\ud638\uc791\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4 . \ud3ec\uc9c0\uc5d0\uc11c\ub294 NetworkEvent$Context \ub97c \ud1b5\ud574 \uac04\ub2e8\ud558\uac8c \ucf54\ub4dc\ub97c \uba54\uc778 \uc2a4\ub808\ub4dc\uc5d0\uc11c \uc2e4\ud589\ud558\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub294 \ub2e8\uc21c\ud558\uac8c NetworkEvent$Context#enqueueWork(Runnable) \uc744 \ud638\ucd9c\ud558\ub294 \uac83\uc778\ub370, \uba54\uc778 \uc2a4\ub808\ub4dc\ub294 \uc774\ub54c \uc804\ub2ec\ub41c Runnable \uc744 \ube60\ub978 \uc2dc\uc77c\ub0b4\uc5d0 \uc2e4\ud589\ud569\ub2c8\ub2e4. Warning \uc11c\ubc84\uc5d0\uc11c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \ubcf4\ub0b8 \ud328\ud0b7\uc744 \ucc98\ub9ac\ud558\ub294 \ud328\ud0b7 \ud578\ub4e4\ub7ec\ub97c \ub9cc\ub4e4 \ub54c \uc8fc\uc758\ud558\ub3c4\ub85d \ud558\uc138\uc694, \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc11c\ubc84\uc5d0\uc11c \uc608\uae30\uce58 \ubabb\ud55c \ub370\uc774\ud130\ub97c \ubcf4\ub0b4 \ucde8\uc57d\uc810\uc744 \uc545\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac00\uc7a5 \ud754\ud55c \uc0ac\ub840\ub294 \ubb34\uc791\uc704 \uccad\ud06c \uc0dd\uc131 \uc785\ub2c8\ub2e4. \uc11c\ubc84\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \ubcf4\ub0b8 \ube14\ub85d\uc758 \uc704\uce58\ub97c \uadf8\ub300\ub85c \ubbff\uace0 \uc774\ub97c \uc774\uc6a9\ud574 \ube14\ub85d/\ud0c0\uc77c \uc5d4\ud2f0\ud2f0\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \ud560 \ub54c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\ub294\ub370, \ub9cc\uc57d \uc544\uc9c1 \uccad\ud06c\uac00 \uba54\ubaa8\ub9ac \uc0c1\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uacf3\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \ud558\uba74 \uc11c\ubc84\uc5d0\uc11c\ub294 \ub514\uc2a4\ud06c\uc5d0\uc11c \ubd88\ub7ec\uc624\uac70\ub098 \uc0c8\ub85c \uccad\ud06c\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\ub294 \uc2ec\uac01\ud55c \ubcf4\uc548 \ucde8\uc57d\uc810\uc911 \ud558\ub098\ub85c, \uc11c\ubc84 \uc131\ub2a5\uacfc \ub514\uc2a4\ud06c \uc6a9\ub7c9\uc5d0 \ud754\uc801\ub3c4 \ub0a8\uae30\uc9c0 \uc54a\uace0 \ub9e4\uc6b0 \ud070 \ud53c\ud574\ub97c \ub07c\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uacf5\uaca9\uc744 \ub9c9\uae30 \uc704\ud574 \uc77c\ubc18\uc801\uc73c\ub85c \ub9ce\uc774 \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc740 World#hasChunkAt \uc774 \ucc38\uc778 \uacf3\ub9cc\uc758 \ube14\ub85d/\ud0c0\uc77c \uc5d4\ud2f0\ud2f0\uc5d0 \uc811\uadfc\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uba54\ubaa8\ub9ac\uc0c1\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uccad\ud06c\uc5d0 \uc811\uadfc\ud558\ub294 \uac83\uc744 \ub9c9\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud328\ud0b7 \ud578\ub4e4\ub9c1 \ud558\uae30"},{"location":"networking/simpleimpl/#_5","text":"","title":"\ud328\ud0b7 \ubcf4\ub0b4\uae30"},{"location":"networking/simpleimpl/#_6","text":"\uc11c\ubc84\ub85c \ud328\ud0b7\uc744 \ubcf4\ub0b4\ub294 \ubc29\ubc95\uc740 \ud558\ub098\ubc16\uc5d0 \uc5c6\uc2b5\ub2c8\ub2e4. \uc65c\ub0d0\ud558\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \ud55c\ubc88\uc5d0 \ud558\ub098\uc758 \uc11c\ubc84\uc5d0\ub9cc \uc811\uc18d\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ud328\ud0b7\uc744 \ubcf4\ub0b4\uae30 \uc704\ud574\uc11c\ub294 \uc774\uc804\uc5d0 \uc815\uc758\ud55c SimpleChannel \uc744 \ub2e4\uc2dc \uc0ac\uc6a9\ud560 \uac83\uc778\ub370, \ub2e8\uc21c\ud788 INSTANCE.sendToServer(new MyMessage()) \ub97c \ud638\ucd9c\ud558\uc138\uc694. \uc774 \uba54\uc138\uc9c0\ub294 \ud328\ud0b7\uc5d0 \uc54c\ub9de\ub294 \ud578\ub4e4\ub7ec\ub85c (\ub9cc\uc57d \uc788\ub2e4\uba74)\ubcf4\ub0b4\uc9d1\ub2c8\ub2e4.","title":"\uc11c\ubc84\uc5d0 \ubcf4\ub0b4\uae30"},{"location":"networking/simpleimpl/#_7","text":"\ud328\ud0b7\uc744 SimpleChannel \uc744 \uc0ac\uc6a9\ud574 \uc9c1\uc811\uc801\uc73c\ub85c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc804\uc1a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: INSTANCE.sendTo(new MyClientMessage(), serverPlayer.connection.getConnection(), NetworkDirection.PLAY_TO_CLIENT) . \uadf8\ub7ec\ub098 \uc774 \ubc29\uc2dd\uc740 \uc0ac\uc6a9\ud558\uae30 \ubd88\ud3b8\ud560 \uc218 \uc788\ub294\ub370, \ud3ec\uc9c0\uc5d0\uc11c\ub294 \uc870\uae08 \ub354 \uc27d\uac8c \ud328\ud0b7\uc744 \ubcf4\ub0b4\uc8fc\ub294 \ud568\uc218\ub4e4\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4: // \ud50c\ub808\uc774\uc5b4 \ud55c\uba85\uc5d0\uac8c \ubcf4\ub0b4\uae30 INSTANCE.send(PacketDistributor.PLAYER.with(serverPlayer), new MyMessage()); // \uc774 \uccad\ud06c\ub97c \ucd94\uc801\ud558\uace0 \uc788\ub294 \ubaa8\ub4e0 \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \ubcf4\ub0b4\uae30 INSTANCE.send(PacketDistributor.TRACKING_CHUNK.with(chunk), new MyMessage()); // \ubaa8\ub4e0 \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \ubcf4\ub0b4\uae30 INSTANCE.send(PacketDistributor.ALL.noArg(), new MyMessage()); PacketDistributor \ub294 \uc704\uc5d0 \ub098\uc628 \uac83 \ub9d0\uace0\ub3c4 \ub354 \ub9ce\uc740 \uc885\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4; PacketDistributor \ud074\ub798\uc2a4\uc758 \ubb38\uc11c\ub97c \ud1b5\ud574 \ub354 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud074\ub77c\uc774\uc5b8\ud2b8(\ub4e4)\uc5d0 \ubcf4\ub0b4\uae30"},{"location":"rendering/ister/","text":"ItemStackTileEntityRenderer ItemStackTileEntityRenderer is a method to handle dynamic rendering on items. This system is much simpler than the old TESR ItemStack system, which required a TileEntity , and did not allow access to the ItemStack . Using ItemStackTileEntityRenderer ItemStackTileEntityRenderer allows you to render your item using public void renderByItem(ItemStack itemStackIn, TransformType transformTypeIn, MatrixStack matrixStackIn, IRenderTypeBuffer bufferIn, int combinedLightIn, int combinedOverlayIn) . In order to use an ISTER, the Item must first satisfy the condition that its model returns true for IBakedModel#isCustomRenderer . Once that returns true, the Item\u2019s ISTER will be accessed for rendering. If it does not have one, it will use the default ItemStackTileEntityRenderer#instance . To set the ISTER for an Item, use Item$Properties#setISTER . Each Item can only ever provide one ISTER, and the getter is final so that mods do not return new instances each frame. That is it, no additional setup is necessary to use a ISTER.","title":"ItemStackTileEntityRenderer"},{"location":"rendering/ister/#itemstacktileentityrenderer","text":"ItemStackTileEntityRenderer is a method to handle dynamic rendering on items. This system is much simpler than the old TESR ItemStack system, which required a TileEntity , and did not allow access to the ItemStack .","title":"ItemStackTileEntityRenderer"},{"location":"rendering/ister/#using-itemstacktileentityrenderer","text":"ItemStackTileEntityRenderer allows you to render your item using public void renderByItem(ItemStack itemStackIn, TransformType transformTypeIn, MatrixStack matrixStackIn, IRenderTypeBuffer bufferIn, int combinedLightIn, int combinedOverlayIn) . In order to use an ISTER, the Item must first satisfy the condition that its model returns true for IBakedModel#isCustomRenderer . Once that returns true, the Item\u2019s ISTER will be accessed for rendering. If it does not have one, it will use the default ItemStackTileEntityRenderer#instance . To set the ISTER for an Item, use Item$Properties#setISTER . Each Item can only ever provide one ISTER, and the getter is final so that mods do not return new instances each frame. That is it, no additional setup is necessary to use a ISTER.","title":"Using ItemStackTileEntityRenderer"},{"location":"tileentities/tesr/","text":"TileEntityRenderer A TileEntityRenderer or TER (previously TileEntitySpecialRenderer or TESR ) is used to render blocks in a way that cannot be represented with a static baked model (JSON, OBJ, B3D, others). A tile entity renderer requires the block to have a TileEntity . Creating a TER To create a TER, create a class that inherits from TileEntityRenderer . It takes a generic argument specifying the block\u2019s TileEntity class. The generic argument is used in the TER\u2019s render method. Only one TER exists for a given TileEntityType . Therefore, values that are specific to a single instance in the world should be stored in the tile entity being passed to the renderer rather than in the TER itself. For example, an integer that increments every frame, if stored in the TER, will increment every frame for every tile entity of this type in the world. render This method is called every frame in order to render the tile entity. Parameters tileentityIn : This is the instance of the tile entity being rendered. partialTicks : The amount of time, in fractions of a tick, that has passed since the last full tick. matrixStackIn : A stack holding four-dimensional matrix entries offset to the current position of the tile entity. bufferIn : A rendering buffer able to access a vertex builder. combinedLightIn : An integer of the current light value on the tile entity. combinedOverlayIn : An integer set to the current overlay of the tile entity, usually OverlayTexture#NO_OVERLAY or 655,360. Registering a TER In order to register a TER, call ClientRegistry#bindTileEntityRenderer passing the TileEntityType to be rendered with this TER and the instance of the TER used to render all TEs of this type.","title":"\ub80c\ub354\ub7ec"},{"location":"tileentities/tesr/#tileentityrenderer","text":"A TileEntityRenderer or TER (previously TileEntitySpecialRenderer or TESR ) is used to render blocks in a way that cannot be represented with a static baked model (JSON, OBJ, B3D, others). A tile entity renderer requires the block to have a TileEntity .","title":"TileEntityRenderer"},{"location":"tileentities/tesr/#creating-a-ter","text":"To create a TER, create a class that inherits from TileEntityRenderer . It takes a generic argument specifying the block\u2019s TileEntity class. The generic argument is used in the TER\u2019s render method. Only one TER exists for a given TileEntityType . Therefore, values that are specific to a single instance in the world should be stored in the tile entity being passed to the renderer rather than in the TER itself. For example, an integer that increments every frame, if stored in the TER, will increment every frame for every tile entity of this type in the world.","title":"Creating a TER"},{"location":"tileentities/tesr/#render","text":"This method is called every frame in order to render the tile entity.","title":"render"},{"location":"tileentities/tesr/#parameters","text":"tileentityIn : This is the instance of the tile entity being rendered. partialTicks : The amount of time, in fractions of a tick, that has passed since the last full tick. matrixStackIn : A stack holding four-dimensional matrix entries offset to the current position of the tile entity. bufferIn : A rendering buffer able to access a vertex builder. combinedLightIn : An integer of the current light value on the tile entity. combinedOverlayIn : An integer set to the current overlay of the tile entity, usually OverlayTexture#NO_OVERLAY or 655,360.","title":"Parameters"},{"location":"tileentities/tesr/#registering-a-ter","text":"In order to register a TER, call ClientRegistry#bindTileEntityRenderer passing the TileEntityType to be rendered with this TER and the instance of the TER used to render all TEs of this type.","title":"Registering a TER"},{"location":"tileentities/tileentity/","text":"TileEntities TileEntities are like simplified Entities that are bound to a Block. They are used to store dynamic data, execute tick based tasks, and dynamic rendering. Some examples from vanilla Minecraft would be handling of inventories on chests, smelting logic on furnaces, or area effects on beacons. More advanced examples exist in mods, such as quarries, sorting machines, pipes, and displays. Note TileEntities aren\u2019t a solution for everything and they can cause lag when used wrongly. When possible, try to avoid them. Registering Tile Entities are created and removed dynamically and as such are not registry objects on their own. In order to create a TileEntity , you need to extend the TileEntity class. As such, another object is registered instead to easily create and refer to the type of the dynamic object. For a TileEntity , these are known as TileEntityType s. A TileEntityType can be registered like any other registry object. To construct a TileEntityType , its builder form can be used via TileEntityType$Builder#of . This takes in two arguments: a factory representing some supplied method to create a new instance of the associated TileEntity , and a varargs of validBlocks which this TileEntity can be attached to. Building the TileEntityType is done by calling TileEntityType$Builder#build . This takes in a Type which represents the type-safe reference used to refer to this registry object in a DataFixer . Since DataFixer s are an optional system to use for mods, this can be passed as null . // For some DeferredRegister<TileEntityType<?>> REGISTER public static final RegistryObject<TileEntityType<MyTE>> MY_TE = REGISTER.register(\"myte\", () -> TileEntityType.Builder.of(factory, validBlocks).build(null)); Creating a TileEntity To create a TileEntity and attach it to a Block , two methods must be overridden within the Block subclass: IForgeBlock#hasTileEntity(BlockState state) IForgeBlock#createTileEntity(BlockState state, IBlockReader world) In most cases, #hasTileEntity will return true to indicate the block has a TileEntity and return a new instance of said TileEntity within #createTileEntity . Storing Data within your TileEntity In order to save data, override the following two methods: TileEntity#save(CompoundNBT nbt) TileEntity#load(BlockState state, CompoundNBT nbt) These methods are called whenever the Chunk containing the TileEntity gets loaded from/saved to NBT. Use them to read and write to the fields in your tile entity class. Note Whenever your data changes, you need to call TileEntity#setChanged ; otherwise, the Chunk containing your TileEntity might be skipped while the world is saved. Important It is important that you call the super methods! The tag names id , x , y , z , ForgeData and ForgeCaps are reserved by the super methods. Ticking TileEntities If you need a ticking TileEntity , for example to keep track of the progress during a smelting process, you need to add the net.minecraft.tileentity.ITickableTileEntity interface to your TileEntity . Now you can implement all your calculations within ITickableTileEntity#tick . Note This method is called each tick; therefore, you should avoid having complicated calculations in here. If possible, you should make more complex calculations every X ticks. (The amount of ticks in a second may be lower then 20 (twenty) but won\u2019t be higher) Synchronizing the Data to the Client There are three ways of syncing data to the client: synchronizing on chunk load, on block updates, and with a custom network message. Synchronizing on Chunk Load For this you need to override TileEntity#getUpdateTag() IForgeTileEntity#handleUpdateTag(BlockState state, CompoundNBT nbt) Again, this is pretty simple, the first method collects the data that should be sent to the client, while the second one processes that data. If your TileEntity doesn\u2019t contain much data, you might be able to use the methods out of the Storing Data within your TileEntity section. Important Synchronizing excessive/useless data for tile entities can lead to network congestion. You should optimize your network usage by sending only the information the client needs when the client needs it. For instance, it is more often than not unnecessary to send the inventory of a tile entity in the update tag, as this can be synchronized via its GUI. Synchronizing on Block Update This method is a bit more complicated, but again you just need to override two methods. Here is a tiny example implementation of it: @Override public SUpdateTileEntityPacket getUpdatePacket(){ CompoundNBT nbtTag = new CompoundNBT(); //Write your data into the nbtTag return new SUpdateTileEntityPacket(getBlockPos(), -1, nbtTag); } @Override public void onDataPacket(NetworkManager net, SUpdateTileEntityPacket pkt){ CompoundNBT tag = pkt.getTag(); //Handle your Data } The Constructor of SUpdateTileEntityPacket takes: The position of your TileEntity . An ID, though it isn\u2019t really used besides by Vanilla; therefore, you can just put a -1 in there. An CompoundNBT which should contain your data. Now, to send the packet, an update notification must be given on the server. World#sendBlockUpdated(BlockPos pos, BlockState oldState, BlockState newState, int flags) The pos should be your TileEntity \u2018s position. For oldState and newState , you can pass the current BlockState at that position. flags is a bitmask that should contain 2 , which will sync the changes to the client. See Constants$BlockFlags for more info as well as the rest of the flags. The flag 2 is equivalent to Constants$BlockFlags#BLOCK_UPDATE . Synchronizing Using a Custom Network Message This way of synchronizing is probably the most complicated but is usually the most optimized, as you can make sure that only the data you need to be synchronized is actually synchronized. You should first check out the Networking section and especially SimpleImpl before attempting this. Once you\u2019ve created your custom network message, you can send it to all users that have the TileEntity loaded with SimpleChannel#send(PacketDistributor$PacketTarget, MSG) . Warning It is important that you do safety checks, the TileEntity might already be destroyed/replaced when the message arrives at the player! You should also check if the chunk is loaded ( World#hasChunkAt(BlockPos) ).","title":"\ud0c0\uc77c \uc5d4\ud2f0\ud2f0"},{"location":"tileentities/tileentity/#tileentities","text":"TileEntities are like simplified Entities that are bound to a Block. They are used to store dynamic data, execute tick based tasks, and dynamic rendering. Some examples from vanilla Minecraft would be handling of inventories on chests, smelting logic on furnaces, or area effects on beacons. More advanced examples exist in mods, such as quarries, sorting machines, pipes, and displays. Note TileEntities aren\u2019t a solution for everything and they can cause lag when used wrongly. When possible, try to avoid them.","title":"TileEntities"},{"location":"tileentities/tileentity/#registering","text":"Tile Entities are created and removed dynamically and as such are not registry objects on their own. In order to create a TileEntity , you need to extend the TileEntity class. As such, another object is registered instead to easily create and refer to the type of the dynamic object. For a TileEntity , these are known as TileEntityType s. A TileEntityType can be registered like any other registry object. To construct a TileEntityType , its builder form can be used via TileEntityType$Builder#of . This takes in two arguments: a factory representing some supplied method to create a new instance of the associated TileEntity , and a varargs of validBlocks which this TileEntity can be attached to. Building the TileEntityType is done by calling TileEntityType$Builder#build . This takes in a Type which represents the type-safe reference used to refer to this registry object in a DataFixer . Since DataFixer s are an optional system to use for mods, this can be passed as null . // For some DeferredRegister<TileEntityType<?>> REGISTER public static final RegistryObject<TileEntityType<MyTE>> MY_TE = REGISTER.register(\"myte\", () -> TileEntityType.Builder.of(factory, validBlocks).build(null));","title":"Registering"},{"location":"tileentities/tileentity/#creating-a-tileentity","text":"To create a TileEntity and attach it to a Block , two methods must be overridden within the Block subclass: IForgeBlock#hasTileEntity(BlockState state) IForgeBlock#createTileEntity(BlockState state, IBlockReader world) In most cases, #hasTileEntity will return true to indicate the block has a TileEntity and return a new instance of said TileEntity within #createTileEntity .","title":"Creating a TileEntity"},{"location":"tileentities/tileentity/#storing-data-within-your-tileentity","text":"In order to save data, override the following two methods: TileEntity#save(CompoundNBT nbt) TileEntity#load(BlockState state, CompoundNBT nbt) These methods are called whenever the Chunk containing the TileEntity gets loaded from/saved to NBT. Use them to read and write to the fields in your tile entity class. Note Whenever your data changes, you need to call TileEntity#setChanged ; otherwise, the Chunk containing your TileEntity might be skipped while the world is saved. Important It is important that you call the super methods! The tag names id , x , y , z , ForgeData and ForgeCaps are reserved by the super methods.","title":"Storing Data within your TileEntity"},{"location":"tileentities/tileentity/#ticking-tileentities","text":"If you need a ticking TileEntity , for example to keep track of the progress during a smelting process, you need to add the net.minecraft.tileentity.ITickableTileEntity interface to your TileEntity . Now you can implement all your calculations within ITickableTileEntity#tick . Note This method is called each tick; therefore, you should avoid having complicated calculations in here. If possible, you should make more complex calculations every X ticks. (The amount of ticks in a second may be lower then 20 (twenty) but won\u2019t be higher)","title":"Ticking TileEntities"},{"location":"tileentities/tileentity/#synchronizing-the-data-to-the-client","text":"There are three ways of syncing data to the client: synchronizing on chunk load, on block updates, and with a custom network message.","title":"Synchronizing the Data to the Client"},{"location":"tileentities/tileentity/#synchronizing-on-chunk-load","text":"For this you need to override TileEntity#getUpdateTag() IForgeTileEntity#handleUpdateTag(BlockState state, CompoundNBT nbt) Again, this is pretty simple, the first method collects the data that should be sent to the client, while the second one processes that data. If your TileEntity doesn\u2019t contain much data, you might be able to use the methods out of the Storing Data within your TileEntity section. Important Synchronizing excessive/useless data for tile entities can lead to network congestion. You should optimize your network usage by sending only the information the client needs when the client needs it. For instance, it is more often than not unnecessary to send the inventory of a tile entity in the update tag, as this can be synchronized via its GUI.","title":"Synchronizing on Chunk Load"},{"location":"tileentities/tileentity/#synchronizing-on-block-update","text":"This method is a bit more complicated, but again you just need to override two methods. Here is a tiny example implementation of it: @Override public SUpdateTileEntityPacket getUpdatePacket(){ CompoundNBT nbtTag = new CompoundNBT(); //Write your data into the nbtTag return new SUpdateTileEntityPacket(getBlockPos(), -1, nbtTag); } @Override public void onDataPacket(NetworkManager net, SUpdateTileEntityPacket pkt){ CompoundNBT tag = pkt.getTag(); //Handle your Data } The Constructor of SUpdateTileEntityPacket takes: The position of your TileEntity . An ID, though it isn\u2019t really used besides by Vanilla; therefore, you can just put a -1 in there. An CompoundNBT which should contain your data. Now, to send the packet, an update notification must be given on the server. World#sendBlockUpdated(BlockPos pos, BlockState oldState, BlockState newState, int flags) The pos should be your TileEntity \u2018s position. For oldState and newState , you can pass the current BlockState at that position. flags is a bitmask that should contain 2 , which will sync the changes to the client. See Constants$BlockFlags for more info as well as the rest of the flags. The flag 2 is equivalent to Constants$BlockFlags#BLOCK_UPDATE .","title":"Synchronizing on Block Update"},{"location":"tileentities/tileentity/#synchronizing-using-a-custom-network-message","text":"This way of synchronizing is probably the most complicated but is usually the most optimized, as you can make sure that only the data you need to be synchronized is actually synchronized. You should first check out the Networking section and especially SimpleImpl before attempting this. Once you\u2019ve created your custom network message, you can send it to all users that have the TileEntity loaded with SimpleChannel#send(PacketDistributor$PacketTarget, MSG) . Warning It is important that you do safety checks, the TileEntity might already be destroyed/replaced when the message arrives at the player! You should also check if the chunk is loaded ( World#hasChunkAt(BlockPos) ).","title":"Synchronizing Using a Custom Network Message"},{"location":"utilities/recipes/","text":"\uc870\ud569\ubc95 With the update to Minecraft 1.12, Mojang introduced a new data-driven recipe system based on JSON files. Since then, it has been adopted by Forge and expanded in Minecraft 1.13 into datapacks . Loading Recipes Forge will load all recipes which can be found within the ./data/<modid>/recipes/ folder. You can call these files whatever you want, though the vanilla convention is to name them after the output item. For multiple recipes from different sources (Smelting, Crafting, etc), one vanilla convention is to use item_name_from_smelting.json . This name is also used as the registration key, but it does not affect the operation of the recipe. The Recipe file A basic recipe file might look like the following example: { \"type\": \"minecraft:crafting_shaped\", \"pattern\": [ \"xxa\", \"x x\", \"xxx\" ], \"key\": { \"x\": { \"tag\": \"forge:gems/diamond\" }, \"a\": { \"item\": \"mymod:myfirstitem\" } }, \"result\": { \"item\": \"mymod:myitem\", \"count\": 9 } } Note When you first obtain an ingredient to a vanilla recipe, it will automatically unlock the recipe in the recipe book. To achieve the same effect, you have to use the advancement system and create a new advancement for each of your ingredients. The advancement has to exist. This does not mean it has to be visible in the advancement tree. Type The type of a recipe is specified via the type field. You can think of this as the definition of which recipe layout to use, for example minecraft:crafting_shaped or minecraft:crafting_shapeless . Groups Optionally, you can add a group to your recipes to be displayed within the recipe helper interface. All recipes with the same group string will be shown in the same group. For example, this can be used to have all door recipes shown in the recipe helper interface as a single entry, even though there are different types of doors. Types of crafting recipes Within this section, we will take a closer look on the differences between defining a shaped and a shapeless crafting recipe. Shaped crafting Shaped recipes require the pattern and key keywords. A pattern defines the slot an item must appear in using placeholder characters. You can choose whatever character you want to be a placeholder for an item. The whitespace character is reserved for an empty slot. Keys, on the other hand, define what items to use for the placeholders. A key is defined by a placeholder character and the item. Shapeless crafting A shapeless recipe does not make use of the pattern and key keywords. To define a shapeless recipe, you have to use the ingredients list. It defines which items have to be used for the crafting process. There are many more of these types which can be used here, and you can even register your own. It is even possible to define a slot that requires more than one of an item, which means multiple of these items have to be in place. Note While there is no limit on how many ingredients your recipe requires, the vanilla crafting table only allows 9 items to be placed for each crafting recipe. The following example shows how an ingredient list looks like within JSON: \"ingredients\": [ { \"tag\": \"forge:gems/diamond\" }, { \"item\": \"minecraft:nether_star\" } ], ... Results Every vanilla recipe has to have a result tag to define the output item. When crafting something, you can get out more than one item. This is achieved by defining the count number. If this is left out, meaning it doesn\u2019t exist within the result block, it defaults to 1. Negative values are not allowed here as an ItemStack cannot be smaller than 0. There is no option to use the count number anywhere else than for the result. Forge also added support for results to include NBT data via the nbt tag.","title":"\uc870\ud569\ubc95"},{"location":"utilities/recipes/#_1","text":"With the update to Minecraft 1.12, Mojang introduced a new data-driven recipe system based on JSON files. Since then, it has been adopted by Forge and expanded in Minecraft 1.13 into datapacks .","title":"\uc870\ud569\ubc95"},{"location":"utilities/recipes/#loading-recipes","text":"Forge will load all recipes which can be found within the ./data/<modid>/recipes/ folder. You can call these files whatever you want, though the vanilla convention is to name them after the output item. For multiple recipes from different sources (Smelting, Crafting, etc), one vanilla convention is to use item_name_from_smelting.json . This name is also used as the registration key, but it does not affect the operation of the recipe.","title":"Loading Recipes"},{"location":"utilities/recipes/#the-recipe-file","text":"A basic recipe file might look like the following example: { \"type\": \"minecraft:crafting_shaped\", \"pattern\": [ \"xxa\", \"x x\", \"xxx\" ], \"key\": { \"x\": { \"tag\": \"forge:gems/diamond\" }, \"a\": { \"item\": \"mymod:myfirstitem\" } }, \"result\": { \"item\": \"mymod:myitem\", \"count\": 9 } } Note When you first obtain an ingredient to a vanilla recipe, it will automatically unlock the recipe in the recipe book. To achieve the same effect, you have to use the advancement system and create a new advancement for each of your ingredients. The advancement has to exist. This does not mean it has to be visible in the advancement tree.","title":"The Recipe file"},{"location":"utilities/recipes/#type","text":"The type of a recipe is specified via the type field. You can think of this as the definition of which recipe layout to use, for example minecraft:crafting_shaped or minecraft:crafting_shapeless .","title":"Type"},{"location":"utilities/recipes/#groups","text":"Optionally, you can add a group to your recipes to be displayed within the recipe helper interface. All recipes with the same group string will be shown in the same group. For example, this can be used to have all door recipes shown in the recipe helper interface as a single entry, even though there are different types of doors.","title":"Groups"},{"location":"utilities/recipes/#types-of-crafting-recipes","text":"Within this section, we will take a closer look on the differences between defining a shaped and a shapeless crafting recipe.","title":"Types of crafting recipes"},{"location":"utilities/recipes/#shaped-crafting","text":"Shaped recipes require the pattern and key keywords. A pattern defines the slot an item must appear in using placeholder characters. You can choose whatever character you want to be a placeholder for an item. The whitespace character is reserved for an empty slot. Keys, on the other hand, define what items to use for the placeholders. A key is defined by a placeholder character and the item.","title":"Shaped crafting"},{"location":"utilities/recipes/#shapeless-crafting","text":"A shapeless recipe does not make use of the pattern and key keywords. To define a shapeless recipe, you have to use the ingredients list. It defines which items have to be used for the crafting process. There are many more of these types which can be used here, and you can even register your own. It is even possible to define a slot that requires more than one of an item, which means multiple of these items have to be in place. Note While there is no limit on how many ingredients your recipe requires, the vanilla crafting table only allows 9 items to be placed for each crafting recipe. The following example shows how an ingredient list looks like within JSON: \"ingredients\": [ { \"tag\": \"forge:gems/diamond\" }, { \"item\": \"minecraft:nether_star\" } ], ...","title":"Shapeless crafting"},{"location":"utilities/recipes/#results","text":"Every vanilla recipe has to have a result tag to define the output item. When crafting something, you can get out more than one item. This is achieved by defining the count number. If this is left out, meaning it doesn\u2019t exist within the result block, it defaults to 1. Negative values are not allowed here as an ItemStack cannot be smaller than 0. There is no option to use the count number anywhere else than for the result. Forge also added support for results to include NBT data via the nbt tag.","title":"Results"},{"location":"utilities/tags/","text":"Tags Tags are generalized sets of objects in the game used for grouping related things together and providing fast membership checks. Declaring Your Own Groupings Tags are declared in your mod\u2019s datapack . For example, /data/<modid>/tags/blocks/foo/tagname.json will declare an INamedTag<Block> with ID modid:foo/tagname . Similarly, you may append to or override tags declared in other domains, such as Vanilla, by declaring your own JSONs. For example, to add your own mod\u2019s saplings to the Vanilla sapling tag, you would specify it in /data/minecraft/tags/blocks/saplings.json , and Vanilla will merge everything into one tag at reload, if the replace option is false. If replace is true, then all entries before the json specifying replace will be removed. See the Vanilla wiki for a description of the base syntax. Forge provides two extensions on the Vanilla syntax: You may declare an optional array of the same format as the values array, but any values listed here that are not present will not cause the tag loading to error. This has been deprecated in favor of the vanilla method of specifying optional tag values. You may declare a remove array of the same format as the values array. Any values listed here will be removed from the tag. This acts as a finer grained version of the Vanilla replace option. Using Tags In Code Block, Item, Fluid, and EntityType tags are automatically sent from the server to any remote clients on login and reload. In addition, Forge adds TileEntityType, Potion, and Enchantment tags. Function tags are not synced. BlockTags#getAllTags and ItemTags#getAllTags will retrieve the current ITagCollection , from which you can retrieve a ITag object by its ID. With a ITag object in hand, membership can be tested with tag.contains(thing) , or all the objects in the tag queried with tag.getValues() . As an example: public static final Tag<Item> myTag = new ItemTags.Wrapper(new ResourceLocation(\"mymod\", \"myitemgroup\")); // In some method Item unknownItem = stack.getItem(); boolean isInGroup = unknownItem.is(myTag); !!! note: The ITagCollection returned by #getAllTags (and the ITag s within it) may expire if a reload happens. The static INamedTag fields in BlockTags and ItemTags avoid this by introducing a wrapper that handles this expiring. Conventions There are several conventions that will help facilitate compatibility in the ecosystem: If there is a Vanilla tag that fits your block or item, add it to that tag. See the list of Vanilla tags . If there is a Forge tag that fits your block or item, add it to that tag. The list of tags declared by Forge can be seen on GitHub . If there is a group of something you feel should be shared by the community, use the forge namespace instead of your mod id. Tag naming conventions should follow Vanilla conventions. In particular, item and block groupings are plural instead of singular (e.g. minecraft:logs , minecraft:saplings ). Item tags should be sorted into subdirectories according to their type (e.g. forge:ingots/iron , forge:nuggets/brass , etc.). Migration from OreDictionary For recipes, tags can be used directly in the vanilla recipe format (see below). For matching items in code, see the section above. If you are declaring a new type of item grouping, follow a couple naming conventions: Use domain:type/material . When the name is a common one that all modders should adopt, use the forge domain. For example, brass ingots should be registered under the forge:ingots/brass tag and cobalt nuggets under the forge:nuggets/cobalt tag. Using Tags in Recipes and Advancements Tags are directly supported by Vanilla. See the respective Vanilla wiki pages for recipes and advancements for usage details.","title":"\ud0dc\uadf8"},{"location":"utilities/tags/#tags","text":"Tags are generalized sets of objects in the game used for grouping related things together and providing fast membership checks.","title":"Tags"},{"location":"utilities/tags/#declaring-your-own-groupings","text":"Tags are declared in your mod\u2019s datapack . For example, /data/<modid>/tags/blocks/foo/tagname.json will declare an INamedTag<Block> with ID modid:foo/tagname . Similarly, you may append to or override tags declared in other domains, such as Vanilla, by declaring your own JSONs. For example, to add your own mod\u2019s saplings to the Vanilla sapling tag, you would specify it in /data/minecraft/tags/blocks/saplings.json , and Vanilla will merge everything into one tag at reload, if the replace option is false. If replace is true, then all entries before the json specifying replace will be removed. See the Vanilla wiki for a description of the base syntax. Forge provides two extensions on the Vanilla syntax: You may declare an optional array of the same format as the values array, but any values listed here that are not present will not cause the tag loading to error. This has been deprecated in favor of the vanilla method of specifying optional tag values. You may declare a remove array of the same format as the values array. Any values listed here will be removed from the tag. This acts as a finer grained version of the Vanilla replace option.","title":"Declaring Your Own Groupings"},{"location":"utilities/tags/#using-tags-in-code","text":"Block, Item, Fluid, and EntityType tags are automatically sent from the server to any remote clients on login and reload. In addition, Forge adds TileEntityType, Potion, and Enchantment tags. Function tags are not synced. BlockTags#getAllTags and ItemTags#getAllTags will retrieve the current ITagCollection , from which you can retrieve a ITag object by its ID. With a ITag object in hand, membership can be tested with tag.contains(thing) , or all the objects in the tag queried with tag.getValues() . As an example: public static final Tag<Item> myTag = new ItemTags.Wrapper(new ResourceLocation(\"mymod\", \"myitemgroup\")); // In some method Item unknownItem = stack.getItem(); boolean isInGroup = unknownItem.is(myTag); !!! note: The ITagCollection returned by #getAllTags (and the ITag s within it) may expire if a reload happens. The static INamedTag fields in BlockTags and ItemTags avoid this by introducing a wrapper that handles this expiring.","title":"Using Tags In Code"},{"location":"utilities/tags/#conventions","text":"There are several conventions that will help facilitate compatibility in the ecosystem: If there is a Vanilla tag that fits your block or item, add it to that tag. See the list of Vanilla tags . If there is a Forge tag that fits your block or item, add it to that tag. The list of tags declared by Forge can be seen on GitHub . If there is a group of something you feel should be shared by the community, use the forge namespace instead of your mod id. Tag naming conventions should follow Vanilla conventions. In particular, item and block groupings are plural instead of singular (e.g. minecraft:logs , minecraft:saplings ). Item tags should be sorted into subdirectories according to their type (e.g. forge:ingots/iron , forge:nuggets/brass , etc.).","title":"Conventions"},{"location":"utilities/tags/#migration-from-oredictionary","text":"For recipes, tags can be used directly in the vanilla recipe format (see below). For matching items in code, see the section above. If you are declaring a new type of item grouping, follow a couple naming conventions: Use domain:type/material . When the name is a common one that all modders should adopt, use the forge domain. For example, brass ingots should be registered under the forge:ingots/brass tag and cobalt nuggets under the forge:nuggets/cobalt tag.","title":"Migration from OreDictionary"},{"location":"utilities/tags/#using-tags-in-recipes-and-advancements","text":"Tags are directly supported by Vanilla. See the respective Vanilla wiki pages for recipes and advancements for usage details.","title":"Using Tags in Recipes and Advancements"}]}