{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0 \ubb38\uc11c \uc774\ub294 \ud55c\uad6d\uc5b4\ub85c \ubc88\uc5ed\ub41c \ube44\uacf5\uc2dd \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0 \ubb38\uc11c \uc785\ub2c8\ub2e4. \uc774\uacf3\uc758 \ubb38\uc11c\ub4e4\uc740 \uc624\uc9c1 \ud3ec\uc9c0\ub9cc \ub2e4\ub8f9\ub2c8\ub2e4. Java \uac00\uc774\ub4dc\uac00 \uc544\ub2d9\ub2c8\ub2e4 . \uae43\ud5d9 \uc5d0\uc11c \ubb38\uc11c\uc5d0 \uae30\uc5ec\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uacf3 \uc5d0\uc11c \uc6d0\ubcf8 \ud3ec\uc9c0 \ubb38\uc11c\ub97c \ucc38\uace0\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Home"},{"location":"#_1","text":"\uc774\ub294 \ud55c\uad6d\uc5b4\ub85c \ubc88\uc5ed\ub41c \ube44\uacf5\uc2dd \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0 \ubb38\uc11c \uc785\ub2c8\ub2e4. \uc774\uacf3\uc758 \ubb38\uc11c\ub4e4\uc740 \uc624\uc9c1 \ud3ec\uc9c0\ub9cc \ub2e4\ub8f9\ub2c8\ub2e4. Java \uac00\uc774\ub4dc\uac00 \uc544\ub2d9\ub2c8\ub2e4 . \uae43\ud5d9 \uc5d0\uc11c \ubb38\uc11c\uc5d0 \uae30\uc5ec\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uacf3 \uc5d0\uc11c \uc6d0\ubcf8 \ud3ec\uc9c0 \ubb38\uc11c\ub97c \ucc38\uace0\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0 \ubb38\uc11c"},{"location":"contributing/","text":"\uc774 \ubb38\uc11c\uc5d0 \uae30\uc5ec\ud558\ub294 \ubc29\ubc95 \uc774 \ubb38\uc11c\ub294 \ud3ec\uc9c0 \uacf5\uc2dd \ubb38\uc11c\uc758 \uc2a4\ud0c0\uc77c \uac00\uc774\ub4dc \ub77c\uc778\uc744 \ub530\ub974\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uadf8\ub807\uc9c0 \uc54a\uc740 \uc810\uc774 \uc788\ub2e4\uba74 \uc774\uc288 \uc81c\uae30\ud558\uc5ec \uc8fc\uc138\uc694. \uc774 \ubb38\uc11c\ub294 \uc124\uba85\uc801\uc73c\ub85c \uc791\uc131\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ubb34\uc5b8\uac00\ub97c \uc5b4\ub5bb\uac8c \ud558\ub294\uc9c0\ub97c \uc791\uc740 \ubd80\ubd84\uc73c\ub85c \ub098\ub204\uc5b4 \uc124\uba85\ud574\uc57c \ud569\ub2c8\ub2e4. \ud3ec\uc9c0\ub294 \uacf5\uc2dd\uc801\uc73c\ub85c \ubcf4\ub2e4 \ud3ec\uad04\uc801\uc778 \uc608\uc81c\ub4e4\uc744 \uc62c\ub824\ub193\uc744 \uc218 \uc788\ub294 \uc704\ud0a4\ub97c \ub530\ub85c \uc6b4\uc601\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubb38\uc11c\ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0\ub97c \uc0ac\uc6a9\ud574 \ubaa8\ub4dc\ub97c \uc5b4\ub5bb\uac8c \ub9cc\ub4e4 \uc218 \uc788\ub294\uc9c0 \uc54c\uace0 \uc2f6\uc740 \uc774\ub4e4\uc744 \uc704\ud55c \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 \uc774 \ubb38\uc11c\ub97c Java \uac1c\ubc1c \ubb38\uc11c \ud29c\ud1a0\ub9ac\uc5bc\ucc98\ub7fc \uc791\uc131\ud558\uc9c0 \ub9d0\uc544\uc8fc\uc138\uc694 - \uc774\ub294 \uc774\ubbf8 \ud074\ub798\uc2a4\uc640 \uac19\uc740 \uc5ec\ub7ec Java \uc758 \uae30\ubcf8 \uac1c\ub150\ub4e4\uc744 \uc774\ubbf8 \uc54c\uace0 \uc788\ub294 \uc0ac\ub78c\ub4e4\uc744 \uc704\ud55c \uac83\uc785\ub2c8\ub2e4. \uc2a4\ud0c0\uc77c \uac00\uc774\ub4dc Important \ub4e4\uc5ec\uc4f8\ub54c\ub294 \uaf2d tab \ub9d0\uace0 \ub744\uc5b4\uc4f0\uae30 2\ubc88 \uc744 \ud574\uc8fc\uc138\uc694. \ub9de\ucda4\ubc95, \ubb38\ubc95 \ub4f1\uc740 \ud45c\uc900\uc5b4\ub97c \uc0ac\uc6a9\ud558\uba70, \ucd95\uc57d\uc5b4\ubcf4\ub2e4 \ubd84\ub9ac\ub41c \ub2e8\uc5b4\ub4e4\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uc120\ud638\ud574 \uc8fc\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4. \ub610\ud55c -\uc74c, -\uadf8\ub7ec\ud568. \uc2dd\uc73c\ub85c \ub05d\ub0b4\uae30 \ubcf4\ub2e4\ub294 -\uc694. -\ub2e4. \ub85c \ubb38\uc7a5\uc744 \ub05d\ub0b4 \uc8fc\uc138\uc694. # \ub098 ## \ub300\uc2e0 = \ub610\ub294 _ \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc8fc\uc138\uc694. h3 \ub610\ub294 \uadf8 \ud558\uc704 \uad6c\ud68d \uc81c\ubaa9\uc5d0\ub294 ### \ub4f1\uc744 \uc0ac\uc6a9\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. \uc774 \ud398\uc774\uc9c0\uc758 \uc18c\uc2a4\uc5d0\ub294 = \uc640 _ \ub97c \uc0ac\uc6a9\ud558\ub294 \uc608\uc2dc\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. = \ub85c \ubc11\uc904\uc744 \uadf8\uc73c\uba74 h1 \uc81c\ubaa9\uc774, _ \ub85c \ubc11\uc904\uc744 \uadf8\uc73c\uba74 h2 \uc81c\ubaa9\uc774 \ub429\ub2c8\ub2e4. \ucf54\ub4dc \uc870\uac01 \uc678\ubd80\uc5d0 \uc788\ub294 \uba54\uc11c\ub4dc\ub098 \ud544\ub4dc\ub97c \ucc38\uc870\ud560 \ub54c\ub294 # \ub85c \uad6c\ubd84\ud574 \uc8fc\uc138\uc694(\uc608: \ud074\ub798\uc2a4\uc774\ub984#\uba54\uc11c\ub4dc\uc774\ub984 ). \ub0b4\ubd80 \ud074\ub798\uc2a4\ub4e4\uc740 $ \ub85c \uad6c\ubd84\ud558\uc5ec \uc8fc\uc138\uc694(\uc608: \ud074\ub798\uc2a4\uc774\ub984$\ub0b4\ubd80\ud074\ub798\uc2a4\uc774\ub984 ). JSON \ucf54\ub4dc\uc870\uac01\uc740 js \uad6c\ubb38 \uac15\uc870\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \ub2e4\ub978 \ud398\uc774\uc9c0\ub85c \uc774\uc5b4\uc9c0\ub294 \ub9c1\ud06c\ub4e4\uc758 URL \uc740 \ud398\uc774\uc9c0 \ub9e8 \uc544\ub798\uc5d0 \uc9c0\uc815\ud574 \uc8fc\uc138\uc694. \ub2e4\ub978 \ubb38\uc11c \ud398\uc774\uc9c0\ub85c \uc774\uc5b4\uc9c0\ub294 \ub9c1\ud06c\ub4e4\uc740 \uc0c1\ub300 \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud574\uc11c \ucc38\uc870\ud574 \uc8fc\uc138\uc694. \uc900\uc218\uc0ac\ud56d ( !!! <type> \ub85c \ud45c\uae30\ud568)\uc740 \uae30\uc220 \ub41c \ub300\ub85c \ud3ec\ub9e4\ud305 \ub418\uc5b4\uc788\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4; \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ub80c\ub354\ub9c1\uc774 \uc774\uc0c1\ud558\uac8c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubb38\uc11c\uc5d0 \uae30\uc5ec\ud558\uae30"},{"location":"contributing/#_1","text":"\uc774 \ubb38\uc11c\ub294 \ud3ec\uc9c0 \uacf5\uc2dd \ubb38\uc11c\uc758 \uc2a4\ud0c0\uc77c \uac00\uc774\ub4dc \ub77c\uc778\uc744 \ub530\ub974\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uadf8\ub807\uc9c0 \uc54a\uc740 \uc810\uc774 \uc788\ub2e4\uba74 \uc774\uc288 \uc81c\uae30\ud558\uc5ec \uc8fc\uc138\uc694. \uc774 \ubb38\uc11c\ub294 \uc124\uba85\uc801\uc73c\ub85c \uc791\uc131\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ubb34\uc5b8\uac00\ub97c \uc5b4\ub5bb\uac8c \ud558\ub294\uc9c0\ub97c \uc791\uc740 \ubd80\ubd84\uc73c\ub85c \ub098\ub204\uc5b4 \uc124\uba85\ud574\uc57c \ud569\ub2c8\ub2e4. \ud3ec\uc9c0\ub294 \uacf5\uc2dd\uc801\uc73c\ub85c \ubcf4\ub2e4 \ud3ec\uad04\uc801\uc778 \uc608\uc81c\ub4e4\uc744 \uc62c\ub824\ub193\uc744 \uc218 \uc788\ub294 \uc704\ud0a4\ub97c \ub530\ub85c \uc6b4\uc601\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubb38\uc11c\ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0\ub97c \uc0ac\uc6a9\ud574 \ubaa8\ub4dc\ub97c \uc5b4\ub5bb\uac8c \ub9cc\ub4e4 \uc218 \uc788\ub294\uc9c0 \uc54c\uace0 \uc2f6\uc740 \uc774\ub4e4\uc744 \uc704\ud55c \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 \uc774 \ubb38\uc11c\ub97c Java \uac1c\ubc1c \ubb38\uc11c \ud29c\ud1a0\ub9ac\uc5bc\ucc98\ub7fc \uc791\uc131\ud558\uc9c0 \ub9d0\uc544\uc8fc\uc138\uc694 - \uc774\ub294 \uc774\ubbf8 \ud074\ub798\uc2a4\uc640 \uac19\uc740 \uc5ec\ub7ec Java \uc758 \uae30\ubcf8 \uac1c\ub150\ub4e4\uc744 \uc774\ubbf8 \uc54c\uace0 \uc788\ub294 \uc0ac\ub78c\ub4e4\uc744 \uc704\ud55c \uac83\uc785\ub2c8\ub2e4.","title":"\uc774 \ubb38\uc11c\uc5d0 \uae30\uc5ec\ud558\ub294 \ubc29\ubc95"},{"location":"contributing/#_2","text":"Important \ub4e4\uc5ec\uc4f8\ub54c\ub294 \uaf2d tab \ub9d0\uace0 \ub744\uc5b4\uc4f0\uae30 2\ubc88 \uc744 \ud574\uc8fc\uc138\uc694. \ub9de\ucda4\ubc95, \ubb38\ubc95 \ub4f1\uc740 \ud45c\uc900\uc5b4\ub97c \uc0ac\uc6a9\ud558\uba70, \ucd95\uc57d\uc5b4\ubcf4\ub2e4 \ubd84\ub9ac\ub41c \ub2e8\uc5b4\ub4e4\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uc120\ud638\ud574 \uc8fc\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4. \ub610\ud55c -\uc74c, -\uadf8\ub7ec\ud568. \uc2dd\uc73c\ub85c \ub05d\ub0b4\uae30 \ubcf4\ub2e4\ub294 -\uc694. -\ub2e4. \ub85c \ubb38\uc7a5\uc744 \ub05d\ub0b4 \uc8fc\uc138\uc694. # \ub098 ## \ub300\uc2e0 = \ub610\ub294 _ \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc8fc\uc138\uc694. h3 \ub610\ub294 \uadf8 \ud558\uc704 \uad6c\ud68d \uc81c\ubaa9\uc5d0\ub294 ### \ub4f1\uc744 \uc0ac\uc6a9\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. \uc774 \ud398\uc774\uc9c0\uc758 \uc18c\uc2a4\uc5d0\ub294 = \uc640 _ \ub97c \uc0ac\uc6a9\ud558\ub294 \uc608\uc2dc\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. = \ub85c \ubc11\uc904\uc744 \uadf8\uc73c\uba74 h1 \uc81c\ubaa9\uc774, _ \ub85c \ubc11\uc904\uc744 \uadf8\uc73c\uba74 h2 \uc81c\ubaa9\uc774 \ub429\ub2c8\ub2e4. \ucf54\ub4dc \uc870\uac01 \uc678\ubd80\uc5d0 \uc788\ub294 \uba54\uc11c\ub4dc\ub098 \ud544\ub4dc\ub97c \ucc38\uc870\ud560 \ub54c\ub294 # \ub85c \uad6c\ubd84\ud574 \uc8fc\uc138\uc694(\uc608: \ud074\ub798\uc2a4\uc774\ub984#\uba54\uc11c\ub4dc\uc774\ub984 ). \ub0b4\ubd80 \ud074\ub798\uc2a4\ub4e4\uc740 $ \ub85c \uad6c\ubd84\ud558\uc5ec \uc8fc\uc138\uc694(\uc608: \ud074\ub798\uc2a4\uc774\ub984$\ub0b4\ubd80\ud074\ub798\uc2a4\uc774\ub984 ). JSON \ucf54\ub4dc\uc870\uac01\uc740 js \uad6c\ubb38 \uac15\uc870\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \ub2e4\ub978 \ud398\uc774\uc9c0\ub85c \uc774\uc5b4\uc9c0\ub294 \ub9c1\ud06c\ub4e4\uc758 URL \uc740 \ud398\uc774\uc9c0 \ub9e8 \uc544\ub798\uc5d0 \uc9c0\uc815\ud574 \uc8fc\uc138\uc694. \ub2e4\ub978 \ubb38\uc11c \ud398\uc774\uc9c0\ub85c \uc774\uc5b4\uc9c0\ub294 \ub9c1\ud06c\ub4e4\uc740 \uc0c1\ub300 \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud574\uc11c \ucc38\uc870\ud574 \uc8fc\uc138\uc694. \uc900\uc218\uc0ac\ud56d ( !!! <type> \ub85c \ud45c\uae30\ud568)\uc740 \uae30\uc220 \ub41c \ub300\ub85c \ud3ec\ub9e4\ud305 \ub418\uc5b4\uc788\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4; \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ub80c\ub354\ub9c1\uc774 \uc774\uc0c1\ud558\uac8c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc2a4\ud0c0\uc77c \uac00\uc774\ub4dc"},{"location":"advanced/accesstransformers/","text":"\uc811\uadfc \ubcc0\ud658\uc790 \uc811\uadfc \ubcc0\ud658\uc790 (AccessTransformer, AT\ub77c\uace0 \uc9e7\uac8c \ubd80\ub974\uae30\ub3c4 \ud569\ub2c8\ub2e4.)\ub294 \ud074\ub798\uc2a4, \uba54\uc11c\ub4dc, \ud544\ub4dc\uc758 \uac00\uc2dc\uc131\uc744 \ud655\ub300\uc2dc\ud0a4\uac70\ub098, final \ud0a4\uc6cc\ub4dc \uc720\ubb34 \uc5ec\ubd80\ub97c \ubcc0\uacbd\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud558\uc5ec \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc774 \uc811\uadfc \ubd88\uac00\ub2a5\ud55c \ud074\ub798\uc2a4 \uba64\ubc84\uc5d0 \uc811\uadfc\ud558\uace0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc774\uc5d0 \uad00\ud55c \uacf5\uc2dd \ud3ec\uc9c0 \ubb38\uc11c \ub97c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0 \uae43\ud5d9 \ud398\uc774\uc9c0\uc5d0\uc11c \ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AT \ucd94\uac00\ud558\uae30 \uc811\uadfc \ubcc0\ud658\uc790\ub97c \ubaa8\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740, build.gradle \uc5d0 \uc904 \ud558\ub098 \ucd94\uac00\ud558\ub294 \uac83 \ub9cc\ud07c \uac04\ub2e8\ud569\ub2c8\ub2e4: // \uc774 \ube14\ub85d\uc740 \ub9e4\ud551 \ucc44\ub110\uacfc \ubc84\uc804\uc744 \uc9c0\uc815\ud558\ub294 \uacf3\uc774\uae30\ub3c4 \ud569\ub2c8\ub2e4. minecraft { accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') } \uc811\uadfc \ubcc0\ud658\uc790\ub97c \ucd94\uac00\ud558\uac70\ub098 \uc218\uc815\ud558\uc2e0 \uc774\ud6c4, Gradle \ud504\ub85c\uc81d\ud2b8\ub97c \uc0c8\ub85c\uace0\uce68 \ud558\uc154\uc57c\ub9cc \uc811\uadfc \ubcc0\ud658\uc790\uac00 \uc801\uc6a9\ub429\ub2c8\ub2e4. \uac1c\ubc1c \ub3c4\uc911\uc5d0\ub294 \uc811\uadfc \uc81c\ud55c\uc790 \uc124\uc815 \ud30c\uc77c\uc774 \ud504\ub85c\uc81d\ud2b8 \uc5b4\ub514\uc5d0\ub098 \uc704\uce58\ud558\uc5ec\ub3c4 \uc0c1\uad00 \uc5c6\uc73c\ub098, \ubaa8\ub4dc\ub97c \uac1c\ubc1c \ud658\uacbd \ubc16\uc5d0\uc11c \ubd88\ub7ec\uc62c \ub54c\uc5d0\ub294 JAR \uc548\uc758 META-INF/accesstransformer.cfg \uc5d0 \uc704\uce58\ud558\uc5ec\uc57c\ub9cc \uc815\uc0c1\uc801\uc73c\ub85c \ubd88\ub7ec\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\uc11d # \ub85c \uc2dc\uc791\ud558\ub294 \uc904\uc740 \uc8fc\uc11d\uc73c\ub85c \ucc98\ub9ac\ub418\uba70 \ubb34\uc2dc\ub429\ub2c8\ub2e4. \uc811\uadfc \uc218\uc815\uc790 \uc811\uadfc \uc218\uc815\uc790\ub294 \ud0c0\uac9f\uc774 \uac00\uc9c0\uac8c \ub420 \uc0c8\ub85c\uc6b4 \uac00\uc2dc\uc131\uc744 \uc815\uc758\ud569\ub2c8\ub2e4. \uac00\uc2dc\uc131\uc744 \uae30\uc900\uc73c\ub85c \uc704\uc5d0\uc11c \uc544\ub798\ub85c \uc815\ub82c\ud558\uba74: public - \ud328\ud0a4\uc9c0 \uc548, \ub610\ub294 \ubc16\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \ud074\ub798\uc2a4\uc5d0\uc11c \uc811\uadfc\ud560 \uc218 \uc788\uc74c protected - \ud328\ud0a4\uc9c0 \uc548\uc5d0 \uc788\ub294 \ud074\ub798\uc2a4, \ub610\ub294 \uc790\uc2dd \ud074\ub798\uc2a4\uc5d0\uc11c\ub9cc \uc811\uadfc\ud560 \uc218 \uc788\uc74c default - \ud328\ud0a4\uc9c0 \ub0b4\ubd80\uc5d0 \uc788\ub294 \ud074\ub798\uc2a4\uc5d0\uc11c\ub9cc \uc811\uadfc\ud560 \uc218 \uc788\uc74c private - \ud074\ub798\uc2a4 \ub0b4\ubd80\uc5d0\uc11c\ub9cc \uc811\uadfc\ud560 \uc218 \uc788\uc74c +f \uc640 -f \ub294 \ud2b9\uc218\ud55c \uc218\uc815\uc790\ub85c, \uae30\uc874\uc758 \ub2e4\ub978 \uc218\uc815\uc790\uc5d0 \ucd94\uac00\ub420 \uc218 \uc788\uc73c\uba70, \ud0c0\uac9f\uc758 final \ud0a4\uc6cc\ub4dc\ub97c \uc81c\uac70\ud558\uac70\ub098 \ucd94\uac00\ud558\uc5ec, \uae30\uc874\uc5d0\ub294 \ubd88\uac00\ub2a5\ud558\ub358 \uc790\uc2dd \ud074\ub798\uc2a4 \uc0dd\uc131\uc774\ub098, \uba54\uc11c\ub4dc \uc7ac\uc815\uc758, \ub610\ub294 \ud544\ub4dc \uac12 \ubcc0\uacbd \ub4f1\uc744 \uac00\ub2a5\ud558\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. Warning \uba54\uc11c\ub4dc\uc5d0 \uc811\uadfc \ubcc0\ud658\uc790\ub97c \uc0ac\uc6a9\ud560 \ub54c, \uc9c1\uc811\uc801\uc73c\ub85c \uac00\ub9ac\ud0a4\ub294 \uba54\uc11c\ub4dc\ub9cc \ubcc0\ud658\ud569\ub2c8\ub2e4; \uba54\uc11c\ub4dc\uc5d0 \uc811\uadfc \ubcc0\ud658\uc790\uac00 \uc801\uc6a9\ub418\uc5b4 \uac00\uc2dc\uc131\uc774 \ubcc0\uacbd\ub418\ub354\ub77c\ub3c4, \uc774\ub97c \uc7ac\uc815\uc758\ud558\ub294 \uba54\uc11c\ub4dc\ub4e4\uc5d0 \ub611\uac19\uc740 \uac00\uc2dc\uc131 \uc218\uc815\uc774 \uc774\ub8e8\uc5b4\uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub54c\ubb38\uc5d0, \uc790\uc2dd \uba54\uc11c\ub4dc\uac00 \ubd80\ubaa8 \uba54\uc11c\ub4dc\ubcf4\ub2e4 \ub354 \ub0ae\uc740 \uac00\uc2dc\uc131\uc744 \uac00\uc9c0\uac8c \uac00\uc9c0\uac8c \ub418\uc5b4 JVM \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc73c\ub2c8, \uac00\uc2dc\uc131\uc744 \ubcc0\uacbd\ud558\uace0\uc790 \ud558\ub294 \uba54\uc11c\ub4dc\uac00 \ub2e4\ub978 \uacf3\uc5d0\uc11c \uc7ac\uc815\uc758\ub418\uba74 \uc548\ub429\ub2c8\ub2e4! private \uba54\uc11c\ub4dc\ub098 final \uba54\uc11c\ub4dc(\ub610\ub294 final \ud074\ub798\uc2a4\uc5d0 \uc815\uc758\ub41c \uba54\uc11c\ub4dc), \uadf8\ub9ac\uace0 static (\uc815\uc801) \uba54\uc11c\ub4dc\ub4e4\uc740 \uc7ac\uc815\uc758\uac00 \ubd88\uac00\ub2a5\ud569\ub2c8\ub2e4, \uadf8\ub807\uae30\uc5d0 \uc704\uc640 \uac19\uc740 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ubcc0\ud658 \ud0c0\uac9f \uc9c0\uc815\ud558\uae30 Important \uc811\uadfc \ubcc0\ud658\uc790\ub97c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud074\ub798\uc2a4\uc5d0 \uc0ac\uc6a9\ud560\ub54c, \ud544\ub4dc\ub098 \uba54\uc11c\ub4dc \uc774\ub984\uc73c\ub85c SRG \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \ud074\ub798\uc2a4 \ud074\ub798\uc2a4\ub97c \uc9c0\uc815\ud558\ub824\uba74: <\uc811\uadfc \uc218\uc815\uc790> <\uc644\uc804\ud55c \ud074\ub798\uc2a4 \uc774\ub984> \ub0b4\ubd80 \ud074\ub798\uc2a4\ub4e4\uc740, \uc678\ubd80 \ud074\ub798\uc2a4\uc758 \uc644\uc804\ud55c \uc774\ub984\uacfc \ub0b4\ubd80 \ud074\ub798\uc2a4\uc758 \uc774\ub984\uc744 $ \ub85c \ubd84\ub9ac\ud558\uc5ec \ud45c\uc2dc\ud569\ub2c8\ub2e4. \ud544\ub4dc \ud544\ub4dc\ub97c \uc9c0\uc815\ud558\ub824\uba74: <\uc811\uadfc \uc218\uc815\uc790> <\uc644\uc804\ud55c \ud074\ub798\uc2a4 \uc774\ub984> <\ud544\ub4dc \uc774\ub984> \uba54\uc11c\ub4dc \uba54\uc11c\ub4dc\ub97c \uc9c0\uc815\ud558\ub294 \uac83\uc740 \ud2b9\uc218\ud55c \ubb38\ubc95\uc744 \ud1b5\ud558\uc5ec \uba54\uc11c\ub4dc\uc758 \uc778\uc790\ub4e4\uacfc \ubc18\ud658 \ud0c0\uc785\uae4c\uc9c0 \ud45c\uc2dc\ud569\ub2c8\ub2e4: <\uc811\uadfc \uc218\uc815\uc790> <\uc644\uc804\ud55c \ud074\ub798\uc2a4 \uc774\ub984> <\uba54\uc11c\ub4dc \uc774\ub984>(<\uc778\uc790\uc758 \ud0c0\uc785\ub4e4>)<\ubc18\ud658 \ud0c0\uc785> Specifying Types \uc774\ub294 \u201c\ud544\ub4dc \ub514\uc2a4\ud06c\ub9bd\ud130\u201d\ub77c\uace0 \ubd88\ub9ac\uae30\ub3c4 \ud569\ub2c8\ub2e4.\uc790\uc138\ud55c \uc0ac\ud56d\uc740 Oracle \uae30\uc220 \ubb38\uc11c\uc5d0\uc11c \ud655\uc778\ud558\uc138\uc694(Java Virtual Machine Specification, SE 8, sections 4.3.2 and 4.3.3) B - byte , \ubd80\ud638\uac00 \uc788\ub294 \ubc14\uc774\ud2b8 C - char , UTF-16 \uc720\ub2c8\ucf54\ub4dc \ubb38\uc790 \ubc88\ud638 D - double , \ubc30\uc815\ubc00\ub3c4 \ubd80\ub3d9 \uc18c\uc218\uc810 F - float , \ub2e8\uc815\ubc00\ub3c4 \ubd80\ub3d9 \uc18c\uc218\uc810 I - integer , 32\ube44\ud2b8 \uc815\uc218 J - long , 64\ube44\ud2b8 \uc815\uc218 S - short , \ubd80\ud638\uac00 \uc788\ub294 16\ube44\ud2b8 \uc815\uc218 Z - boolean , true \ub610\ub294 false \uc778 \uac12 [ - \ubc30\uc5f4\uc758 \ucc28\uc6d0 1\uac1c\ub97c \ud45c\uc2dc\ud568 \uc608: [[S \ub294 short[][] \ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4 L<class name>; - \ucc38\uc870 \ud0c0\uc785\uc744 \ucc38\uc870\ud568 \uc608: Ljava/lang/String; \ub294 \ucc38\uc870 \ud0c0\uc785 java.lang.String \ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4 (\ube57\uae08 \ub300\uc2e0 \ub9c8\uce68\ud45c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4) ( - \uba54\uc11c\ub4dc \ub514\uc2a4\ud06c\ub9bd\ud130\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4, \uc778\uc790\ub4e4\uc740 \uc788\ub2e4\uba74 \uc774\uacf3\uc5d0\uc11c \uae30\uc220\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4 \uc608: <method>(I)Z \ub294 \uc778\uc790\ub85c Int 1\uac1c\ub97c \ubc1b\uace0 Boolean\uc744 \ubc18\ud658\ud558\ub294 \uba54\uc11c\ub4dc\ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4 V - \ubc18\ud658\ud558\ub294 \uac12\uc774 \uc5c6\ub294 \uba54\uc11c\ub4dc\ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4, \uba54\uc11c\ub4dc \ub514\uc2a4\ud06c\ub9bd\ud130 \ub9e8 \ub4a4\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 \uc608: <method>()V \ub294 \ubc1b\ub294 \uc778\uc790\uac00 \uc5c6\uc73c\uba70 \ubc18\ud658\ud558\ub294 \uac12\ub3c4 \uc5c6\ub294 \uba54\uc11c\ub4dc\ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4 \uc608\uc81c\ub4e4 # MenuScreens \ud074\ub798\uc2a4\uc758 ScreenConstructor \ub97c public\uc73c\ub85c \ub9cc\ub4ed\ub2c8\ub2e4 public net.minecraft.client.gui.screens.MenuScreens$ScreenConstructor # MinecraftServer\uc758 'random' \ud544\ub4dc\ub97c protected \ub85c \ub9cc\ub4e4\uace0 final \ud0a4\uc6cc\ub4dc\ub97c \uc81c\uac70\ud569\ub2c8\ub2e4 protected-f net.minecraft.server.MinecraftServer f_129758_ #random # Util \uc5d0 \uc788\ub294 String \uc744 \uc778\uc790\ub85c \ubc1b\uace0 ExecutorService \ub97c \ubc18\ud658\ud558\ub294, # 'makeExecutor' \uba54\uc11c\ub4dc\ub97c public \uc73c\ub85c \ub9cc\ub4ed\ub2c8\ub2e4 public net.minecraft.Util m_137477_(Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; #makeExecutor # SerializableUUID \uc5d0 \uc788\ub294 2\uac1c\uc758 long \uc744 \uc778\uc790\ub85c \ubc1b\uace0 int[] \ub97c \ubc18\ud658\ud558\ub294, # 'leastMostToIntArray' \uba54\uc11c\ub4dc\ub97c public\uc73c\ub85c \ub9cc\ub4ed\ub2c8\ub2e4 public net.minecraft.core.SerializableUUID m_123274_(JJ)[I #leastMostToIntArray","title":"\uc811\uadfc \ubcc0\ud615\uc790"},{"location":"advanced/accesstransformers/#_1","text":"\uc811\uadfc \ubcc0\ud658\uc790 (AccessTransformer, AT\ub77c\uace0 \uc9e7\uac8c \ubd80\ub974\uae30\ub3c4 \ud569\ub2c8\ub2e4.)\ub294 \ud074\ub798\uc2a4, \uba54\uc11c\ub4dc, \ud544\ub4dc\uc758 \uac00\uc2dc\uc131\uc744 \ud655\ub300\uc2dc\ud0a4\uac70\ub098, final \ud0a4\uc6cc\ub4dc \uc720\ubb34 \uc5ec\ubd80\ub97c \ubcc0\uacbd\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud558\uc5ec \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc774 \uc811\uadfc \ubd88\uac00\ub2a5\ud55c \ud074\ub798\uc2a4 \uba64\ubc84\uc5d0 \uc811\uadfc\ud558\uace0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc774\uc5d0 \uad00\ud55c \uacf5\uc2dd \ud3ec\uc9c0 \ubb38\uc11c \ub97c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0 \uae43\ud5d9 \ud398\uc774\uc9c0\uc5d0\uc11c \ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc811\uadfc \ubcc0\ud658\uc790"},{"location":"advanced/accesstransformers/#at","text":"\uc811\uadfc \ubcc0\ud658\uc790\ub97c \ubaa8\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740, build.gradle \uc5d0 \uc904 \ud558\ub098 \ucd94\uac00\ud558\ub294 \uac83 \ub9cc\ud07c \uac04\ub2e8\ud569\ub2c8\ub2e4: // \uc774 \ube14\ub85d\uc740 \ub9e4\ud551 \ucc44\ub110\uacfc \ubc84\uc804\uc744 \uc9c0\uc815\ud558\ub294 \uacf3\uc774\uae30\ub3c4 \ud569\ub2c8\ub2e4. minecraft { accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') } \uc811\uadfc \ubcc0\ud658\uc790\ub97c \ucd94\uac00\ud558\uac70\ub098 \uc218\uc815\ud558\uc2e0 \uc774\ud6c4, Gradle \ud504\ub85c\uc81d\ud2b8\ub97c \uc0c8\ub85c\uace0\uce68 \ud558\uc154\uc57c\ub9cc \uc811\uadfc \ubcc0\ud658\uc790\uac00 \uc801\uc6a9\ub429\ub2c8\ub2e4. \uac1c\ubc1c \ub3c4\uc911\uc5d0\ub294 \uc811\uadfc \uc81c\ud55c\uc790 \uc124\uc815 \ud30c\uc77c\uc774 \ud504\ub85c\uc81d\ud2b8 \uc5b4\ub514\uc5d0\ub098 \uc704\uce58\ud558\uc5ec\ub3c4 \uc0c1\uad00 \uc5c6\uc73c\ub098, \ubaa8\ub4dc\ub97c \uac1c\ubc1c \ud658\uacbd \ubc16\uc5d0\uc11c \ubd88\ub7ec\uc62c \ub54c\uc5d0\ub294 JAR \uc548\uc758 META-INF/accesstransformer.cfg \uc5d0 \uc704\uce58\ud558\uc5ec\uc57c\ub9cc \uc815\uc0c1\uc801\uc73c\ub85c \ubd88\ub7ec\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"AT \ucd94\uac00\ud558\uae30"},{"location":"advanced/accesstransformers/#_2","text":"# \ub85c \uc2dc\uc791\ud558\ub294 \uc904\uc740 \uc8fc\uc11d\uc73c\ub85c \ucc98\ub9ac\ub418\uba70 \ubb34\uc2dc\ub429\ub2c8\ub2e4.","title":"\uc8fc\uc11d"},{"location":"advanced/accesstransformers/#_3","text":"\uc811\uadfc \uc218\uc815\uc790\ub294 \ud0c0\uac9f\uc774 \uac00\uc9c0\uac8c \ub420 \uc0c8\ub85c\uc6b4 \uac00\uc2dc\uc131\uc744 \uc815\uc758\ud569\ub2c8\ub2e4. \uac00\uc2dc\uc131\uc744 \uae30\uc900\uc73c\ub85c \uc704\uc5d0\uc11c \uc544\ub798\ub85c \uc815\ub82c\ud558\uba74: public - \ud328\ud0a4\uc9c0 \uc548, \ub610\ub294 \ubc16\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \ud074\ub798\uc2a4\uc5d0\uc11c \uc811\uadfc\ud560 \uc218 \uc788\uc74c protected - \ud328\ud0a4\uc9c0 \uc548\uc5d0 \uc788\ub294 \ud074\ub798\uc2a4, \ub610\ub294 \uc790\uc2dd \ud074\ub798\uc2a4\uc5d0\uc11c\ub9cc \uc811\uadfc\ud560 \uc218 \uc788\uc74c default - \ud328\ud0a4\uc9c0 \ub0b4\ubd80\uc5d0 \uc788\ub294 \ud074\ub798\uc2a4\uc5d0\uc11c\ub9cc \uc811\uadfc\ud560 \uc218 \uc788\uc74c private - \ud074\ub798\uc2a4 \ub0b4\ubd80\uc5d0\uc11c\ub9cc \uc811\uadfc\ud560 \uc218 \uc788\uc74c +f \uc640 -f \ub294 \ud2b9\uc218\ud55c \uc218\uc815\uc790\ub85c, \uae30\uc874\uc758 \ub2e4\ub978 \uc218\uc815\uc790\uc5d0 \ucd94\uac00\ub420 \uc218 \uc788\uc73c\uba70, \ud0c0\uac9f\uc758 final \ud0a4\uc6cc\ub4dc\ub97c \uc81c\uac70\ud558\uac70\ub098 \ucd94\uac00\ud558\uc5ec, \uae30\uc874\uc5d0\ub294 \ubd88\uac00\ub2a5\ud558\ub358 \uc790\uc2dd \ud074\ub798\uc2a4 \uc0dd\uc131\uc774\ub098, \uba54\uc11c\ub4dc \uc7ac\uc815\uc758, \ub610\ub294 \ud544\ub4dc \uac12 \ubcc0\uacbd \ub4f1\uc744 \uac00\ub2a5\ud558\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. Warning \uba54\uc11c\ub4dc\uc5d0 \uc811\uadfc \ubcc0\ud658\uc790\ub97c \uc0ac\uc6a9\ud560 \ub54c, \uc9c1\uc811\uc801\uc73c\ub85c \uac00\ub9ac\ud0a4\ub294 \uba54\uc11c\ub4dc\ub9cc \ubcc0\ud658\ud569\ub2c8\ub2e4; \uba54\uc11c\ub4dc\uc5d0 \uc811\uadfc \ubcc0\ud658\uc790\uac00 \uc801\uc6a9\ub418\uc5b4 \uac00\uc2dc\uc131\uc774 \ubcc0\uacbd\ub418\ub354\ub77c\ub3c4, \uc774\ub97c \uc7ac\uc815\uc758\ud558\ub294 \uba54\uc11c\ub4dc\ub4e4\uc5d0 \ub611\uac19\uc740 \uac00\uc2dc\uc131 \uc218\uc815\uc774 \uc774\ub8e8\uc5b4\uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub54c\ubb38\uc5d0, \uc790\uc2dd \uba54\uc11c\ub4dc\uac00 \ubd80\ubaa8 \uba54\uc11c\ub4dc\ubcf4\ub2e4 \ub354 \ub0ae\uc740 \uac00\uc2dc\uc131\uc744 \uac00\uc9c0\uac8c \uac00\uc9c0\uac8c \ub418\uc5b4 JVM \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc73c\ub2c8, \uac00\uc2dc\uc131\uc744 \ubcc0\uacbd\ud558\uace0\uc790 \ud558\ub294 \uba54\uc11c\ub4dc\uac00 \ub2e4\ub978 \uacf3\uc5d0\uc11c \uc7ac\uc815\uc758\ub418\uba74 \uc548\ub429\ub2c8\ub2e4! private \uba54\uc11c\ub4dc\ub098 final \uba54\uc11c\ub4dc(\ub610\ub294 final \ud074\ub798\uc2a4\uc5d0 \uc815\uc758\ub41c \uba54\uc11c\ub4dc), \uadf8\ub9ac\uace0 static (\uc815\uc801) \uba54\uc11c\ub4dc\ub4e4\uc740 \uc7ac\uc815\uc758\uac00 \ubd88\uac00\ub2a5\ud569\ub2c8\ub2e4, \uadf8\ub807\uae30\uc5d0 \uc704\uc640 \uac19\uc740 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"\uc811\uadfc \uc218\uc815\uc790"},{"location":"advanced/accesstransformers/#_4","text":"Important \uc811\uadfc \ubcc0\ud658\uc790\ub97c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud074\ub798\uc2a4\uc5d0 \uc0ac\uc6a9\ud560\ub54c, \ud544\ub4dc\ub098 \uba54\uc11c\ub4dc \uc774\ub984\uc73c\ub85c SRG \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4.","title":"\ubcc0\ud658 \ud0c0\uac9f \uc9c0\uc815\ud558\uae30"},{"location":"advanced/accesstransformers/#_5","text":"\ud074\ub798\uc2a4\ub97c \uc9c0\uc815\ud558\ub824\uba74: <\uc811\uadfc \uc218\uc815\uc790> <\uc644\uc804\ud55c \ud074\ub798\uc2a4 \uc774\ub984> \ub0b4\ubd80 \ud074\ub798\uc2a4\ub4e4\uc740, \uc678\ubd80 \ud074\ub798\uc2a4\uc758 \uc644\uc804\ud55c \uc774\ub984\uacfc \ub0b4\ubd80 \ud074\ub798\uc2a4\uc758 \uc774\ub984\uc744 $ \ub85c \ubd84\ub9ac\ud558\uc5ec \ud45c\uc2dc\ud569\ub2c8\ub2e4.","title":"\ud074\ub798\uc2a4"},{"location":"advanced/accesstransformers/#_6","text":"\ud544\ub4dc\ub97c \uc9c0\uc815\ud558\ub824\uba74: <\uc811\uadfc \uc218\uc815\uc790> <\uc644\uc804\ud55c \ud074\ub798\uc2a4 \uc774\ub984> <\ud544\ub4dc \uc774\ub984>","title":"\ud544\ub4dc"},{"location":"advanced/accesstransformers/#_7","text":"\uba54\uc11c\ub4dc\ub97c \uc9c0\uc815\ud558\ub294 \uac83\uc740 \ud2b9\uc218\ud55c \ubb38\ubc95\uc744 \ud1b5\ud558\uc5ec \uba54\uc11c\ub4dc\uc758 \uc778\uc790\ub4e4\uacfc \ubc18\ud658 \ud0c0\uc785\uae4c\uc9c0 \ud45c\uc2dc\ud569\ub2c8\ub2e4: <\uc811\uadfc \uc218\uc815\uc790> <\uc644\uc804\ud55c \ud074\ub798\uc2a4 \uc774\ub984> <\uba54\uc11c\ub4dc \uc774\ub984>(<\uc778\uc790\uc758 \ud0c0\uc785\ub4e4>)<\ubc18\ud658 \ud0c0\uc785>","title":"\uba54\uc11c\ub4dc"},{"location":"advanced/accesstransformers/#specifying-types","text":"\uc774\ub294 \u201c\ud544\ub4dc \ub514\uc2a4\ud06c\ub9bd\ud130\u201d\ub77c\uace0 \ubd88\ub9ac\uae30\ub3c4 \ud569\ub2c8\ub2e4.\uc790\uc138\ud55c \uc0ac\ud56d\uc740 Oracle \uae30\uc220 \ubb38\uc11c\uc5d0\uc11c \ud655\uc778\ud558\uc138\uc694(Java Virtual Machine Specification, SE 8, sections 4.3.2 and 4.3.3) B - byte , \ubd80\ud638\uac00 \uc788\ub294 \ubc14\uc774\ud2b8 C - char , UTF-16 \uc720\ub2c8\ucf54\ub4dc \ubb38\uc790 \ubc88\ud638 D - double , \ubc30\uc815\ubc00\ub3c4 \ubd80\ub3d9 \uc18c\uc218\uc810 F - float , \ub2e8\uc815\ubc00\ub3c4 \ubd80\ub3d9 \uc18c\uc218\uc810 I - integer , 32\ube44\ud2b8 \uc815\uc218 J - long , 64\ube44\ud2b8 \uc815\uc218 S - short , \ubd80\ud638\uac00 \uc788\ub294 16\ube44\ud2b8 \uc815\uc218 Z - boolean , true \ub610\ub294 false \uc778 \uac12 [ - \ubc30\uc5f4\uc758 \ucc28\uc6d0 1\uac1c\ub97c \ud45c\uc2dc\ud568 \uc608: [[S \ub294 short[][] \ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4 L<class name>; - \ucc38\uc870 \ud0c0\uc785\uc744 \ucc38\uc870\ud568 \uc608: Ljava/lang/String; \ub294 \ucc38\uc870 \ud0c0\uc785 java.lang.String \ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4 (\ube57\uae08 \ub300\uc2e0 \ub9c8\uce68\ud45c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4) ( - \uba54\uc11c\ub4dc \ub514\uc2a4\ud06c\ub9bd\ud130\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4, \uc778\uc790\ub4e4\uc740 \uc788\ub2e4\uba74 \uc774\uacf3\uc5d0\uc11c \uae30\uc220\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4 \uc608: <method>(I)Z \ub294 \uc778\uc790\ub85c Int 1\uac1c\ub97c \ubc1b\uace0 Boolean\uc744 \ubc18\ud658\ud558\ub294 \uba54\uc11c\ub4dc\ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4 V - \ubc18\ud658\ud558\ub294 \uac12\uc774 \uc5c6\ub294 \uba54\uc11c\ub4dc\ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4, \uba54\uc11c\ub4dc \ub514\uc2a4\ud06c\ub9bd\ud130 \ub9e8 \ub4a4\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 \uc608: <method>()V \ub294 \ubc1b\ub294 \uc778\uc790\uac00 \uc5c6\uc73c\uba70 \ubc18\ud658\ud558\ub294 \uac12\ub3c4 \uc5c6\ub294 \uba54\uc11c\ub4dc\ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4","title":"Specifying Types"},{"location":"advanced/accesstransformers/#_8","text":"# MenuScreens \ud074\ub798\uc2a4\uc758 ScreenConstructor \ub97c public\uc73c\ub85c \ub9cc\ub4ed\ub2c8\ub2e4 public net.minecraft.client.gui.screens.MenuScreens$ScreenConstructor # MinecraftServer\uc758 'random' \ud544\ub4dc\ub97c protected \ub85c \ub9cc\ub4e4\uace0 final \ud0a4\uc6cc\ub4dc\ub97c \uc81c\uac70\ud569\ub2c8\ub2e4 protected-f net.minecraft.server.MinecraftServer f_129758_ #random # Util \uc5d0 \uc788\ub294 String \uc744 \uc778\uc790\ub85c \ubc1b\uace0 ExecutorService \ub97c \ubc18\ud658\ud558\ub294, # 'makeExecutor' \uba54\uc11c\ub4dc\ub97c public \uc73c\ub85c \ub9cc\ub4ed\ub2c8\ub2e4 public net.minecraft.Util m_137477_(Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; #makeExecutor # SerializableUUID \uc5d0 \uc788\ub294 2\uac1c\uc758 long \uc744 \uc778\uc790\ub85c \ubc1b\uace0 int[] \ub97c \ubc18\ud658\ud558\ub294, # 'leastMostToIntArray' \uba54\uc11c\ub4dc\ub97c public\uc73c\ub85c \ub9cc\ub4ed\ub2c8\ub2e4 public net.minecraft.core.SerializableUUID m_123274_(JJ)[I #leastMostToIntArray","title":"\uc608\uc81c\ub4e4"},{"location":"blockentities/","text":"\ube14\ub85d \uc5d4\ud2f0\ud2f0 BlockEntity \ub294 \uac04\uc18c\ud654\ub41c Entity \ub85c, \ube14\ub7ed\uc5d0 \uc885\uc18d\ub41c \uc5d4\ud2f0\ud2f0 \uc785\ub2c8\ub2e4. BlockEntity \ub294 \ub3d9\uc801\uc73c\ub85c \ubcc0\ud558\ub294 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uac70\ub098, \ub9e4 \ud2f1\ub9c8\ub2e4 \uc218\ud589\ub418\uc57c \ud558\ub294 \uc791\uc5c5\uc744 \ud558\uac70\ub098, \ub3d9\uc801 \ub80c\ub354\ub9c1\uc744 \ud574\uc57c \ud560 \ub54c \ub4f1, BlockState \ub9cc\uc73c\ub85c\ub294 \uad6c\ud604\ud558\uae30 \uc5b4\ub824\uc6b4 \uae30\ub2a5\ub4e4\uc744 \ub9cc\ub4e4 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 BlockEntity \ub97c \uc0c1\uc790 \uc778\ubca4\ud1a0\ub9ac, \ud654\ub85c \uc81c\ub828, \uc2e0\ud638\uae30\uc758 \uad11\uc5ed \ud3ec\uc158 \ud6a8\uacfc\ub97c \uad6c\ud604\ud558\ub294\ub370\uc5d0 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub354 \ubcf5\uc7a1\ud55c \uc608\uc81c\ub4e4\uc740 \uad74\ucc29\uae30, \uc544\uc774\ud15c \uc815\ub82c\ud558\ub294 \uae30\uacc4, \ud30c\uc774\ud504, \ub514\uc2a4\ud50c\ub808\uc774 \ub4f1 \ub2e4\ub978 \ubaa8\ub4dc\uc5d0\uc11c \ucc3e\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note BlockEntity \ub294 \ubaa8\ub4e0 \ubb38\uc81c\uc758 \ub9cc\ub2a5 \ud574\uacb0 \ubc29\ubc95\uc774 \uc544\ub2c8\uba70, \ub0a8\uc6a9\ud560 \uacbd\uc6b0 \uc11c\ubc84\uc5d0 \ud070 \ub809\uc744 \uc720\ubc1c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac00\ub2a5\ud558\ub2e4\uba74 \ucd5c\ub300\ud55c \uc4f0\uc9c0 \uc54a\ub3c4\ub85d \ud558\uc138\uc694. \ub4f1\ub85d\ud558\uae30 BlockEntity \ub4e4\uc740 \uc5bc\ub9c8\ub4e0\uc9c0 \uc0dd\uc131\ub418\uace0 \uc81c\uac70\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uadf8\ub7ec\ub2e4\ubcf4\ub2c8 BlockEntity \ub97c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ud558\ub294 \ub300\uc2e0 BlockEntity \uc758 \uc885\ub958 \ub97c \ud45c\ud604\ud558\ub294 BlockEntityType \uc744 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ud569\ub2c8\ub2e4. BlockEntityType \uc740 \ub2e4\ub978 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uac1d\uccb4\ub4e4\uacfc \ub3d9\uc77c\ud55c \ubc29\ubc95\uc73c\ub85c \ub4f1\ub85d \ud569\ub2c8\ub2e4. BlockEntityType \uc744 \ub9cc\ub4e4\uae30 \uc704\ud574\uc120 \uba3c\uc800 BlockEntityType$Builder \uac00 \ud544\uc694\ud55c\ub370, BlockEntityType$Builder#of \ub97c \ud638\ucd9c\ud558\uc5ec \ube4c\ub354\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 BlockPos \uc640 BlockState \ub97c \uc778\uc790\ub85c \ubc1b\uc544 \ud574\ub2f9 BlockEntity \uc758 \uc0c8\ub85c\uc6b4 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4e4\uc5b4\uc8fc\ub294 BlockEntityType$BlockEntitySupplier , \uadf8\ub9ac\uace0 \ud574\ub2f9 BlockEntity \uac00 \ubd80\ucc29\ub420 \uc218 \uc788\ub294 Block \uac00\ubcc0 \uc778\uc790\ub97c \ubc1b\uc2b5\ub2c8\ub2e4. \uc774\uc81c BlockEntityType$Builder \uac00 \uc788\uc73c\ub2c8, BlockEntityType$Builder#build \ub97c \ud638\ucd9c\ud558\uc5ec BlockEntityType \uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 DataFixer \uc5d0\uc11c \uc0ac\uc6a9\ud560 Type \uc744 \uc778\uc790\ub85c \ubc1b\ub294\ub370, \uc774\ub294 \uc774 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uac1d\uccb4\ub97c \ud0c0\uc785 \uc624\ub958 \uc704\ud5d8 \uc5c6\uc774 \ucc38\uc870\ud560 \ub54c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. DataFixer \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc644\uc804\ud788 \uc120\ud0dd\uc0ac\ud56d\uc774\uae30 \ub54c\ubb38\uc5d0 Type \uc73c\ub85c null \uc744 \uc804\ub2ec\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. // DeferredRegister<BlockEntityType<?>> REGISTER \uac00 \uc774\ubbf8 \uc815\uc758\ub418\uc5b4\uc788\ub2e4\uace0 \ud560 \ub54c public static final RegistryObject<BlockEntityType<MyBE>> MY_BE = REGISTER.register(\"mybe\", () -> BlockEntityType.Builder.of(MyBE::new, validBlocks).build(null)); // BlockEntity \ub97c \uc0c1\uc18d\ud558\ub294 MyBE \ud074\ub798\uc2a4 \ub0b4\uc5d0\uc11c public MyBE(BlockPos pos, BlockState state) { super(MY_BE.get(), pos, state); } BlockEntity \ub9cc\ub4e4\uae30 BlockEntity \ub97c \ub9cc\ub4e4\uace0 Block \uc5d0 \ubd99\uc774\uae30 \uc704\ud574\uc11c\ub294 \ub300\uc0c1 Block \uc774 EntityBlock \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4. \ud574\ub2f9 \uc778\ud130\ud398\uc774\uc2a4\uc758 EntityBlock#newBlockEntity(BlockPos, BlockState) \uba54\uc11c\ub4dc\uc5d0\uc120 \ube14\ub85d\uc5d0 \ubd80\ucc29\uc2dc\ud0ac BlockEntity \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud574\uc57c \ud569\ub2c8\ub2e4. \ub124\u2026 BlockEntity \uc5d0 EntityBlock \uc774\ub77c\ub2c8, \ub9d0\uc7a5\ub09c \uac19\uc740\uac70 \uc800\ub3c4 \uc555\ub2c8\ub2e4. \ubaa8\uc7a5 \uacf5\uc2dd \ud074\ub798\uc2a4 \uc774\ub984\uc778\ub370 \uc5b4\uca4c\uaca0\uc5b4\uc694. BlockEntity \ub97c \ud65c\uc6a9\ud55c \ub370\uc774\ud130 \uc800\uc7a5 BlockEntity \uc758 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574\uc120 \uc544\ub798 \ub450 \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud558\uc154\uc57c \ud569\ub2c8\ub2e4: BlockEntity#saveAdditional(CompoundTag tag) // \uc804\ub2ec\ub41c tag \uc5d0 BlockEntity \uc758 \ucd94\uac00 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\ub294 \uba54\uc11c\ub4dc BlockEntity#load(CompoundTag tag) // \uc804\ub2ec\ub41c tag \uc5d0\uc11c \ub370\uc774\ud130\ub97c \ubd88\ub7ec\uc624\uace0, \uc774\ub97c BlockEntity \uc5d0 \uc801\uc6a9\ud558\ub294 \uba54\uc11c\ub4dc \uc774 \uba54\uc11c\ub4dc\ub4e4\uc740 \ud574\ub2f9 BlockEntity \uac00 \ub4e4\uc5b4\uc788\ub294 LevelChunk \uac00 \ubd88\ub7ec\uc640 \uc9c8 \ub54c \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc774\ub4e4\uc744 \ud65c\uc6a9\ud558\uc5ec BlockEntity \uc758 \ud544\ub4dc\uac12\uc744 \uc800\uc7a5\ud558\uace0 \ubd88\ub7ec\uc624\uc138\uc694. Note BlockEntity \uc758 \ub370\uc774\ud130\uac00 \ubcc0\uacbd\ub418\uc5c8\ub2e4\uba74 BlockEntity#setChanged \ub97c \ud638\ucd9c\ud558\uc154\uc57c \ud569\ub2c8\ub2e4; \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 LevelChunk \uac00 \ud574\ub2f9 BlockEntity \ub97c \uc544\uc608 \ubb34\uc2dc\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4! Important \uc704 \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud560 \ub54c\ub294 super \uba54\uc11c\ub4dc\ub97c \ubb34\uc870\uac74 \ud638\ucd9c\ud558\uc138\uc694! \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ud544\uc218 \uc815\ubcf4\uac00 \ub204\ub77d\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4! \uadf8\ub9ac\uace0 x , y , z , ForgeData , \uadf8\ub9ac\uace0 ForgeCaps \ub294 super \uba54\uc11c\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ud0dc\uadf8\ub4e4\uc758 \uc774\ub984\uc785\ub2c8\ub2e4! BlockEntities \ud2f1 \ucc98\ub9ac \uc544\uc774\ud15c\uc744 \uad7d\ub294 \ud654\ub85c\ucc98\ub7fc, 1\ud2f1\ub9c8\ub2e4 \ud2b9\uc815 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 BlockEntity \ub97c \ub9cc\ub4e4\uae30 \uc704\ud574\uc120 EntityBlock#getTicker(Level, BlockState, BlockEntityType) \ub97c \uc7ac\uc815\uc758\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uc774\ub54c \uc694\uccad\ub41c \ub17c\ub9ac \uc0ac\uc774\ub4dc\uc5d0 \ub530\ub77c \ub2e4\ub978 ticker \ub97c \ubc18\ud658\ud558\uac70\ub098, \uc544\ub2c8\uba74 \uae30\ubcf8 ticker \ud558\ub098\ub9cc \uc0ac\uc6a9\ud558\uc5ec\ub3c4 \ub429\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub97c \uc5b4\ub5bb\uac8c \uad6c\ud604\ud558\uc2dc\ub4e0 \ucd5c\uc885\uc801\uc73c\ub860 BlockEntityTicker \ub97c \ubc18\ud658\ud574\uc57c \ud558\ub294\ub370, BlockEntityTicker \ub294 \ud568\uc218\ud615 \uc778\ud130\ud398\uc774\uc2a4\ub77c\uc11c \uba54\uc11c\ub4dc \ucc38\uc870\ub97c \ub300\uc2e0 \ubc18\ud658\ud574\ub3c4 \ub429\ub2c8\ub2e4: // Block \uc758 \uc790\uc2dd \ud074\ub798\uc2a4 \ub0b4\ubd80 @Nullable @Override public <T extends BlockEntity> BlockEntityTicker<T> getTicker(Level level, BlockState state, BlockEntityType<T> type) { return type == MyBlockEntityTypes.MYBE.get() ? MyBlockEntity::tick : null; } // MyBlockEntity \ud074\ub798\uc2a4 \ub0b4\ubd80 public static void tick(Level level, BlockPos pos, BlockState state, T blockEntity) { // \ub9e4\ud2f1\ub9c8\ub2e4 \ud574\uc57c \ud558\ub294 \uc791\uc5c5 \ucc98\ub9ac } Note \uc774 \uba54\uc11c\ub4dc\ub294 \ub9e4\ud2f1\ub9c8\ub2e4 \ud638\ucd9c\ub429\ub2c8\ub2e4; \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \ubcf5\uc7a1\ud55c \uc5f0\uc0b0\uc744 \uc774 \uba54\uc11c\ub4dc\uc5d0\uc11c \ud558\ub294 \uac83\uc740 \ud53c\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8 \ub300\uc2e0\uc5d0, \ubcf5\uc7a1\ud55c \uc5f0\uc0b0\uc740 \ub9e4 X \ud2f1 \ub9c8\ub2e4 \ud558\ub3c4\ub85d \ub9cc\ub4dc\ub294 \uac83\ub3c4 \uace0\ub824\ud558\uc5ec \uc8fc\uc138\uc694. (\ucd08\ub2f9 \ud2f1 \ud69f\uc218(tps) \ub294 20, \ub610\ub294 \uadf8 \uc774\ud558\uc785\ub2c8\ub2e4) \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ub370\uc774\ud130 \ub3d9\uae30\ud654\ud558\uae30 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654\uc2dc\ud0ac \ubc29\ubc95\uc740 \ucd1d 3\uac00\uc9c0\uac00 \uc788\ub294\ub370: \uccad\ud06c\ub97c \ubd88\ub7ec\uc62c \ub54c \ub3d9\uae30\ud654 \ud558\uae30, \ube14\ub85d \uc5c5\ub370\uc774\ud2b8\uc2dc \ub3d9\uae30\ud654 \ud558\uae30, \uadf8\ub9ac\uace0 \ucee4\uc2a4\ud140 \ub124\ud2b8\uc6cc\ud06c \uba54\uc138\uc9c0 \ubcf4\ub0b4\uae30 \uc785\ub2c8\ub2e4. LevelChunk \ubd88\ub7ec\uc62c \ub54c \ub3d9\uae30\ud654\ud558\uae30 \uc774\ub97c \uc704\ud574\uc120 \ub2e4\uc74c \ub450 \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694: BlockEntity#getUpdateTag() IForgeBlockEntity#handleUpdateTag(CompoundTag tag) \uccab\ubc88\uc9f8 \uba54\uc11c\ub4dc\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c \uc804\uc1a1\ub418\uc5b4\uc57c \ud560 \ub370\uc774\ud130\ub4e4\uc744 \uc218\uc9d1\ud569\ub2c8\ub2e4, \ub450\ubc88\uc9f8 \uba54\uc11c\ub4dc\ub294 \uadf8\ub807\uac8c \uc218\uc9d1\ud55c \ub370\uc774\ud130\ub97c \ucc98\ub9ac\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud574\ub2f9 BlockEntity \uc5d0 \ub370\uc774\ud130\uac00 \ub9ce\uc9c0 \uc54a\ub2e4\uba74 BlockEntity \ub97c \ud65c\uc6a9\ud55c \ub370\uc774\ud130 \uc800\uc7a5 \uc139\uc158\uc5d0 \uc18c\uac1c\ub41c \uba54\uc11c\ub4dc\ub4e4\uc744 \uc751\uc6a9\ud558\uc5ec BlockEntity \uc804\uccb4\ub97c \uc7ac\uc804\uc1a1\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. Important \ud544\uc694\uc5c6\ub294 \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654 \ud558\ub294 \uac83\uc740 \ub124\ud2b8\uc6cc\ud06c\ub97c \ud63c\uc7a1\ud558\uac8c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ud544\uc694\ud55c \uc815\ubcf4\ub4e4\uc744 \ud544\uc694\ud560 \ub54c\ub9cc \ubcf4\ub0b4\ub3c4\ub85d \ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c\ub97c \ud6a8\uc728\uc801\uc73c\ub85c \ud65c\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc758 \uc778\ubca4\ud1a0\ub9ac\uac00 \ubcc0\uacbd\ub420 \ub54c \ub9c8\ub2e4 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ub3d9\uae30\ud654\ub97c \ud558\ub294 \ub300\uc2e0 AbstractContainerMenu \uc5d0\uc11c \ub3d9\uae30\ud654\ub97c \uc9c4\ud589\ud558\ub3c4\ub85d \ud558\uc5ec \ube14\ub85d\uc758 \uba54\ub274\ub97c \uc5f4 \ub54c \uc778\ubca4\ud1a0\ub9ac \uc815\ubcf4\ub97c \uc5c5\ub370\uc774\ud2b8 \ud558\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ube14\ub85d\uc774 \uc5c5\ub370\uc774\ud2b8\ub420 \ub54c \ub3d9\uae30\ud654\ud558\uae30 \uc774 \ubc29\ubc95\uc740 \uc0b4\uc9dd \ub354 \ubcf5\uc7a1\ud558\uc9c0\ub9cc, \uc544\ub798 \uba54\uc11c\ub4dc 3\uac1c\ub9cc \uc7ac\uc815\uc758\ud558\uba74 \ub429\ub2c8\ub2e4. BlockEntity#getUpdateTag() BlockEntity#getUpdatePacket() IForgeBlockEntity#onDataPacket \uc544\ub798 \uc608\uc2dc BlockEntity \ub97c \ucc38\uace0\ud558\uc138\uc694: @Override public CompoundTag getUpdateTag() { CompoundTag tag = new CompoundTag(); // tag \uc5d0 \ube14\ub85d \uc5d4\ud2f0\ud2f0 \ub370\uc774\ud130 \uc791\uc131 return tag; } @Override public Packet<ClientGamePacketListener> getUpdatePacket() { // #getUpdateTag \ub97c \ud638\ucd9c\ud558\uc5ec \uc804\uc1a1\ud560 tag \ub97c \uac00\uc838\uc635\ub2c8\ub2e4 return ClientboundBlockEntityDataPacket.create(this); } // IForgeBlockEntity#onDataPacket \uc744 \uc7ac\uc815\uc758\ud558\ub294 \uac83\uc740 \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c #load \ub97c \ud638\ucd9c\ud569\ub2c8\ub2e4. \uc774\ub54c \uc5ec\uae30\uc11c \uc0ac\uc6a9\ub41c \uc815\uc801 \uc0dd\uc131\uc790 ClientboundBlockEntityDataPacket#create \ub294 \uc544\ub798 2\uac1c\uc758 \uc778\uc790\ub97c \ubc1b\uc2b5\ub2c8\ub2e4: BlockEntity . CompoundTag \ub97c BlockEntity \ub85c \ubd80\ud130 \uc5bb\uc5b4\uc624\ub294 \ud568\uc218( Function<BlockEntity, CompoundTag> ). \uae30\ubcf8\uac12\uc73c\ub85c BlockEntity#getUpdateTag \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774\uc81c \uc11c\ubc84\uce21\uc5d0\uc11c \ube14\ub85d \uc5c5\ub370\uc774\ud2b8\ub97c \ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uc5d0 \uc804\uc1a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Level#sendBlockUpdated(BlockPos pos, BlockState oldState, BlockState newState, int flags) pos \ub294 \uc5c5\ub370\uc774\ud2b8\ud560 BlockEntity \uc758 \uc704\uce58 \uc785\ub2c8\ub2e4. oldState \ub791 newState \ub294 \ud574\ub2f9 \uc704\uce58\uc758 BlockState \ub97c \uc804\ub2ec\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4. flags \ub294 \ube44\ud2b8 \ub9c8\uc2a4\ud06c\ub4e4\ub85c, 2 \ub97c \ud3ec\ud568\ud558\uace0 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub798\uc57c \uc11c\ubc84\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uc5d0 \uc5c5\ub370\uc774\ud2b8 \ud328\ud0b7\uc744 \uc804\uc1a1\ud569\ub2c8\ub2e4. Block \ud074\ub798\uc2a4\ub97c \ucc38\uace0\ud558\uc5ec \ub2e4\ub978 \ud50c\ub798\uadf8\ub4e4\uc758 \uc5ed\ud560 \ub610\ud55c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. 2 \ub294 Block#UPDATE_CLIENTS \uc640 \ub3d9\uc77c\ud569\ub2c8\ub2e4. \ucee4\uc2a4\ud140 \ub124\ud2b8\uc6cc\ud06c \uba54\uc138\uc9c0\ub85c \ub3d9\uae30\ud654\ud558\uae30 \uc774 \ubc29\ubc95\uc740 \uac00\uc7a5 \ubcf5\uc7a1\ud558\uc9c0\ub9cc, \uadf8\ub7ec\uba74\uc11c\ub3c4 \uac00\uc7a5 \ub9ce\uc740 \ucd5c\uc801\ud654\ub97c \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub3d9\uae30\ud654\ub97c \ud574\uc57c \ud558\ub294 \uc815\ubcf4\ub4e4\ub9cc \uc2e4\uc81c\ub85c \ub3d9\uae30\ud654\uac00 \ub418\ub3c4\ub85d \uc138\ubc00\ud558\uac8c \uc870\uc808\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uc774 \ubc29\ubc95\uc744 \uc2dc\ub3c4\ud574\ubcf4\uae30 \uc804\uc5d0 \ub124\ud2b8\uc6cc\ud0b9 \uc5d0 \ub300\ud574 \ubbf8\ub9ac \uc54c\uc544\ubcf4\uc2dc\uace0 \uc624\uc138\uc694, \ud2b9\ud788 SimpleImpl \uc5d0 \ub300\ud574 \uc798 \uc54c\uace0 \uacc4\uc154\uc57c \ud569\ub2c8\ub2e4. \ucee4\uc2a4\ud140 \ub124\ud2b8\uc6cc\ud06c \uba54\uc138\uc9c0\ub97c \uc815\uc758\ud558\uc168\ub2e4\uba74, \ud574\ub2f9 BlockEntity \ub97c \ucd94\uc801\ud558\uace0 \uc788\ub294 \ubaa8\ub4e0 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ucee4\uc2a4\ud140 \uba54\uc138\uc9c0\ub97c SimpleChannel#send(PacketDistributor$PacketTarget, MSG) \ub97c \ud1b5\ud574 \ubcf4\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c \uc0ac\uc6a9\ud558\ub294 PacketDistributor \ub294 TRACKING_ENTITY \uc785\ub2c8\ub2e4. Warning \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \ud328\ud0b7\uc774 \uc804\ub2ec\ub418\uc5c8\uc744 \ub54c\ub294 \ud574\ub2f9 BlockEntity \uac00 \ubd80\uc11c\uc9c0\uac70\ub098 \ub2e4\ub978 \ube14\ub85d\uc73c\ub85c \ub300\uccb4\ub418\uc5b4 \ub808\ubca8\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc744 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \ube14\ub85d\uc774 \uc9c4\uc9dc \uc874\uc7ac\ud558\ub294\uc9c0 \ubb34\uc870\uac74 \ud655\uc778\ud558\uc154\uc57c \ud569\ub2c8\ub2e4! \ub610\ud55c \ud574\ub2f9 BlockEntity \uac00 \ub4e4\uc5b4\uc788\ub294 \uccad\ud06c\uac00 \ubd88\ub7ec\uc640\uc84c\ub294\uc9c0\ub3c4 \ud655\uc778\ud558\uc154\uc57c \ud569\ub2c8\ub2e4! ( Level#hasChunkAt(BlockPos) ).","title":"\uc18c\uac1c"},{"location":"blockentities/#_1","text":"BlockEntity \ub294 \uac04\uc18c\ud654\ub41c Entity \ub85c, \ube14\ub7ed\uc5d0 \uc885\uc18d\ub41c \uc5d4\ud2f0\ud2f0 \uc785\ub2c8\ub2e4. BlockEntity \ub294 \ub3d9\uc801\uc73c\ub85c \ubcc0\ud558\ub294 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uac70\ub098, \ub9e4 \ud2f1\ub9c8\ub2e4 \uc218\ud589\ub418\uc57c \ud558\ub294 \uc791\uc5c5\uc744 \ud558\uac70\ub098, \ub3d9\uc801 \ub80c\ub354\ub9c1\uc744 \ud574\uc57c \ud560 \ub54c \ub4f1, BlockState \ub9cc\uc73c\ub85c\ub294 \uad6c\ud604\ud558\uae30 \uc5b4\ub824\uc6b4 \uae30\ub2a5\ub4e4\uc744 \ub9cc\ub4e4 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 BlockEntity \ub97c \uc0c1\uc790 \uc778\ubca4\ud1a0\ub9ac, \ud654\ub85c \uc81c\ub828, \uc2e0\ud638\uae30\uc758 \uad11\uc5ed \ud3ec\uc158 \ud6a8\uacfc\ub97c \uad6c\ud604\ud558\ub294\ub370\uc5d0 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub354 \ubcf5\uc7a1\ud55c \uc608\uc81c\ub4e4\uc740 \uad74\ucc29\uae30, \uc544\uc774\ud15c \uc815\ub82c\ud558\ub294 \uae30\uacc4, \ud30c\uc774\ud504, \ub514\uc2a4\ud50c\ub808\uc774 \ub4f1 \ub2e4\ub978 \ubaa8\ub4dc\uc5d0\uc11c \ucc3e\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note BlockEntity \ub294 \ubaa8\ub4e0 \ubb38\uc81c\uc758 \ub9cc\ub2a5 \ud574\uacb0 \ubc29\ubc95\uc774 \uc544\ub2c8\uba70, \ub0a8\uc6a9\ud560 \uacbd\uc6b0 \uc11c\ubc84\uc5d0 \ud070 \ub809\uc744 \uc720\ubc1c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac00\ub2a5\ud558\ub2e4\uba74 \ucd5c\ub300\ud55c \uc4f0\uc9c0 \uc54a\ub3c4\ub85d \ud558\uc138\uc694.","title":"\ube14\ub85d \uc5d4\ud2f0\ud2f0"},{"location":"blockentities/#_2","text":"BlockEntity \ub4e4\uc740 \uc5bc\ub9c8\ub4e0\uc9c0 \uc0dd\uc131\ub418\uace0 \uc81c\uac70\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uadf8\ub7ec\ub2e4\ubcf4\ub2c8 BlockEntity \ub97c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ud558\ub294 \ub300\uc2e0 BlockEntity \uc758 \uc885\ub958 \ub97c \ud45c\ud604\ud558\ub294 BlockEntityType \uc744 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ud569\ub2c8\ub2e4. BlockEntityType \uc740 \ub2e4\ub978 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uac1d\uccb4\ub4e4\uacfc \ub3d9\uc77c\ud55c \ubc29\ubc95\uc73c\ub85c \ub4f1\ub85d \ud569\ub2c8\ub2e4. BlockEntityType \uc744 \ub9cc\ub4e4\uae30 \uc704\ud574\uc120 \uba3c\uc800 BlockEntityType$Builder \uac00 \ud544\uc694\ud55c\ub370, BlockEntityType$Builder#of \ub97c \ud638\ucd9c\ud558\uc5ec \ube4c\ub354\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 BlockPos \uc640 BlockState \ub97c \uc778\uc790\ub85c \ubc1b\uc544 \ud574\ub2f9 BlockEntity \uc758 \uc0c8\ub85c\uc6b4 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4e4\uc5b4\uc8fc\ub294 BlockEntityType$BlockEntitySupplier , \uadf8\ub9ac\uace0 \ud574\ub2f9 BlockEntity \uac00 \ubd80\ucc29\ub420 \uc218 \uc788\ub294 Block \uac00\ubcc0 \uc778\uc790\ub97c \ubc1b\uc2b5\ub2c8\ub2e4. \uc774\uc81c BlockEntityType$Builder \uac00 \uc788\uc73c\ub2c8, BlockEntityType$Builder#build \ub97c \ud638\ucd9c\ud558\uc5ec BlockEntityType \uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 DataFixer \uc5d0\uc11c \uc0ac\uc6a9\ud560 Type \uc744 \uc778\uc790\ub85c \ubc1b\ub294\ub370, \uc774\ub294 \uc774 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uac1d\uccb4\ub97c \ud0c0\uc785 \uc624\ub958 \uc704\ud5d8 \uc5c6\uc774 \ucc38\uc870\ud560 \ub54c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. DataFixer \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc644\uc804\ud788 \uc120\ud0dd\uc0ac\ud56d\uc774\uae30 \ub54c\ubb38\uc5d0 Type \uc73c\ub85c null \uc744 \uc804\ub2ec\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. // DeferredRegister<BlockEntityType<?>> REGISTER \uac00 \uc774\ubbf8 \uc815\uc758\ub418\uc5b4\uc788\ub2e4\uace0 \ud560 \ub54c public static final RegistryObject<BlockEntityType<MyBE>> MY_BE = REGISTER.register(\"mybe\", () -> BlockEntityType.Builder.of(MyBE::new, validBlocks).build(null)); // BlockEntity \ub97c \uc0c1\uc18d\ud558\ub294 MyBE \ud074\ub798\uc2a4 \ub0b4\uc5d0\uc11c public MyBE(BlockPos pos, BlockState state) { super(MY_BE.get(), pos, state); }","title":"\ub4f1\ub85d\ud558\uae30"},{"location":"blockentities/#blockentity","text":"BlockEntity \ub97c \ub9cc\ub4e4\uace0 Block \uc5d0 \ubd99\uc774\uae30 \uc704\ud574\uc11c\ub294 \ub300\uc0c1 Block \uc774 EntityBlock \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4. \ud574\ub2f9 \uc778\ud130\ud398\uc774\uc2a4\uc758 EntityBlock#newBlockEntity(BlockPos, BlockState) \uba54\uc11c\ub4dc\uc5d0\uc120 \ube14\ub85d\uc5d0 \ubd80\ucc29\uc2dc\ud0ac BlockEntity \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud574\uc57c \ud569\ub2c8\ub2e4. \ub124\u2026 BlockEntity \uc5d0 EntityBlock \uc774\ub77c\ub2c8, \ub9d0\uc7a5\ub09c \uac19\uc740\uac70 \uc800\ub3c4 \uc555\ub2c8\ub2e4. \ubaa8\uc7a5 \uacf5\uc2dd \ud074\ub798\uc2a4 \uc774\ub984\uc778\ub370 \uc5b4\uca4c\uaca0\uc5b4\uc694.","title":"BlockEntity \ub9cc\ub4e4\uae30"},{"location":"blockentities/#blockentity_1","text":"BlockEntity \uc758 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574\uc120 \uc544\ub798 \ub450 \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud558\uc154\uc57c \ud569\ub2c8\ub2e4: BlockEntity#saveAdditional(CompoundTag tag) // \uc804\ub2ec\ub41c tag \uc5d0 BlockEntity \uc758 \ucd94\uac00 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\ub294 \uba54\uc11c\ub4dc BlockEntity#load(CompoundTag tag) // \uc804\ub2ec\ub41c tag \uc5d0\uc11c \ub370\uc774\ud130\ub97c \ubd88\ub7ec\uc624\uace0, \uc774\ub97c BlockEntity \uc5d0 \uc801\uc6a9\ud558\ub294 \uba54\uc11c\ub4dc \uc774 \uba54\uc11c\ub4dc\ub4e4\uc740 \ud574\ub2f9 BlockEntity \uac00 \ub4e4\uc5b4\uc788\ub294 LevelChunk \uac00 \ubd88\ub7ec\uc640 \uc9c8 \ub54c \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc774\ub4e4\uc744 \ud65c\uc6a9\ud558\uc5ec BlockEntity \uc758 \ud544\ub4dc\uac12\uc744 \uc800\uc7a5\ud558\uace0 \ubd88\ub7ec\uc624\uc138\uc694. Note BlockEntity \uc758 \ub370\uc774\ud130\uac00 \ubcc0\uacbd\ub418\uc5c8\ub2e4\uba74 BlockEntity#setChanged \ub97c \ud638\ucd9c\ud558\uc154\uc57c \ud569\ub2c8\ub2e4; \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 LevelChunk \uac00 \ud574\ub2f9 BlockEntity \ub97c \uc544\uc608 \ubb34\uc2dc\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4! Important \uc704 \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud560 \ub54c\ub294 super \uba54\uc11c\ub4dc\ub97c \ubb34\uc870\uac74 \ud638\ucd9c\ud558\uc138\uc694! \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ud544\uc218 \uc815\ubcf4\uac00 \ub204\ub77d\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4! \uadf8\ub9ac\uace0 x , y , z , ForgeData , \uadf8\ub9ac\uace0 ForgeCaps \ub294 super \uba54\uc11c\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ud0dc\uadf8\ub4e4\uc758 \uc774\ub984\uc785\ub2c8\ub2e4!","title":"BlockEntity \ub97c \ud65c\uc6a9\ud55c \ub370\uc774\ud130 \uc800\uc7a5"},{"location":"blockentities/#blockentities","text":"\uc544\uc774\ud15c\uc744 \uad7d\ub294 \ud654\ub85c\ucc98\ub7fc, 1\ud2f1\ub9c8\ub2e4 \ud2b9\uc815 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 BlockEntity \ub97c \ub9cc\ub4e4\uae30 \uc704\ud574\uc120 EntityBlock#getTicker(Level, BlockState, BlockEntityType) \ub97c \uc7ac\uc815\uc758\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uc774\ub54c \uc694\uccad\ub41c \ub17c\ub9ac \uc0ac\uc774\ub4dc\uc5d0 \ub530\ub77c \ub2e4\ub978 ticker \ub97c \ubc18\ud658\ud558\uac70\ub098, \uc544\ub2c8\uba74 \uae30\ubcf8 ticker \ud558\ub098\ub9cc \uc0ac\uc6a9\ud558\uc5ec\ub3c4 \ub429\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub97c \uc5b4\ub5bb\uac8c \uad6c\ud604\ud558\uc2dc\ub4e0 \ucd5c\uc885\uc801\uc73c\ub860 BlockEntityTicker \ub97c \ubc18\ud658\ud574\uc57c \ud558\ub294\ub370, BlockEntityTicker \ub294 \ud568\uc218\ud615 \uc778\ud130\ud398\uc774\uc2a4\ub77c\uc11c \uba54\uc11c\ub4dc \ucc38\uc870\ub97c \ub300\uc2e0 \ubc18\ud658\ud574\ub3c4 \ub429\ub2c8\ub2e4: // Block \uc758 \uc790\uc2dd \ud074\ub798\uc2a4 \ub0b4\ubd80 @Nullable @Override public <T extends BlockEntity> BlockEntityTicker<T> getTicker(Level level, BlockState state, BlockEntityType<T> type) { return type == MyBlockEntityTypes.MYBE.get() ? MyBlockEntity::tick : null; } // MyBlockEntity \ud074\ub798\uc2a4 \ub0b4\ubd80 public static void tick(Level level, BlockPos pos, BlockState state, T blockEntity) { // \ub9e4\ud2f1\ub9c8\ub2e4 \ud574\uc57c \ud558\ub294 \uc791\uc5c5 \ucc98\ub9ac } Note \uc774 \uba54\uc11c\ub4dc\ub294 \ub9e4\ud2f1\ub9c8\ub2e4 \ud638\ucd9c\ub429\ub2c8\ub2e4; \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \ubcf5\uc7a1\ud55c \uc5f0\uc0b0\uc744 \uc774 \uba54\uc11c\ub4dc\uc5d0\uc11c \ud558\ub294 \uac83\uc740 \ud53c\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8 \ub300\uc2e0\uc5d0, \ubcf5\uc7a1\ud55c \uc5f0\uc0b0\uc740 \ub9e4 X \ud2f1 \ub9c8\ub2e4 \ud558\ub3c4\ub85d \ub9cc\ub4dc\ub294 \uac83\ub3c4 \uace0\ub824\ud558\uc5ec \uc8fc\uc138\uc694. (\ucd08\ub2f9 \ud2f1 \ud69f\uc218(tps) \ub294 20, \ub610\ub294 \uadf8 \uc774\ud558\uc785\ub2c8\ub2e4)","title":"BlockEntities \ud2f1 \ucc98\ub9ac"},{"location":"blockentities/#_3","text":"\ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654\uc2dc\ud0ac \ubc29\ubc95\uc740 \ucd1d 3\uac00\uc9c0\uac00 \uc788\ub294\ub370: \uccad\ud06c\ub97c \ubd88\ub7ec\uc62c \ub54c \ub3d9\uae30\ud654 \ud558\uae30, \ube14\ub85d \uc5c5\ub370\uc774\ud2b8\uc2dc \ub3d9\uae30\ud654 \ud558\uae30, \uadf8\ub9ac\uace0 \ucee4\uc2a4\ud140 \ub124\ud2b8\uc6cc\ud06c \uba54\uc138\uc9c0 \ubcf4\ub0b4\uae30 \uc785\ub2c8\ub2e4.","title":"\ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ub370\uc774\ud130 \ub3d9\uae30\ud654\ud558\uae30"},{"location":"blockentities/#levelchunk","text":"\uc774\ub97c \uc704\ud574\uc120 \ub2e4\uc74c \ub450 \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694: BlockEntity#getUpdateTag() IForgeBlockEntity#handleUpdateTag(CompoundTag tag) \uccab\ubc88\uc9f8 \uba54\uc11c\ub4dc\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c \uc804\uc1a1\ub418\uc5b4\uc57c \ud560 \ub370\uc774\ud130\ub4e4\uc744 \uc218\uc9d1\ud569\ub2c8\ub2e4, \ub450\ubc88\uc9f8 \uba54\uc11c\ub4dc\ub294 \uadf8\ub807\uac8c \uc218\uc9d1\ud55c \ub370\uc774\ud130\ub97c \ucc98\ub9ac\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud574\ub2f9 BlockEntity \uc5d0 \ub370\uc774\ud130\uac00 \ub9ce\uc9c0 \uc54a\ub2e4\uba74 BlockEntity \ub97c \ud65c\uc6a9\ud55c \ub370\uc774\ud130 \uc800\uc7a5 \uc139\uc158\uc5d0 \uc18c\uac1c\ub41c \uba54\uc11c\ub4dc\ub4e4\uc744 \uc751\uc6a9\ud558\uc5ec BlockEntity \uc804\uccb4\ub97c \uc7ac\uc804\uc1a1\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. Important \ud544\uc694\uc5c6\ub294 \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654 \ud558\ub294 \uac83\uc740 \ub124\ud2b8\uc6cc\ud06c\ub97c \ud63c\uc7a1\ud558\uac8c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ud544\uc694\ud55c \uc815\ubcf4\ub4e4\uc744 \ud544\uc694\ud560 \ub54c\ub9cc \ubcf4\ub0b4\ub3c4\ub85d \ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c\ub97c \ud6a8\uc728\uc801\uc73c\ub85c \ud65c\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc758 \uc778\ubca4\ud1a0\ub9ac\uac00 \ubcc0\uacbd\ub420 \ub54c \ub9c8\ub2e4 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ub3d9\uae30\ud654\ub97c \ud558\ub294 \ub300\uc2e0 AbstractContainerMenu \uc5d0\uc11c \ub3d9\uae30\ud654\ub97c \uc9c4\ud589\ud558\ub3c4\ub85d \ud558\uc5ec \ube14\ub85d\uc758 \uba54\ub274\ub97c \uc5f4 \ub54c \uc778\ubca4\ud1a0\ub9ac \uc815\ubcf4\ub97c \uc5c5\ub370\uc774\ud2b8 \ud558\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"LevelChunk \ubd88\ub7ec\uc62c \ub54c \ub3d9\uae30\ud654\ud558\uae30"},{"location":"blockentities/#_4","text":"\uc774 \ubc29\ubc95\uc740 \uc0b4\uc9dd \ub354 \ubcf5\uc7a1\ud558\uc9c0\ub9cc, \uc544\ub798 \uba54\uc11c\ub4dc 3\uac1c\ub9cc \uc7ac\uc815\uc758\ud558\uba74 \ub429\ub2c8\ub2e4. BlockEntity#getUpdateTag() BlockEntity#getUpdatePacket() IForgeBlockEntity#onDataPacket \uc544\ub798 \uc608\uc2dc BlockEntity \ub97c \ucc38\uace0\ud558\uc138\uc694: @Override public CompoundTag getUpdateTag() { CompoundTag tag = new CompoundTag(); // tag \uc5d0 \ube14\ub85d \uc5d4\ud2f0\ud2f0 \ub370\uc774\ud130 \uc791\uc131 return tag; } @Override public Packet<ClientGamePacketListener> getUpdatePacket() { // #getUpdateTag \ub97c \ud638\ucd9c\ud558\uc5ec \uc804\uc1a1\ud560 tag \ub97c \uac00\uc838\uc635\ub2c8\ub2e4 return ClientboundBlockEntityDataPacket.create(this); } // IForgeBlockEntity#onDataPacket \uc744 \uc7ac\uc815\uc758\ud558\ub294 \uac83\uc740 \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c #load \ub97c \ud638\ucd9c\ud569\ub2c8\ub2e4. \uc774\ub54c \uc5ec\uae30\uc11c \uc0ac\uc6a9\ub41c \uc815\uc801 \uc0dd\uc131\uc790 ClientboundBlockEntityDataPacket#create \ub294 \uc544\ub798 2\uac1c\uc758 \uc778\uc790\ub97c \ubc1b\uc2b5\ub2c8\ub2e4: BlockEntity . CompoundTag \ub97c BlockEntity \ub85c \ubd80\ud130 \uc5bb\uc5b4\uc624\ub294 \ud568\uc218( Function<BlockEntity, CompoundTag> ). \uae30\ubcf8\uac12\uc73c\ub85c BlockEntity#getUpdateTag \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774\uc81c \uc11c\ubc84\uce21\uc5d0\uc11c \ube14\ub85d \uc5c5\ub370\uc774\ud2b8\ub97c \ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uc5d0 \uc804\uc1a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Level#sendBlockUpdated(BlockPos pos, BlockState oldState, BlockState newState, int flags) pos \ub294 \uc5c5\ub370\uc774\ud2b8\ud560 BlockEntity \uc758 \uc704\uce58 \uc785\ub2c8\ub2e4. oldState \ub791 newState \ub294 \ud574\ub2f9 \uc704\uce58\uc758 BlockState \ub97c \uc804\ub2ec\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4. flags \ub294 \ube44\ud2b8 \ub9c8\uc2a4\ud06c\ub4e4\ub85c, 2 \ub97c \ud3ec\ud568\ud558\uace0 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub798\uc57c \uc11c\ubc84\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uc5d0 \uc5c5\ub370\uc774\ud2b8 \ud328\ud0b7\uc744 \uc804\uc1a1\ud569\ub2c8\ub2e4. Block \ud074\ub798\uc2a4\ub97c \ucc38\uace0\ud558\uc5ec \ub2e4\ub978 \ud50c\ub798\uadf8\ub4e4\uc758 \uc5ed\ud560 \ub610\ud55c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. 2 \ub294 Block#UPDATE_CLIENTS \uc640 \ub3d9\uc77c\ud569\ub2c8\ub2e4.","title":"\ube14\ub85d\uc774 \uc5c5\ub370\uc774\ud2b8\ub420 \ub54c \ub3d9\uae30\ud654\ud558\uae30"},{"location":"blockentities/#_5","text":"\uc774 \ubc29\ubc95\uc740 \uac00\uc7a5 \ubcf5\uc7a1\ud558\uc9c0\ub9cc, \uadf8\ub7ec\uba74\uc11c\ub3c4 \uac00\uc7a5 \ub9ce\uc740 \ucd5c\uc801\ud654\ub97c \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub3d9\uae30\ud654\ub97c \ud574\uc57c \ud558\ub294 \uc815\ubcf4\ub4e4\ub9cc \uc2e4\uc81c\ub85c \ub3d9\uae30\ud654\uac00 \ub418\ub3c4\ub85d \uc138\ubc00\ud558\uac8c \uc870\uc808\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uc774 \ubc29\ubc95\uc744 \uc2dc\ub3c4\ud574\ubcf4\uae30 \uc804\uc5d0 \ub124\ud2b8\uc6cc\ud0b9 \uc5d0 \ub300\ud574 \ubbf8\ub9ac \uc54c\uc544\ubcf4\uc2dc\uace0 \uc624\uc138\uc694, \ud2b9\ud788 SimpleImpl \uc5d0 \ub300\ud574 \uc798 \uc54c\uace0 \uacc4\uc154\uc57c \ud569\ub2c8\ub2e4. \ucee4\uc2a4\ud140 \ub124\ud2b8\uc6cc\ud06c \uba54\uc138\uc9c0\ub97c \uc815\uc758\ud558\uc168\ub2e4\uba74, \ud574\ub2f9 BlockEntity \ub97c \ucd94\uc801\ud558\uace0 \uc788\ub294 \ubaa8\ub4e0 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ucee4\uc2a4\ud140 \uba54\uc138\uc9c0\ub97c SimpleChannel#send(PacketDistributor$PacketTarget, MSG) \ub97c \ud1b5\ud574 \ubcf4\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c \uc0ac\uc6a9\ud558\ub294 PacketDistributor \ub294 TRACKING_ENTITY \uc785\ub2c8\ub2e4. Warning \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \ud328\ud0b7\uc774 \uc804\ub2ec\ub418\uc5c8\uc744 \ub54c\ub294 \ud574\ub2f9 BlockEntity \uac00 \ubd80\uc11c\uc9c0\uac70\ub098 \ub2e4\ub978 \ube14\ub85d\uc73c\ub85c \ub300\uccb4\ub418\uc5b4 \ub808\ubca8\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc744 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \ube14\ub85d\uc774 \uc9c4\uc9dc \uc874\uc7ac\ud558\ub294\uc9c0 \ubb34\uc870\uac74 \ud655\uc778\ud558\uc154\uc57c \ud569\ub2c8\ub2e4! \ub610\ud55c \ud574\ub2f9 BlockEntity \uac00 \ub4e4\uc5b4\uc788\ub294 \uccad\ud06c\uac00 \ubd88\ub7ec\uc640\uc84c\ub294\uc9c0\ub3c4 \ud655\uc778\ud558\uc154\uc57c \ud569\ub2c8\ub2e4! ( Level#hasChunkAt(BlockPos) ).","title":"\ucee4\uc2a4\ud140 \ub124\ud2b8\uc6cc\ud06c \uba54\uc138\uc9c0\ub85c \ub3d9\uae30\ud654\ud558\uae30"},{"location":"blockentities/ber/","text":"BlockEntityRenderer BlockEntityRenderer , \ub610\ub294 BER \uc740 \uc815\uc801\uc778 \ubaa8\ub378(JSON, OBJ, B3D, others)\ub9cc\uc73c\ub860 \ud45c\ud604\ud558\uae30 \ud798\ub4e0 \ube14\ub85d\ub4e4\uc744 \ub80c\ub354\ub9c1\ud560 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub54c \ud574\ub2f9 \ube14\ub85d\uc740 BlockEntity \uac00 \uc788\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4. BER \ub9cc\ub4e4\uae30 BER \uc744 \ub9cc\ub4e4\uae30 \uc704\ud574\uc11c\ub294 BlockEntityRenderer \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\ub97c \ub9cc\ub4dc\uc138\uc694. \uc774\ub54c \uc0ac\uc6a9\ud558\ub294 \uc81c\ub108\ub9ad \uc778\uc790\ub294 \ub80c\ub354\ub9c1\ud560 BlockEntity \ud074\ub798\uc2a4 \uc785\ub2c8\ub2e4. \uc774\ub294 BER \uc758 render \uba54\uc11c\ub4dc\uc5d0 \uc804\ub2ec\ub418\ub294 \uc778\uc790\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. BlockEntityType \ud558\ub098\ub2f9 \ud558\ub098\uc758 BER \ub9cc\uc774 \uc874\uc7ac\ud569\ub2c8\ub2e4; \ub2e4\uc218\uc758 BlockEntity \uc778\uc2a4\ud134\uc2a4\uc5d0 \ud558\ub098\uc758 BER \ub9cc \uc0ac\uc6a9\ud558\uac8c \ub429\ub2c8\ub2e4. \uadf8\ub7ec\ub2e4\ubcf4\ub2c8, \uac01 BlockEntity \ub9c8\ub2e4 \ub2e4\ub974\uac8c \ub80c\ub354\ub9c1\ud574\uc57c \ud55c\ub2e4\uba74, \uc774\uc5d0 \ub300\ud55c \uc815\ubcf4\ub294 BER \uc5d0 \uc800\uc7a5\ud558\uc9c0 \ub9d0\uace0 BlockEntity \uc5d0\ub2e4\uac00 \uc800\uc7a5\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, render \ud568\uc218\uac00 \ud638\ucd9c\ub420 \ub54c \ub9c8\ub2e4 \uc99d\uac00\ud558\ub294 \uc815\uc218\ub97c BER \uc5d0\ub2e4\uac00 \ub9cc\ub4e0\ub2e4\uba74, \ub9e4 \ud504\ub808\uc784\ub9c8\ub2e4, \ud574\ub2f9 \ud0c0\uc785\uc758 \ubaa8\ub4e0 BlockEntity \ub4e4 \ud558\ub098\ud558\ub098\ub9c8\ub2e4 \uc99d\uac00\ud558\uac8c \ub429\ub2c8\ub2e4. render \uc774 \uba54\uc11c\ub4dc\ub294 BlockEntity \ub97c \ub80c\ub354\ub9c1\ud558\uae30 \uc704\ud574 \ub9e4 \ud504\ub808\uc784\ub9c8\ub2e4 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uba54\uc11c\ub4dc\uc758 \uc778\uc790\ub4e4 blockEntity : \ub80c\ub354\ub9c1\ud560 BlockEntity . partialTicks : \uc774\uc804 \ud2f1\uc73c\ub85c\ubd80\ud130 \uc2dc\uac04\uc774 \uc5bc\ub9c8\ub098 \uc9c0\ub0ac\ub294\uc9c0 \uc54c\ub824\uc8fc\ub294 0.0 \ubd80\ud130 1.0 \uc0ac\uc774\uc758 \uac12. 0.0\uc774\uba74 \uc774\uc804 \ud2f1 \ub05d\ub098\uace0 \ubc14\ub85c, 1.0 \uc774\uba74 \ud604\uc7ac \ud2f1 \ub05d\ub098\uae30 \uc9c1\uc804\uc784. poseStack : BlockEntity \ub97c \ud654\uba74\uc758 \uc62c\ubc14\ub978 \uc704\uce58\uc5d0 \ub80c\ub354\ub9c1\ud558\uae30 \uc704\ud55c 4x4 \ud589\ub82c\ub4e4\uc774 \ub4e4\uc5b4\uc788\ub294 \uc2a4\ud0dd. bufferSource : Vertex Consumer \uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\ub294 \ub80c\ub354\ub9c1 \ubc84\ud37c. combinedLight : \ud604\uc7ac BlockEntity \uc758 \uc815\uc218 \ubc1d\uae30. combinedOverlay : BlockEntity \uc758 \uc624\ubc84\ub808\uc774\ub97c \uc9c0\uc815\ud558\ub294 \uc815\uc218. \ubcf4\ud1b5 OverlayTexture#NO_OVERLAY \ub610\ub294 655,360\uc744 \uc0ac\uc6a9\ud568. BER \ub4f1\ub85d\ud558\uae30 BER \uc744 \ub4f1\ub85d\ud558\uae30 \uc704\ud574\uc120, EntityRenderersEvent$RegisterRenderers \uc774\ubca4\ud2b8\ub97c \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \uad6c\ub3c5\ud558\uace0 \ud574\ub2f9 \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub420 \ub54c #registerBlockEntityRenderer \ub97c \ud638\ucd9c\ud558\uc138\uc694.","title":"BlockEntityRenderer"},{"location":"blockentities/ber/#blockentityrenderer","text":"BlockEntityRenderer , \ub610\ub294 BER \uc740 \uc815\uc801\uc778 \ubaa8\ub378(JSON, OBJ, B3D, others)\ub9cc\uc73c\ub860 \ud45c\ud604\ud558\uae30 \ud798\ub4e0 \ube14\ub85d\ub4e4\uc744 \ub80c\ub354\ub9c1\ud560 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub54c \ud574\ub2f9 \ube14\ub85d\uc740 BlockEntity \uac00 \uc788\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4.","title":"BlockEntityRenderer"},{"location":"blockentities/ber/#ber","text":"BER \uc744 \ub9cc\ub4e4\uae30 \uc704\ud574\uc11c\ub294 BlockEntityRenderer \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\ub97c \ub9cc\ub4dc\uc138\uc694. \uc774\ub54c \uc0ac\uc6a9\ud558\ub294 \uc81c\ub108\ub9ad \uc778\uc790\ub294 \ub80c\ub354\ub9c1\ud560 BlockEntity \ud074\ub798\uc2a4 \uc785\ub2c8\ub2e4. \uc774\ub294 BER \uc758 render \uba54\uc11c\ub4dc\uc5d0 \uc804\ub2ec\ub418\ub294 \uc778\uc790\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. BlockEntityType \ud558\ub098\ub2f9 \ud558\ub098\uc758 BER \ub9cc\uc774 \uc874\uc7ac\ud569\ub2c8\ub2e4; \ub2e4\uc218\uc758 BlockEntity \uc778\uc2a4\ud134\uc2a4\uc5d0 \ud558\ub098\uc758 BER \ub9cc \uc0ac\uc6a9\ud558\uac8c \ub429\ub2c8\ub2e4. \uadf8\ub7ec\ub2e4\ubcf4\ub2c8, \uac01 BlockEntity \ub9c8\ub2e4 \ub2e4\ub974\uac8c \ub80c\ub354\ub9c1\ud574\uc57c \ud55c\ub2e4\uba74, \uc774\uc5d0 \ub300\ud55c \uc815\ubcf4\ub294 BER \uc5d0 \uc800\uc7a5\ud558\uc9c0 \ub9d0\uace0 BlockEntity \uc5d0\ub2e4\uac00 \uc800\uc7a5\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, render \ud568\uc218\uac00 \ud638\ucd9c\ub420 \ub54c \ub9c8\ub2e4 \uc99d\uac00\ud558\ub294 \uc815\uc218\ub97c BER \uc5d0\ub2e4\uac00 \ub9cc\ub4e0\ub2e4\uba74, \ub9e4 \ud504\ub808\uc784\ub9c8\ub2e4, \ud574\ub2f9 \ud0c0\uc785\uc758 \ubaa8\ub4e0 BlockEntity \ub4e4 \ud558\ub098\ud558\ub098\ub9c8\ub2e4 \uc99d\uac00\ud558\uac8c \ub429\ub2c8\ub2e4.","title":"BER \ub9cc\ub4e4\uae30"},{"location":"blockentities/ber/#render","text":"\uc774 \uba54\uc11c\ub4dc\ub294 BlockEntity \ub97c \ub80c\ub354\ub9c1\ud558\uae30 \uc704\ud574 \ub9e4 \ud504\ub808\uc784\ub9c8\ub2e4 \ud638\ucd9c\ub429\ub2c8\ub2e4.","title":"render"},{"location":"blockentities/ber/#_1","text":"blockEntity : \ub80c\ub354\ub9c1\ud560 BlockEntity . partialTicks : \uc774\uc804 \ud2f1\uc73c\ub85c\ubd80\ud130 \uc2dc\uac04\uc774 \uc5bc\ub9c8\ub098 \uc9c0\ub0ac\ub294\uc9c0 \uc54c\ub824\uc8fc\ub294 0.0 \ubd80\ud130 1.0 \uc0ac\uc774\uc758 \uac12. 0.0\uc774\uba74 \uc774\uc804 \ud2f1 \ub05d\ub098\uace0 \ubc14\ub85c, 1.0 \uc774\uba74 \ud604\uc7ac \ud2f1 \ub05d\ub098\uae30 \uc9c1\uc804\uc784. poseStack : BlockEntity \ub97c \ud654\uba74\uc758 \uc62c\ubc14\ub978 \uc704\uce58\uc5d0 \ub80c\ub354\ub9c1\ud558\uae30 \uc704\ud55c 4x4 \ud589\ub82c\ub4e4\uc774 \ub4e4\uc5b4\uc788\ub294 \uc2a4\ud0dd. bufferSource : Vertex Consumer \uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\ub294 \ub80c\ub354\ub9c1 \ubc84\ud37c. combinedLight : \ud604\uc7ac BlockEntity \uc758 \uc815\uc218 \ubc1d\uae30. combinedOverlay : BlockEntity \uc758 \uc624\ubc84\ub808\uc774\ub97c \uc9c0\uc815\ud558\ub294 \uc815\uc218. \ubcf4\ud1b5 OverlayTexture#NO_OVERLAY \ub610\ub294 655,360\uc744 \uc0ac\uc6a9\ud568.","title":"\uba54\uc11c\ub4dc\uc758 \uc778\uc790\ub4e4"},{"location":"blockentities/ber/#ber_1","text":"BER \uc744 \ub4f1\ub85d\ud558\uae30 \uc704\ud574\uc120, EntityRenderersEvent$RegisterRenderers \uc774\ubca4\ud2b8\ub97c \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \uad6c\ub3c5\ud558\uace0 \ud574\ub2f9 \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub420 \ub54c #registerBlockEntityRenderer \ub97c \ud638\ucd9c\ud558\uc138\uc694.","title":"BER \ub4f1\ub85d\ud558\uae30"},{"location":"blocks/","text":"\ube14\ub85d \ube14\ub85d\uc740, \ub2f9\uc5f0\ud558\uac8c\ub3c4, \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ub808\ubca8\uc5d0\uc11c \ud544\uc218\uc801\uc785\ub2c8\ub2e4. \uc9c0\ud615\uacfc \uad6c\uc870\ubb3c, \uadf8\ub9ac\uace0 \uae30\uacc4\ub4e4 \uc804\ubd80 \ube14\ub85d\ub4e4\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\ub97c \uac1c\ubc1c\ud558\uc2e0\ub2e4\uba74, \uc544\ub9c8 \ube14\ub85d\uc744 \ub9cc\ub4e4\uace0 \uc2f6\uc73c\uc2e4 \uac83\uc77c \ud150\ub370\uc694, \uc774\ubc88\uc7a5\uc5d0\uc11c\ub294 \uc5b4\ub5bb\uac8c \ube14\ub85d\uc744 \ub9cc\ub4e4\uace0 \uc774\ub97c \ud1b5\ud574 \ud560 \uc218 \uc788\ub294 \uac83\ub4e4 \uba87\uac00\uc9c0\uc5d0 \ub300\ud574 \ub2e4\ub8f0 \uac83\uc785\ub2c8\ub2e4. \ube14\ub85d \ub9cc\ub4e4\uae30 \uae30\ubcf8\uc801\uc778 \ube14\ub85d\ub4e4 \ub530\ub85c \ud2b9\ubcc4\ud55c \uae30\ub2a5\uc774 \ud544\uc694\uc5c6\ub294 \ube14\ub85d\ub4e4\uc740(\uc870\uc57d\ub3cc\uc774\ub098 \ub098\ubb34\ud310\uc790 \ub4f1) \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. Block \uc778\uc2a4\ud134\uc2a4\ub97c BlockBehaviour$Properties \uac1d\uccb4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4e4\uc5b4 \ube14\ub85d\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. BlockBehaviour$Properties \uac1d\uccb4\ub294 BlockBehaviour$Properties#of \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4e4 \uc218 \uc788\uc73c\uba70, \uc774 \uac1d\uccb4\uc758 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\ub294 \uac83\uc73c\ub85c \ube14\ub85d\uc758 \ud2b9\uc131\uc744 \uc6d0\ud558\uc2dc\ub294 \ub300\ub85c \ubc14\uafb8\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. strength - hardness \ub294 \ube14\ub85d\uc774 \ubd80\uc234\uc9c0\ub294\ub370 \uac78\ub9ac\ub294 \uc2dc\uac04\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. \uc774\ub294 \uc784\uc758\uac12\uc785\ub2c8\ub2e4. \ucc38\uace0\ub85c, \ub3cc\uc740 1.5\uc758 hardness \ub97c, \ud759\uc740 0.5 \ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \ube14\ub85d\uc774 \ubd80\uc234\uc9c0\uc9c0 \uc54a\ub294\ub2e4\uba74 hardness \uac12\uc740 -1\uc744 \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4, Blocks#BEDROCK \uc774 \uadf8 \uc608\uc2dc\uc785\ub2c8\ub2e4. resistance \ub294 \ube14\ub85d\uc758 \ud3ed\ubc1c \uc800\ud56d\ub825\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. \ucc38\uace0\ub85c, \ub3cc\uc740 6.0\uc744, \ud759\uc740 0.5\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. sound - \ube14\ub85d\uc774 \ubd80\uc234\uc9c0\uace0, \uae68\uc9c0\uace0, \uc124\uce58\ub418\uc5c8\uc744\ub54c \ub0b4\ub294 \uc18c\ub9ac\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. SoundType \uc744 \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4, \uc18c\ub9ac \uc5d0\uc11c \uc790\uc138\ud55c \ub0b4\uc6a9\uc744 \ud655\uc778\ud558\uc138\uc694. lightLevel - \ube14\ub85d\uc774 \ubc29\ucd9c\ud558\ub294 \ube5b\uc758 \uc591\uc744 \uc870\uc808\ud569\ub2c8\ub2e4. \uc778\uc790\ub85c\ub294, BlockState \ub97c \uc778\uc790\ub85c \ubc1b\uace0 0~15\ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218\ub97c \ubc1b\uc2b5\ub2c8\ub2e4. friction - \uc5bc\ub9c8\ub098 \ube14\ub85d\uc774 \ubbf8\ub044\ub7ec\uc6b4\uc9c0\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \ucc38\uace0\ub85c \uc5bc\uc74c\uc740 0.98\uc758 \ubbf8\ub044\ub7ec\uc6c0\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc704 \ubaa8\ub4e0 \uba54\uc11c\ub4dc\ub4e4\uc740 \uc5f0\uc1e0\uc801\uc73c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4. Blocks \ud074\ub798\uc2a4\ub97c \ucc38\uace0\ud558\uc138\uc694. Note \ube14\ub85d\ub4e4\uc740 \ub354\uc774\uc0c1 CreativeModeTab \uc744 \uc9c0\uc815\ubc1b\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc740 BlockItem \uc73c\ub85c \uc62e\uaca8\uc84c\uc2b5\ub2c8\ub2e4. \uacc4\ub2e4\uac00 \ubc88\uc5ed \ud0a4\uac12\ub610\ud55c \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc73c\ub85c\ubd80\ud130 \uc0dd\uc131\ub418\uae30 \ub54c\ubb38\uc5d0 \uc9c0\uc815\ubc1b\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uace0\uae09 \ube14\ub85d \ub2f9\uc5f0\ud558\uac8c\ub3c4 \uc717 \uc608\uc81c\ub294 \ub9e4\uc6b0 \ub2e8\uc21c\ud55c \ube14\ub85d\ub4e4\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\uac00\ub2a5\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud50c\ub808\uc774\uc5b4 \uc0c1\ud638\uc791\uc6a9\uacfc \uac19\uc740 \uae30\ub2a5\uc744 \ucd94\uac00\ud558\uace0 \uc2f6\ub2e4\uba74 \ud074\ub798\uc2a4\ub97c \ub9cc\ub4dc\uc154\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 Block \ud074\ub798\uc2a4\ub294 \uba54\uc11c\ub4dc\uac00 \ub9e4\uc6b0 \ub9ce\uc774 \uc788\uc73c\uba70 \ubaa8\ub4e0\uac83\uc744 \uc774\uacf3\uc5d0\uc11c \uae30\uc220\ud560 \uc21c \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \uc139\uc158\uc5d0 \uc788\ub294 \ub2e4\ub978 \uc7a5\ub4e4\uc5d0\uc11c \ube14\ub85d\uc73c\ub85c \ubb34\uc5c7\uc744 \ud560 \uc218 \uc788\ub294\uc9c0 \ucc38\uace0\ud558\uc138\uc694. \ube14\ub85d \ub4f1\ub85d\ud558\uae30 \ube14\ub85d\uc740 \ubb34\uc870\uac74 \ub4f1\ub85d\ub418\uc5b4\uc57c\ub9cc \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4. Important \ub808\ubca8\uc5d0 \uc788\ub294 \ube14\ub85d\uacfc, \uc778\ubca4\ud1a0\ub9ac\uc5d0 \uc788\ub294 \u201c\ube14\ub85d\u201d\uc740 \ub2e4\ub985\ub2c8\ub2e4. \ub808\ubca8\uc5d0 \uc788\ub294 \ube14\ub85d\uc740 BlockState \ub97c \ud1b5\ud574 \uae30\uc220\ub418\uace0, \uadf8 \uae30\ub2a5\uc740 Block \uc5d0\uc11c \uc815\uc758\ub429\ub2c8\ub2e4. \ud55c\ud3b8, \uc778\ubca4\ud1a0\ub9ac\uc5d0 \uc788\ub294 \uc544\uc774\ud15c\uc740 ItemStack \uc758 \uc778\uc2a4\ud134\uc2a4\uc774\uba70, \uadf8 \uae30\ub2a5\uc740 Item \uc5d0\uc11c \uc815\uc758\ub429\ub2c8\ub2e4. BlockItem \uc740 \uc774 \ub450\uac00\uc9c0\ub97c \uc774\uc5b4\uc8fc\ub294 \ud558\ub098\uc758 \ub2e4\ub9ac\uc774\uba70, \ud45c\ud604\ud560 Block \uc778\uc2a4\ud134\uc2a4\ub97c \ucc38\uc870\ud558\ub294 Item \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. BlockItem \uc740 \uba87\uac00\uc9c0 \ube14\ub85d\uacfc \uac19\uc740 \uae30\ub2a5\ub4e4\uc744 \uad6c\ud604\ud558\ub294\ub370, \uadf8 \uc608\ub85c \uc6b0\ud074\ub9ad\uc2dc \ub808\ubca8\uc5d0 \uc124\uce58\ub418\ub294 \uac83\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c BlockItem \uc774 \uc5c6\ub294 Block \uc744 \ub9cc\ub4e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. (\uadf8 \uc608\ub85c, minecraft:water \ub294 \ube14\ub85d\uc73c\ub85c \uc874\uc7ac\ud558\ub098 \uc544\uc774\ud15c\uc73c\ub85c\ub294 \uc5c6\uc2b5\ub2c8\ub2e4, \uadf8\ub7ec\uae30\uc5d0 \uc774\ub97c \ud719\ub4dd\ud558\ub294 \uac83\uc740 \ubd88\uac00\ub2a5\ud569\ub2c8\ub2e4.) \uc120\ud0dd\uc801\uc73c\ub85c \ube14\ub85d \ub4f1\ub85d\ud558\uae30 \uacfc\uac70\uc5d0\ub294 \uc5ec\ub7ec \ubaa8\ub4dc\uc5d0\uc11c \ud2b9\uc815 \ube14\ub85d/\uc544\uc774\ud15c\ub4e4\uc744 \uc124\uc815 \ud30c\uc77c\uc5d0\uc11c \ube44\ud65c\uc131\ud654\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uc600\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098, \ub354 \uc774\uc0c1 \ub4f1\ub85d\ub420 \uc218 \uc788\ub294 \ube14\ub85d\ub4e4\uc758 \uc81c\ud55c\uc774 \uc5c6\uc73c\ub2c8 \uc774\ub7f0 \uad6c\uc870\ub294 \ub354 \uc774\uc0c1 \uad8c\uc7a5\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 \ubaa8\ub4dc\uc758 \ubaa8\ub4e0 \ube14\ub85d\ub4e4\uc744 \ub4f1\ub85d\ud558\uc138\uc694! \ub9cc\uc57d \ud2b9\uc815 \ube14\ub85d\uc744 \uc124\uc815\uc744 \ud1b5\ud574 \ube44\ud65c\uc131\ud654 \ud558\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74, \uadf8 \ub300\uc2e0 \uc870\ud569\ubc95\uc744 \ube44\ud65c\uc131\ud654 \ud558\uc138\uc694. \ucd94\uac00 \uc815\ubcf4 \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \uc6b8\ud0c0\ub9ac, \ub2f4\uc7a5\uacfc \uac19\uc740 \ube14\ub85d\ub4e4\uc758 \ud2b9\uc131\uc5d0 \ub300\ud574 \ub354 \uc54c\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74, blockstates \ub97c \ucc38\uace0\ud558\uc138\uc694","title":"\uc18c\uac1c"},{"location":"blocks/#_1","text":"\ube14\ub85d\uc740, \ub2f9\uc5f0\ud558\uac8c\ub3c4, \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ub808\ubca8\uc5d0\uc11c \ud544\uc218\uc801\uc785\ub2c8\ub2e4. \uc9c0\ud615\uacfc \uad6c\uc870\ubb3c, \uadf8\ub9ac\uace0 \uae30\uacc4\ub4e4 \uc804\ubd80 \ube14\ub85d\ub4e4\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\ub97c \uac1c\ubc1c\ud558\uc2e0\ub2e4\uba74, \uc544\ub9c8 \ube14\ub85d\uc744 \ub9cc\ub4e4\uace0 \uc2f6\uc73c\uc2e4 \uac83\uc77c \ud150\ub370\uc694, \uc774\ubc88\uc7a5\uc5d0\uc11c\ub294 \uc5b4\ub5bb\uac8c \ube14\ub85d\uc744 \ub9cc\ub4e4\uace0 \uc774\ub97c \ud1b5\ud574 \ud560 \uc218 \uc788\ub294 \uac83\ub4e4 \uba87\uac00\uc9c0\uc5d0 \ub300\ud574 \ub2e4\ub8f0 \uac83\uc785\ub2c8\ub2e4.","title":"\ube14\ub85d"},{"location":"blocks/#_2","text":"","title":"\ube14\ub85d \ub9cc\ub4e4\uae30"},{"location":"blocks/#_3","text":"\ub530\ub85c \ud2b9\ubcc4\ud55c \uae30\ub2a5\uc774 \ud544\uc694\uc5c6\ub294 \ube14\ub85d\ub4e4\uc740(\uc870\uc57d\ub3cc\uc774\ub098 \ub098\ubb34\ud310\uc790 \ub4f1) \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. Block \uc778\uc2a4\ud134\uc2a4\ub97c BlockBehaviour$Properties \uac1d\uccb4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4e4\uc5b4 \ube14\ub85d\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. BlockBehaviour$Properties \uac1d\uccb4\ub294 BlockBehaviour$Properties#of \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4e4 \uc218 \uc788\uc73c\uba70, \uc774 \uac1d\uccb4\uc758 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\ub294 \uac83\uc73c\ub85c \ube14\ub85d\uc758 \ud2b9\uc131\uc744 \uc6d0\ud558\uc2dc\ub294 \ub300\ub85c \ubc14\uafb8\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. strength - hardness \ub294 \ube14\ub85d\uc774 \ubd80\uc234\uc9c0\ub294\ub370 \uac78\ub9ac\ub294 \uc2dc\uac04\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. \uc774\ub294 \uc784\uc758\uac12\uc785\ub2c8\ub2e4. \ucc38\uace0\ub85c, \ub3cc\uc740 1.5\uc758 hardness \ub97c, \ud759\uc740 0.5 \ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \ube14\ub85d\uc774 \ubd80\uc234\uc9c0\uc9c0 \uc54a\ub294\ub2e4\uba74 hardness \uac12\uc740 -1\uc744 \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4, Blocks#BEDROCK \uc774 \uadf8 \uc608\uc2dc\uc785\ub2c8\ub2e4. resistance \ub294 \ube14\ub85d\uc758 \ud3ed\ubc1c \uc800\ud56d\ub825\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. \ucc38\uace0\ub85c, \ub3cc\uc740 6.0\uc744, \ud759\uc740 0.5\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. sound - \ube14\ub85d\uc774 \ubd80\uc234\uc9c0\uace0, \uae68\uc9c0\uace0, \uc124\uce58\ub418\uc5c8\uc744\ub54c \ub0b4\ub294 \uc18c\ub9ac\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. SoundType \uc744 \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4, \uc18c\ub9ac \uc5d0\uc11c \uc790\uc138\ud55c \ub0b4\uc6a9\uc744 \ud655\uc778\ud558\uc138\uc694. lightLevel - \ube14\ub85d\uc774 \ubc29\ucd9c\ud558\ub294 \ube5b\uc758 \uc591\uc744 \uc870\uc808\ud569\ub2c8\ub2e4. \uc778\uc790\ub85c\ub294, BlockState \ub97c \uc778\uc790\ub85c \ubc1b\uace0 0~15\ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218\ub97c \ubc1b\uc2b5\ub2c8\ub2e4. friction - \uc5bc\ub9c8\ub098 \ube14\ub85d\uc774 \ubbf8\ub044\ub7ec\uc6b4\uc9c0\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \ucc38\uace0\ub85c \uc5bc\uc74c\uc740 0.98\uc758 \ubbf8\ub044\ub7ec\uc6c0\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc704 \ubaa8\ub4e0 \uba54\uc11c\ub4dc\ub4e4\uc740 \uc5f0\uc1e0\uc801\uc73c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4. Blocks \ud074\ub798\uc2a4\ub97c \ucc38\uace0\ud558\uc138\uc694. Note \ube14\ub85d\ub4e4\uc740 \ub354\uc774\uc0c1 CreativeModeTab \uc744 \uc9c0\uc815\ubc1b\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc740 BlockItem \uc73c\ub85c \uc62e\uaca8\uc84c\uc2b5\ub2c8\ub2e4. \uacc4\ub2e4\uac00 \ubc88\uc5ed \ud0a4\uac12\ub610\ud55c \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc73c\ub85c\ubd80\ud130 \uc0dd\uc131\ub418\uae30 \ub54c\ubb38\uc5d0 \uc9c0\uc815\ubc1b\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.","title":"\uae30\ubcf8\uc801\uc778 \ube14\ub85d\ub4e4"},{"location":"blocks/#_4","text":"\ub2f9\uc5f0\ud558\uac8c\ub3c4 \uc717 \uc608\uc81c\ub294 \ub9e4\uc6b0 \ub2e8\uc21c\ud55c \ube14\ub85d\ub4e4\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\uac00\ub2a5\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud50c\ub808\uc774\uc5b4 \uc0c1\ud638\uc791\uc6a9\uacfc \uac19\uc740 \uae30\ub2a5\uc744 \ucd94\uac00\ud558\uace0 \uc2f6\ub2e4\uba74 \ud074\ub798\uc2a4\ub97c \ub9cc\ub4dc\uc154\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 Block \ud074\ub798\uc2a4\ub294 \uba54\uc11c\ub4dc\uac00 \ub9e4\uc6b0 \ub9ce\uc774 \uc788\uc73c\uba70 \ubaa8\ub4e0\uac83\uc744 \uc774\uacf3\uc5d0\uc11c \uae30\uc220\ud560 \uc21c \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \uc139\uc158\uc5d0 \uc788\ub294 \ub2e4\ub978 \uc7a5\ub4e4\uc5d0\uc11c \ube14\ub85d\uc73c\ub85c \ubb34\uc5c7\uc744 \ud560 \uc218 \uc788\ub294\uc9c0 \ucc38\uace0\ud558\uc138\uc694.","title":"\uace0\uae09 \ube14\ub85d"},{"location":"blocks/#_5","text":"\ube14\ub85d\uc740 \ubb34\uc870\uac74 \ub4f1\ub85d\ub418\uc5b4\uc57c\ub9cc \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4. Important \ub808\ubca8\uc5d0 \uc788\ub294 \ube14\ub85d\uacfc, \uc778\ubca4\ud1a0\ub9ac\uc5d0 \uc788\ub294 \u201c\ube14\ub85d\u201d\uc740 \ub2e4\ub985\ub2c8\ub2e4. \ub808\ubca8\uc5d0 \uc788\ub294 \ube14\ub85d\uc740 BlockState \ub97c \ud1b5\ud574 \uae30\uc220\ub418\uace0, \uadf8 \uae30\ub2a5\uc740 Block \uc5d0\uc11c \uc815\uc758\ub429\ub2c8\ub2e4. \ud55c\ud3b8, \uc778\ubca4\ud1a0\ub9ac\uc5d0 \uc788\ub294 \uc544\uc774\ud15c\uc740 ItemStack \uc758 \uc778\uc2a4\ud134\uc2a4\uc774\uba70, \uadf8 \uae30\ub2a5\uc740 Item \uc5d0\uc11c \uc815\uc758\ub429\ub2c8\ub2e4. BlockItem \uc740 \uc774 \ub450\uac00\uc9c0\ub97c \uc774\uc5b4\uc8fc\ub294 \ud558\ub098\uc758 \ub2e4\ub9ac\uc774\uba70, \ud45c\ud604\ud560 Block \uc778\uc2a4\ud134\uc2a4\ub97c \ucc38\uc870\ud558\ub294 Item \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. BlockItem \uc740 \uba87\uac00\uc9c0 \ube14\ub85d\uacfc \uac19\uc740 \uae30\ub2a5\ub4e4\uc744 \uad6c\ud604\ud558\ub294\ub370, \uadf8 \uc608\ub85c \uc6b0\ud074\ub9ad\uc2dc \ub808\ubca8\uc5d0 \uc124\uce58\ub418\ub294 \uac83\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c BlockItem \uc774 \uc5c6\ub294 Block \uc744 \ub9cc\ub4e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. (\uadf8 \uc608\ub85c, minecraft:water \ub294 \ube14\ub85d\uc73c\ub85c \uc874\uc7ac\ud558\ub098 \uc544\uc774\ud15c\uc73c\ub85c\ub294 \uc5c6\uc2b5\ub2c8\ub2e4, \uadf8\ub7ec\uae30\uc5d0 \uc774\ub97c \ud719\ub4dd\ud558\ub294 \uac83\uc740 \ubd88\uac00\ub2a5\ud569\ub2c8\ub2e4.)","title":"\ube14\ub85d \ub4f1\ub85d\ud558\uae30"},{"location":"blocks/#_6","text":"\uacfc\uac70\uc5d0\ub294 \uc5ec\ub7ec \ubaa8\ub4dc\uc5d0\uc11c \ud2b9\uc815 \ube14\ub85d/\uc544\uc774\ud15c\ub4e4\uc744 \uc124\uc815 \ud30c\uc77c\uc5d0\uc11c \ube44\ud65c\uc131\ud654\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uc600\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098, \ub354 \uc774\uc0c1 \ub4f1\ub85d\ub420 \uc218 \uc788\ub294 \ube14\ub85d\ub4e4\uc758 \uc81c\ud55c\uc774 \uc5c6\uc73c\ub2c8 \uc774\ub7f0 \uad6c\uc870\ub294 \ub354 \uc774\uc0c1 \uad8c\uc7a5\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 \ubaa8\ub4dc\uc758 \ubaa8\ub4e0 \ube14\ub85d\ub4e4\uc744 \ub4f1\ub85d\ud558\uc138\uc694! \ub9cc\uc57d \ud2b9\uc815 \ube14\ub85d\uc744 \uc124\uc815\uc744 \ud1b5\ud574 \ube44\ud65c\uc131\ud654 \ud558\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74, \uadf8 \ub300\uc2e0 \uc870\ud569\ubc95\uc744 \ube44\ud65c\uc131\ud654 \ud558\uc138\uc694.","title":"\uc120\ud0dd\uc801\uc73c\ub85c \ube14\ub85d \ub4f1\ub85d\ud558\uae30"},{"location":"blocks/#_7","text":"\ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \uc6b8\ud0c0\ub9ac, \ub2f4\uc7a5\uacfc \uac19\uc740 \ube14\ub85d\ub4e4\uc758 \ud2b9\uc131\uc5d0 \ub300\ud574 \ub354 \uc54c\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74, blockstates \ub97c \ucc38\uace0\ud558\uc138\uc694","title":"\ucd94\uac00 \uc815\ubcf4"},{"location":"blocks/states/","text":"\ube14\ub85d\uc758 \uc0c1\ud0dc \uad6c\ubc84\uc804\uc758 \ube14\ub85d \uc0c1\ud0dc \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 1.7 \uc774\ud558 \ubc84\uc804\uc5d0\uc11c\ub294 \ube14\ub85d \uc5d4\ud2f0\ud2f0\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0, \ube14\ub85d\uc758 \ubc30\uce58\ub098 \uc0c1\ud0dc\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574\uc11c\ub294 \uba54\ud0c0 \ub370\uc774\ud130 \ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c\ub9cc \ud588\uc2b5\ub2c8\ub2e4. \uba54\ud0c0\ub370\uc774\ud130\ub294 \ube14\ub85d\uacfc \ud568\uaed8 \uc800\uc7a5\ub418\ub294 \uc815\uc218\ub85c, \ube14\ub85d\uc758 \ud68c\uc804 \ubc29\ud5a5, \ubc30\uce58, \ub610\ub294 \ube14\ub85d\uc758 \uc885\ub958 \ub4f1\uc744 \uc800\uc7a5\ud558\ub294\ub370\uc5d0 \uc0ac\uc6a9\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uc9c0\ub9cc, \uba54\ud0c0\ub370\uc774\ud130 \uc2dc\uc2a4\ud15c\uc740 \uc4f0\uae30\ub3c4 \uc5b4\ub835\uace0 \uc81c\ud55c\uc801\uc774\uba70 \ud587\uac08\ub9ac\uae30\ub9cc \ud588\uc2b5\ub2c8\ub2e4, \ub2f9\uc5f0\ud558\uac8c\ub3c4 \ubaa8\ub4e0 \uc815\ubcf4\ub97c \ube14\ub85d ID \uc606\uc5d0 \ub2e4\ub294 \uc815\uc218 \ud558\ub098\ub85c\ub9cc \uc800\uc7a5\ud558\ub824\uace0 \ud558\ub2e4\ubcf4\ub2c8, \uac01 \uc22b\uc790\uac00 \ubb34\uc2a8 \uc758\ubbf8\uc778\uc9c0 \ud30c\uc545\ud558\uae30\uac00 \ud798\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uacc4\ub2e8\ucc98\ub7fc \ubc29\ud5a5\uc774 \uc788\uc73c\uba74\uc11c \uc644\uc804\ud788 \uaf49 \ucc44\uc6cc\uc9c0\uc9c4 \uc54a\uc740 \ube14\ub85d\uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \uc815\uc758\ud574\uc57c\ub9cc \ud588\uc2b5\ub2c8\ub2e4. switch (meta) { case 0: { ... } // \ub0a8\ucabd\uc744 \ubc14\ub77c\ubcf4\uace0 \uc788\uace0 \uc544\ub798\uc5d0 \ubc30\uce58\ub418\uc5b4 \uc788\uc74c case 1: { ... } // \ub0a8\ucabd\uc744 \ubc14\ub77c\ubcf4\uace0 \uc788\uace0 \uc704\ucabd\uc5d0 \ubc30\uce58\ub418\uc5b4 \uc788\uc74c case 2: { ... } // \ubd81\ucabd\uc744 \ubc14\ub77c\ubcf4\uace0 \uc788\uace0 \uc544\ub798\uc5d0 \ubc30\uce58\ub418\uc5b4 \uc788\uc74c case 3: { ... } // \ubd81\ucabd\uc744 \ubc14\ub77c\ubcf4\uace0 \uc788\uace0 \uc704\ucabd\uc5d0 \ubc30\uce58\ub418\uc5b4 \uc788\uc74c // ....... } \uc704\ucc98\ub7fc, \uc815\uc218 \ud558\ub098\ub9cc\uc73c\ub85c \ube14\ub85d\uc758 \uc0c1\ud0dc\ub97c \uc800\uc7a5\ud558\uba74 \uac01 \uc22b\uc790\uac00 \ubb34\uc2a8 \uc758\ubbf8\ub97c \uac00\uc9c0\ub294\uc9c0 \uc54c \uc218 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \uc18c\uc2a4\ucf54\ub4dc \uc5c6\uc774\ub294 \ube14\ub85d\uc758 \ud604\uc7ac \uc0c1\ud0dc\ub97c \uc54c \uc218 \uc5c6\uc5c8\uc2b5\ub2c8\ub2e4. BlockState \uc758 \ub4f1\uc7a5 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 1.8\ubd80\ud130 \uba54\ud0c0\ub370\uc774\ud130 \uc2dc\uc2a4\ud15c\uc740 \ud3d0\uae30\ub418\uc5c8\uace0 \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c \uc73c\ub85c \ub300\uccb4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc740 \ube14\ub85d\uc758 \uac01 \uc18d\uc131\ub4e4\uc744 \ucd94\uc0c1\ud654\ud558\uace0 \ube14\ub85d\uc758 \uae30\ub2a5\uacfc \ubd84\ub9ac\ud574\ub0c5\ub2c8\ub2e4. \ube14\ub85d\uc758 \uac01 \uc18d\uc131 \ub4e4\uc740 Property<?> \uc758 \uc778\uc2a4\ud134\uc2a4\ub85c \uc124\uba85\ub418\ub294\ub370, \uadf8 \uc608\ub85c: \uc545\uae30 ( EnumProperty<NoteBlockInstrumenet> ), \ubc14\ub77c\ubcf4\ub294 \ubc29\ud5a5 ( DirectionProperty ), \ub808\ub4dc\uc2a4\ud1a4 \uc2e0\ud638 \uc5ec\ubd80 ( Property<Boolean> ) \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \uc18d\uc131\ub4e4\uc758 \uc18d\uc131\uac12\uc758 \uc790\ub8cc\ud615\uc740 Property<T> \uc5d0 \uc804\ub2ec\ub418\ub294 \ud0c0\uc785 \uc778\uc790 T \uc785\ub2c8\ub2e4. \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc740 Block \uc744 Property<?> \uc640 \uac00\ub2a5\ud55c \ubaa8\ub4e0 \uc18d\uc131\uac12\ub4e4\ub85c \ub9cc\ub4e0 \ub9f5\uacfc \uc9dd\uc744 \uc9c0\uc5b4\ub193\ub294\ub370, \uc774 \uace0\uc720\ud55c \uc9dd\uc744 BlockState \ub77c\uace0 \ud569\ub2c8\ub2e4. \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc774 \ub2e4\ub8e8\uae30\ub3c4 \ud3b8\ud558\uace0 \ub35c \ud587\uac08\ub9ac\ub2e4 \ubcf4\ub2c8 \uba54\ud0c0 \ub370\uc774\ud130 \uc2dc\uc2a4\ud15c\uc744 \uc644\uc804\ud788 \ub300\uccb4\ud558\uc600\uc2b5\ub2c8\ub2e4. \ud50c\ub808\uc774\uc5b4\uac00 \ub204\ub8e8\uace0 \uc788\ub294 \ub3d9\ucabd\uc744 \ubc14\ub77c\ubcf4\uace0 \uc788\ub294 \ub3cc \ubc84\ud2bc\uc740 \uc774\uc804\uc5d0\ub294 minecraft:stone_button \uc5d0 \uba54\ud0c0\ub370\uc774\ud130 \uac12 9 \ub85c \ud45c\ud604\ub418\uc5c8\ub358 \ubc18\uba74 \uc774\uc81c\ub294 minecraft:stone_button[facing=east,powered=true] \ub85c \ub098\ud0c0\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc744 \uc62c\ubc14\ub974\uac8c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95 \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc774 \uc720\uc5f0\ud558\uace0 \uac15\ub825\ud55c \uac83\uc740 \ub9de\uc9c0\ub9cc, \uadf8\ub807\ub2e4\uace0 \ub9cc\ub2a5\uc740 \uc544\ub2d9\ub2c8\ub2e4. BlockState \ub4e4\uc740 \ubd88\ubcc0\uc785\ub2c8\ub2e4, \uac8c\uc784\uc774 \uc2dc\uc791\ub418\ub294 \ub3d9\uc548 \uac00\ub2a5\ud55c \ubaa8\ub4e0 \uc870\ud569\uc758 BlockState \ub4e4\uc774 \uc0dd\uc131\ub429\ub2c8\ub2e4. \ub2e4\uc2dc \ub9d0\ud574\uc11c, \uacbd\uc6b0\uc758 \uc218\uac00 \ub9e4\uc6b0 \ub9ce\uc740 BlockState \ub97c \ub9cc\ub4e4 \uacbd\uc6b0 \uac8c\uc784\uc744 \ubd88\ub7ec\uc624\ub294 \uc18d\ub3c4\uac00 \ub9e4\uc6b0 \ub290\ub824\uc9c8 \uc218 \uc788\uc73c\uba70, \ube14\ub85d\uc758 \uba54\uce74\ub2c9\uc744 \uc774\ud574\ud558\uae30\ub3c4 \uc5b4\ub824\uc6cc \uc9c8 \uac83\uc785\ub2c8\ub2e4. \ubaa8\ub4e0 \ube14\ub85d\ub4e4\uc774 \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud560 \ud544\uc694\ub294 \uc5c6\uc73c\uba70, \ube14\ub85d\uc758 \uac00\uc7a5 \uac04\ub2e8\ud55c \uc18d\uc131\ub4e4\ub9cc \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc73c\ub85c \ud45c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4, \uadf8 \uc678\uc5d0 \ube14\ub85d \uc5d4\ud2f0\ud2f0\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 \uc544\uc608 \ub610 \ub2e4\ub978 \ube14\ub85d\uc744 \ub9cc\ub4dc\ub294 \uac83 \ub610\ud55c \uace0\ub824\ud574\uc8fc\uc138\uc694, \uadf8\ub9ac\uace0 \uc5b8\uc81c\ub098 \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc633\uc740 \uc77c\uc778\uc9c0 \uace0\ub824\ud574\uc8fc\uc138\uc694. Note \ud301: \ub9cc\uc57d \ube14\ub85d\uc774 \ub2e4\ub978 \uc774\ub984\uc744 \uac00\uc9c4\ub2e4\uba74, \ub610 \ub2e4\ub978 \ube14\ub85d \uc0c1\ud0dc\uac00 \uc544\ub2c8\ub77c \uc0c8\ub85c\uc6b4 \ube14\ub85d\uc774 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4 . \uc608\ub97c \ub4e4\uc5b4 \uc758\uc790\ub97c \ub9cc\ub4e0\ub2e4\uace0 \ud560 \ub54c: \uc758\uc790\uc758 \ubc29\ud5a5 \uc740 \ube14\ub85d\uc758 \uc18d\uc131 \uc774\ub2c8 \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub294\uac8c \uc633\uc9c0\ub9cc, \ub098\ubb34\uc758 \uc885\ub958 \uac00 \ub2e4\ub978 \uc758\uc790\ub4e4\uc740 \uc544\uc608 \ub2e4\ub978 \ube14\ub85d\uc774 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub3d9\ucabd\uc744 \ubc14\ub77c\ubcf4\ub294 \u201c\ucc38\ub098\ubb34 \uc758\uc790\u201d ( oak_chair[facing=east] ) \ub294 \uc11c\ucabd\uc744 \ubc14\ub77c\ubcf4\ub294 \u201c\uac00\ubb38\ube44 \ub098\ubb34 \uc758\uc790\u201d ( spruce_chair[facing=west] ) \uc640\ub294 \ub2e4\ub978 \ube14\ub85d\uc785\ub2c8\ub2e4. \ube14\ub85d\uc5d0 \uc0c1\ud0dc \ucd94\uac00\ud558\uae30 \ud604\uc7ac \ub9cc\ub4e4\uace0 \uacc4\uc2e0 Block \ud074\ub798\uc2a4\uc5d0 \uadf8 \ube14\ub85d\uc774 \uac00\uc9c8 \uc218 \uc788\ub294 \ubaa8\ub4e0 \uc18d\uc131\ub4e4\uc744 static final \ub85c \uc815\uc758\ub41c Property<?> \uac1d\uccb4\ub4e4\uc744 \uc0dd\uc131\ud558\uac70\ub098 \ucc38\uc870\ud558\uc5ec \ud45c\ud604\ud558\uc138\uc694. \uc6d0\ud558\uc2e0\ub2e4\uba74 \uc9c1\uc811 Property<?> \ud074\ub798\uc2a4\ub97c \uad6c\ud604\ud558\uc5ec\ub3c4 \ub429\ub2c8\ub2e4\ub9cc, \uc774 \ubb38\uc11c\uc5d0\uc11c\ub294 \uc774\uc5d0 \ub300\ud574 \ub2e4\ub8e8\uc9c4 \uc54a\uaca0\uc2b5\ub2c8\ub2e4. \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \uc774\ubbf8 \uc4f8\ub9cc\ud55c \uc774 \ud074\ub798\uc2a4\uc758 \uad6c\ud604\ub4e4\uc744 \uc5ec\ub7ec\uac1c \uc81c\uacf5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4: IntegerProperty Property<Integer> \uc758 \uad6c\ud604. \uc815\uc218\uac12\uc744 \uac00\uc9c0\ub294 \uc18d\uc131\uc744 \uc815\uc758\ud568. IntegerProperty#create(String \uc18d\uc131\uc774\ub984, int \ucd5c\uc19f\uac12, int \ucd5c\ub313\uac12) \ub97c \ud638\ucd9c\ud558\uc5ec \uc0dd\uc131\ud560 \uc218 \uc788\uc74c. BooleanProperty Property<Boolean> \uc758 \uad6c\ud604. \ucc38 \ub610\ub294 \uac70\uc9d3 \uac12\uc744 \uac00\uc9c0\ub294 \uc18d\uc131\uc744 \uc815\uc758\ud568. BooleanProperty#create(String \uc18d\uc131\uc774\ub984) \ub97c \ud638\ucd9c\ud558\uc5ec \uc0dd\uc131\ud560 \uc218 \uc788\uc74c. EnumProperty<E extends Enum<E>> Property<E> \uc758 \uad6c\ud604. \uc5f4\uac70\ud615 \ud074\ub798\uc2a4\uc758 \uc5f4\uac70 \uc0c1\uc218\uac12\uc744 \uac00\uc9c0\ub294 \uc18d\uc131\uc744 \uc815\uc758\ud568. EnumProperty#create(String \uc18d\uc131\uc774\ub984, Class<E> \uc5f4\uac70\ud615\ud074\ub798\uc2a4) \ub97c \ud638\ucd9c\ud558\uc5ec \uc0dd\uc131\ud560 \uc218 \uc788\uc74c. \uc0ac\uc2e4 \uc5f4\uac70\ud615 \ud074\ub798\uc2a4\uc758 \uc5f4\uac70\uc0c1\uc218\uc911 \uc77c\ubd80\ub9cc \uac12\uc73c\ub85c \uac00\uc9c0\ub3c4\ub85d \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. (\uc608\ub97c \ub4e4\uc5b4 DyeColor \uc758 16\uac1c\uc758 \uc0c9\uc0c1\uc911 4\uac1c\ub9cc \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0). \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 EnumProperty#create \uc758 \uc624\ubc84\ub85c\ub4dc\ub4e4\uc744 \ucc38\uace0\ud558\uc138\uc694. DirectionProperty EnumProperty<Direction> \ub97c \uc870\uae08 \ub354 \uac04\uc18c\ud654\uc2dc\ud0a8 \uad6c\ud604. \uc5ec\ub7ec \ud3b8\ub9ac\ud55c \uae30\ub2a5\ub4e4\ub3c4 \uc81c\uacf5\ud558\ub294\ub370, \uc608\ub97c \ub4e4\uc5b4 \uc55e, \ub4a4, \uc591 \uc606 \ubc29\ud5a5 \uc18d\uc131\uc744 \uc815\uc758\ud558\ub824\uba74 DirectionProperty.create(\"<name>\", Direction.Plane.HORIZONTAL) \ub97c \ud638\ucd9c\ud558\uc138\uc694. X\ucd95 \ubc29\ud5a5 \uc18d\uc131\uc744 \uc815\uc758\ub824\uba74 DirectionProperty.create(\"<name>\", Direction.Axis.X) \ub97c \ud638\ucd9c\ud558\uc138\uc694. BlockStateProperties \uc5d0\ub294 \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc18d\uc131\ub4e4\uc774 \uc788\uc2b5\ub2c8\ub2e4, \uadf8\ub9ac\uace0 \uac00\ub2a5\ud558\ub2e4\uba74 \uc0c8\ub85c\uc6b4 \uc18d\uc131\uc744 \ub9cc\ub4dc\uc2dc\ub294 \uac83 \ubcf4\ub2e4 \uc774 \ud074\ub798\uc2a4\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc18d\uc131\ub4e4\uc744 \uc7ac\uc0ac\uc6a9\ud558\uc138\uc694. \uc774\uc81c \uc6d0\ud558\uc2dc\ub294 Property<> \uac1d\uccb4\uac00 \uc788\uc73c\ub2c8, \ube14\ub85d\uc758 Block#createBlockStateDefinition(StateDefinition$Builder) \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694. \uc774\ub54c \ube14\ub85d\uc5d0 \ucd94\uac00\ud560 Property<?> \ub97c StateDefinition$Builder#add(...); \uc5d0 \uc778\uc790\ub85c \uc804\ub2ec\ud574 \ud638\ucd9c\ud558\uc5ec \uc18d\uc131\ub4e4\uc744 \ube14\ub85d\uc5d0 \ucd94\uac00\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \ube14\ub85d\ub4e4\uc740 \ube14\ub85d \uc0c1\ud0dc\uc758 \u201c\uae30\ubcf8\uac12\u201d, \ub610\ub294 \uae30\ubcf8 \uc0c1\ud0dc\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uae30\ubcf8 \uc0c1\ud0dc\ub294 \uc790\ub3d9\uc73c\ub85c \uacb0\uc815\ub418\uc9c0\ub9cc \uc6d0\ud558\uc2e0\ub2e4\uba74 Block#registerDefaultState(BlockState) \ub97c \ube14\ub85d\uc758 \uc0dd\uc131\uc790\uc5d0\uc11c \ud638\ucd9c\ud558\uc5ec \ubcc0\uacbd\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uae30\ubcf8 \uc0c1\ud0dc\ub294 \ube14\ub85d\uc774 \uc124\uce58 \ub420 \ub54c \uac00\uc9c8 \uc0c1\ud0dc\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 DoorBlock \uc758 \uacbd\uc6b0: this.registerDefaultState( this.stateDefinition.any() .setValue(FACING, Direction.NORTH) .setValue(OPEN, false) .setValue(HINGE, DoorHingeSide.LEFT) .setValue(POWERED, false) .setValue(HALF, DoubleBlockHalf.LOWER) ); \ube14\ub85d\uc744 \uc124\uce58\ud560 \ub54c \uc0c1\ud669\uc5d0 \ub530\ub77c \uae30\ubcf8 BlockState \ub9d0\uace0 \ub2e4\ub978 BlockState \ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud558\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74 Block#getStateForPlacement(BlockPlaceContext) \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694. \uc774 \uba54\uc11c\ub4dc\ub294 \ud50c\ub808\uc774\uc5b4\uac00 \ubc14\ub77c\ubcf4\ub294 \ubc29\ud5a5\uc5d0 \ub530\ub77c \ubc29\ud5a5\uc774 \ub2e4\ub978 \ube14\ub85d\uc744 \ub300\uc2e0 \uc124\uce58\ud558\ub3c4\ub85d \ud558\ub294 \ub4f1 \uc751\uc6a9 \ubc29\ubc95\uc774 \ub9ce\uc2b5\ub2c8\ub2e4. BlockState \ub294 \ubd88\ubcc0\uc774\uace0, \uac00\ub2a5\ud55c \ubaa8\ub4e0 BlockState \ub4e4\uc774 \uac8c\uc784\uc744 \ubd88\ub7ec\uc62c \ub54c \uc0dd\uc131\ub418\ub2c8, BlockState#setValue(Property<T>, T) \ub97c \ud638\ucd9c\ud558\uba74 \ube14\ub85d \uc0c1\ud0dc\uc5d0 \uc800\uc7a5\ub41c \uc18d\uc131\uac12\uc744 \uc218\uc815\ud558\ub294 \uac83\uc774 \uc544\ub2c8\ub77c \ud574\ub2f9 \uac12\uc774 \uc774\ubbf8 \ub4e4\uc5b4\uc788\ub294 BlockState \ub97c Block \uc758 StateHolder \ub97c \ud1b5\ud574 \uc694\uccad\ud558\uc5ec \ubc1b\uc544\uc635\ub2c8\ub2e4. \ub610\ud55c BlockState \ub450\uac1c\ub97c \ube44\uad50\ud560 \ub54c Object#equals \uac00 \uc544\ub2c8\ub77c == \ub85c \ube44\uad50\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. \ube14\ub85d\uc758 \uc18d\uc131 \uc368\ubcf4\uae30 BlockState#getValue(Property<?>) \ub97c \ud638\ucd9c\ud558\uc5ec \ud574\ub2f9 \ube14\ub85d \uc0c1\ud0dc\uc758 \uc18d\uc131 \uac12\uc744 \ubc1b\uc544\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uc774\ub54c \uc778\uc790\ub85c \uc804\ub2ec\ud558\ub294 \uc18d\uc131\uc740 \uad6c\uccb4\uc801\uc778 \uac12\uc744 \uc5bb\uc73c\ub824\ub294 \uc18d\uc131\uc785\ub2c8\ub2e4. \ub9cc\uc57d \ud574\ub2f9 \uc18d\uc131\uc73c\ub85c \ub2e4\ub978 \uac12\uc744 \uac00\uc9c0\uace0 \uc788\ub294 \ube14\ub85d \uc0c1\ud0dc\ub97c \uc5bb\uace0 \uc2f6\ub2e4\uba74 BlockState#setValue(Property<T>, T) \ub97c \uc18d\uc131\uacfc \uc18d\uc131 \uac12\uc744 \uc804\ub2ec\ud558\uc5ec \ud638\ucd9c\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4. \ub808\ubca8\uc758 \ud2b9\uc815 \uc9c0\uc810\uc758 \ube14\ub85d\uc758 \uc0c1\ud0dc\ub97c \uc77d\uac70\ub098 \ubcc0\uacbd\ud558\ub824\uba74 Level#getBlockState(BlockPos) \ub610\ub294 Level#setBlockAndUpdate(BlockPos, BlockState) \ub97c \ud638\ucd9c\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4. Block \uc744 \ubc30\uce58\ud558\uae30 \uc704\ud574\uc120, Block#defaultBlockState() \ub97c \ud638\ucd9c\ud558\uc5ec \uae30\ubcf8 \uc0c1\ud0dc\ub97c \ubc1b\uc544\uc624\uc2dc\uace0, \uc774 \uae30\ubcf8 \uc0c1\ud0dc\uc5d0 BlockState#setValue(Property<T>, T) \ub97c \ud638\ucd9c\ud574 \uc54c\ub9de\uc740 \uc18d\uc131\uac12\ub4e4\ub85c \ub9de\ucd98 \ub2e4\uc74c \uc124\uce58\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4.","title":"\ube14\ub85d\uc758 \uc0c1\ud0dc"},{"location":"blocks/states/#_1","text":"","title":"\ube14\ub85d\uc758 \uc0c1\ud0dc"},{"location":"blocks/states/#_2","text":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8 1.7 \uc774\ud558 \ubc84\uc804\uc5d0\uc11c\ub294 \ube14\ub85d \uc5d4\ud2f0\ud2f0\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0, \ube14\ub85d\uc758 \ubc30\uce58\ub098 \uc0c1\ud0dc\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574\uc11c\ub294 \uba54\ud0c0 \ub370\uc774\ud130 \ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c\ub9cc \ud588\uc2b5\ub2c8\ub2e4. \uba54\ud0c0\ub370\uc774\ud130\ub294 \ube14\ub85d\uacfc \ud568\uaed8 \uc800\uc7a5\ub418\ub294 \uc815\uc218\ub85c, \ube14\ub85d\uc758 \ud68c\uc804 \ubc29\ud5a5, \ubc30\uce58, \ub610\ub294 \ube14\ub85d\uc758 \uc885\ub958 \ub4f1\uc744 \uc800\uc7a5\ud558\ub294\ub370\uc5d0 \uc0ac\uc6a9\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uc9c0\ub9cc, \uba54\ud0c0\ub370\uc774\ud130 \uc2dc\uc2a4\ud15c\uc740 \uc4f0\uae30\ub3c4 \uc5b4\ub835\uace0 \uc81c\ud55c\uc801\uc774\uba70 \ud587\uac08\ub9ac\uae30\ub9cc \ud588\uc2b5\ub2c8\ub2e4, \ub2f9\uc5f0\ud558\uac8c\ub3c4 \ubaa8\ub4e0 \uc815\ubcf4\ub97c \ube14\ub85d ID \uc606\uc5d0 \ub2e4\ub294 \uc815\uc218 \ud558\ub098\ub85c\ub9cc \uc800\uc7a5\ud558\ub824\uace0 \ud558\ub2e4\ubcf4\ub2c8, \uac01 \uc22b\uc790\uac00 \ubb34\uc2a8 \uc758\ubbf8\uc778\uc9c0 \ud30c\uc545\ud558\uae30\uac00 \ud798\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uacc4\ub2e8\ucc98\ub7fc \ubc29\ud5a5\uc774 \uc788\uc73c\uba74\uc11c \uc644\uc804\ud788 \uaf49 \ucc44\uc6cc\uc9c0\uc9c4 \uc54a\uc740 \ube14\ub85d\uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \uc815\uc758\ud574\uc57c\ub9cc \ud588\uc2b5\ub2c8\ub2e4. switch (meta) { case 0: { ... } // \ub0a8\ucabd\uc744 \ubc14\ub77c\ubcf4\uace0 \uc788\uace0 \uc544\ub798\uc5d0 \ubc30\uce58\ub418\uc5b4 \uc788\uc74c case 1: { ... } // \ub0a8\ucabd\uc744 \ubc14\ub77c\ubcf4\uace0 \uc788\uace0 \uc704\ucabd\uc5d0 \ubc30\uce58\ub418\uc5b4 \uc788\uc74c case 2: { ... } // \ubd81\ucabd\uc744 \ubc14\ub77c\ubcf4\uace0 \uc788\uace0 \uc544\ub798\uc5d0 \ubc30\uce58\ub418\uc5b4 \uc788\uc74c case 3: { ... } // \ubd81\ucabd\uc744 \ubc14\ub77c\ubcf4\uace0 \uc788\uace0 \uc704\ucabd\uc5d0 \ubc30\uce58\ub418\uc5b4 \uc788\uc74c // ....... } \uc704\ucc98\ub7fc, \uc815\uc218 \ud558\ub098\ub9cc\uc73c\ub85c \ube14\ub85d\uc758 \uc0c1\ud0dc\ub97c \uc800\uc7a5\ud558\uba74 \uac01 \uc22b\uc790\uac00 \ubb34\uc2a8 \uc758\ubbf8\ub97c \uac00\uc9c0\ub294\uc9c0 \uc54c \uc218 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \uc18c\uc2a4\ucf54\ub4dc \uc5c6\uc774\ub294 \ube14\ub85d\uc758 \ud604\uc7ac \uc0c1\ud0dc\ub97c \uc54c \uc218 \uc5c6\uc5c8\uc2b5\ub2c8\ub2e4.","title":"\uad6c\ubc84\uc804\uc758 \ube14\ub85d \uc0c1\ud0dc"},{"location":"blocks/states/#blockstate","text":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8 1.8\ubd80\ud130 \uba54\ud0c0\ub370\uc774\ud130 \uc2dc\uc2a4\ud15c\uc740 \ud3d0\uae30\ub418\uc5c8\uace0 \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c \uc73c\ub85c \ub300\uccb4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc740 \ube14\ub85d\uc758 \uac01 \uc18d\uc131\ub4e4\uc744 \ucd94\uc0c1\ud654\ud558\uace0 \ube14\ub85d\uc758 \uae30\ub2a5\uacfc \ubd84\ub9ac\ud574\ub0c5\ub2c8\ub2e4. \ube14\ub85d\uc758 \uac01 \uc18d\uc131 \ub4e4\uc740 Property<?> \uc758 \uc778\uc2a4\ud134\uc2a4\ub85c \uc124\uba85\ub418\ub294\ub370, \uadf8 \uc608\ub85c: \uc545\uae30 ( EnumProperty<NoteBlockInstrumenet> ), \ubc14\ub77c\ubcf4\ub294 \ubc29\ud5a5 ( DirectionProperty ), \ub808\ub4dc\uc2a4\ud1a4 \uc2e0\ud638 \uc5ec\ubd80 ( Property<Boolean> ) \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \uc18d\uc131\ub4e4\uc758 \uc18d\uc131\uac12\uc758 \uc790\ub8cc\ud615\uc740 Property<T> \uc5d0 \uc804\ub2ec\ub418\ub294 \ud0c0\uc785 \uc778\uc790 T \uc785\ub2c8\ub2e4. \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc740 Block \uc744 Property<?> \uc640 \uac00\ub2a5\ud55c \ubaa8\ub4e0 \uc18d\uc131\uac12\ub4e4\ub85c \ub9cc\ub4e0 \ub9f5\uacfc \uc9dd\uc744 \uc9c0\uc5b4\ub193\ub294\ub370, \uc774 \uace0\uc720\ud55c \uc9dd\uc744 BlockState \ub77c\uace0 \ud569\ub2c8\ub2e4. \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc774 \ub2e4\ub8e8\uae30\ub3c4 \ud3b8\ud558\uace0 \ub35c \ud587\uac08\ub9ac\ub2e4 \ubcf4\ub2c8 \uba54\ud0c0 \ub370\uc774\ud130 \uc2dc\uc2a4\ud15c\uc744 \uc644\uc804\ud788 \ub300\uccb4\ud558\uc600\uc2b5\ub2c8\ub2e4. \ud50c\ub808\uc774\uc5b4\uac00 \ub204\ub8e8\uace0 \uc788\ub294 \ub3d9\ucabd\uc744 \ubc14\ub77c\ubcf4\uace0 \uc788\ub294 \ub3cc \ubc84\ud2bc\uc740 \uc774\uc804\uc5d0\ub294 minecraft:stone_button \uc5d0 \uba54\ud0c0\ub370\uc774\ud130 \uac12 9 \ub85c \ud45c\ud604\ub418\uc5c8\ub358 \ubc18\uba74 \uc774\uc81c\ub294 minecraft:stone_button[facing=east,powered=true] \ub85c \ub098\ud0c0\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"BlockState\uc758 \ub4f1\uc7a5"},{"location":"blocks/states/#_3","text":"\ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc774 \uc720\uc5f0\ud558\uace0 \uac15\ub825\ud55c \uac83\uc740 \ub9de\uc9c0\ub9cc, \uadf8\ub807\ub2e4\uace0 \ub9cc\ub2a5\uc740 \uc544\ub2d9\ub2c8\ub2e4. BlockState \ub4e4\uc740 \ubd88\ubcc0\uc785\ub2c8\ub2e4, \uac8c\uc784\uc774 \uc2dc\uc791\ub418\ub294 \ub3d9\uc548 \uac00\ub2a5\ud55c \ubaa8\ub4e0 \uc870\ud569\uc758 BlockState \ub4e4\uc774 \uc0dd\uc131\ub429\ub2c8\ub2e4. \ub2e4\uc2dc \ub9d0\ud574\uc11c, \uacbd\uc6b0\uc758 \uc218\uac00 \ub9e4\uc6b0 \ub9ce\uc740 BlockState \ub97c \ub9cc\ub4e4 \uacbd\uc6b0 \uac8c\uc784\uc744 \ubd88\ub7ec\uc624\ub294 \uc18d\ub3c4\uac00 \ub9e4\uc6b0 \ub290\ub824\uc9c8 \uc218 \uc788\uc73c\uba70, \ube14\ub85d\uc758 \uba54\uce74\ub2c9\uc744 \uc774\ud574\ud558\uae30\ub3c4 \uc5b4\ub824\uc6cc \uc9c8 \uac83\uc785\ub2c8\ub2e4. \ubaa8\ub4e0 \ube14\ub85d\ub4e4\uc774 \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud560 \ud544\uc694\ub294 \uc5c6\uc73c\uba70, \ube14\ub85d\uc758 \uac00\uc7a5 \uac04\ub2e8\ud55c \uc18d\uc131\ub4e4\ub9cc \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc73c\ub85c \ud45c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4, \uadf8 \uc678\uc5d0 \ube14\ub85d \uc5d4\ud2f0\ud2f0\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 \uc544\uc608 \ub610 \ub2e4\ub978 \ube14\ub85d\uc744 \ub9cc\ub4dc\ub294 \uac83 \ub610\ud55c \uace0\ub824\ud574\uc8fc\uc138\uc694, \uadf8\ub9ac\uace0 \uc5b8\uc81c\ub098 \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc633\uc740 \uc77c\uc778\uc9c0 \uace0\ub824\ud574\uc8fc\uc138\uc694. Note \ud301: \ub9cc\uc57d \ube14\ub85d\uc774 \ub2e4\ub978 \uc774\ub984\uc744 \uac00\uc9c4\ub2e4\uba74, \ub610 \ub2e4\ub978 \ube14\ub85d \uc0c1\ud0dc\uac00 \uc544\ub2c8\ub77c \uc0c8\ub85c\uc6b4 \ube14\ub85d\uc774 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4 . \uc608\ub97c \ub4e4\uc5b4 \uc758\uc790\ub97c \ub9cc\ub4e0\ub2e4\uace0 \ud560 \ub54c: \uc758\uc790\uc758 \ubc29\ud5a5 \uc740 \ube14\ub85d\uc758 \uc18d\uc131 \uc774\ub2c8 \ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub294\uac8c \uc633\uc9c0\ub9cc, \ub098\ubb34\uc758 \uc885\ub958 \uac00 \ub2e4\ub978 \uc758\uc790\ub4e4\uc740 \uc544\uc608 \ub2e4\ub978 \ube14\ub85d\uc774 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub3d9\ucabd\uc744 \ubc14\ub77c\ubcf4\ub294 \u201c\ucc38\ub098\ubb34 \uc758\uc790\u201d ( oak_chair[facing=east] ) \ub294 \uc11c\ucabd\uc744 \ubc14\ub77c\ubcf4\ub294 \u201c\uac00\ubb38\ube44 \ub098\ubb34 \uc758\uc790\u201d ( spruce_chair[facing=west] ) \uc640\ub294 \ub2e4\ub978 \ube14\ub85d\uc785\ub2c8\ub2e4.","title":"\ube14\ub85d \uc0c1\ud0dc \uc2dc\uc2a4\ud15c\uc744 \uc62c\ubc14\ub974\uac8c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95"},{"location":"blocks/states/#_4","text":"\ud604\uc7ac \ub9cc\ub4e4\uace0 \uacc4\uc2e0 Block \ud074\ub798\uc2a4\uc5d0 \uadf8 \ube14\ub85d\uc774 \uac00\uc9c8 \uc218 \uc788\ub294 \ubaa8\ub4e0 \uc18d\uc131\ub4e4\uc744 static final \ub85c \uc815\uc758\ub41c Property<?> \uac1d\uccb4\ub4e4\uc744 \uc0dd\uc131\ud558\uac70\ub098 \ucc38\uc870\ud558\uc5ec \ud45c\ud604\ud558\uc138\uc694. \uc6d0\ud558\uc2e0\ub2e4\uba74 \uc9c1\uc811 Property<?> \ud074\ub798\uc2a4\ub97c \uad6c\ud604\ud558\uc5ec\ub3c4 \ub429\ub2c8\ub2e4\ub9cc, \uc774 \ubb38\uc11c\uc5d0\uc11c\ub294 \uc774\uc5d0 \ub300\ud574 \ub2e4\ub8e8\uc9c4 \uc54a\uaca0\uc2b5\ub2c8\ub2e4. \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \uc774\ubbf8 \uc4f8\ub9cc\ud55c \uc774 \ud074\ub798\uc2a4\uc758 \uad6c\ud604\ub4e4\uc744 \uc5ec\ub7ec\uac1c \uc81c\uacf5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4: IntegerProperty Property<Integer> \uc758 \uad6c\ud604. \uc815\uc218\uac12\uc744 \uac00\uc9c0\ub294 \uc18d\uc131\uc744 \uc815\uc758\ud568. IntegerProperty#create(String \uc18d\uc131\uc774\ub984, int \ucd5c\uc19f\uac12, int \ucd5c\ub313\uac12) \ub97c \ud638\ucd9c\ud558\uc5ec \uc0dd\uc131\ud560 \uc218 \uc788\uc74c. BooleanProperty Property<Boolean> \uc758 \uad6c\ud604. \ucc38 \ub610\ub294 \uac70\uc9d3 \uac12\uc744 \uac00\uc9c0\ub294 \uc18d\uc131\uc744 \uc815\uc758\ud568. BooleanProperty#create(String \uc18d\uc131\uc774\ub984) \ub97c \ud638\ucd9c\ud558\uc5ec \uc0dd\uc131\ud560 \uc218 \uc788\uc74c. EnumProperty<E extends Enum<E>> Property<E> \uc758 \uad6c\ud604. \uc5f4\uac70\ud615 \ud074\ub798\uc2a4\uc758 \uc5f4\uac70 \uc0c1\uc218\uac12\uc744 \uac00\uc9c0\ub294 \uc18d\uc131\uc744 \uc815\uc758\ud568. EnumProperty#create(String \uc18d\uc131\uc774\ub984, Class<E> \uc5f4\uac70\ud615\ud074\ub798\uc2a4) \ub97c \ud638\ucd9c\ud558\uc5ec \uc0dd\uc131\ud560 \uc218 \uc788\uc74c. \uc0ac\uc2e4 \uc5f4\uac70\ud615 \ud074\ub798\uc2a4\uc758 \uc5f4\uac70\uc0c1\uc218\uc911 \uc77c\ubd80\ub9cc \uac12\uc73c\ub85c \uac00\uc9c0\ub3c4\ub85d \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. (\uc608\ub97c \ub4e4\uc5b4 DyeColor \uc758 16\uac1c\uc758 \uc0c9\uc0c1\uc911 4\uac1c\ub9cc \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0). \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 EnumProperty#create \uc758 \uc624\ubc84\ub85c\ub4dc\ub4e4\uc744 \ucc38\uace0\ud558\uc138\uc694. DirectionProperty EnumProperty<Direction> \ub97c \uc870\uae08 \ub354 \uac04\uc18c\ud654\uc2dc\ud0a8 \uad6c\ud604. \uc5ec\ub7ec \ud3b8\ub9ac\ud55c \uae30\ub2a5\ub4e4\ub3c4 \uc81c\uacf5\ud558\ub294\ub370, \uc608\ub97c \ub4e4\uc5b4 \uc55e, \ub4a4, \uc591 \uc606 \ubc29\ud5a5 \uc18d\uc131\uc744 \uc815\uc758\ud558\ub824\uba74 DirectionProperty.create(\"<name>\", Direction.Plane.HORIZONTAL) \ub97c \ud638\ucd9c\ud558\uc138\uc694. X\ucd95 \ubc29\ud5a5 \uc18d\uc131\uc744 \uc815\uc758\ub824\uba74 DirectionProperty.create(\"<name>\", Direction.Axis.X) \ub97c \ud638\ucd9c\ud558\uc138\uc694. BlockStateProperties \uc5d0\ub294 \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc18d\uc131\ub4e4\uc774 \uc788\uc2b5\ub2c8\ub2e4, \uadf8\ub9ac\uace0 \uac00\ub2a5\ud558\ub2e4\uba74 \uc0c8\ub85c\uc6b4 \uc18d\uc131\uc744 \ub9cc\ub4dc\uc2dc\ub294 \uac83 \ubcf4\ub2e4 \uc774 \ud074\ub798\uc2a4\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc18d\uc131\ub4e4\uc744 \uc7ac\uc0ac\uc6a9\ud558\uc138\uc694. \uc774\uc81c \uc6d0\ud558\uc2dc\ub294 Property<> \uac1d\uccb4\uac00 \uc788\uc73c\ub2c8, \ube14\ub85d\uc758 Block#createBlockStateDefinition(StateDefinition$Builder) \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694. \uc774\ub54c \ube14\ub85d\uc5d0 \ucd94\uac00\ud560 Property<?> \ub97c StateDefinition$Builder#add(...); \uc5d0 \uc778\uc790\ub85c \uc804\ub2ec\ud574 \ud638\ucd9c\ud558\uc5ec \uc18d\uc131\ub4e4\uc744 \ube14\ub85d\uc5d0 \ucd94\uac00\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \ube14\ub85d\ub4e4\uc740 \ube14\ub85d \uc0c1\ud0dc\uc758 \u201c\uae30\ubcf8\uac12\u201d, \ub610\ub294 \uae30\ubcf8 \uc0c1\ud0dc\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uae30\ubcf8 \uc0c1\ud0dc\ub294 \uc790\ub3d9\uc73c\ub85c \uacb0\uc815\ub418\uc9c0\ub9cc \uc6d0\ud558\uc2e0\ub2e4\uba74 Block#registerDefaultState(BlockState) \ub97c \ube14\ub85d\uc758 \uc0dd\uc131\uc790\uc5d0\uc11c \ud638\ucd9c\ud558\uc5ec \ubcc0\uacbd\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uae30\ubcf8 \uc0c1\ud0dc\ub294 \ube14\ub85d\uc774 \uc124\uce58 \ub420 \ub54c \uac00\uc9c8 \uc0c1\ud0dc\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 DoorBlock \uc758 \uacbd\uc6b0: this.registerDefaultState( this.stateDefinition.any() .setValue(FACING, Direction.NORTH) .setValue(OPEN, false) .setValue(HINGE, DoorHingeSide.LEFT) .setValue(POWERED, false) .setValue(HALF, DoubleBlockHalf.LOWER) ); \ube14\ub85d\uc744 \uc124\uce58\ud560 \ub54c \uc0c1\ud669\uc5d0 \ub530\ub77c \uae30\ubcf8 BlockState \ub9d0\uace0 \ub2e4\ub978 BlockState \ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud558\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74 Block#getStateForPlacement(BlockPlaceContext) \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694. \uc774 \uba54\uc11c\ub4dc\ub294 \ud50c\ub808\uc774\uc5b4\uac00 \ubc14\ub77c\ubcf4\ub294 \ubc29\ud5a5\uc5d0 \ub530\ub77c \ubc29\ud5a5\uc774 \ub2e4\ub978 \ube14\ub85d\uc744 \ub300\uc2e0 \uc124\uce58\ud558\ub3c4\ub85d \ud558\ub294 \ub4f1 \uc751\uc6a9 \ubc29\ubc95\uc774 \ub9ce\uc2b5\ub2c8\ub2e4. BlockState \ub294 \ubd88\ubcc0\uc774\uace0, \uac00\ub2a5\ud55c \ubaa8\ub4e0 BlockState \ub4e4\uc774 \uac8c\uc784\uc744 \ubd88\ub7ec\uc62c \ub54c \uc0dd\uc131\ub418\ub2c8, BlockState#setValue(Property<T>, T) \ub97c \ud638\ucd9c\ud558\uba74 \ube14\ub85d \uc0c1\ud0dc\uc5d0 \uc800\uc7a5\ub41c \uc18d\uc131\uac12\uc744 \uc218\uc815\ud558\ub294 \uac83\uc774 \uc544\ub2c8\ub77c \ud574\ub2f9 \uac12\uc774 \uc774\ubbf8 \ub4e4\uc5b4\uc788\ub294 BlockState \ub97c Block \uc758 StateHolder \ub97c \ud1b5\ud574 \uc694\uccad\ud558\uc5ec \ubc1b\uc544\uc635\ub2c8\ub2e4. \ub610\ud55c BlockState \ub450\uac1c\ub97c \ube44\uad50\ud560 \ub54c Object#equals \uac00 \uc544\ub2c8\ub77c == \ub85c \ube44\uad50\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4.","title":"\ube14\ub85d\uc5d0 \uc0c1\ud0dc \ucd94\uac00\ud558\uae30"},{"location":"blocks/states/#_5","text":"BlockState#getValue(Property<?>) \ub97c \ud638\ucd9c\ud558\uc5ec \ud574\ub2f9 \ube14\ub85d \uc0c1\ud0dc\uc758 \uc18d\uc131 \uac12\uc744 \ubc1b\uc544\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uc774\ub54c \uc778\uc790\ub85c \uc804\ub2ec\ud558\ub294 \uc18d\uc131\uc740 \uad6c\uccb4\uc801\uc778 \uac12\uc744 \uc5bb\uc73c\ub824\ub294 \uc18d\uc131\uc785\ub2c8\ub2e4. \ub9cc\uc57d \ud574\ub2f9 \uc18d\uc131\uc73c\ub85c \ub2e4\ub978 \uac12\uc744 \uac00\uc9c0\uace0 \uc788\ub294 \ube14\ub85d \uc0c1\ud0dc\ub97c \uc5bb\uace0 \uc2f6\ub2e4\uba74 BlockState#setValue(Property<T>, T) \ub97c \uc18d\uc131\uacfc \uc18d\uc131 \uac12\uc744 \uc804\ub2ec\ud558\uc5ec \ud638\ucd9c\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4. \ub808\ubca8\uc758 \ud2b9\uc815 \uc9c0\uc810\uc758 \ube14\ub85d\uc758 \uc0c1\ud0dc\ub97c \uc77d\uac70\ub098 \ubcc0\uacbd\ud558\ub824\uba74 Level#getBlockState(BlockPos) \ub610\ub294 Level#setBlockAndUpdate(BlockPos, BlockState) \ub97c \ud638\ucd9c\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4. Block \uc744 \ubc30\uce58\ud558\uae30 \uc704\ud574\uc120, Block#defaultBlockState() \ub97c \ud638\ucd9c\ud558\uc5ec \uae30\ubcf8 \uc0c1\ud0dc\ub97c \ubc1b\uc544\uc624\uc2dc\uace0, \uc774 \uae30\ubcf8 \uc0c1\ud0dc\uc5d0 BlockState#setValue(Property<T>, T) \ub97c \ud638\ucd9c\ud574 \uc54c\ub9de\uc740 \uc18d\uc131\uac12\ub4e4\ub85c \ub9de\ucd98 \ub2e4\uc74c \uc124\uce58\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4.","title":"\ube14\ub85d\uc758 \uc18d\uc131 \uc368\ubcf4\uae30"},{"location":"concepts/events/","text":"\uc774\ubca4\ud2b8 \ud3ec\uc9c0\ub294 \uc774\ubca4\ud2b8 \ubc84\uc2a4\ub97c \uc774\uc6a9\ud558\uc5ec \uc5ec\ub7ec \ubaa8\ub4dc\ub4e4\uc774 \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \uc5ec\ub7ec \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub9c9\ub300\uae30\ub97c \uc6b0\ud074\ub9ad \ud558\uc600\uc744\ub54c \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub418\uace0 \ubaa8\ub4dc\ub294 \uc774\uc5d0 \ubc18\uc751\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub418\ub294 \uc8fc \uc774\ubca4\ud2b8 \ubc84\uc2a4\ub294 MinecraftForge#EVENT_BUS \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4. \ub610\ud55c, \uac01 \ubaa8\ub4dc\ubcc4 \uc774\ubca4\ud2b8 \ubc84\uc2a4\ub610\ud55c \uc874\uc7ac\ud558\ub294\ub370, \uc774\ub294 FMLJavaModLoadingContext#getModEventBus \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4. \uc774 \ubc84\uc2a4\ub294 \uc624\uc9c1 \ud2b9\uc815\ud55c \uc0c1\ud669\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \ubc84\uc2a4\ub97c \uc5b4\ub514\uc5d0 \uc0ac\uc6a9\ud558\ub294\uc9c0\ub294 \uc544\ub798 \uc790\uc138\ud558\uac8c \ub098\uc640\uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \uc774\ubca4\ud2b8\ub294 \uc774 2 \ubc84\uc2a4\uc911 \ud558\ub098\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4: \ub300\ubd80\ubd84\uc758 \uc774\ubca4\ud2b8\ub294 \uc8fc \ud3ec\uc9c0 \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub418\uc9c0\ub9cc, \uadf8\uc911 \uc77c\ubd80\ub294 \ubaa8\ub4dc\ubcc4 \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uc774\ubca4\ud2b8 \ubc84\uc2a4\uc5d0 \ub4f1\ub85d\ub418\uc5b4, \ud2b9\uc815 \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud558\ub294 \uba54\uc11c\ub4dc \uc785\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \ub9cc\ub4e4\uae30 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\ub4e4\uc740 \uacb0\uacfc\ub97c \ubc18\ud658\ud558\uc9c0 \uc54a\uace0 \uc778\uc790\uac00 \ud558\ub098\ub9cc \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub4e4\uc740 \uc815\uc801\uc774\uc5b4\ub3c4 \ub418\uace0 \uc544\ub2c8\uc5b4\ub3c4 \ub429\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub4e4\uc740 IEventBus#addListener \ub97c \uc0ac\uc6a9\ud558\uc5ec \ubc14\ub85c \ub4f1\ub85d\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc774\ubca4\ud2b8\uac00 \uc81c\ub108\ub9ad \ud074\ub798\uc2a4\uc774\uace0, GenericEvent<T> \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\uc77c \uacbd\uc6b0 IEventBus#addGenericListener \ub97c \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \ub458 \ub2e4 \uc804\ub2ec\ub420 \uba54\uc11c\ub4dc\ub97c \ud45c\ud604\ud558\ub294 Consumer \ub97c \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4. \uc81c\ub108\ub9ad \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud560 \ud578\ub4e4\ub7ec\ub4e4\uc740 \ud0c0\uc785 \uc778\uc790\ub610\ud55c \uc804\ub2ec\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub4e4\uc740 \ubb34\uc870\uac74 \ubaa8\ub4dc\uc758 \uba54\uc778 \ud074\ub798\uc2a4\uc758 \uc0dd\uc131\uc790\uc5d0\uc11c \ub4f1\ub85d\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. // In the main mod class ExampleMod // This event is on the forge bus private void forgeEventHandler(AddReloadListenerEvent event) { // Do things here } // \uc774 \uc774\ubca4\ud2b8\ub294 \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub429\ub2c8\ub2e4 private static void modEventHandler(RegistryEvent.Register<RecipeSerializer<?>> event) { // ... } // \ubaa8\ub4dc\uc758 \uc0dd\uc131\uc790 forgeEventBus.addListener(this::forgeEventHandler); modEventBus.addGenericListener(RecipeSerializer.class, ExampleMod::modEventHandler); \uc5b4\ub178\ud14c\uc774\uc158\uc744 \ud65c\uc6a9\ud55c \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \uc774 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 EntityItemPickupEvent \uc5d0 \ubc18\uc751\ud569\ub2c8\ub2e4, \uc774\ub984\uc5d0\uc11c \uc54c \uc218 \uc788\ub2e4\uc2f6\uc774, Entity \uac00 \uc544\uc774\ud15c\uc744 \uc8fc\uc6b8 \ub54c \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. public class MyForgeEventHandler { @SubscribeEvent public void pickupItem(EntityItemPickupEvent event) { System.out.println(\"\uc544\uc774\ud15c\uc744 \uc8fc\uc6e0\uc2b5\ub2c8\ub2e4!!\"); } } \uc774 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \ub4f1\ub85d\ud558\uae30 \uc704\ud574\uc11c\ub294 MinecraftForge.EVENT_BUS.register(...) \ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uadf8\ub9ac\uace0 \uc774 \uba54\uc11c\ub4dc\uc5d0 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\uac00 \uc788\ub294 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9e4\uac1c\ubcc0\uc218\ub85c \uc804\ub2ec\ud558\uc138\uc694. \ub9cc\uc57d \ud578\ub4e4\ub7ec\ub97c \ubaa8\ub4dc\ubcc4 \ubc84\uc2a4\uc5d0 \ub4f1\ub85d\ud558\uace0 \uc2f6\ub2e4\uba74 FMLJavaModLoadingContext.get().getModEventBus().register(...) \ub97c \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc138\uc694. \uc5b4\ub178\ud14c\uc774\uc158\uc744 \ud65c\uc6a9\ud55c \uc815\uc801 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \uc815\uc801\uc73c\ub85c \ub9cc\ub4e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\uc5d0\ub3c4 @SubscribeEvent \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc5d0\uc11c \uc0ac\uc6a9\ud55c \uc778\uc2a4\ud134\uc2a4\ub97c \ud1b5\ud55c \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uc640\uc758 \ucc28\uc774\uc810\uc740 \uba54\uc11c\ub4dc\uac00 \uc815\uc801\uc774\ub77c\ub294 \uac83\uc785\ub2c8\ub2e4. \uc815\uc801 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \ub4f1\ub85d\ud558\uae30 \uc704\ud574\uc11c\ub294 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \uc544\ub2c8\uace0, \ud074\ub798\uc2a4 \uadf8 \uc790\uccb4\uac00 \uc804\ub2ec\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8 \uc608\ub85c: public class MyStaticForgeEventHandler { @SubscribeEvent public static void arrowNocked(ArrowNockEvent event) { System.out.println(\"\ud654\uc0b4 \ub2f9\uaca8\uc9d0!\"); } } \uc774\ub294 MinecraftForge.EVENT_BUS.register(MyStaticForgeEventHandler.class) \ub97c \ud1b5\ud574 \ub4f1\ub85d\ud569\ub2c8\ub2e4. \uc790\ub3d9\uc73c\ub85c \uc815\uc801 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \ub4f1\ub85d\ud558\uae30 @Mod$EventBusSubscriber \uc5b4\ub178\ud14c\uc774\uc158\uc740 \ud074\ub798\uc2a4\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc774\ub97c \uc0ac\uc6a9\ud560 \uc2dc, \uadf8 \ud074\ub798\uc2a4\ub294 \uc790\ub3d9\uc73c\ub85c MinecraftForge#EVENT_BUS \uc5d0 @Mod \ud074\ub798\uc2a4\uac00 \ucd08\uae30\ud654\ub420 \ub54c \ub4f1\ub85d\ub429\ub2c8\ub2e4. \uc774\ub294 MinecraftForge.EVENT_BUS.register(AnnotatedClass.class) \uad6c\ubb38\uc744 @Mod \ud074\ub798\uc2a4\uc758 \uc0dd\uc131\uc790\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uac83\uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4. @Mod$EventBusSubscriber \ub294 \uc544\ubb34 \ubc84\uc2a4\ub098 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc0ac\uc6a9\ud560 \ub54c \ubaa8\ub4dc\uc758 \uc544\uc774\ub514\ub97c \uc804\ub2ec\ud558\ub294 \uac83\uc774 \uad8c\uc7a5\ub418\ub294\ub370, \uc774\ub294 \uc5b4\ub178\ud14c\uc774\uc158\ub9cc\uc73c\ub85c\ub294 \ubb34\uc2a8 \ubaa8\ub4dc\uc758 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uc778\uc9c0 \uad6c\ubcc4\ud560 \uc218 \uc5c6\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ub610, \uc774\ubca4\ud2b8\ub97c \ub4e4\uc744 \ubc84\uc2a4\ub97c \uc804\ub2ec\ud558\ub294 \uac83 \ub610\ud55c \uad8c\uc7a5\ub418\ub294\ub370, \ubb34\uc2a8 \ubc84\uc2a4\uc758 \uc774\ubca4\ud2b8\ub97c \ub4e3\ub294\uc9c0 \ud45c\uc2dc\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ub610, Dist \uac12\uc744 \uc9c0\uc815\ud558\uc5ec \uc5b4\ub5a4 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\uc11c \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uac00 \ub3d9\uc791\ud560 \uac83\uc778\uc9c0\ub97c \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ud2b9\uc815 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\uc11c\ub294 \uc544\uc608 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uac00 \ub4f1\ub85d\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc774\uc6a9\ud55c, RenderLevelLastEvent \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud558\ub294, \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub9cc \uc874\uc7ac\ud558\ub294 \uc815\uc801 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \uc785\ub2c8\ub2e4. @Mod.EventBusSubscriber(modid = \"mymod\", bus = Bus.FORGE, value = Dist.CLIENT) public class MyStaticClientOnlyEventHandler { @SubscribeEvent public static void drawLast(RenderLevelLastEvent event) { System.out.println(\"\uc6d4\ub4dc \uadf8\ub9ac\ub294\uc911!\"); } } Note \uc774\ub97c \uc774\uc6a9\ud558\uba74 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \uc544\ub2cc \ud074\ub798\uc2a4 \uadf8 \uc790\uccb4\uac00 \ub4f1\ub85d\ub429\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \ub4f1\ub85d\ub418\ub294 \ubaa8\ub4e0 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uc815\uc801\uc774\uc5b4\uc57c \uc81c\ub300\ub85c \ub3d9\uc791\ud569\ub2c8\ub2e4! \uc774\ubca4\ud2b8 \ucde8\uc18c\ud558\uae30 \ub9cc\uc57d \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub420 \uc218 \uc788\ub2e4\uba74, @Cancelable \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\uc744 \uac83\uc785\ub2c8\ub2e4, \uadf8\ub9ac\uace0 \uba54\uc11c\ub4dc Event#isCancelable() \ub294 true \ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774\ubca4\ud2b8\uc758 \ucde8\uc18c \uc5ec\ubd80\ub294 Event#setCanceled(boolean canceled \uba54\uc11c\ub4dc\ub97c \ud1b5\ud574 \ubcc0\uacbd\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4, true \ub97c \uc804\ub2ec\ud560 \uc2dc \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub418\uace0 false \ub97c \uc804\ub2ec\ud560 \uc2dc \uc774\ubca4\ud2b8\uc758 \u201c\ucde8\uc18c\ub97c \ucde8\uc18c\ud569\ub2c8\ub2e4\u201d. \uadf8\ub7ec\ub098 \ub9cc\uc57d\uc5d0 \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub420 \uc218 \uc5c6\ub2e4\uba74, \uc774 \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83 \ub9cc\uc73c\ub85c UnsupportedOperationException \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ucd5c\uc18c\ub420 \uc218 \uc5c6\ub294 \uc774\ubca4\ud2b8\uc758 \ucde8\uc18c \uc5ec\ubd80\ub294 \ubd88\ubcc0\uac12\uc73c\ub85c \ucde8\uae09\ub418\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. Important \ubaa8\ub4e0 \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub420 \uc218 \uc788\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4! \ucde8\uc18c\ud560 \uc218 \uc5c6\ub294 \uc774\ubca4\ud2b8\ub97c \ucde8\uc18c\ud558\ub824\uace0 \ud560 \uc2dc UnsuppoortedOperationException \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uace0 \uac8c\uc784\uc774 \ud295\uae30\uac8c \ub429\ub2c8\ub2e4! \uadf8\ub807\uae30\uc5d0 \uc774\ubca4\ud2b8\ub97c \ucde8\uc18c\ud558\uae30 \uc804\uc5d0 Event#isCancelable() \uc744 \uc0ac\uc6a9\ud558\ub294 \ub4f1 \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub420 \uc218 \uc788\ub294\uc9c0\ub97c \uba3c\uc800 \ud655\uc2e4\ud558\uac8c \ud655\uc778\ud558\uc138\uc694! \uacb0\uacfc \uc77c\ubd80 \uc774\ubca4\ud2b8\ub4e4\uc740 Event$Result \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4 \uacb0\uacfc\ub294 \uc774\ubca4\ud2b8\ub97c \uc911\ub2e8\ud558\ub294 DENY , \uae30\ubcf8 \ubc14\ub2d0\ub77c \ucf54\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 DEFAULT , \uac15\uc81c\uc801\uc73c\ub85c \ud2b9\uc815 \ub3d9\uc791\uc744 \uc218\ud589\ud558\ub3c4\ub85d \ud558\ub294 ALLOW , \uc774\ub807\uac8c 3\uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubca4\ud2b8\uc758 \uacb0\uacfc\ub294 \uc774\ubca4\ud2b8 \ub3c4\uc911 #setResult \ub97c \uc0ac\uc6a9\ud574 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \uc774\ubca4\ud2b8\uac00 \uacb0\uacfc\uac00 \uc788\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4; \uacb0\uacfc\uac00 \uc788\ub294 \uc774\ubca4\ud2b8\ub294 @HasResult \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. Important \uc5ec\ub7ec \uc774\ubca4\ud2b8\ub4e4\uc740 \uac01\uc790 \ub2e4\ub978 \ubc29\uc2dd\uc73c\ub85c \uacb0\uacfc\ub97c \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uadf8\ub807\uae30\uc5d0 \uc774\ubca4\ud2b8\uc758 JavaDoc \uc5d0\uc11c \uc774\ubca4\ud2b8\uac00 \uacb0\uacfc\ub97c \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud560\uc9c0\ub97c \ubbf8\ub9ac \uc219\uc9c0\ud558\ub3c4\ub85d \ud558\uc138\uc694! \uc6b0\uc120\uc21c\uc704 ( @SubscribeEvent \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\ub294)\uc774\ubca4\ud2b8 \ud5e8\ub4e4\ub7ec \uba54\uc11c\ub4dc\uc5d0\ub294 \uc6b0\uc120\uc21c\uc704\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uc758 \uc6b0\uc120\uc21c\uc758\ub294 @SubscribeEvent \uc758 priority \uac12\uc744 \ubcc0\uacbd\ud558\uc5ec \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc774 \uc6b0\uc120\uc21c\uc704\ub294 EventPriority \uc758 \uc5f4\uac70\ud615( HIGHEST , HIGH , NORMAL , LOW , LOWEST )\uc785\ub2c8\ub2e4. HIGHEST \uc6b0\uc120\uc21c\uc704\ub97c \uac00\uc9c4 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub4e4\uc740 \uac00\uc7a5 \uba3c\uc800 \uc2e4\ud589\ub418\uace0, LOWEST \uc6b0\uc120\uc21c\uc704\ub97c \uac00\uc9c4 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uac00\uc7a5 \ub098\uc911\uc5d0 \uc2e4\ud589\ub429\ub2c8\ub2e4. \ud558\uc704 \uc774\ubca4\ud2b8 \ub9ce\uc740 \uc774\ubca4\ud2b8\ub4e4\uc740 \uc870\uae08\uc529 \ub2e4\ub978 \ubc88\ud615\uc774 \uc874\uc7ac\ud569\ub2c8\ub2e4. \uc774 \ubcc0\ud615\ub41c \uc774\ubca4\ud2b8\ub4e4\uc740 \uc5ed\ud560\uc774 \uc870\uae08\uc529 \ub2e4 \ub2e4\ub974\uc9c0\ub9cc, \uc804\ubd80 \ud558\ub098\uc758 \uae30\ubc18 \uc774\ubca4\ud2b8\ub97c \uc0c1\uc18d\ud558\uc5ec \ub9cc\ub4e4\uc5b4\uc838 \uc788\uac70\ub098, (\uc608: PlayerEvent ) \ub610\ub294 \ud558\ub098\uc758 \uc774\ubca4\ud2b8\ub97c \uc5ec\ub7ec \ub2e8\uacc4\ub85c \ub098\ub204\uc5b4 \ub454 \uac83\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. (\uc608: PotionBrewEvent , PotionBrewEvent$Pre \uc640 PotionBrewEvent$Post \uac00 \uc788\uc74c). \ub9cc\uc57d \uae30\ubc18\uc774 \ub418\ub294 \ubd80\ubaa8 \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud558\ub294 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uac00 \uc788\ub2e4\uba74, \uadf8 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uadf8 \uc774\ubca4\ud2b8\uc758 \ubaa8\ub4e0 \uc790\uc2dd \ud074\ub798\uc2a4\uc758 \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud569\ub2c8\ub2e4. \ubaa8\ub4dc \uc774\ubca4\ud2b8 \ubc84\uc2a4 \ubaa8\ub4dc \uc774\ubca4\ud2b8 \ubc84\uc2a4\ub294 \uc8fc\ub85c \ubaa8\ub4dc\uc758 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub97c \ubc29\uc1a1\ud558\ub294\ub370\uc5d0 \uc0ac\uc6a9\ub418\uc5b4 \ubaa8\ub4dc\uc758 \ucd08\uae30\ud654\ub97c \ub3d5\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub418\ub294 \uc774\ubca4\ud2b8\ub4e4\uc740 IModBusEvent \uc778\ud130\ud398\uc774\uc2a4\ub97c \ubb34\uc870\uac74 \uad6c\ud604\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \ub610\ud55c \uc774 \uc774\ubca4\ud2b8\ub4e4\uc740 \ubcd1\ub82c\uc801\uc73c\ub85c \ubc29\uc1a1\ub418\uc5b4 \uc5ec\ub7ec \ubaa8\ub4dc\uac00 \ub3d9\uc2dc\uc5d0 \ucd08\uae30\ud654 \ub420 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc774\ub85c \uc778\ud574 \ubaa8\ub4dc\uc5d0\uc120 \ub2e4\ub978 \ubaa8\ub4dc\uc758 \ucf54\ub4dc\ub97c \uc9c1\uc811\uc801\uc73c\ub85c \uc2e4\ud589\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ubb34\uc870\uac74 InterModComms \uc2dc\uc2a4\ud15c\uc744 \uac70\uccd0\uc57c\ub9cc \ud569\ub2c8\ub2e4. \uc774 4\uac00\uc9c0\ub294 \ubaa8\ub4dc \ucd08\uae30\ud654\uac00 \uc774\ub8e8\uc5b4 \uc9c8 \ub54c \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub418\ub294 \uac00\uc7a5 \uc720\uc6a9\ud55c \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4 \uc785\ub2c8\ub2e4. FMLCommonSetupEvent FMLClientSetupEvent & FMLDedicatedServerSetupEvent InterModEnqueueEvent InterModProcessEvent Note FMLClientSetupEvent \uc640 FMLDedicatedServerSetupEvent \ub294 \uc62c\ubc14\ub978 \ubc30\ud3ec\ud310\uc5d0\uc11c\ub9cc \ubc29\uc1a1\ub429\ub2c8\ub2e4! \uc774 4\uac1c\uc758 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4\uc740 \ubaa8\ub450 ParallelDispatchEvent \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\uc774\uae30 \ub54c\ubb38\uc5d0 \ubcd1\ub82c\uc801\uc73c\ub85c \ubc29\uc1a1\ub429\ub2c8\ub2e4. \ub9cc\uc57d ParallelDispatchEvent \ub610\ub294 \uadf8 \uc790\uc2dd \ud074\ub798\uc2a4 \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub418\ub294 \ub3c4\uc911 \uba54\uc778 \uc2a4\ub808\ub4dc\uc5d0\uc11c \ucf54\ub4dc\ub97c \uc2e4\ud589\ud558\uace0 \uc2f6\ub2e4\uba74 #enqueueWork \ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8 \ub9d0\uace0, \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub418\ub294 \ub2e4\ub978 \uc774\ubca4\ud2b8\ub4e4\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub4e4 \ub610\ud55c \ubb34\uc5b8\uac00\ub97c \ub4f1\ub85d\ud558\uac70\ub098, \ucd08\uae30\ud654 \ud558\ub294 \ub4f1\uc758 \uc6a9\ub3c4\ub85c \uc4f0\uc785\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub4e4\uc740 \ub300\ubd80\ubd84 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4\uacfc \ub2e4\ub974\uac8c \ube44\ub3d9\uae30\uc801\uc774\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc774\ubca4\ud2b8\ub4e4\uc758 \uc608\ub85c: ColorHandlerEvent ModelBakeEvent TextureStitchEvent RegistryEvent \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc774\ubca4\ud2b8\uac00 \ubaa8\ub4dc \ucd08\uae30\ud654 \ub3c4\uc911 \ubc29\uc1a1\ub41c\ub2e4\uba74, \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub41c\ub2e4\uace0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc774\ubca4\ud2b8"},{"location":"concepts/events/#_1","text":"\ud3ec\uc9c0\ub294 \uc774\ubca4\ud2b8 \ubc84\uc2a4\ub97c \uc774\uc6a9\ud558\uc5ec \uc5ec\ub7ec \ubaa8\ub4dc\ub4e4\uc774 \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \uc5ec\ub7ec \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub9c9\ub300\uae30\ub97c \uc6b0\ud074\ub9ad \ud558\uc600\uc744\ub54c \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub418\uace0 \ubaa8\ub4dc\ub294 \uc774\uc5d0 \ubc18\uc751\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub418\ub294 \uc8fc \uc774\ubca4\ud2b8 \ubc84\uc2a4\ub294 MinecraftForge#EVENT_BUS \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4. \ub610\ud55c, \uac01 \ubaa8\ub4dc\ubcc4 \uc774\ubca4\ud2b8 \ubc84\uc2a4\ub610\ud55c \uc874\uc7ac\ud558\ub294\ub370, \uc774\ub294 FMLJavaModLoadingContext#getModEventBus \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4. \uc774 \ubc84\uc2a4\ub294 \uc624\uc9c1 \ud2b9\uc815\ud55c \uc0c1\ud669\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \ubc84\uc2a4\ub97c \uc5b4\ub514\uc5d0 \uc0ac\uc6a9\ud558\ub294\uc9c0\ub294 \uc544\ub798 \uc790\uc138\ud558\uac8c \ub098\uc640\uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \uc774\ubca4\ud2b8\ub294 \uc774 2 \ubc84\uc2a4\uc911 \ud558\ub098\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4: \ub300\ubd80\ubd84\uc758 \uc774\ubca4\ud2b8\ub294 \uc8fc \ud3ec\uc9c0 \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub418\uc9c0\ub9cc, \uadf8\uc911 \uc77c\ubd80\ub294 \ubaa8\ub4dc\ubcc4 \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uc774\ubca4\ud2b8 \ubc84\uc2a4\uc5d0 \ub4f1\ub85d\ub418\uc5b4, \ud2b9\uc815 \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud558\ub294 \uba54\uc11c\ub4dc \uc785\ub2c8\ub2e4.","title":"\uc774\ubca4\ud2b8"},{"location":"concepts/events/#_2","text":"\uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\ub4e4\uc740 \uacb0\uacfc\ub97c \ubc18\ud658\ud558\uc9c0 \uc54a\uace0 \uc778\uc790\uac00 \ud558\ub098\ub9cc \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub4e4\uc740 \uc815\uc801\uc774\uc5b4\ub3c4 \ub418\uace0 \uc544\ub2c8\uc5b4\ub3c4 \ub429\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub4e4\uc740 IEventBus#addListener \ub97c \uc0ac\uc6a9\ud558\uc5ec \ubc14\ub85c \ub4f1\ub85d\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc774\ubca4\ud2b8\uac00 \uc81c\ub108\ub9ad \ud074\ub798\uc2a4\uc774\uace0, GenericEvent<T> \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\uc77c \uacbd\uc6b0 IEventBus#addGenericListener \ub97c \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \ub458 \ub2e4 \uc804\ub2ec\ub420 \uba54\uc11c\ub4dc\ub97c \ud45c\ud604\ud558\ub294 Consumer \ub97c \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4. \uc81c\ub108\ub9ad \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud560 \ud578\ub4e4\ub7ec\ub4e4\uc740 \ud0c0\uc785 \uc778\uc790\ub610\ud55c \uc804\ub2ec\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub4e4\uc740 \ubb34\uc870\uac74 \ubaa8\ub4dc\uc758 \uba54\uc778 \ud074\ub798\uc2a4\uc758 \uc0dd\uc131\uc790\uc5d0\uc11c \ub4f1\ub85d\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. // In the main mod class ExampleMod // This event is on the forge bus private void forgeEventHandler(AddReloadListenerEvent event) { // Do things here } // \uc774 \uc774\ubca4\ud2b8\ub294 \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub429\ub2c8\ub2e4 private static void modEventHandler(RegistryEvent.Register<RecipeSerializer<?>> event) { // ... } // \ubaa8\ub4dc\uc758 \uc0dd\uc131\uc790 forgeEventBus.addListener(this::forgeEventHandler); modEventBus.addGenericListener(RecipeSerializer.class, ExampleMod::modEventHandler);","title":"\uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \ub9cc\ub4e4\uae30"},{"location":"concepts/events/#_3","text":"\uc774 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 EntityItemPickupEvent \uc5d0 \ubc18\uc751\ud569\ub2c8\ub2e4, \uc774\ub984\uc5d0\uc11c \uc54c \uc218 \uc788\ub2e4\uc2f6\uc774, Entity \uac00 \uc544\uc774\ud15c\uc744 \uc8fc\uc6b8 \ub54c \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. public class MyForgeEventHandler { @SubscribeEvent public void pickupItem(EntityItemPickupEvent event) { System.out.println(\"\uc544\uc774\ud15c\uc744 \uc8fc\uc6e0\uc2b5\ub2c8\ub2e4!!\"); } } \uc774 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \ub4f1\ub85d\ud558\uae30 \uc704\ud574\uc11c\ub294 MinecraftForge.EVENT_BUS.register(...) \ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uadf8\ub9ac\uace0 \uc774 \uba54\uc11c\ub4dc\uc5d0 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \uba54\uc11c\ub4dc\uac00 \uc788\ub294 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9e4\uac1c\ubcc0\uc218\ub85c \uc804\ub2ec\ud558\uc138\uc694. \ub9cc\uc57d \ud578\ub4e4\ub7ec\ub97c \ubaa8\ub4dc\ubcc4 \ubc84\uc2a4\uc5d0 \ub4f1\ub85d\ud558\uace0 \uc2f6\ub2e4\uba74 FMLJavaModLoadingContext.get().getModEventBus().register(...) \ub97c \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc138\uc694.","title":"\uc5b4\ub178\ud14c\uc774\uc158\uc744 \ud65c\uc6a9\ud55c \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec"},{"location":"concepts/events/#_4","text":"\uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \uc815\uc801\uc73c\ub85c \ub9cc\ub4e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\uc5d0\ub3c4 @SubscribeEvent \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc5d0\uc11c \uc0ac\uc6a9\ud55c \uc778\uc2a4\ud134\uc2a4\ub97c \ud1b5\ud55c \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uc640\uc758 \ucc28\uc774\uc810\uc740 \uba54\uc11c\ub4dc\uac00 \uc815\uc801\uc774\ub77c\ub294 \uac83\uc785\ub2c8\ub2e4. \uc815\uc801 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \ub4f1\ub85d\ud558\uae30 \uc704\ud574\uc11c\ub294 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \uc544\ub2c8\uace0, \ud074\ub798\uc2a4 \uadf8 \uc790\uccb4\uac00 \uc804\ub2ec\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8 \uc608\ub85c: public class MyStaticForgeEventHandler { @SubscribeEvent public static void arrowNocked(ArrowNockEvent event) { System.out.println(\"\ud654\uc0b4 \ub2f9\uaca8\uc9d0!\"); } } \uc774\ub294 MinecraftForge.EVENT_BUS.register(MyStaticForgeEventHandler.class) \ub97c \ud1b5\ud574 \ub4f1\ub85d\ud569\ub2c8\ub2e4.","title":"\uc5b4\ub178\ud14c\uc774\uc158\uc744 \ud65c\uc6a9\ud55c \uc815\uc801 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec"},{"location":"concepts/events/#_5","text":"@Mod$EventBusSubscriber \uc5b4\ub178\ud14c\uc774\uc158\uc740 \ud074\ub798\uc2a4\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc774\ub97c \uc0ac\uc6a9\ud560 \uc2dc, \uadf8 \ud074\ub798\uc2a4\ub294 \uc790\ub3d9\uc73c\ub85c MinecraftForge#EVENT_BUS \uc5d0 @Mod \ud074\ub798\uc2a4\uac00 \ucd08\uae30\ud654\ub420 \ub54c \ub4f1\ub85d\ub429\ub2c8\ub2e4. \uc774\ub294 MinecraftForge.EVENT_BUS.register(AnnotatedClass.class) \uad6c\ubb38\uc744 @Mod \ud074\ub798\uc2a4\uc758 \uc0dd\uc131\uc790\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uac83\uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4. @Mod$EventBusSubscriber \ub294 \uc544\ubb34 \ubc84\uc2a4\ub098 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc0ac\uc6a9\ud560 \ub54c \ubaa8\ub4dc\uc758 \uc544\uc774\ub514\ub97c \uc804\ub2ec\ud558\ub294 \uac83\uc774 \uad8c\uc7a5\ub418\ub294\ub370, \uc774\ub294 \uc5b4\ub178\ud14c\uc774\uc158\ub9cc\uc73c\ub85c\ub294 \ubb34\uc2a8 \ubaa8\ub4dc\uc758 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uc778\uc9c0 \uad6c\ubcc4\ud560 \uc218 \uc5c6\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ub610, \uc774\ubca4\ud2b8\ub97c \ub4e4\uc744 \ubc84\uc2a4\ub97c \uc804\ub2ec\ud558\ub294 \uac83 \ub610\ud55c \uad8c\uc7a5\ub418\ub294\ub370, \ubb34\uc2a8 \ubc84\uc2a4\uc758 \uc774\ubca4\ud2b8\ub97c \ub4e3\ub294\uc9c0 \ud45c\uc2dc\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ub610, Dist \uac12\uc744 \uc9c0\uc815\ud558\uc5ec \uc5b4\ub5a4 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\uc11c \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uac00 \ub3d9\uc791\ud560 \uac83\uc778\uc9c0\ub97c \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ud2b9\uc815 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\uc11c\ub294 \uc544\uc608 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uac00 \ub4f1\ub85d\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc774\uc6a9\ud55c, RenderLevelLastEvent \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud558\ub294, \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub9cc \uc874\uc7ac\ud558\ub294 \uc815\uc801 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \uc785\ub2c8\ub2e4. @Mod.EventBusSubscriber(modid = \"mymod\", bus = Bus.FORGE, value = Dist.CLIENT) public class MyStaticClientOnlyEventHandler { @SubscribeEvent public static void drawLast(RenderLevelLastEvent event) { System.out.println(\"\uc6d4\ub4dc \uadf8\ub9ac\ub294\uc911!\"); } } Note \uc774\ub97c \uc774\uc6a9\ud558\uba74 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \uc544\ub2cc \ud074\ub798\uc2a4 \uadf8 \uc790\uccb4\uac00 \ub4f1\ub85d\ub429\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \ub4f1\ub85d\ub418\ub294 \ubaa8\ub4e0 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uc815\uc801\uc774\uc5b4\uc57c \uc81c\ub300\ub85c \ub3d9\uc791\ud569\ub2c8\ub2e4!","title":"\uc790\ub3d9\uc73c\ub85c \uc815\uc801 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \ub4f1\ub85d\ud558\uae30"},{"location":"concepts/events/#_6","text":"\ub9cc\uc57d \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub420 \uc218 \uc788\ub2e4\uba74, @Cancelable \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\uc744 \uac83\uc785\ub2c8\ub2e4, \uadf8\ub9ac\uace0 \uba54\uc11c\ub4dc Event#isCancelable() \ub294 true \ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774\ubca4\ud2b8\uc758 \ucde8\uc18c \uc5ec\ubd80\ub294 Event#setCanceled(boolean canceled \uba54\uc11c\ub4dc\ub97c \ud1b5\ud574 \ubcc0\uacbd\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4, true \ub97c \uc804\ub2ec\ud560 \uc2dc \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub418\uace0 false \ub97c \uc804\ub2ec\ud560 \uc2dc \uc774\ubca4\ud2b8\uc758 \u201c\ucde8\uc18c\ub97c \ucde8\uc18c\ud569\ub2c8\ub2e4\u201d. \uadf8\ub7ec\ub098 \ub9cc\uc57d\uc5d0 \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub420 \uc218 \uc5c6\ub2e4\uba74, \uc774 \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83 \ub9cc\uc73c\ub85c UnsupportedOperationException \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ucd5c\uc18c\ub420 \uc218 \uc5c6\ub294 \uc774\ubca4\ud2b8\uc758 \ucde8\uc18c \uc5ec\ubd80\ub294 \ubd88\ubcc0\uac12\uc73c\ub85c \ucde8\uae09\ub418\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. Important \ubaa8\ub4e0 \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub420 \uc218 \uc788\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4! \ucde8\uc18c\ud560 \uc218 \uc5c6\ub294 \uc774\ubca4\ud2b8\ub97c \ucde8\uc18c\ud558\ub824\uace0 \ud560 \uc2dc UnsuppoortedOperationException \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uace0 \uac8c\uc784\uc774 \ud295\uae30\uac8c \ub429\ub2c8\ub2e4! \uadf8\ub807\uae30\uc5d0 \uc774\ubca4\ud2b8\ub97c \ucde8\uc18c\ud558\uae30 \uc804\uc5d0 Event#isCancelable() \uc744 \uc0ac\uc6a9\ud558\ub294 \ub4f1 \uc774\ubca4\ud2b8\uac00 \ucde8\uc18c\ub420 \uc218 \uc788\ub294\uc9c0\ub97c \uba3c\uc800 \ud655\uc2e4\ud558\uac8c \ud655\uc778\ud558\uc138\uc694!","title":"\uc774\ubca4\ud2b8 \ucde8\uc18c\ud558\uae30"},{"location":"concepts/events/#_7","text":"\uc77c\ubd80 \uc774\ubca4\ud2b8\ub4e4\uc740 Event$Result \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4 \uacb0\uacfc\ub294 \uc774\ubca4\ud2b8\ub97c \uc911\ub2e8\ud558\ub294 DENY , \uae30\ubcf8 \ubc14\ub2d0\ub77c \ucf54\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 DEFAULT , \uac15\uc81c\uc801\uc73c\ub85c \ud2b9\uc815 \ub3d9\uc791\uc744 \uc218\ud589\ud558\ub3c4\ub85d \ud558\ub294 ALLOW , \uc774\ub807\uac8c 3\uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubca4\ud2b8\uc758 \uacb0\uacfc\ub294 \uc774\ubca4\ud2b8 \ub3c4\uc911 #setResult \ub97c \uc0ac\uc6a9\ud574 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \uc774\ubca4\ud2b8\uac00 \uacb0\uacfc\uac00 \uc788\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4; \uacb0\uacfc\uac00 \uc788\ub294 \uc774\ubca4\ud2b8\ub294 @HasResult \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. Important \uc5ec\ub7ec \uc774\ubca4\ud2b8\ub4e4\uc740 \uac01\uc790 \ub2e4\ub978 \ubc29\uc2dd\uc73c\ub85c \uacb0\uacfc\ub97c \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uadf8\ub807\uae30\uc5d0 \uc774\ubca4\ud2b8\uc758 JavaDoc \uc5d0\uc11c \uc774\ubca4\ud2b8\uac00 \uacb0\uacfc\ub97c \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud560\uc9c0\ub97c \ubbf8\ub9ac \uc219\uc9c0\ud558\ub3c4\ub85d \ud558\uc138\uc694!","title":"\uacb0\uacfc"},{"location":"concepts/events/#_8","text":"( @SubscribeEvent \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\ub294)\uc774\ubca4\ud2b8 \ud5e8\ub4e4\ub7ec \uba54\uc11c\ub4dc\uc5d0\ub294 \uc6b0\uc120\uc21c\uc704\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uc758 \uc6b0\uc120\uc21c\uc758\ub294 @SubscribeEvent \uc758 priority \uac12\uc744 \ubcc0\uacbd\ud558\uc5ec \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc774 \uc6b0\uc120\uc21c\uc704\ub294 EventPriority \uc758 \uc5f4\uac70\ud615( HIGHEST , HIGH , NORMAL , LOW , LOWEST )\uc785\ub2c8\ub2e4. HIGHEST \uc6b0\uc120\uc21c\uc704\ub97c \uac00\uc9c4 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub4e4\uc740 \uac00\uc7a5 \uba3c\uc800 \uc2e4\ud589\ub418\uace0, LOWEST \uc6b0\uc120\uc21c\uc704\ub97c \uac00\uc9c4 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uac00\uc7a5 \ub098\uc911\uc5d0 \uc2e4\ud589\ub429\ub2c8\ub2e4.","title":"\uc6b0\uc120\uc21c\uc704"},{"location":"concepts/events/#_9","text":"\ub9ce\uc740 \uc774\ubca4\ud2b8\ub4e4\uc740 \uc870\uae08\uc529 \ub2e4\ub978 \ubc88\ud615\uc774 \uc874\uc7ac\ud569\ub2c8\ub2e4. \uc774 \ubcc0\ud615\ub41c \uc774\ubca4\ud2b8\ub4e4\uc740 \uc5ed\ud560\uc774 \uc870\uae08\uc529 \ub2e4 \ub2e4\ub974\uc9c0\ub9cc, \uc804\ubd80 \ud558\ub098\uc758 \uae30\ubc18 \uc774\ubca4\ud2b8\ub97c \uc0c1\uc18d\ud558\uc5ec \ub9cc\ub4e4\uc5b4\uc838 \uc788\uac70\ub098, (\uc608: PlayerEvent ) \ub610\ub294 \ud558\ub098\uc758 \uc774\ubca4\ud2b8\ub97c \uc5ec\ub7ec \ub2e8\uacc4\ub85c \ub098\ub204\uc5b4 \ub454 \uac83\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. (\uc608: PotionBrewEvent , PotionBrewEvent$Pre \uc640 PotionBrewEvent$Post \uac00 \uc788\uc74c). \ub9cc\uc57d \uae30\ubc18\uc774 \ub418\ub294 \ubd80\ubaa8 \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud558\ub294 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uac00 \uc788\ub2e4\uba74, \uadf8 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \uadf8 \uc774\ubca4\ud2b8\uc758 \ubaa8\ub4e0 \uc790\uc2dd \ud074\ub798\uc2a4\uc758 \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud569\ub2c8\ub2e4.","title":"\ud558\uc704 \uc774\ubca4\ud2b8"},{"location":"concepts/events/#_10","text":"\ubaa8\ub4dc \uc774\ubca4\ud2b8 \ubc84\uc2a4\ub294 \uc8fc\ub85c \ubaa8\ub4dc\uc758 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub97c \ubc29\uc1a1\ud558\ub294\ub370\uc5d0 \uc0ac\uc6a9\ub418\uc5b4 \ubaa8\ub4dc\uc758 \ucd08\uae30\ud654\ub97c \ub3d5\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub418\ub294 \uc774\ubca4\ud2b8\ub4e4\uc740 IModBusEvent \uc778\ud130\ud398\uc774\uc2a4\ub97c \ubb34\uc870\uac74 \uad6c\ud604\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \ub610\ud55c \uc774 \uc774\ubca4\ud2b8\ub4e4\uc740 \ubcd1\ub82c\uc801\uc73c\ub85c \ubc29\uc1a1\ub418\uc5b4 \uc5ec\ub7ec \ubaa8\ub4dc\uac00 \ub3d9\uc2dc\uc5d0 \ucd08\uae30\ud654 \ub420 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc774\ub85c \uc778\ud574 \ubaa8\ub4dc\uc5d0\uc120 \ub2e4\ub978 \ubaa8\ub4dc\uc758 \ucf54\ub4dc\ub97c \uc9c1\uc811\uc801\uc73c\ub85c \uc2e4\ud589\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ubb34\uc870\uac74 InterModComms \uc2dc\uc2a4\ud15c\uc744 \uac70\uccd0\uc57c\ub9cc \ud569\ub2c8\ub2e4. \uc774 4\uac00\uc9c0\ub294 \ubaa8\ub4dc \ucd08\uae30\ud654\uac00 \uc774\ub8e8\uc5b4 \uc9c8 \ub54c \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub418\ub294 \uac00\uc7a5 \uc720\uc6a9\ud55c \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4 \uc785\ub2c8\ub2e4. FMLCommonSetupEvent FMLClientSetupEvent & FMLDedicatedServerSetupEvent InterModEnqueueEvent InterModProcessEvent Note FMLClientSetupEvent \uc640 FMLDedicatedServerSetupEvent \ub294 \uc62c\ubc14\ub978 \ubc30\ud3ec\ud310\uc5d0\uc11c\ub9cc \ubc29\uc1a1\ub429\ub2c8\ub2e4! \uc774 4\uac1c\uc758 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4\uc740 \ubaa8\ub450 ParallelDispatchEvent \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\uc774\uae30 \ub54c\ubb38\uc5d0 \ubcd1\ub82c\uc801\uc73c\ub85c \ubc29\uc1a1\ub429\ub2c8\ub2e4. \ub9cc\uc57d ParallelDispatchEvent \ub610\ub294 \uadf8 \uc790\uc2dd \ud074\ub798\uc2a4 \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub418\ub294 \ub3c4\uc911 \uba54\uc778 \uc2a4\ub808\ub4dc\uc5d0\uc11c \ucf54\ub4dc\ub97c \uc2e4\ud589\ud558\uace0 \uc2f6\ub2e4\uba74 #enqueueWork \ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8 \ub9d0\uace0, \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub418\ub294 \ub2e4\ub978 \uc774\ubca4\ud2b8\ub4e4\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub4e4 \ub610\ud55c \ubb34\uc5b8\uac00\ub97c \ub4f1\ub85d\ud558\uac70\ub098, \ucd08\uae30\ud654 \ud558\ub294 \ub4f1\uc758 \uc6a9\ub3c4\ub85c \uc4f0\uc785\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub4e4\uc740 \ub300\ubd80\ubd84 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4\uacfc \ub2e4\ub974\uac8c \ube44\ub3d9\uae30\uc801\uc774\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc774\ubca4\ud2b8\ub4e4\uc758 \uc608\ub85c: ColorHandlerEvent ModelBakeEvent TextureStitchEvent RegistryEvent \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc774\ubca4\ud2b8\uac00 \ubaa8\ub4dc \ucd08\uae30\ud654 \ub3c4\uc911 \ubc29\uc1a1\ub41c\ub2e4\uba74, \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub41c\ub2e4\uace0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubaa8\ub4dc \uc774\ubca4\ud2b8 \ubc84\uc2a4"},{"location":"concepts/internationalization/","text":"\ub2e4\uad6d\uc5b4 \uc9c0\uc6d0 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ub2e4\uad6d\uc5b4\ub97c \uad6d\uc81c\ud654(Internationalization, i18n\ub77c\uace0 \ud558\uae30\ub3c4 \ud569\ub2c8\ub2e4.)\uc640 \ud604\uc9c0\ud654\ub97c \ud1b5\ud574 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uad6d\uc81c\ud654\ub294 \ub2e4\uc591\ud55c \uc5b8\uc5b4\ub97c \uc9c0\uc6d0\ud560\ub54c \ucf54\ub4dc\uc758 \ubcc0\uacbd\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\ub294 \uc124\uacc4 \ubc29\ubc95\uc785\ub2c8\ub2e4. \ud604\uc9c0\ud654\ub294 \ud45c\uc2dc\ub418\ub294 \uae00\uc790\ub4e4\uc744 \uc720\uc800\uc758 \uc5b8\uc5b4\uc5d0 \ub9de\uac8c \ubc14\uafb8\ub294 \uacfc\uc815\uc785\ub2c8\ub2e4. \uad6d\uc81c\ud654\uc640 \ud604\uc9c0\ud654\ub294 \ubb38\uc790\uc5f4 \uce58\ud658\uc744 \ud1b5\ud574 \uc774\ub8e8\uc5b4\uc9d1\ub2c8\ub2e4. \uad6d\uc81c\ud654\ub294 \ubc88\uc5ed \ud0a4\uac12 \uc744 \uc0ac\uc6a9\ud558\ub294\ub370, \ubc88\uc5ed \ud0a4\uac12\uc740 \ud45c\uc2dc \uac00\ub2a5\ud55c \ud14d\uc2a4\ud2b8\ub85c \uce58\ud658 \uac00\ub2a5\ud55c \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ud759 \ube14\ub85d\uc758 \uc774\ub984 \u201cDirt\u201d \ub294 block.minecraft.dirt \ub77c\ub294 \ubc88\uc5ed \ud0a4\uac12\uc744 \ud45c\uc2dc \uac00\ub2a5\ud55c \ud14d\uc2a4\ud2b8\ub85c \uce58\ud658\ud558\uc5ec \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ud45c\uc2dc \uac00\ub2a5\ud55c \ud14d\uc2a4\ud2b8\ub4e4\uc744 \uc0ac\uc6a9\uc790\uc758 \uc5b8\uc5b4\uc5d0 \uad00\uacc4\uc5c6\uc774 \ucc38\uc870\ud560 \uc218 \uc788\uc73c\uba70, \uc0c8\ub85c\uc6b4 \uc5b8\uc5b4\ub97c \uc9c0\uc6d0\ud558\uae30 \uc704\ud574 \uac8c\uc784\uc758 \ucf54\ub4dc\ub97c \uc218\uc815\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\ub54c \ubc88\uc5ed \ud0a4\uac12\uc744 \ud45c\uc2dc \uac00\ub2a5\ud55c \ud14d\uc2a4\ud2b8\ub85c \uce58\ud658\ud558\ub294 \uacfc\uc815\uc744 \ud604\uc9c0\ud654\ub77c\uace0 \ud569\ub2c8\ub2e4. \uc774\ub294 \uac8c\uc784\uc758 \uc5b8\uc5b4 \uc124\uc815\uc744 \ub530\ub77c \uc9c4\ud589\ub429\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub294 \uc5b8\uc5b4 \uc124\uc815\uc5d0\uc11c \ub2e4\ub978 \uad6d\uac00\uc758 \uc5b8\uc5b4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc, \uc804\uc6a9 \uc11c\ubc84\uc5d0\uc11c\ub294 \uc624\uc9c1 en_us (\uc601\uc5b4)\ub9cc\uc774 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \uc9c0\uc6d0\ub418\ub294 \uc5b8\uc5b4\ub4e4\uc740 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc704\ud0a4 \uc5d0\uc11c \ud655\uc778\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5b8\uc5b4 \ud30c\uc77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uac00 \uc9c0\uc6d0\ud558\ub294 \uc5b8\uc5b4\ub4e4\uc740 \uadf8 \uc5b8\uc5b4\uc6a9 \uc5b8\uc5b4 \ud30c\uc77c\uc774 \uac01\uac01 \uc874\uc7ac\ud558\uace0, \uc774 \uc5b8\uc5b4 \ud30c\uc77c\ub4e4\uc740 asset/[\ub124\uc784 \uc2a4\ud398\uc774\uc2a4]/lang/[\uc5b8\uc5b4 \ucf54\ub4dc].json \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4. (\uc608: examplemod \ub97c \ubaa8\ub4dc \uc544\uc774\ub514\ub85c \uac00\uc9c0\ub294 \ubaa8\ub4dc\uc758 \ud55c\uad6d\uc5b4 \uc5b8\uc5b4 \ud30c\uc77c\uc740 assets/examplemod/lang/ko_kr.json \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4.) \uc774 \ud30c\uc77c\uc740 \ubc88\uc5ed \ud0a4\uac12\uc744 \uc2e4\uc81c \ud14d\uc2a4\ud2b8\ub85c \ubcc0\ud658\ud574\uc8fc\ub294 \uac04\ub2e8\ud55c json \ud30c\uc77c \uc785\ub2c8\ub2e4. \uc5b8\uc5b4 \ud30c\uc77c\ub4e4\uc758 \uc778\ucf54\ub529\uc740 \ubb34\uc870\uac74 UTF-8\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uad6c\ubc84\uc804 .lang \ud30c\uc77c\ub4e4\uc740 \ubcc0\ud658\uae30 \ub97c \ud1b5\ud574 .json\uc73c\ub85c \ubcc0\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \uc904\uc740 <\ubc88\uc5ed \ud0a4\uac12> : <\ud14d\uc2a4\ud2b8> \ud615\uc2dd\uc73c\ub85c \uc791\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. { \"item.examplemod.example_item\": \"\uc608\uc2dc \uc544\uc774\ud15c \uc774\ub984\", \"block.examplemod.example_block\": \"\uc608\uc2dc \ube14\ub85d \uc774\ub984\", \"commands.examplemod.examplecommand.error\": \"\uc608\uc2dc \ucee4\ub9e8\ub4dc \uc624\ub958!\" } \ube14\ub85d\uacfc \uc544\uc774\ud15c\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30 \ube14\ub85d, \uc544\uc774\ud15c, \ub3c4\uc804\uacfc\uc81c\uc640 \uac19\uc740 \uac8c\uc784\uc758 \uc5ec\ub7ec \uc694\uc18c\ub4e4\uc740 \uc774\ub984\uc758 \ud615\ud0dc\uac00 \uc815\ud574\uc838\uc788\ub294\ub370, \uc544\uc774\ud15c\uc740 item.<\ub124\uc784 \uc2a4\ud398\uc774\uc2a4>.<\uacbd\ub85c> , \ube14\ub85d\uc740 block.<\ub124\uc784 \uc2a4\ud398\uc774\uc2a4>.<\uacbd\ub85c> \uc640 \uac19\uc740 \ud615\ud0dc\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud615\ud0dc\ub294 \uac01 \ud074\ub798\uc2a4\uc758 #getDescriptionId \uba54\uc11c\ub4dc\uc5d0\uc11c \uc815\ud569\ub2c8\ub2e4. \ub610, \uc544\uc774\ud15c\uc740 #getDescriptionId(ItemStack) \uba54\uc11c\ub4dc\ub3c4 \uc788\ub294\ub370, \uc774 \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud558\uc5ec \uc544\uc774\ud15c\uc758 NBT\uc5d0 \ub530\ub77c \ub2e4\ub978 \ubc88\uc5ed \ud0a4\uac12\uc744 \uc0ac\uc6a9\ud558\uc2e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. #getDescriptionId \ub294 \ub300\uac1c \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc758 \uacb9\uc810(:)\uc744 \uc810\uc73c\ub85c \ub300\uccb4\ud55c \uac83(\uc608: \u201cexamplemod:example_item\u201d -> \u201cexamplemod.example_item\u201d) \uc55e\uc5d0 block. \uc774\ub098 item. \uc774 \ubd99\uc740 \ubb38\uc790\uc5f4\uc744 \ubc88\uc5ed \ud0a4\uac12\uc73c\ub85c \ubc18\ud658\ud569\ub2c8\ub2e4(\uc608: \u201citem.examplemod.example_item\u201d). BlockItem \uc740 Item#getDescriptionId \ub97c \uc7ac\uc815\uc758\ud558\uc5ec \uc790\uc2e0\uc774 \uc0c1\uc9d5\ud558\ub294 \ube14\ub85d\uc758 \ubc88\uc5ed \ud0a4\uac12\uc744 \ub300\uc2e0 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc544\uc774\ud15c examplemod:example_item \uc758 \uc774\ub984\uc740 \ub2e4\uc74c\ucc98\ub7fc \uc9c0\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4: { \"item.examplemod.example_item\": \"\uc608\uc2dc \uc544\uc774\ud15c \uc774\ub984\" } Note \ubc88\uc5ed \ud0a4\uac12\uc740 \ud14d\uc2a4\ud2b8 \uc2dd\ubcc4\uc744 \uc704\ud55c \uac83\uc77c \ubfd0\uc785\ub2c8\ub2e4, \uc774\ub97c \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uac1d\uccb4\ub97c \uad6c\ubd84\ud558\ub294\ub370 \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc138\uc694, \uaf2d \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc744 \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc138\uc694! \ud604\uc9c0\ud654 \uad00\ub828 \uba54\uc11c\ub4dc\ub4e4 Warning \ub9ce\uc740 \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc774 \uc790\uc8fc \ud558\ub294 \uc2e4\uc218\uc911 \ud558\ub098\ub294 \uc11c\ubc84\uc5d0\uc11c \ubc88\uc5ed \ud0a4\uac12\uc744 \ubbf8\ub9ac \ud14d\uc2a4\ud2b8\ub85c \uce58\ud658\ud55c \ub2e4\uc74c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc804\uc1a1\ud558\ub294 \uac83 \uc785\ub2c8\ub2e4. \uc11c\ubc84\uc758 \uc5b8\uc5b4 \uc124\uc815\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ub2e4\ub97c \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0, \uc11c\ubc84\ub294 TranslatableComponent \uc640 \ubc88\uc5ed \ud0a4\uac12\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc2a4\uc2a4\ub85c \uc5b8\uc5b4 \uc124\uc815\uc5d0 \ub9de\ub294 \ud14d\uc2a4\ud2b8\ub97c \ud45c\ud604\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. net.minecraft.client.resources.language.I18n (\ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9) \uc774 \ud074\ub798\uc2a4\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub9cc \uc874\uc7ac\ud569\ub2c8\ub2e4! \uc774\ub97c \uc11c\ubc84\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub824\uace0 \ud558\uba74 \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uace0 \uac8c\uc784\uc774 \ucda9\ub3cc\ud569\ub2c8\ub2e4. get(String, Object...) \ub294 \ubc88\uc5ed \ud0a4\uac12\uc73c\ub85c \uce58\ud658\ud55c \ud14d\uc2a4\ud2b8\uc5d0 \ud3ec\ub9e4\ud305\uae4c\uc9c0 \uc801\uc6a9\ud558\ub294 \uba54\uc11c\ub4dc\uc785\ub2c8\ub2e4. \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \ubc88\uc5ed \ud0a4\uac12\uc774\uace0, \ub098\uba38\uc9c0\ub294 String.format(String, Object...) \uc758 Object \uac00\ubcc0 \uc778\uc790\uc640 \ub3d9\uc77c\ud569\ub2c8\ub2e4. TranslatableComponent TranslatableComponent \ub294 \ubb38\uc790\uc5f4 \uce58\ud658\uacfc \ud3ec\ub9e4\ud305\uc774 \ub098\uc911\uc5d0 \uc774\ub8e8\uc5b4\uc9c0\ub294 Component \uc785\ub2c8\ub2e4. \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \uba54\uc138\uc9c0\ub97c \ubcf4\ub0bc \ub54c \ub9e4\uc6b0 \uc720\uc6a9\ud55c\ub370, \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc9c1\uc811 \uc5b8\uc5b4 \uc124\uc815\uc5d0 \ub9de\ub294 \ubb38\uc790\uc5f4\ub85c \ubc88\uc5ed \ud0a4\uac12\uc744 \uc218\ud589\ud558\ub3c4\ub85d \ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. TranslatableComponent(String, Object...) \ub3c4 String.format(String, Object...) \uc640 \ube44\uc2b7\ud569\ub2c8\ub2e4; \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \ubc88\uc5ed \ud0a4\uac12, \ub4a4\uc5d0 \uc624\ub294 Object \uac00\ubcc0\uc778\uc790\ub294 \ud3ec\ub9e4\ud305\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc9c0\uc6d0\ub418\ub294 \uc11c\uc2dd \uc9c0\uc815\uc790\ub294 %s \ub791 %1$s , %2$s , %3$s \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\ub9e4\ud305\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uc778\uc218\uc5d0 \ub610 \ub2e4\ub978 Component \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\uba70, \uc774\ub294 \ud574\ub2f9 Component \uac00 \uac00\uc9c0\uace0 \uc788\ub294 \uc11c\uc2dd \uc9c0\uc815\uc790\uc640 \uac19\uc740 \uc18d\uc131\ub4e4\uc744 \uc720\uc9c0\ud558\uba70 \ub300\uc0c1 \ud14d\uc2a4\ud2b8\uc5d0 \uc0bd\uc785\ud569\ub2c8\ub2e4. TextComponentHelper createComponentTranslation(CommandSource, String, Object...) \ub294 \ud3ec\ub9e4\ud305\uacfc \ubb38\uc790\uc5f4 \uce58\ud658\uc774 \uc774\ubbf8 \uc774\ub8e8\uc5b4\uc9c4 BaseComponent \ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\ub54c, \ub9cc\uc57d CommandSource \uac00 \ud3ec\uc9c0\uac00 \uc124\uce58\ub418\uc9c0 \uc54a\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uba74 \uc989\uc2dc \uc601\ubb38 \ud14d\uc2a4\ud2b8\ub97c \uc0dd\uc131\ud558\uc9c0\ub9cc, \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 TranslatableComponent \ub97c \ud1b5\ud574 \ub098\uc911\uc5d0 \ud14d\uc2a4\ud2b8\ub97c \uc0dd\uc131\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774\ub294 \uc11c\ubc84\uc5d0 \ud3ec\uc9c0\uac00 \uc124\uce58\ub418\uc9c0 \uc54a\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc788\uc744 \ub54c \ub9d0\uace0\ub294 \uc720\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\uc758 \ub450\ubc88\uc9f8","title":"\ub2e4\uad6d\uc5b4 \uc9c0\uc6d0"},{"location":"concepts/internationalization/#_1","text":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ub2e4\uad6d\uc5b4\ub97c \uad6d\uc81c\ud654(Internationalization, i18n\ub77c\uace0 \ud558\uae30\ub3c4 \ud569\ub2c8\ub2e4.)\uc640 \ud604\uc9c0\ud654\ub97c \ud1b5\ud574 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uad6d\uc81c\ud654\ub294 \ub2e4\uc591\ud55c \uc5b8\uc5b4\ub97c \uc9c0\uc6d0\ud560\ub54c \ucf54\ub4dc\uc758 \ubcc0\uacbd\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\ub294 \uc124\uacc4 \ubc29\ubc95\uc785\ub2c8\ub2e4. \ud604\uc9c0\ud654\ub294 \ud45c\uc2dc\ub418\ub294 \uae00\uc790\ub4e4\uc744 \uc720\uc800\uc758 \uc5b8\uc5b4\uc5d0 \ub9de\uac8c \ubc14\uafb8\ub294 \uacfc\uc815\uc785\ub2c8\ub2e4. \uad6d\uc81c\ud654\uc640 \ud604\uc9c0\ud654\ub294 \ubb38\uc790\uc5f4 \uce58\ud658\uc744 \ud1b5\ud574 \uc774\ub8e8\uc5b4\uc9d1\ub2c8\ub2e4. \uad6d\uc81c\ud654\ub294 \ubc88\uc5ed \ud0a4\uac12 \uc744 \uc0ac\uc6a9\ud558\ub294\ub370, \ubc88\uc5ed \ud0a4\uac12\uc740 \ud45c\uc2dc \uac00\ub2a5\ud55c \ud14d\uc2a4\ud2b8\ub85c \uce58\ud658 \uac00\ub2a5\ud55c \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ud759 \ube14\ub85d\uc758 \uc774\ub984 \u201cDirt\u201d \ub294 block.minecraft.dirt \ub77c\ub294 \ubc88\uc5ed \ud0a4\uac12\uc744 \ud45c\uc2dc \uac00\ub2a5\ud55c \ud14d\uc2a4\ud2b8\ub85c \uce58\ud658\ud558\uc5ec \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ud45c\uc2dc \uac00\ub2a5\ud55c \ud14d\uc2a4\ud2b8\ub4e4\uc744 \uc0ac\uc6a9\uc790\uc758 \uc5b8\uc5b4\uc5d0 \uad00\uacc4\uc5c6\uc774 \ucc38\uc870\ud560 \uc218 \uc788\uc73c\uba70, \uc0c8\ub85c\uc6b4 \uc5b8\uc5b4\ub97c \uc9c0\uc6d0\ud558\uae30 \uc704\ud574 \uac8c\uc784\uc758 \ucf54\ub4dc\ub97c \uc218\uc815\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\ub54c \ubc88\uc5ed \ud0a4\uac12\uc744 \ud45c\uc2dc \uac00\ub2a5\ud55c \ud14d\uc2a4\ud2b8\ub85c \uce58\ud658\ud558\ub294 \uacfc\uc815\uc744 \ud604\uc9c0\ud654\ub77c\uace0 \ud569\ub2c8\ub2e4. \uc774\ub294 \uac8c\uc784\uc758 \uc5b8\uc5b4 \uc124\uc815\uc744 \ub530\ub77c \uc9c4\ud589\ub429\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub294 \uc5b8\uc5b4 \uc124\uc815\uc5d0\uc11c \ub2e4\ub978 \uad6d\uac00\uc758 \uc5b8\uc5b4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc, \uc804\uc6a9 \uc11c\ubc84\uc5d0\uc11c\ub294 \uc624\uc9c1 en_us (\uc601\uc5b4)\ub9cc\uc774 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \uc9c0\uc6d0\ub418\ub294 \uc5b8\uc5b4\ub4e4\uc740 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc704\ud0a4 \uc5d0\uc11c \ud655\uc778\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub2e4\uad6d\uc5b4 \uc9c0\uc6d0"},{"location":"concepts/internationalization/#_2","text":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uac00 \uc9c0\uc6d0\ud558\ub294 \uc5b8\uc5b4\ub4e4\uc740 \uadf8 \uc5b8\uc5b4\uc6a9 \uc5b8\uc5b4 \ud30c\uc77c\uc774 \uac01\uac01 \uc874\uc7ac\ud558\uace0, \uc774 \uc5b8\uc5b4 \ud30c\uc77c\ub4e4\uc740 asset/[\ub124\uc784 \uc2a4\ud398\uc774\uc2a4]/lang/[\uc5b8\uc5b4 \ucf54\ub4dc].json \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4. (\uc608: examplemod \ub97c \ubaa8\ub4dc \uc544\uc774\ub514\ub85c \uac00\uc9c0\ub294 \ubaa8\ub4dc\uc758 \ud55c\uad6d\uc5b4 \uc5b8\uc5b4 \ud30c\uc77c\uc740 assets/examplemod/lang/ko_kr.json \uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4.) \uc774 \ud30c\uc77c\uc740 \ubc88\uc5ed \ud0a4\uac12\uc744 \uc2e4\uc81c \ud14d\uc2a4\ud2b8\ub85c \ubcc0\ud658\ud574\uc8fc\ub294 \uac04\ub2e8\ud55c json \ud30c\uc77c \uc785\ub2c8\ub2e4. \uc5b8\uc5b4 \ud30c\uc77c\ub4e4\uc758 \uc778\ucf54\ub529\uc740 \ubb34\uc870\uac74 UTF-8\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uad6c\ubc84\uc804 .lang \ud30c\uc77c\ub4e4\uc740 \ubcc0\ud658\uae30 \ub97c \ud1b5\ud574 .json\uc73c\ub85c \ubcc0\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \uc904\uc740 <\ubc88\uc5ed \ud0a4\uac12> : <\ud14d\uc2a4\ud2b8> \ud615\uc2dd\uc73c\ub85c \uc791\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. { \"item.examplemod.example_item\": \"\uc608\uc2dc \uc544\uc774\ud15c \uc774\ub984\", \"block.examplemod.example_block\": \"\uc608\uc2dc \ube14\ub85d \uc774\ub984\", \"commands.examplemod.examplecommand.error\": \"\uc608\uc2dc \ucee4\ub9e8\ub4dc \uc624\ub958!\" }","title":"\uc5b8\uc5b4 \ud30c\uc77c"},{"location":"concepts/internationalization/#_3","text":"\ube14\ub85d, \uc544\uc774\ud15c, \ub3c4\uc804\uacfc\uc81c\uc640 \uac19\uc740 \uac8c\uc784\uc758 \uc5ec\ub7ec \uc694\uc18c\ub4e4\uc740 \uc774\ub984\uc758 \ud615\ud0dc\uac00 \uc815\ud574\uc838\uc788\ub294\ub370, \uc544\uc774\ud15c\uc740 item.<\ub124\uc784 \uc2a4\ud398\uc774\uc2a4>.<\uacbd\ub85c> , \ube14\ub85d\uc740 block.<\ub124\uc784 \uc2a4\ud398\uc774\uc2a4>.<\uacbd\ub85c> \uc640 \uac19\uc740 \ud615\ud0dc\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud615\ud0dc\ub294 \uac01 \ud074\ub798\uc2a4\uc758 #getDescriptionId \uba54\uc11c\ub4dc\uc5d0\uc11c \uc815\ud569\ub2c8\ub2e4. \ub610, \uc544\uc774\ud15c\uc740 #getDescriptionId(ItemStack) \uba54\uc11c\ub4dc\ub3c4 \uc788\ub294\ub370, \uc774 \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud558\uc5ec \uc544\uc774\ud15c\uc758 NBT\uc5d0 \ub530\ub77c \ub2e4\ub978 \ubc88\uc5ed \ud0a4\uac12\uc744 \uc0ac\uc6a9\ud558\uc2e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. #getDescriptionId \ub294 \ub300\uac1c \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc758 \uacb9\uc810(:)\uc744 \uc810\uc73c\ub85c \ub300\uccb4\ud55c \uac83(\uc608: \u201cexamplemod:example_item\u201d -> \u201cexamplemod.example_item\u201d) \uc55e\uc5d0 block. \uc774\ub098 item. \uc774 \ubd99\uc740 \ubb38\uc790\uc5f4\uc744 \ubc88\uc5ed \ud0a4\uac12\uc73c\ub85c \ubc18\ud658\ud569\ub2c8\ub2e4(\uc608: \u201citem.examplemod.example_item\u201d). BlockItem \uc740 Item#getDescriptionId \ub97c \uc7ac\uc815\uc758\ud558\uc5ec \uc790\uc2e0\uc774 \uc0c1\uc9d5\ud558\ub294 \ube14\ub85d\uc758 \ubc88\uc5ed \ud0a4\uac12\uc744 \ub300\uc2e0 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc544\uc774\ud15c examplemod:example_item \uc758 \uc774\ub984\uc740 \ub2e4\uc74c\ucc98\ub7fc \uc9c0\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4: { \"item.examplemod.example_item\": \"\uc608\uc2dc \uc544\uc774\ud15c \uc774\ub984\" } Note \ubc88\uc5ed \ud0a4\uac12\uc740 \ud14d\uc2a4\ud2b8 \uc2dd\ubcc4\uc744 \uc704\ud55c \uac83\uc77c \ubfd0\uc785\ub2c8\ub2e4, \uc774\ub97c \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uac1d\uccb4\ub97c \uad6c\ubd84\ud558\ub294\ub370 \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc138\uc694, \uaf2d \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc744 \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc138\uc694!","title":"\ube14\ub85d\uacfc \uc544\uc774\ud15c\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30"},{"location":"concepts/internationalization/#_4","text":"Warning \ub9ce\uc740 \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc774 \uc790\uc8fc \ud558\ub294 \uc2e4\uc218\uc911 \ud558\ub098\ub294 \uc11c\ubc84\uc5d0\uc11c \ubc88\uc5ed \ud0a4\uac12\uc744 \ubbf8\ub9ac \ud14d\uc2a4\ud2b8\ub85c \uce58\ud658\ud55c \ub2e4\uc74c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc804\uc1a1\ud558\ub294 \uac83 \uc785\ub2c8\ub2e4. \uc11c\ubc84\uc758 \uc5b8\uc5b4 \uc124\uc815\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ub2e4\ub97c \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0, \uc11c\ubc84\ub294 TranslatableComponent \uc640 \ubc88\uc5ed \ud0a4\uac12\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc2a4\uc2a4\ub85c \uc5b8\uc5b4 \uc124\uc815\uc5d0 \ub9de\ub294 \ud14d\uc2a4\ud2b8\ub97c \ud45c\ud604\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4.","title":"\ud604\uc9c0\ud654 \uad00\ub828 \uba54\uc11c\ub4dc\ub4e4"},{"location":"concepts/internationalization/#netminecraftclientresourceslanguagei18n","text":"\uc774 \ud074\ub798\uc2a4\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub9cc \uc874\uc7ac\ud569\ub2c8\ub2e4! \uc774\ub97c \uc11c\ubc84\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub824\uace0 \ud558\uba74 \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uace0 \uac8c\uc784\uc774 \ucda9\ub3cc\ud569\ub2c8\ub2e4. get(String, Object...) \ub294 \ubc88\uc5ed \ud0a4\uac12\uc73c\ub85c \uce58\ud658\ud55c \ud14d\uc2a4\ud2b8\uc5d0 \ud3ec\ub9e4\ud305\uae4c\uc9c0 \uc801\uc6a9\ud558\ub294 \uba54\uc11c\ub4dc\uc785\ub2c8\ub2e4. \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \ubc88\uc5ed \ud0a4\uac12\uc774\uace0, \ub098\uba38\uc9c0\ub294 String.format(String, Object...) \uc758 Object \uac00\ubcc0 \uc778\uc790\uc640 \ub3d9\uc77c\ud569\ub2c8\ub2e4.","title":"net.minecraft.client.resources.language.I18n (\ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9)"},{"location":"concepts/internationalization/#translatablecomponent","text":"TranslatableComponent \ub294 \ubb38\uc790\uc5f4 \uce58\ud658\uacfc \ud3ec\ub9e4\ud305\uc774 \ub098\uc911\uc5d0 \uc774\ub8e8\uc5b4\uc9c0\ub294 Component \uc785\ub2c8\ub2e4. \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \uba54\uc138\uc9c0\ub97c \ubcf4\ub0bc \ub54c \ub9e4\uc6b0 \uc720\uc6a9\ud55c\ub370, \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc9c1\uc811 \uc5b8\uc5b4 \uc124\uc815\uc5d0 \ub9de\ub294 \ubb38\uc790\uc5f4\ub85c \ubc88\uc5ed \ud0a4\uac12\uc744 \uc218\ud589\ud558\ub3c4\ub85d \ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. TranslatableComponent(String, Object...) \ub3c4 String.format(String, Object...) \uc640 \ube44\uc2b7\ud569\ub2c8\ub2e4; \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \ubc88\uc5ed \ud0a4\uac12, \ub4a4\uc5d0 \uc624\ub294 Object \uac00\ubcc0\uc778\uc790\ub294 \ud3ec\ub9e4\ud305\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc9c0\uc6d0\ub418\ub294 \uc11c\uc2dd \uc9c0\uc815\uc790\ub294 %s \ub791 %1$s , %2$s , %3$s \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\ub9e4\ud305\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uc778\uc218\uc5d0 \ub610 \ub2e4\ub978 Component \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\uba70, \uc774\ub294 \ud574\ub2f9 Component \uac00 \uac00\uc9c0\uace0 \uc788\ub294 \uc11c\uc2dd \uc9c0\uc815\uc790\uc640 \uac19\uc740 \uc18d\uc131\ub4e4\uc744 \uc720\uc9c0\ud558\uba70 \ub300\uc0c1 \ud14d\uc2a4\ud2b8\uc5d0 \uc0bd\uc785\ud569\ub2c8\ub2e4.","title":"TranslatableComponent"},{"location":"concepts/internationalization/#textcomponenthelper","text":"createComponentTranslation(CommandSource, String, Object...) \ub294 \ud3ec\ub9e4\ud305\uacfc \ubb38\uc790\uc5f4 \uce58\ud658\uc774 \uc774\ubbf8 \uc774\ub8e8\uc5b4\uc9c4 BaseComponent \ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\ub54c, \ub9cc\uc57d CommandSource \uac00 \ud3ec\uc9c0\uac00 \uc124\uce58\ub418\uc9c0 \uc54a\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uba74 \uc989\uc2dc \uc601\ubb38 \ud14d\uc2a4\ud2b8\ub97c \uc0dd\uc131\ud558\uc9c0\ub9cc, \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 TranslatableComponent \ub97c \ud1b5\ud574 \ub098\uc911\uc5d0 \ud14d\uc2a4\ud2b8\ub97c \uc0dd\uc131\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774\ub294 \uc11c\ubc84\uc5d0 \ud3ec\uc9c0\uac00 \uc124\uce58\ub418\uc9c0 \uc54a\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc788\uc744 \ub54c \ub9d0\uace0\ub294 \uc720\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\uc758 \ub450\ubc88\uc9f8","title":"TextComponentHelper"},{"location":"concepts/lifecycle/","text":"\ubaa8\ub4dc \uc0dd\uba85\uc8fc\uae30 \ubaa8\ub4dc\ub97c \ubd88\ub7ec\uc624\ub294 \uacfc\uc815\uc5d0\uc11c \uc5ec\ub7ec \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4\uc774 \ubaa8\ub4dc\ubcc4 \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc5ec\ub7ec \ucd08\uae30\ud654 \uc791\uc5c5\ub4e4\uc774 \uc774 \uc774\ubca4\ud2b8\ub4e4 \ub3c4\uc911\uc5d0 \uc774\ub8e8\uc5b4 \uc9d1\ub2c8\ub2e4. \uc774\ub54c \uc9c4\ud589\ub418\ub294 \ucd08\uae30\ud654\ub85c\ub294, \uac1d\uccb4 \ub4f1\ub85d\ud558\uae30 , \ub370\uc774\ud130 \uc0dd\uc131 \uc900\ube44 , \ub610\ub294 \ub2e4\ub978 \ubaa8\ub4dc\uc640\uc758 \ud1b5\uc2e0 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ub9ac\uc2a4\ub108\ub4e4\uc740 @EventBusSubscriber(bus = Bus.MOD) \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uac70\ub098 \ubaa8\ub4dc\uc758 \uc0dd\uc131\uc790\uc5d0\uc11c \ub4f1\ub85d\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4: @Mod.EventBusSubscriber(modid = \"mymod\", bus = Mod.EventBusSubscriber.Bus.MOD) public class MyModEventSubscriber { @SubscribeEvent static void onCommonSetup(FMLCommonSetupEvent event) { ... } } @Mod(\"mymod\") public class MyMod { public MyMod() { FMLModLoadingContext.get().getModEventBus().addListener(this::onCommonSetup); } private void onCommonSetup(FMLCommonSetupEvent event) { ... } } Warning \ub300\ubd80\ubd84\uc758 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4\uc740 \ubcd1\ub82c\uc801\uc73c\ub85c \ubc29\uc1a1\ub429\ub2c8\ub2e4: \ubaa8\ub4e0 \ubaa8\ub4dc\ub4e4\uc740 \ub3d9\uc2dc\uc5d0 \uac19\uc740 \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud569\ub2c8\ub2e4. \ubaa8\ub4dc\ub4e4\uc740 \ub2e4\ub978 \ubaa8\ub4dc\uc758 API \ub610\ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc2dc\uc2a4\ud15c\uc5d0 \uc811\uadfc\ud560 \ub54c, \uc2a4\ub808\ub4dc \uc548\uc804\uc131\uc744 \uc900\uc218\ud574\uc57c\ub9cc \ud569\ub2c8\ub2e4. ParallelDispatchEvent#enqueueWork \ub97c \uc774\uc6a9\ud574 \ucf54\ub4dc \uc2e4\ud589\uc744 \uc608\uc57d\ud558\uc5ec \ub098\uc911\uc5d0 \uc2e4\ud589\ub418\ub3c4\ub85d \ud558\uc138\uc694. \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ubca4\ud2b8 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ubca4\ud2b8\ub4e4\uc740 \ubaa8\ub4dc \uc778\uc2a4\ud134\uc2a4 \ucd08\uae30\ud654 \uc774\ud6c4\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub4e4\uc758 \uc885\ub958\ub294 NewRegistryEvent \uadf8\ub9ac\uace0 RegistryEvent$Register \uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub4e4\uc740 \ubaa8\ub4dc\ub4e4\uc744 \ubd88\ub7ec\uc62c\ub54c \ub3d9\uae30\uc801\uc73c\ub85c \ubc29\uc1a1\ub429\ub2c8\ub2e4. NewRegistryEvent \uc774\ubca4\ud2b8\ub294 \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc774 \uc9c1\uc811 \ub9cc\ub4e0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c RegistryBuilder \ub97c \uc0ac\uc6a9\ud574 \ub4f1\ub85d\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. RegistryEvent$Register<?> \uc774\ubca4\ud2b8\ub294 \uac1d\uccb4\ub4e4\uc744 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ud560 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 \uac01 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub2f9 \ud55c\ubc88\uc529 \ubc29\uc1a1\ub429\ub2c8\ub2e4, \uc774\ub294 \uac1c\ubc1c\uc790\uac00 \uc9c1\uc811 \ub4f1\ub85d\ud55c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub3c4 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ub370\uc774\ud130 \uc0dd\uc131 \ub9cc\uc57d \uac8c\uc784\uc774 \ub370\uc774\ud130 \uc0dd\uc131\uae30 \ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc5b4 \uc2e4\ud589\ub418\uc5c8\ub2e4\uba74, GatherDataEvent \uac00 \uac00\uc7a5 \ub9c8\uc9c0\ub9c9\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 \ubaa8\ub4dc\ub4e4\uc758 \ub370\uc774\ud130 \uc81c\uacf5\uc790\ub97c \ub370\uc774\ud130 \uc0dd\uc131\uae30\uc5d0 \ub4f1\ub85d\ud560\ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub610\ud55c \uc774 \uc774\ubca4\ud2b8\ub294 \ub3d9\uae30\uc801\uc73c\ub85c \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc77c\ubc18 \ucd08\uae30\ud654 FMLCommonSetupEvent \uc774\ubca4\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub77c\uc774\uc5b8\ud2b8, \uadf8\ub9ac\uace0 \uc11c\ubc84 \uc0ac\uc774\ub4dc\uc5d0 \uacf5\ud1b5\uc801\uc73c\ub85c \uc218\ud589\ub420 \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \uc608\ub85c \uce90\ud328\ube4c\ub9ac\ud2f0 \ub4f1\ub85d\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc774\ub4dc \ucd08\uae30\ud654 \uc0ac\uc774\ub4dc \ucd08\uae30\ud654 \uc774\ubca4\ud2b8\ub294 \uac01\uac01 \uc54c\ub9de\ub294 \ubb3c\ub9ac \uc0ac\uc774\ub4dc \uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4: FMLClientSetupEvent \ub294 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0, FMLDedicatedServerSetupEvent \ub294 \uc804\uc6a9 \uc11c\ubc84\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud0a4\ubc14\uc778\ub4dc \ub4f1\ub85d\uacfc \uac19\uc740 \uc0ac\uc774\ub4dc \uc804\uc6a9 \ucd08\uae30\ud654\ub97c \uc9c4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. InterModComms \uc774 \uc0dd\uba85\uc8fc\uae30 \ub2e8\uacc4\uc5d0\uc11c\ub294 \ubaa8\ub4dc\ub07c\ub9ac \uba54\uc138\uc9c0\ub97c \ubcf4\ub0b4 \ubaa8\ub4dc\uac04 \ud638\ud658\uc131\uc744 \uc720\uc9c0\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774\ub54c \ubc29\uc1a1\ub418\ub294 \uc774\ubca4\ud2b8\ub294 InterModEnqueueEvent \uc640 InterModProcessEvent \uac00 \uc788\uc2b5\ub2c8\ub2e4. InterModComms \uc758 \uc5ed\ud560\uc740 \ubaa8\ub4dc \ud1b5\uc2e0\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uba54\uc138\uc9c0\ub97c \ubcf4\uc720\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc774 \ud074\ub798\uc2a4\uc758 \uba54\uc11c\ub4dc\ub4e4\uc740 ConcurrentMap \uc744 \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 \ubcd1\ub82c\uc801\uc73c\ub85c \ubc29\uc1a1\ub418\ub294 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\uc5d0\uc11c \ud638\ucd9c\ud558\uc5ec\ub3c4 \uc548\uc804\ud569\ub2c8\ub2e4. InterModEnqueueEvent \ub3c4\uc911 InterModComms#sendTo \ub97c \uc0ac\uc6a9\ud574 \ub2e4\ub978 \ubaa8\ub4dc\uc5d0 \uba54\uc138\uc9c0\ub97c \uc804\uc1a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. InterModComms#sendTo \uc640 \ub3d9\uc77c\ud55c \uc774\ub984\uc744 \uac00\uc9c4 \uba54\uc11c\ub4dc\uac00 \uc5ec\ub7ff \uc788\ub294\ub370, \uc774 \uba54\uc11c\ub4dc\ub4e4\uc740 \uba54\uc138\uc9c0\ub97c \ubc1b\uc744 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514, \uba54\uc138\uc9c0\ub4e4\uc744 \uad6c\ubd84\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 \ud0a4, \uba54\uc138\uc9c0\uc758 \ub370\uc774\ud130\ub97c \uacf5\uae09\ud558\ub294 Supplier \uc785\ub2c8\ub2e4. \ucd94\uac00\uc801\uc73c\ub85c \uba54\uc138\uc9c0 \uc1a1\uc2e0\uc790\ub97c \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\uc73c\ub098, \uae30\ubcf8\uac12\uc73c\ub85c\ub294 \uba54\uc138\uc9c0\ub97c \ubcf4\ub0b4\ub294 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514 \uc785\ub2c8\ub2e4. \ub610, InterModProcessEvent \ub3c4\uc911 InterModComms#getMessages \ub97c \uc0ac\uc6a9\ud574 \ubc1b\uc740 \ubaa8\ub4e0 \uba54\uc138\uc9c0\ub4e4\uc744\uc758 \ud750\ub984(Stream)\uc744 \ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c \uc804\ub2ec\ud558\ub294 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514\ub294 \uac70\uc758 \uc5b8\uc81c\ub098 \uc774 \uc774 \uba54\uc11c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ubaa8\ub4dc\uc758 \uac83\uc785\ub2c8\ub2e4. \ucd94\uac00\uc801\uc73c\ub85c Predicate \ub97c \uc804\ub2ec\ud558\uc5ec \uba87\uba87 \uba54\uc138\uc9c0\ub97c \ud544\ud130\ub9c1 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 Stream<IMCMessage> \ub97c \ubc18\ud658\ud569\ub2c8\ub2e4, IMCMessage \ub294 \ub370\uc774\ud130\ub97c \ubcf4\ub0b8 \uc1a1\uc2e0\uc790, \uc218\uc2e0\uc790, \ub370\uc774\ud130\uc758 \ud0a4, \ub9c8\uc9c0\ub9c9\uc73c\ub85c \uba54\uc138\uc9c0\uc758 \ub370\uc774\ud130\ub97c \ub2f4\uace0 \uc788\uc2b5\ub2c8\ub2e4. Note \uadf8\uc678\uc5d0\ub3c4 \ubaa8\ub4dc \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131 \uc9c1\ud6c4, \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub418\uae30 \uc774\uc804\uc5d0 \ubc29\uc1a1\ub418\ub294 FMLConstructModEvent \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\uc640 InterModComms \uc774\ud6c4\uc5d0 \ubc29\uc1a1\ub418\uc5b4 \ubaa8\ub4dc\ub97c \uc644\uc804\ud788 \ubd88\ub7ec\uc654\uc74c\uc744 \uc54c\ub9ac\ub294 FMLLoadCompleteEvent \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\uac00 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubaa8\ub4dc \uc0dd\uba85\uc8fc\uae30"},{"location":"concepts/lifecycle/#_1","text":"\ubaa8\ub4dc\ub97c \ubd88\ub7ec\uc624\ub294 \uacfc\uc815\uc5d0\uc11c \uc5ec\ub7ec \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4\uc774 \ubaa8\ub4dc\ubcc4 \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc5ec\ub7ec \ucd08\uae30\ud654 \uc791\uc5c5\ub4e4\uc774 \uc774 \uc774\ubca4\ud2b8\ub4e4 \ub3c4\uc911\uc5d0 \uc774\ub8e8\uc5b4 \uc9d1\ub2c8\ub2e4. \uc774\ub54c \uc9c4\ud589\ub418\ub294 \ucd08\uae30\ud654\ub85c\ub294, \uac1d\uccb4 \ub4f1\ub85d\ud558\uae30 , \ub370\uc774\ud130 \uc0dd\uc131 \uc900\ube44 , \ub610\ub294 \ub2e4\ub978 \ubaa8\ub4dc\uc640\uc758 \ud1b5\uc2e0 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ub9ac\uc2a4\ub108\ub4e4\uc740 @EventBusSubscriber(bus = Bus.MOD) \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uac70\ub098 \ubaa8\ub4dc\uc758 \uc0dd\uc131\uc790\uc5d0\uc11c \ub4f1\ub85d\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4: @Mod.EventBusSubscriber(modid = \"mymod\", bus = Mod.EventBusSubscriber.Bus.MOD) public class MyModEventSubscriber { @SubscribeEvent static void onCommonSetup(FMLCommonSetupEvent event) { ... } } @Mod(\"mymod\") public class MyMod { public MyMod() { FMLModLoadingContext.get().getModEventBus().addListener(this::onCommonSetup); } private void onCommonSetup(FMLCommonSetupEvent event) { ... } } Warning \ub300\ubd80\ubd84\uc758 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\ub4e4\uc740 \ubcd1\ub82c\uc801\uc73c\ub85c \ubc29\uc1a1\ub429\ub2c8\ub2e4: \ubaa8\ub4e0 \ubaa8\ub4dc\ub4e4\uc740 \ub3d9\uc2dc\uc5d0 \uac19\uc740 \uc774\ubca4\ud2b8\uc5d0 \ubc18\uc751\ud569\ub2c8\ub2e4. \ubaa8\ub4dc\ub4e4\uc740 \ub2e4\ub978 \ubaa8\ub4dc\uc758 API \ub610\ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc2dc\uc2a4\ud15c\uc5d0 \uc811\uadfc\ud560 \ub54c, \uc2a4\ub808\ub4dc \uc548\uc804\uc131\uc744 \uc900\uc218\ud574\uc57c\ub9cc \ud569\ub2c8\ub2e4. ParallelDispatchEvent#enqueueWork \ub97c \uc774\uc6a9\ud574 \ucf54\ub4dc \uc2e4\ud589\uc744 \uc608\uc57d\ud558\uc5ec \ub098\uc911\uc5d0 \uc2e4\ud589\ub418\ub3c4\ub85d \ud558\uc138\uc694.","title":"\ubaa8\ub4dc \uc0dd\uba85\uc8fc\uae30"},{"location":"concepts/lifecycle/#_2","text":"\ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ubca4\ud2b8\ub4e4\uc740 \ubaa8\ub4dc \uc778\uc2a4\ud134\uc2a4 \ucd08\uae30\ud654 \uc774\ud6c4\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub4e4\uc758 \uc885\ub958\ub294 NewRegistryEvent \uadf8\ub9ac\uace0 RegistryEvent$Register \uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub4e4\uc740 \ubaa8\ub4dc\ub4e4\uc744 \ubd88\ub7ec\uc62c\ub54c \ub3d9\uae30\uc801\uc73c\ub85c \ubc29\uc1a1\ub429\ub2c8\ub2e4. NewRegistryEvent \uc774\ubca4\ud2b8\ub294 \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc774 \uc9c1\uc811 \ub9cc\ub4e0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c RegistryBuilder \ub97c \uc0ac\uc6a9\ud574 \ub4f1\ub85d\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. RegistryEvent$Register<?> \uc774\ubca4\ud2b8\ub294 \uac1d\uccb4\ub4e4\uc744 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ud560 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 \uac01 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub2f9 \ud55c\ubc88\uc529 \ubc29\uc1a1\ub429\ub2c8\ub2e4, \uc774\ub294 \uac1c\ubc1c\uc790\uac00 \uc9c1\uc811 \ub4f1\ub85d\ud55c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub3c4 \ud3ec\ud568\ub429\ub2c8\ub2e4.","title":"\ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ubca4\ud2b8"},{"location":"concepts/lifecycle/#_3","text":"\ub9cc\uc57d \uac8c\uc784\uc774 \ub370\uc774\ud130 \uc0dd\uc131\uae30 \ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc5b4 \uc2e4\ud589\ub418\uc5c8\ub2e4\uba74, GatherDataEvent \uac00 \uac00\uc7a5 \ub9c8\uc9c0\ub9c9\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 \ubaa8\ub4dc\ub4e4\uc758 \ub370\uc774\ud130 \uc81c\uacf5\uc790\ub97c \ub370\uc774\ud130 \uc0dd\uc131\uae30\uc5d0 \ub4f1\ub85d\ud560\ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub610\ud55c \uc774 \uc774\ubca4\ud2b8\ub294 \ub3d9\uae30\uc801\uc73c\ub85c \ubc29\uc1a1\ub429\ub2c8\ub2e4.","title":"\ub370\uc774\ud130 \uc0dd\uc131"},{"location":"concepts/lifecycle/#_4","text":"FMLCommonSetupEvent \uc774\ubca4\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub77c\uc774\uc5b8\ud2b8, \uadf8\ub9ac\uace0 \uc11c\ubc84 \uc0ac\uc774\ub4dc\uc5d0 \uacf5\ud1b5\uc801\uc73c\ub85c \uc218\ud589\ub420 \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \uc608\ub85c \uce90\ud328\ube4c\ub9ac\ud2f0 \ub4f1\ub85d\uc774 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc77c\ubc18 \ucd08\uae30\ud654"},{"location":"concepts/lifecycle/#_5","text":"\uc0ac\uc774\ub4dc \ucd08\uae30\ud654 \uc774\ubca4\ud2b8\ub294 \uac01\uac01 \uc54c\ub9de\ub294 \ubb3c\ub9ac \uc0ac\uc774\ub4dc \uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4: FMLClientSetupEvent \ub294 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0, FMLDedicatedServerSetupEvent \ub294 \uc804\uc6a9 \uc11c\ubc84\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud0a4\ubc14\uc778\ub4dc \ub4f1\ub85d\uacfc \uac19\uc740 \uc0ac\uc774\ub4dc \uc804\uc6a9 \ucd08\uae30\ud654\ub97c \uc9c4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc0ac\uc774\ub4dc \ucd08\uae30\ud654"},{"location":"concepts/lifecycle/#intermodcomms","text":"\uc774 \uc0dd\uba85\uc8fc\uae30 \ub2e8\uacc4\uc5d0\uc11c\ub294 \ubaa8\ub4dc\ub07c\ub9ac \uba54\uc138\uc9c0\ub97c \ubcf4\ub0b4 \ubaa8\ub4dc\uac04 \ud638\ud658\uc131\uc744 \uc720\uc9c0\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774\ub54c \ubc29\uc1a1\ub418\ub294 \uc774\ubca4\ud2b8\ub294 InterModEnqueueEvent \uc640 InterModProcessEvent \uac00 \uc788\uc2b5\ub2c8\ub2e4. InterModComms \uc758 \uc5ed\ud560\uc740 \ubaa8\ub4dc \ud1b5\uc2e0\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uba54\uc138\uc9c0\ub97c \ubcf4\uc720\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc774 \ud074\ub798\uc2a4\uc758 \uba54\uc11c\ub4dc\ub4e4\uc740 ConcurrentMap \uc744 \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 \ubcd1\ub82c\uc801\uc73c\ub85c \ubc29\uc1a1\ub418\ub294 \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\uc5d0\uc11c \ud638\ucd9c\ud558\uc5ec\ub3c4 \uc548\uc804\ud569\ub2c8\ub2e4. InterModEnqueueEvent \ub3c4\uc911 InterModComms#sendTo \ub97c \uc0ac\uc6a9\ud574 \ub2e4\ub978 \ubaa8\ub4dc\uc5d0 \uba54\uc138\uc9c0\ub97c \uc804\uc1a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. InterModComms#sendTo \uc640 \ub3d9\uc77c\ud55c \uc774\ub984\uc744 \uac00\uc9c4 \uba54\uc11c\ub4dc\uac00 \uc5ec\ub7ff \uc788\ub294\ub370, \uc774 \uba54\uc11c\ub4dc\ub4e4\uc740 \uba54\uc138\uc9c0\ub97c \ubc1b\uc744 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514, \uba54\uc138\uc9c0\ub4e4\uc744 \uad6c\ubd84\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 \ud0a4, \uba54\uc138\uc9c0\uc758 \ub370\uc774\ud130\ub97c \uacf5\uae09\ud558\ub294 Supplier \uc785\ub2c8\ub2e4. \ucd94\uac00\uc801\uc73c\ub85c \uba54\uc138\uc9c0 \uc1a1\uc2e0\uc790\ub97c \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\uc73c\ub098, \uae30\ubcf8\uac12\uc73c\ub85c\ub294 \uba54\uc138\uc9c0\ub97c \ubcf4\ub0b4\ub294 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514 \uc785\ub2c8\ub2e4. \ub610, InterModProcessEvent \ub3c4\uc911 InterModComms#getMessages \ub97c \uc0ac\uc6a9\ud574 \ubc1b\uc740 \ubaa8\ub4e0 \uba54\uc138\uc9c0\ub4e4\uc744\uc758 \ud750\ub984(Stream)\uc744 \ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c \uc804\ub2ec\ud558\ub294 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514\ub294 \uac70\uc758 \uc5b8\uc81c\ub098 \uc774 \uc774 \uba54\uc11c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ubaa8\ub4dc\uc758 \uac83\uc785\ub2c8\ub2e4. \ucd94\uac00\uc801\uc73c\ub85c Predicate \ub97c \uc804\ub2ec\ud558\uc5ec \uba87\uba87 \uba54\uc138\uc9c0\ub97c \ud544\ud130\ub9c1 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 Stream<IMCMessage> \ub97c \ubc18\ud658\ud569\ub2c8\ub2e4, IMCMessage \ub294 \ub370\uc774\ud130\ub97c \ubcf4\ub0b8 \uc1a1\uc2e0\uc790, \uc218\uc2e0\uc790, \ub370\uc774\ud130\uc758 \ud0a4, \ub9c8\uc9c0\ub9c9\uc73c\ub85c \uba54\uc138\uc9c0\uc758 \ub370\uc774\ud130\ub97c \ub2f4\uace0 \uc788\uc2b5\ub2c8\ub2e4. Note \uadf8\uc678\uc5d0\ub3c4 \ubaa8\ub4dc \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131 \uc9c1\ud6c4, \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub418\uae30 \uc774\uc804\uc5d0 \ubc29\uc1a1\ub418\ub294 FMLConstructModEvent \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\uc640 InterModComms \uc774\ud6c4\uc5d0 \ubc29\uc1a1\ub418\uc5b4 \ubaa8\ub4dc\ub97c \uc644\uc804\ud788 \ubd88\ub7ec\uc654\uc74c\uc744 \uc54c\ub9ac\ub294 FMLLoadCompleteEvent \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8\uac00 \uc788\uc2b5\ub2c8\ub2e4.","title":"InterModComms"},{"location":"concepts/registries/","text":"\ub808\uc9c0\uc2a4\ud2b8\ub9ac \ub808\uc9c0\uc2a4\ud2b8\ub9ac \ub4f1\ub85d\uc740 \ubaa8\ub4dc\uc5d0\uc11c \ucd94\uac00\ud558\ub294 \uac1d\uccb4\ub97c \uac8c\uc784\uc774 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uacfc\uc815\uc785\ub2c8\ub2e4. \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\ub294 \uac83\uc740 \ub9e4\uc6b0 \uc911\uc694\ud55c\ub370, \ub9cc\uc57d \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 \uac8c\uc784\uc740 \uc774 \uac1d\uccb4\ub4e4\uc758 \uc874\uc7ac\ub97c \uc54c\uc9c0 \ubabb\ud558\uba70 \uc608\uae30\uce58 \ubabb\ud55c \ub3d9\uc791\uc744 \ud558\uac70\ub098 \ud295\uae38 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84 \ub4f1\ub85d\ub418\uc5b4\uc57c \ud558\ub294 \uac1d\uccb4\ub4e4\uc740 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0\uc11c \uad00\ub9ac\ud569\ub2c8\ub2e4. \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 Map \uc640 \ube44\uc2b7\ud55c \uac1d\uccb4\uc785\ub2c8\ub2e4. \ud3ec\uc9c0\ub294 \ub9ac\uc18c\uc2a4 \uc704\uce58 \ub97c Key\ub85c \uc0ac\uc6a9\ud558\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac1d\uccb4\ub4e4\uc744 \ub4f1\ub85d\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 ResourceLocation \uc744 \uac1d\uccb4\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\ucc98\ub7fc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac1d\uccb4\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc740 #getRegistryName / #setRegistryName \ub97c \ud1b5\ud574 \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c #setRegistryName \uc740 \uc624\uc9c1 \ud55c\ubc88\ub9cc \ud638\ucd9c\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4; \ub450\ubc88 \ud638\ucd9c\ud560 \uc2dc \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\ub2c8 \ud558\uc9c0 \ub9c8\uc138\uc694. \ubaa8\ub4e0 \ub4f1\ub85d\ub420 \uc218 \uc788\ub294 \uac1d\uccb4\ub4e4\uc740 \uc54c\ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc874\uc7ac\ud569\ub2c8\ub2e4. \ud3ec\uc9c0\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \ubaa8\ub4e0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \ubcf4\ub824\uba74 ForgeRegistries \ud074\ub798\uc2a4\ub97c \ucc38\uc870\ud558\uc138\uc694. \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub41c \ubaa8\ub4e0 \uac1d\uccb4\ub4e4\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc740 \ubb34\uc870\uac74 \uace0\uc720\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc11c\ub85c \ub2e4\ub978 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc788\ub294 \uac1d\uccb4\ub4e4\uc740 \uac19\uc740 \uc774\ub984\uc744 \uac00\uc9c0\uace0 \uc788\uc5b4\ub3c4 \ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, Block \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc640 Item \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 \uac01\uac01 example:thing \uc774\ub77c\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc744 \uac00\uc9c4 \uac1d\uccb4\ub97c \uac00\uc9c0\uace0 \uc788\uc5b4\ub3c4 \uc774\ub984\uc774 \uacb9\uce58\ub294 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 Block 2\uac1c, \ub610\ub294 Item 2\uac1c\uac00 \uac19\uc740 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc73c\ub85c \ub4f1\ub85d\ub420 \uacbd\uc6b0, \ub450\ubc88\uc9f8\ub85c \ub4f1\ub85d\ub41c \uac83\uc774 \uccab\ubc88\uc9f8\ub85c \ub4f1\ub85d\ub41c \uac83\uc744 \ub36e\uc5b4\uc50c\uc6b8 \uac83\uc785\ub2c8\ub2e4. \uac1d\uccb4 \ub4f1\ub85d\ud558\uae30 \uac1d\uccb4\ub97c \uc62c\ubc14\ub974\uac8c \ub4f1\ub85d\ud558\ub294 \ubc29\ubc95\uc5d0\ub294 2\uac00\uc9c0\uac00 \uc788\ub294\ub370, DeferredRegister \ud074\ub798\uc2a4\uc640 RegistryEvent$Register \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8 \uc785\ub2c8\ub2e4. DeferredRegister DeferredRegister \ub294 \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\ub294 \uc0c8\ub85c\uc6b4, \uadf8\ub9ac\uace0 \ubb38\uc11c\ud654\ub41c \ubc29\uc2dd\uc785\ub2c8\ub2e4. \uc774\ub294 \uac04\ub2e8\ud558\uac8c \uc815\uc801 \ucd08\uae30\ud654\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ud574\uc90d\ub2c8\ub2e4. DeferredRegister \ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\uc2dc\ud0ac \uac1d\uccb4\ub4e4\uc744 \uacf5\uae09\ud558\ub294 \uacf5\uae09\uc790\ub4e4\uc744 \ub9ac\uc2a4\ud2b8\uc5d0 \uc800\uc7a5\ud558\uace0, \uc54c\ub9de\uc740 RegistryEvent$Regiser \uc774\ubca4\ud2b8 \ub3c4\uc911\uc5d0 \ub4f1\ub85d\ud569\ub2c8\ub2e4. \ubaa8\ub4dc\uc5d0\uc11c \ube14\ub85d\uc744 \ub4f1\ub85d\ud558\ub294 \uc608\uc2dc\uc785\ub2c8\ub2e4: //\ube14\ub85d\ub4e4\uc744 \ub4f1\ub85d\ud558\ub294 DeferredRegister \uc778\uc2a4\ud134\uc2a4 \ub9cc\ub4e4\uae30 private static final DeferredRegister<Block> BLOCKS = DeferredRegister.create(ForgeRegistries.BLOCKS, MODID); //DeferredRegister \uc778\uc2a4\ud134\uc2a4\uc5d0 \ube14\ub85d \uac1d\uccb4\ub97c \uacf5\uae09\ud558\ub294 \uacf5\uae09\uc790 \ub4f1\ub85d\ud558\uae30 public static final RegistryObject<Block> ROCK_BLOCK = BLOCKS.register(\"rock\", () -> new Block(BlockBehaviour.Properties.of(Material.STONE))); public ExampleMod() { //DeferredRegister \uac00 RegistryEvent$Register \uc5d0 \ubc18\uc751\ud560 \uc218 \uc788\ub3c4\ub85d \uc54c\ub9de\uc740 \uc774\ubca4\ud2b8 \ubc84\uc2a4 \uc124\uc815\ud558\uae30 BLOCKS.register(FMLJavaModLoadingContext.get().getModEventBus()); } Register \uc774\ubca4\ud2b8 RegistryEvent \ub4e4\uc740 \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\ub294 \ub610 \ub2e4\ub978 \ubc29\ubc95\uc73c\ub85c, \ub354\uc6b1 \uc720\uc5f0\ud558\uac8c \uac1d\uccb4\ub4e4\uc744 \ub4f1\ub85d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8 \ub4e4\uc740 \ubaa8\ub4dc\ub4e4\uc758 \uba54\uc778 \ud074\ub798\uc2a4 \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131\ud560\ub54c\uc640 \uc124\uc815 \ud30c\uc77c\uc744 \ubd88\ub7ec\uc62c\ub54c \uc0ac\uc774\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uac1d\uccb4\ub97c \ub4f1\ub85d\ud560\ub54c \uc0ac\uc6a9\ud558\ub294 \uc774\ubca4\ud2b8\ub294 RegistryEvent$Register<T> \uc785\ub2c8\ub2e4. \ud0c0\uc785 \ub9e4\uac1c\ubcc0\uc218 T \ub294 \ub4f1\ub85d\ub418\ub294 \uac1d\uccb4\ub4e4\uc758 \ud0c0\uc785\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\ubca4\ud2b8\uc5d0\uc11c #getRegistry \ub97c \ud638\ucd9c\ud558\uc2dc\uba74, #register \ub098 #registerAll \ub85c \uac1d\uccb4\ub97c \ub4f1\ub85d\ud560 \uc218 \uc788\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \ubc18\ud658\ub429\ub2c8\ub2e4. \ub4f1\ub85d \uc608\uc2dc(\uc774 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \ubb34\uc870\uac74 \ubaa8\ub4dc \ubc84\uc2a4 \uc5d0 \ub4f1\ub85d\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4): @SubscribeEvent public void registerBlocks(RegistryEvent.Register<Block> event) { event.getRegistry().registerAll(new Block(...), new Block(...), ...); } \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc544\ub2cc \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4 \ubc14\ub2d0\ub77c\ucf54\ub4dc\uc758 \uba87\uba87 \ud2b9\uc131 \ub54c\ubbc4\uc5d0, \ud3ec\uc9c0\uac00 \ubaa8\ub4e0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \uac10\uc300 \uc21c \uc5c6\uc2b5\ub2c8\ub2e4. RecipeType \uacfc \uac19\uc740 \uc815\uc801\uc774\ub77c\uc11c \uc0ac\uc6a9\ud574\ub3c4 \uc548\uc804\ud55c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub098, ConfiguredFeature \uc640 \uac19\uc740 \ub3d9\uc801 \ub808\uc9c0\uc2a4\ud2b8\ub9ac, \ub610\ub294 \uc6d4\ub4dc\uc820 \uad00\ub828\ub41c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4\uc774 \uc788\uc2b5\ub2c8\ub2e4, \uc774 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4\uc740 \ubcf4\ud1b5 JSON \uc744 \ud1b5\ud574 \uad00\ub9ac \ubc0f \ub4f1\ub85d\uc744 \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ud558\ub294 \uac83\uc740 \ub2e4\ub978 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uac1d\uccb4\uac00 \ud544\uc694\ub85c \ud560\ub54c\ub9cc \ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. DeferredRegister#create \ub294 \ub3d9\uba85\uc758 \uba54\uc11c\ub4dc, \ub610\ub294 \uc624\ubc84\ub85c\ub4dc\uac00 \uc5ec\ub7ec\uac1c \uc788\ub294\ub370, \uadf8\uc911 RegistryObject \ub4e4\uc774 \ub4f1\ub85d\ub420 \ubc14\ub2d0\ub77c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \ud0a4\ub97c \ubc1b\ub294 \uac83\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ub9cc\ub4e0 DeferredRegister \uc758 \uc778\uc2a4\ud134\uc2a4\ub294 \ub2e4\ub978 \uc778\uc2a4\ud134\uc2a4\ub4e4\uacfc \ub3d9\uc77c\ud55c \ubc29\uc2dd\uc73c\ub85c \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\uac70\ub098 \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ub4f1\ub85d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. private static final DeferredRegister<RecipeType<?>> REGISTER = DeferredRegister.create(Registry.RECIPE_TYPE_REGISTRY, \"examplemod\"); // RecipeType \uc740 \uc778\ud130\ud398\uc774\uc2a4\uc774\uae30 \ub54c\ubb38\uc5d0, \uc775\uba85 \ud074\ub798\uc2a4\ub97c \uc0dd\uc131\ud558\uc5ec \ub4f1\ub85d\ud569\ub2c8\ub2e4 // \ubc14\ub2d0\ub77c\uc5d0\uc11c\ub294 RecipeType \uc758 #toString \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud558\ub294\ub370, \uc774\ub294 \ub514\ubc84\uadf8 \uc6a9\ub3c4\uc774\uae30 \ub54c\ubb38\uc5d0 \uc774 \uc608\uc81c\uc5d0\uc11c\ub294 \uac74\ub108\ub6f0\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4 // \uc608\uc81c ExampleRecipe public static final RegistryObject<RecipeType<ExampleRecipe>> EXAMPLE_RECIPE_TYPE = REGISTER.register(\"example_recipe_type\", () -> new RecipeType<>() {}); Note \uba87\uba87 \ud074\ub798\uc2a4\ub4e4\uc740 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uadf8 \ub300\uc2e0, \uadf8 \ud074\ub798\uc2a4\ub4e4\uc758 \uc885\ub958\ub97c \uc0c1\uc9d5\ud558\ub294 *Type \ud074\ub798\uc2a4\uac00 \ub300\uc2e0 \ub4f1\ub85d\ub418\uc5b4\uc57c \ud558\uba70, \uc774 *Type \ud074\ub798\uc2a4\ub294 \uc804\uc790\uc758 \ud074\ub798\uc2a4\uc758 \uc0dd\uc131\uc790\uc5d0\uc11c \uc0ac\uc6a9\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8 \uc608\uc2dc\ub85c, BlockEntity \ub294 BlockEntityType \ub97c, \uadf8\ub9ac\uace0 Entity \ub294 EntityType \uc744 \ub300\uc2e0 \ub4f1\ub85d\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774 *Type \ud074\ub798\uc2a4\ub4e4\uc740 \uc54c\ub9de\ub294 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\ub294 \ud329\ud1a0\ub9ac\uc785\ub2c8\ub2e4. \uc774 \ud329\ud1a0\ub9ac\ub4e4\uc740 *Type$Builder \ud074\ub798\uc2a4\ub97c \uc774\uc6a9\ud574 \uc0dd\uc131\ub429\ub2c8\ub2e4, \uc544\ub798 REGISTER \ub294 DeferredRegister<BlockEntityType> \uc785\ub2c8\ub2e4. public static final RegistryObject<BlockEntityType<ExampleBlockEntity>> EXAMPLE_BLOCK_ENTITY = REGISTER.register( \"example_block_entity\", () -> BlockEntityType.Builder.of(ExampleBlockEntity::new, EXAMPLE_BLOCK.get()).build(null) ); \ub4f1\ub85d\ub41c \uac1d\uccb4 \ucc38\uc870\ud558\uae30 \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\uc2e4\ub54c \uc774\ub97c \ud2b9\uc815 \ud544\ub4dc\uc5d0 \uc800\uc7a5\ud558\uba74 \uc548\ub429\ub2c8\ub2e4, \uc54c\ub9de\ub294 RegistryEvent$Register<T> \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub420\ub54c \ub9c8\ub2e4 \uc0c8\ub85c \ub9cc\ub4e4\uc5b4 \uc9c0\uace0 \ub4f1\ub85d\ub418\uc5b4\uc57c \ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uc774\ub294 \ucd94\ud6c4\uc5d0 \ud3ec\uc9c0\uc5d0\uc11c \ub3d9\uc801\uc73c\ub85c \ubaa8\ub4dc\ub97c \ud65c\uc131\ud654/\ube44\ud65c\uc131\ud654\ud558\uae30 \uc704\ud568\uc785\ub2c8\ub2e4. \ub4f1\ub85d\ub418\ub294 \uac1d\uccb4\ub4e4\uc740 \ubb34\uc870\uac74 RegistryObject \ub610\ub294 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\ub294 \ud544\ub4dc\ub97c \ud1b5\ud558\uc5ec \ucc38\uc870\ub418\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4. RegistryObject \ub85c \ucc38\uc870\ud558\uae30 RegistryObject \ub4e4\uc740 \ub4f1\ub85d\ub41c \uac1d\uccb4\ub4e4\uc758 \ucc38\uc870\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc740 \uac1d\uccb4\uc5d0\ub294 \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. DeferredRegister \ub97c \ud1b5\ud574 \ub4f1\ub85d\ud558\uc2dc\uba74 RegistryObject \uc758 \uc778\uc2a4\ud134\uc2a4\uc758 \ucc38\uc870\uac00 \ubc18\ud658\ub429\ub2c8\ub2e4. @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uacfc RegistryObject \ub4e4\uc740 \uc54c\ub9de\ub294 RegistryEvent$Register<T> \uac00 \ubc29\uc1a1\ub420\ub54c \uac31\uc2e0\ub429\ub2c8\ub2e4. RegistryObject \uc778\uc2a4\ud134\uc2a4\uc758 \ucc38\uc870\ub97c \ub2e4\ub978 \ubc29\ubc95\uc73c\ub85c \uc5bb\uae30 \uc704\ud574\uc11c\ub294 RegistryObject#create \ub97c \ub4f1\ub85d\ub41c \uac1d\uccb4\uc758 ResourceLocation \uacfc \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 IForgeRegistry \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud638\ucd9c\ud558\uc138\uc694. \ucee4\uc2a4\ud140 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 \ub4f1\ub85d\ub420 \uac1d\uccb4\ub4e4\uc758 \ud074\ub798\uc2a4\ub97c \uacf5\uae09\ud558\ub294 \uacf5\uae09\uc790\ub97c \uc774\uc6a9\ud558\uc5ec RegistryObject \uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. RegistryObject \ub97c public static final \ud544\ub4dc\ub97c \uc774\uc6a9\ud574 \uc800\uc7a5\ud558\uace0 #get \ud568\uc218\ub97c \uc774\uc6a9\ud574 \ub4f1\ub85d\ub41c \uac1d\uccb4\uc5d0 \uc811\uadfc\ud558\uc138\uc694. RegistryObject \uc0ac\uc6a9 \uc608\uc2dc: public static final RegistryObject<Item> BOW = RegistryObject.create(new ResourceLocation(\"minecraft:bow\"), ForgeRegistries.ITEMS); // \uc544\ub798 \uc608\uc2dc\uc5d0\uc11c\ub294 'neomagicae:mana_type' \uc740 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc774\uba70, 'neomagicae:coffeinum' \uc774 \ud574\ub2f9 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub41c \uac1d\uccb4\ub77c \uac00\uc815\ud569\ub2c8\ub2e4 public static final RegistryObject<ManaType> COFFEINUM = RegistryObject.create(new ResourceLocation(\"neomagicae\", \"coffeinum\"), new ResourceLocation(\"neomagicae\", \"mana_type\"), \"neomagicae\"); @ObjectHolder \uc0ac\uc6a9\ud558\uae30 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc744 \ud074\ub798\uc2a4 \ub610\ub294 \ud544\ub4dc\uc5d0 \ub2ec\uace0 ResourceLocation \uc744 \ucd94\ub860\ud574 \ub0b4\uae30 \ucda9\ubd84\ud55c \uc815\ubcf4\ub97c \uc81c\uacf5\ud558\uc5ec, public static \ud544\ub4dc\uc5d0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \ub4f1\ub85d\ub41c \uac1d\uccb4\ub4e4\uc744 \uc8fc\uc785\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. @ObjectHolder \ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: \ub9cc\uc57d \ud074\ub798\uc2a4\uc5d0 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\ub2e4\uba74, \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \ub97c \uadf8 \ud074\ub798\uc2a4\uc758 \ud544\ub4dc\ub4e4\uc758 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uae30\ubcf8\uac12\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud074\ub798\uc2a4\uc5d0 @Mod \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\ub2e4\uba74, modid \ub97c \uadf8 \ud074\ub798\uc2a4\uc758 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uae30\ubcf8\uac12\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ud544\ub4dc\uac00 \ub2e4\uc74c \uc870\uac74\ub4e4\uc744 \ucda9\uc871\uc2dc\ud0a8\ub2e4\uba74 \uc8fc\uc785\uc774 \uc774\ub8e8\uc5b4 \uc9d1\ub2c8\ub2e4: \ucd5c\uc18c\ud55c public static \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc744\ub54c; \ub2e4\uc74c\uc911 \ud558\ub098\ub77c\ub3c4 \ucc38\uc77c\ub54c: \ud544\ub4dc\ub97c \uac10\uc2f8\ub294 \ud074\ub798\uc2a4 \uc5d0 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\uc73c\uba70 \ud544\ub4dc\uac00 final \uc774\ub77c\uba74: \ud544\ub4dc\uc758 \uc774\ub984\uc744 \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \uacbd\ub85c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud074\ub798\uc2a4\uc758 ObjectHolder \uc758 value \ub97c \uc0c1\uc18d\ubc1b\uc544 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub97c \ucc3e\uc744 \uc218\ub3c4, \uc0c1\uc18d \ubc1b\uc744 \uc218\ub3c4 \uc5c6\ub2e4\uba74 \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ud544\ub4dc \uc5d0 @ObjectHolder \uac00 \uc788\uc744\ub54c: \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \uacbd\ub85c\ub294 \ud544\ub4dc\uc758 \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \uac12\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uc5b4\ub178\ud14c\uc774\uc158\uc5d0\uc11c \uc9c0\uc815\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 \ud074\ub798\uc2a4\uc758 \uc5b4\ub178\ud14c\uc774\uc158\uc5d0\uc11c \uc0c1\uc18d \ubc1b\uc2b5\ub2c8\ub2e4. \ud544\ub4dc\uc758 \ud0c0\uc785\uc774\ub098, \ud544\ub4dc\uc758 \ud0c0\uc785\uc758 \uc870\uc0c1\uc911 \uc77c\uce58\ud558\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\ub2e4\uba74(\uc608: Item \ub610\ub294 ArrowItem \uc740 Item \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc77c\uce58\ud55c\ub2e4); \ub9cc\uc57d \ud544\ub4dc\uc5d0 \uc77c\uce58\ud558\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\ub2e4\uba74 \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ucd94\ub860\ub41c ResourceLocation \uc774 \ubbf8\uc644\uc131\uc774\uac70\ub098, \ubb38\uc81c\uac00 \uc788\ub2e4\uba74 (\ud5c8\uc6a9\ub418\uc9c0 \uc54a\uc740 \ubb38\uc790\uac00 \uc788\ub2e4\uba74) \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ubb38\uc81c\uac00 \uc5c6\uac70\ub098, \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 \ud544\ub4dc\uc5d0 \ub4f1\ub85d\ub41c \uac1d\uccb4\uac00 \uc8fc\uc785\ub420 \uac83\uc785\ub2c8\ub2e4. \ub9cc\uc57d \uc704 \uc870\uac74\uc911 \ud558\ub098\ub77c\ub3c4 \ub9cc\uc871\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc544\ubb34 \uc77c\ub3c4 \uc77c\uc5b4\ub098\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. (\uadf8\ub9ac\uace0 \uc774\uc5d0 \uad00\ud55c \uba54\uc138\uc9c0\uac00 \ucd9c\ub825\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.) \uc704 \uc870\uac74\uc744 \ucda9\uc871\ud558\ub294 @ObjectHolder \uc8fc\uc785 \ub300\uc0c1 \ud544\ub4dc\ub294 \uadf8\uc5d0 \uc54c\ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 RegistryEvent$Register \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub420\ub54c \uac1d\uccb4\uac00 \uc8fc\uc785\ub429\ub2c8\ub2e4. \ub610\ud55c RegistryObject \ub4e4\ub3c4 \uc774\ub54c \uac31\uc2e0 \ub429\ub2c8\ub2e4. Note \ub9cc\uc57d \ucd94\ub860\ub41c \ub9ac\uc18c\uc2a4 \uc704\uce58\ub97c \ud1b5\ud574 \uac1d\uccb4\ub97c \ucc38\uc870\ud558\uc5ec \uc774\ub97c \ud544\ub4dc\uc5d0 \uc8fc\uc785\ud558\ub824\uace0 \ud560 \ub54c, \uadf8 \uac1d\uccb4\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc774\uc5d0 \uad00\ud55c \uba54\uc138\uc9c0\uac00 \ucd9c\ub825\ub420 \uac83\uc774\uba70 \ud544\ub4dc\uc5d0 \uac12\uc774 \uc8fc\uc785\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc704\uc5d0 \uae30\uc220\ub41c \uaddc\uce59\ub4e4\uc774 \ubcf5\uc7a1\ud574 \ubcf4\uc774\uc2e4 \uc218 \uc788\uc73c\ub2c8, \uba87\uac00\uc9c0 \uc608\uc81c\ub97c \uc900\ube44\ud574 \ubcf4\uc558\uc2b5\ub2c8\ub2e4: @ObjectHolder(\"minecraft\") // \uc0c1\uc18d \uac00\ub2a5\ud55c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4: \"minecraft\" class AnnotatedHolder { public static final Block diamond_block = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc5c6\uc74c, [public static final] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // Block \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [Block] // \ub9ac\uc18c\uc2a4\uc758 \uacbd\ub85c\ub294: \"diamond_block\" // \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c. // \uadf8\ub807\uae30\uc5d0, \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud074\ub798\uc2a4 \uc5b4\ub178\ud14c\uc774\uc158\uc73c\ub85c \ubd80\ud130 \uc0c1\uc18d\ubc1b\uc74c: \"minecraft\" // \uc8fc\uc785 \ub300\uc0c1: [Block] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \"minecraft:diamond_block\" @ObjectHolder(\"ambient.cave\") public static SoundEvent ambient_sound = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // SoundEvent \ub294 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [SoundEvent] // \ub9ac\uc18c\uc2a4\uc758 \uacbd\ub85c\ub294 \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \uc784: \"ambient.cave\" // \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c. // \uadf8\ub807\uae30\uc5d0, \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud074\ub798\uc2a4 \uc5b4\ub178\ud14c\uc774\uc158\uc73c\ub85c \ubd80\ud130 \uc0c1\uc18d\ubc1b\uc74c: \"minecraft\" // \uc8fc\uc785 \ub300\uc0c1: [SoundEvent] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \"minecraft:ambient.cave\" // [ManaType] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc874\uc7ac\ud55c\ub2e4\uace0 \uac00\uc815\ud569\ub2c8\ub2e4. @ObjectHolder(\"neomagicae:coffeinum\") public static final ManaType coffeinum = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. [final] \uc740 \uc120\ud0dd \uc0ac\ud56d. // ManaType \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [ManaType] (\ucee4\uc2a4\ud140 \ub808\uc9c0\uc2a4\ud2b8\ub9ac) // \ub9ac\uc18c\uc2a4 \uc704\uce58\uac00 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub428: \"neomagicae:coffeinum\" // \uc8fc\uc785 \ub300\uc0c1: [ManaType] \uc758 \"neomagicae:coffeinum\" public static final Item ENDER_PEARL = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc5c6\uc74c, [public static final] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // Item \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [Item]. // \ud544\ub4dc\uc758 \uc774\ub984\uc774 \ub9ac\uc18c\uc2a4\uc758 \uacbd\ub85c\uc784: \"ENDER_PEARL\" -> \"ender_pearl\" // !! ^ \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud544\ub4dc \uc774\ub984, \uc18c\ubb38\uc790\ub85c \uc790\ub3d9\uc73c\ub85c \ubcc0\ud658\ub428. // \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c. // \uadf8\ub807\uae30\uc5d0, \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud074\ub798\uc2a4 \uc5b4\ub178\ud14c\uc774\uc158\uc73c\ub85c \ubd80\ud130 \uc0c1\uc18d\ubc1b\uc74c: \"minecraft\" // \uc8fc\uc785 \ub300\uc0c1: [Item] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \"minecraft:ender_pearl\" @ObjectHolder(\"minecraft:arrow\") public static final ArrowItem arrow = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. [final] \uc740 \uc120\ud0dd \uc0ac\ud56d. // ArrowItem \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // ArrowItem \uc758 \uc870\uc0c1 Item \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [Item] // \ub9ac\uc18c\uc2a4 \uc704\uce58\uac00 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub428: \"minecraft:arrow\" // \uc8fc\uc785 \ub300\uc0c1: [Item] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \"minecraft:arrow\" public static Block bedrock = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc5c6\uc74c, [public static final] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // \uadf8\ub7ec\ub098 \uc5c6\uc74c, \uadf8\ub807\uae30\uc5d0 \uc774 \ud544\ub4dc\ub294 \ubb34\uc2dc\ub428. public static final ItemGroup group = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc5c6\uc74c, [public static final] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // ItemGroup \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // ItemGroup \uc758 \uc870\uc0c1\uc911 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // \uadf8\ub807\uae30\uc5d0, \uc774\ub294 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b4. } class UnannotatedHolder { // \uc774 \ud074\ub798\uc2a4\ub294 @ObjectHolder \uac00 \uc5c6\uc74c. @ObjectHolder(\"minecraft:flame\") public static final Enchantment flame = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. [final] \uc740 \uc120\ud0dd \uc0ac\ud56d.. // Enchantment \ub294 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c:: [Enchantment]. // \ub9ac\uc18c\uc2a4 \uc704\uce58\uac00 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub428: \"minecraft:flame\" // \uc8fc\uc785 \ub300\uc0c1: [Enchantment]\uc758 \"minecraft:flame\" public static final Biome ice_flat = null; // \ud074\ub798\uc2a4\uc5d0 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc5c6\uc74c. // \uadf8\ub807\uae30\uc5d0 \uc774 \ud544\ub4dc\ub294 \ubb34\uc2dc\ub428. @ObjectHolder(\"minecraft:creeper\") public static Entity creeper = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // Entity \ub294 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // Entity \uc758 \uc870\uc0c1\uc911 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // \uadf8\ub807\uae30\uc5d0, \uc774\ub294 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b4. @ObjectHolder(\"levitation\") public static final Potion levitation = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. [final] \uc740 \uc120\ud0dd \uc0ac\ud56d.. // Potion \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [Potion]. // \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \uacbd\ub85c\ub294 \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \"levitation\" \uc784 // \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c. // \ud074\ub798\uc2a4\uc5d0 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc5c6\uc74c. // \uadf8\ub807\uae30\uc5d0, \uc774\ub294 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b4. } \ucee4\uc2a4\ud140 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \ub9cc\ub4e4\uae30 \ubaa8\ub4dc\uc5d0\uc11c \ucee4\uc2a4\ud140 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \ub9cc\ub4e4 \ub54c Map \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4dc\ub294 \uacbd\uc6b0\ub294 \uaf64\ub098 \ud754\ud569\ub2c8\ub2e4; \uadf8\ub7ec\ub098 \uc774\ub294 \uac15\uc81c\uc801\uc73c\ub85c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc758\uc874\uc131\uc744 \ubd80\uc5ec\ud558\uba70 \uc0ac\uc774\ub4dc\uac04\uc758 \ub370\uc774\ud130 \ub3d9\uae30\ud654\ub97c \uc218\ub3d9\uc73c\ub85c \uc2dc\ucf1c \uc8fc\uc5b4\uc57c \ud55c\ub2e4\ub294 \ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ucee4\uc2a4\ud140 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 \uac15\uc81c\uc801\uc778 \uc758\uc874\uc131\uc744 \ud53c\ud558\uace0, \uc790\ub3d9\uc73c\ub85c \ub3d9\uae30\ud654\ub97c \ud574 \uc8fc\uba70(\uc124\uc815\uc2dc \ubcc0\uacbd \uac00\ub2a5) \uad00\ub9ac\ub610\ud55c \uc798 \ud574\uc8fc\ub294 \ucc38 \uc88b\uc740 \ub300\uc548\uc785\ub2c8\ub2e4. \ub4f1\ub85d\ub418\ub294 \uac1d\uccb4\ub4e4\ub3c4 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub2c8 \ub4f1\ub85d \uacfc\uc815\uc774 \ub3d9\uc77c\ud569\ub2c8\ub2e4. \ucee4\uc2a4\ud140 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 NewRegistryEvent \ub610\ub294 DeferredRegister \ub97c \ud1b5\ud574 RegistryBuilder \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4ed\ub2c8\ub2e4. RegistryBuilder \ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \uc774\ub984, \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub420 \uac1d\uccb4\ub4e4\uc758 \ud074\ub798\uc2a4, \uc5ec\ub7ec \uc774\ubca4\ud2b8\ub4e4\uc5d0 \ubc18\uc751\ud560 \ucf5c\ubc31\ub4e4 \ub4f1 \uc5ec\ub7ec\uac00\uc9c0 \uc124\uc815 \uac00\ub2a5\ud55c \uc18d\uc131\ub4e4\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc0c8\ub86d\uac8c \ub9cc\ub4e4\uc5b4\uc9c4 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4\uc740 RegistryManager \uc5d0 NewRegistryEvent \uac00 \ub05d\ub098\uace0 \ub4f1\ub85d\ub429\ub2c8\ub2e4. \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub420 \uac1d\uccb4\uc758 \ud074\ub798\uc2a4\ub294 \ubb34\uc870\uac74 IForgeRegisterEntry \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4, \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub294 #setRegistryName \uacfc #getRegistryName \uba54\uc11c\ub4dc\ub97c \uc815\uc758\ud569\ub2c8\ub2e4. \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ubc14\ub85c \uad6c\ud604\ud558\ub294 \uac83 \ubcf4\ub2e8 ForgeRegistryEntry \ub97c \uc0c1\uc18d\ud558\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4, \uc774 \ud074\ub798\uc2a4\ub294 IForgeRegistryEntry \uc778\ud130\ud398\uc774\uc2a4\uc758 \uae30\ubcf8\uc801\uc778 \uad6c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. #setRegistryName(String) \uc774 \ubb38\uc790\uc5f4\uc744 \uc778\uc790\ub85c \ubc1b\uc544 \ud638\ucd9c\ub420 \ub54c, \ub9cc\uc57d \uadf8 \ubb38\uc790\uc5f4\uc5d0 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\ub2e4\uba74, \uc774\ub294 \uc790\ub3d9\uc73c\ub85c \ud574\ub2f9 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514\ub85c \ucd94\ub860\ub429\ub2c8\ub2e4. \ubaa8\ub4e0 \uc0c8\ub85c \ub9cc\ub4e4\uc5b4\uc9c4 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4 \ub610\ud55c \uc774 \ubc29\ubc95\ub4e4 \uc744 \ud1b5\ud574 \uac1d\uccb4\ub4e4\uc744 \ub4f1\ub85d\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. NewRegistryEvent \uc4f0\uae30 NewRegistryEvent \ub97c \uc0ac\uc6a9\ud560 \ub54c, #create \ub97c RegistryBuilder \ub97c \uc778\uc790\ub85c \ud638\ucd9c\ud558\uba74 Supplier \ub85c \uac10\uc2f8\uc9c4 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \ubc18\ud658\ub429\ub2c8\ub2e4. \uc774 \uac10\uc2f8\uc9c4 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub41c NewRegistryEvent \uac00 \uc644\uc804\ud788 \ub05d\ub09c \uc774\ud6c4 \uc811\uadfc\ud558\uc2e4 \uc218 \uc788\uc73c\uba70, \uadf8 \uc774\uc804\uc5d0 \uc811\uadfc\ud558\uc2e4 \uacbd\uc6b0 null \uc774 \ub300\uc2e0 \ubc18\ud658\ub429\ub2c8\ub2e4. DeferredRegister \uc4f0\uae30 DeferredRegister \ub294, \ub2e4\uc2dc \ub9d0\ud558\uc9c0\ub9cc, \uc704 \uc774\ubca4\ud2b8\ub97c \uc0ac\uc6a9\ud558\ub294 wrapper \uc785\ub2c8\ub2e4. DeferredRegister \ub97c \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uacfc \ubaa8\ub4dc \uc544\uc774\ub514\ub97c \uc778\uc790\ub85c \ubc1b\ub294 \uc624\ubc84\ub85c\ub4dc \uba54\uc11c\ub4dc #create \ub97c \ud1b5\ud574 \uc0dd\uc131\ud558\uace0 \uc774\ub97c \uc0c1\uc218 \ud544\ub4dc\uc5d0 \ud560\ub2f9\ud55c \uc774\ud6c4, DeferredRegister#makeRegistry \ub97c \ud1b5\ud574 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \uc0dd\uc131\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub420 \uac1d\uccb4\uc758 \ud074\ub798\uc2a4\uc640 \uc0dd\uc131\ub420 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \uc18d\uc131 \ubc0f \uc124\uc815\uac12\ub4e4\uc744 \ub2f4\uace0 \uc788\ub294 RegistryBuilder \ub97c \uac10\uc2f8\ub294 Supplier \ub97c \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4. DeferredRegister#makeRegistry \ub294 \uc790\ub3d9\uc73c\ub85c RegistryBuilder#setName \uacfc RegistryBuilder#setType \uc744 \ud638\ucd9c\ud569\ub2c8\ub2e4. \ud574\ub2f9 \uba54\uc11c\ub4dc\ub294 \uc5b8\uc81c\ub4e0\uc9c0 \ubc18\ud658\ub420 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 IForgeRegistry \ub97c Supplier \ub85c \uac10\uc2fc \uac83\uc744 \ub300\uc2e0 \ubc18\ud658\ud569\ub2c8\ub2e4. NewRegistryEvent \uac00 \ub05d\ub098\uae30 \uc774\uc804 \ucee4\uc2a4\ud140 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \ud558\uba74 null d\u3163 \ub300\uc2e0 \ubc18\ud658\ub429\ub2c8\ub2e4. Important DeferredRegister#makeRegistry \ub294 \ubb34\uc870\uac74 DeferredRegister#register \uac00 \ud638\ucd9c\ub418\uc5b4 \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ub4f1\ub85d\ub418\uae30 \uc774\uc804\uc5d0 \ud638\ucd9c\ub418\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4. \ub610\ud55c, #makeRegistry \ub294 #register \ub97c \ud1b5\ud574 \ub4f1\ub85d \ub418\uc5b4\uc57c\ub9cc NewRegistryEvent \uc774\ubca4\ud2b8 \ub3c4\uc911 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 #makeRegistry \ub97c \uba3c\uc800 \ud558\uc2dc\uace0 #register \ub97c \uc774\ud6c4\uc5d0 \ud558\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694. \ub204\ub77d\ub41c \ud56d\ubaa9 \ucc98\ub9ac\ud558\uae30 \uac00\ub054\uc529, \ubaa8\ub4dc\uac00 \uc5c5\ub370\uc774\ud2b8\ub418\uac70\ub098 \uc81c\uac70\ub418\uc5c8\uc744 \ub54c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \uac1d\uccb4\uac00 \uac11\uc790\uae30 \uc5c6\uc5b4\uc9c8 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uac11\uc790\uae30 \uc5c6\uc5b4\uc9c4 \ud56d\ubaa9\uc744 \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc744 \uc138\ubc88\uc9f8 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ubca4\ud2b8\uc778 RegistryEvent$MissingMappings \uc774\ubca4\ud2b8\ub85c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8 \ub3c4\uc911\uc5d0 getMappings \ub97c \ud1b5\ud574 \ud574\ub2f9 \ubaa8\ub4dc\uc758 \ub204\ub77d\ub41c \ub9e4\ud551 \ub9ac\uc2a4\ud2b8\ub97c \ubc1b\uc544\uc62c \uc218 \uc788\uc73c\uba70, #getAllMappings \ub97c \ud1b5\ud574 \uc5b4\ub5a4 \ubaa8\ub4dc\uc5d0\uc11c \uc774 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\ub294\uac00\uc640 \uad00\ub828 \uc5c6\uc774 \ubaa8\ub4e0 \ub9e4\ud551\ub4e4\uc744 \ubc1b\uc544\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \ub204\ub77d\ub41c \ud56d\ubaa9\ub9c8\ub2e4, \uc774 4\uac00\uc9c0 \ubc29\ubc95\uc911 \ud558\ub098\ub97c \uc120\ud0dd\ud558\uc5ec \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud560\uc9c0 \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: \ub3d9\uc791 \uc124\uba85 IGNORE \ub204\ub77d\ub41c \ud56d\ubaa9\uc744 \ubb34\uc2dc\ud558\uace0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \ub9e4\ud551\uc744 \ubc84\ub9bd\ub2c8\ub2e4. WARN \ub85c\uadf8\uc5d0 \uacbd\uace0\ub97c \ub744\uc6c1\ub2c8\ub2e4. FAIL \uc6d4\ub4dc\ub97c \ubd88\ub7ec\uc624\ub294 \uac83\uc744 \ub9c9\uc2b5\ub2c8\ub2e4. REMAP \ub2e4\ub978 \ud56d\ubaa9\uc73c\ub85c \ub300\uccb4\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ub204\ub77d\ub41c \ud56d\ubaa9\uc744 \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc774 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc558\ub2e4\uba74 \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \uc774\uc5d0 \ub300\ud574 \uc54c\ub9ac\ub294 \uae30\ubcf8 \ub3d9\uc791\uc744 \uc218\ud589\ud558\uac8c \ub429\ub2c8\ub2e4. \ud50c\ub808\uc774\uc5b4\ub294 \uc6d4\ub4dc\ub97c \ubd88\ub7ec\uc624\uace0 \uc2f6\uc744 \uac83\uc774\uae30\uc5d0, REMAP \uc744 \uc81c\uc678\ud55c \ub2e4\ub978 \ub3d9\uc791\uc758 \uacbd\uc6b0. \ub204\ub77d\ub41c \ud56d\ubaa9\uc774 \ub2e4\uc2dc \ucd94\uac00\ub420 \uc218 \uc788\uc73c\ub2c8 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \ub2e4\ub978 \uac1d\uccb4\ub4e4\uc774 \ub204\ub77d\ub41c \ud56d\ubaa9\uc744 \ub300\uccb4\ud558\ub294 \uac83\uc744 \ub9c9\uc2b5\ub2c8\ub2e4.","title":"\ub808\uc9c0\uc2a4\ud2b8\ub9ac"},{"location":"concepts/registries/#_1","text":"\ub808\uc9c0\uc2a4\ud2b8\ub9ac \ub4f1\ub85d\uc740 \ubaa8\ub4dc\uc5d0\uc11c \ucd94\uac00\ud558\ub294 \uac1d\uccb4\ub97c \uac8c\uc784\uc774 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uacfc\uc815\uc785\ub2c8\ub2e4. \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\ub294 \uac83\uc740 \ub9e4\uc6b0 \uc911\uc694\ud55c\ub370, \ub9cc\uc57d \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 \uac8c\uc784\uc740 \uc774 \uac1d\uccb4\ub4e4\uc758 \uc874\uc7ac\ub97c \uc54c\uc9c0 \ubabb\ud558\uba70 \uc608\uae30\uce58 \ubabb\ud55c \ub3d9\uc791\uc744 \ud558\uac70\ub098 \ud295\uae38 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84 \ub4f1\ub85d\ub418\uc5b4\uc57c \ud558\ub294 \uac1d\uccb4\ub4e4\uc740 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0\uc11c \uad00\ub9ac\ud569\ub2c8\ub2e4. \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 Map \uc640 \ube44\uc2b7\ud55c \uac1d\uccb4\uc785\ub2c8\ub2e4. \ud3ec\uc9c0\ub294 \ub9ac\uc18c\uc2a4 \uc704\uce58 \ub97c Key\ub85c \uc0ac\uc6a9\ud558\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac1d\uccb4\ub4e4\uc744 \ub4f1\ub85d\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 ResourceLocation \uc744 \uac1d\uccb4\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\ucc98\ub7fc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac1d\uccb4\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc740 #getRegistryName / #setRegistryName \ub97c \ud1b5\ud574 \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c #setRegistryName \uc740 \uc624\uc9c1 \ud55c\ubc88\ub9cc \ud638\ucd9c\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4; \ub450\ubc88 \ud638\ucd9c\ud560 \uc2dc \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\ub2c8 \ud558\uc9c0 \ub9c8\uc138\uc694. \ubaa8\ub4e0 \ub4f1\ub85d\ub420 \uc218 \uc788\ub294 \uac1d\uccb4\ub4e4\uc740 \uc54c\ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc874\uc7ac\ud569\ub2c8\ub2e4. \ud3ec\uc9c0\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \ubaa8\ub4e0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \ubcf4\ub824\uba74 ForgeRegistries \ud074\ub798\uc2a4\ub97c \ucc38\uc870\ud558\uc138\uc694. \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub41c \ubaa8\ub4e0 \uac1d\uccb4\ub4e4\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc740 \ubb34\uc870\uac74 \uace0\uc720\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc11c\ub85c \ub2e4\ub978 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc788\ub294 \uac1d\uccb4\ub4e4\uc740 \uac19\uc740 \uc774\ub984\uc744 \uac00\uc9c0\uace0 \uc788\uc5b4\ub3c4 \ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, Block \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc640 Item \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 \uac01\uac01 example:thing \uc774\ub77c\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc744 \uac00\uc9c4 \uac1d\uccb4\ub97c \uac00\uc9c0\uace0 \uc788\uc5b4\ub3c4 \uc774\ub984\uc774 \uacb9\uce58\ub294 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 Block 2\uac1c, \ub610\ub294 Item 2\uac1c\uac00 \uac19\uc740 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uc73c\ub85c \ub4f1\ub85d\ub420 \uacbd\uc6b0, \ub450\ubc88\uc9f8\ub85c \ub4f1\ub85d\ub41c \uac83\uc774 \uccab\ubc88\uc9f8\ub85c \ub4f1\ub85d\ub41c \uac83\uc744 \ub36e\uc5b4\uc50c\uc6b8 \uac83\uc785\ub2c8\ub2e4.","title":"\ub808\uc9c0\uc2a4\ud2b8\ub9ac"},{"location":"concepts/registries/#_2","text":"\uac1d\uccb4\ub97c \uc62c\ubc14\ub974\uac8c \ub4f1\ub85d\ud558\ub294 \ubc29\ubc95\uc5d0\ub294 2\uac00\uc9c0\uac00 \uc788\ub294\ub370, DeferredRegister \ud074\ub798\uc2a4\uc640 RegistryEvent$Register \uc0dd\uba85\uc8fc\uae30 \uc774\ubca4\ud2b8 \uc785\ub2c8\ub2e4.","title":"\uac1d\uccb4 \ub4f1\ub85d\ud558\uae30"},{"location":"concepts/registries/#deferredregister","text":"DeferredRegister \ub294 \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\ub294 \uc0c8\ub85c\uc6b4, \uadf8\ub9ac\uace0 \ubb38\uc11c\ud654\ub41c \ubc29\uc2dd\uc785\ub2c8\ub2e4. \uc774\ub294 \uac04\ub2e8\ud558\uac8c \uc815\uc801 \ucd08\uae30\ud654\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ud574\uc90d\ub2c8\ub2e4. DeferredRegister \ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\uc2dc\ud0ac \uac1d\uccb4\ub4e4\uc744 \uacf5\uae09\ud558\ub294 \uacf5\uae09\uc790\ub4e4\uc744 \ub9ac\uc2a4\ud2b8\uc5d0 \uc800\uc7a5\ud558\uace0, \uc54c\ub9de\uc740 RegistryEvent$Regiser \uc774\ubca4\ud2b8 \ub3c4\uc911\uc5d0 \ub4f1\ub85d\ud569\ub2c8\ub2e4. \ubaa8\ub4dc\uc5d0\uc11c \ube14\ub85d\uc744 \ub4f1\ub85d\ud558\ub294 \uc608\uc2dc\uc785\ub2c8\ub2e4: //\ube14\ub85d\ub4e4\uc744 \ub4f1\ub85d\ud558\ub294 DeferredRegister \uc778\uc2a4\ud134\uc2a4 \ub9cc\ub4e4\uae30 private static final DeferredRegister<Block> BLOCKS = DeferredRegister.create(ForgeRegistries.BLOCKS, MODID); //DeferredRegister \uc778\uc2a4\ud134\uc2a4\uc5d0 \ube14\ub85d \uac1d\uccb4\ub97c \uacf5\uae09\ud558\ub294 \uacf5\uae09\uc790 \ub4f1\ub85d\ud558\uae30 public static final RegistryObject<Block> ROCK_BLOCK = BLOCKS.register(\"rock\", () -> new Block(BlockBehaviour.Properties.of(Material.STONE))); public ExampleMod() { //DeferredRegister \uac00 RegistryEvent$Register \uc5d0 \ubc18\uc751\ud560 \uc218 \uc788\ub3c4\ub85d \uc54c\ub9de\uc740 \uc774\ubca4\ud2b8 \ubc84\uc2a4 \uc124\uc815\ud558\uae30 BLOCKS.register(FMLJavaModLoadingContext.get().getModEventBus()); }","title":"DeferredRegister"},{"location":"concepts/registries/#register","text":"RegistryEvent \ub4e4\uc740 \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\ub294 \ub610 \ub2e4\ub978 \ubc29\ubc95\uc73c\ub85c, \ub354\uc6b1 \uc720\uc5f0\ud558\uac8c \uac1d\uccb4\ub4e4\uc744 \ub4f1\ub85d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8 \ub4e4\uc740 \ubaa8\ub4dc\ub4e4\uc758 \uba54\uc778 \ud074\ub798\uc2a4 \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131\ud560\ub54c\uc640 \uc124\uc815 \ud30c\uc77c\uc744 \ubd88\ub7ec\uc62c\ub54c \uc0ac\uc774\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4. \uac1d\uccb4\ub97c \ub4f1\ub85d\ud560\ub54c \uc0ac\uc6a9\ud558\ub294 \uc774\ubca4\ud2b8\ub294 RegistryEvent$Register<T> \uc785\ub2c8\ub2e4. \ud0c0\uc785 \ub9e4\uac1c\ubcc0\uc218 T \ub294 \ub4f1\ub85d\ub418\ub294 \uac1d\uccb4\ub4e4\uc758 \ud0c0\uc785\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\ubca4\ud2b8\uc5d0\uc11c #getRegistry \ub97c \ud638\ucd9c\ud558\uc2dc\uba74, #register \ub098 #registerAll \ub85c \uac1d\uccb4\ub97c \ub4f1\ub85d\ud560 \uc218 \uc788\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \ubc18\ud658\ub429\ub2c8\ub2e4. \ub4f1\ub85d \uc608\uc2dc(\uc774 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \ubb34\uc870\uac74 \ubaa8\ub4dc \ubc84\uc2a4 \uc5d0 \ub4f1\ub85d\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4): @SubscribeEvent public void registerBlocks(RegistryEvent.Register<Block> event) { event.getRegistry().registerAll(new Block(...), new Block(...), ...); }","title":"Register \uc774\ubca4\ud2b8"},{"location":"concepts/registries/#_3","text":"\ubc14\ub2d0\ub77c\ucf54\ub4dc\uc758 \uba87\uba87 \ud2b9\uc131 \ub54c\ubbc4\uc5d0, \ud3ec\uc9c0\uac00 \ubaa8\ub4e0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \uac10\uc300 \uc21c \uc5c6\uc2b5\ub2c8\ub2e4. RecipeType \uacfc \uac19\uc740 \uc815\uc801\uc774\ub77c\uc11c \uc0ac\uc6a9\ud574\ub3c4 \uc548\uc804\ud55c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub098, ConfiguredFeature \uc640 \uac19\uc740 \ub3d9\uc801 \ub808\uc9c0\uc2a4\ud2b8\ub9ac, \ub610\ub294 \uc6d4\ub4dc\uc820 \uad00\ub828\ub41c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4\uc774 \uc788\uc2b5\ub2c8\ub2e4, \uc774 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4\uc740 \ubcf4\ud1b5 JSON \uc744 \ud1b5\ud574 \uad00\ub9ac \ubc0f \ub4f1\ub85d\uc744 \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ud558\ub294 \uac83\uc740 \ub2e4\ub978 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uac1d\uccb4\uac00 \ud544\uc694\ub85c \ud560\ub54c\ub9cc \ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. DeferredRegister#create \ub294 \ub3d9\uba85\uc758 \uba54\uc11c\ub4dc, \ub610\ub294 \uc624\ubc84\ub85c\ub4dc\uac00 \uc5ec\ub7ec\uac1c \uc788\ub294\ub370, \uadf8\uc911 RegistryObject \ub4e4\uc774 \ub4f1\ub85d\ub420 \ubc14\ub2d0\ub77c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \ud0a4\ub97c \ubc1b\ub294 \uac83\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ub9cc\ub4e0 DeferredRegister \uc758 \uc778\uc2a4\ud134\uc2a4\ub294 \ub2e4\ub978 \uc778\uc2a4\ud134\uc2a4\ub4e4\uacfc \ub3d9\uc77c\ud55c \ubc29\uc2dd\uc73c\ub85c \uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\uac70\ub098 \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ub4f1\ub85d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. private static final DeferredRegister<RecipeType<?>> REGISTER = DeferredRegister.create(Registry.RECIPE_TYPE_REGISTRY, \"examplemod\"); // RecipeType \uc740 \uc778\ud130\ud398\uc774\uc2a4\uc774\uae30 \ub54c\ubb38\uc5d0, \uc775\uba85 \ud074\ub798\uc2a4\ub97c \uc0dd\uc131\ud558\uc5ec \ub4f1\ub85d\ud569\ub2c8\ub2e4 // \ubc14\ub2d0\ub77c\uc5d0\uc11c\ub294 RecipeType \uc758 #toString \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud558\ub294\ub370, \uc774\ub294 \ub514\ubc84\uadf8 \uc6a9\ub3c4\uc774\uae30 \ub54c\ubb38\uc5d0 \uc774 \uc608\uc81c\uc5d0\uc11c\ub294 \uac74\ub108\ub6f0\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4 // \uc608\uc81c ExampleRecipe public static final RegistryObject<RecipeType<ExampleRecipe>> EXAMPLE_RECIPE_TYPE = REGISTER.register(\"example_recipe_type\", () -> new RecipeType<>() {}); Note \uba87\uba87 \ud074\ub798\uc2a4\ub4e4\uc740 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uadf8 \ub300\uc2e0, \uadf8 \ud074\ub798\uc2a4\ub4e4\uc758 \uc885\ub958\ub97c \uc0c1\uc9d5\ud558\ub294 *Type \ud074\ub798\uc2a4\uac00 \ub300\uc2e0 \ub4f1\ub85d\ub418\uc5b4\uc57c \ud558\uba70, \uc774 *Type \ud074\ub798\uc2a4\ub294 \uc804\uc790\uc758 \ud074\ub798\uc2a4\uc758 \uc0dd\uc131\uc790\uc5d0\uc11c \uc0ac\uc6a9\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8 \uc608\uc2dc\ub85c, BlockEntity \ub294 BlockEntityType \ub97c, \uadf8\ub9ac\uace0 Entity \ub294 EntityType \uc744 \ub300\uc2e0 \ub4f1\ub85d\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774 *Type \ud074\ub798\uc2a4\ub4e4\uc740 \uc54c\ub9de\ub294 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\ub294 \ud329\ud1a0\ub9ac\uc785\ub2c8\ub2e4. \uc774 \ud329\ud1a0\ub9ac\ub4e4\uc740 *Type$Builder \ud074\ub798\uc2a4\ub97c \uc774\uc6a9\ud574 \uc0dd\uc131\ub429\ub2c8\ub2e4, \uc544\ub798 REGISTER \ub294 DeferredRegister<BlockEntityType> \uc785\ub2c8\ub2e4. public static final RegistryObject<BlockEntityType<ExampleBlockEntity>> EXAMPLE_BLOCK_ENTITY = REGISTER.register( \"example_block_entity\", () -> BlockEntityType.Builder.of(ExampleBlockEntity::new, EXAMPLE_BLOCK.get()).build(null) );","title":"\ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc544\ub2cc \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4"},{"location":"concepts/registries/#_4","text":"\uac1d\uccb4\ub97c \ub4f1\ub85d\ud558\uc2e4\ub54c \uc774\ub97c \ud2b9\uc815 \ud544\ub4dc\uc5d0 \uc800\uc7a5\ud558\uba74 \uc548\ub429\ub2c8\ub2e4, \uc54c\ub9de\ub294 RegistryEvent$Register<T> \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub420\ub54c \ub9c8\ub2e4 \uc0c8\ub85c \ub9cc\ub4e4\uc5b4 \uc9c0\uace0 \ub4f1\ub85d\ub418\uc5b4\uc57c \ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uc774\ub294 \ucd94\ud6c4\uc5d0 \ud3ec\uc9c0\uc5d0\uc11c \ub3d9\uc801\uc73c\ub85c \ubaa8\ub4dc\ub97c \ud65c\uc131\ud654/\ube44\ud65c\uc131\ud654\ud558\uae30 \uc704\ud568\uc785\ub2c8\ub2e4. \ub4f1\ub85d\ub418\ub294 \uac1d\uccb4\ub4e4\uc740 \ubb34\uc870\uac74 RegistryObject \ub610\ub294 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\ub294 \ud544\ub4dc\ub97c \ud1b5\ud558\uc5ec \ucc38\uc870\ub418\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4.","title":"\ub4f1\ub85d\ub41c \uac1d\uccb4 \ucc38\uc870\ud558\uae30"},{"location":"concepts/registries/#registryobject","text":"RegistryObject \ub4e4\uc740 \ub4f1\ub85d\ub41c \uac1d\uccb4\ub4e4\uc758 \ucc38\uc870\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc740 \uac1d\uccb4\uc5d0\ub294 \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. DeferredRegister \ub97c \ud1b5\ud574 \ub4f1\ub85d\ud558\uc2dc\uba74 RegistryObject \uc758 \uc778\uc2a4\ud134\uc2a4\uc758 \ucc38\uc870\uac00 \ubc18\ud658\ub429\ub2c8\ub2e4. @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uacfc RegistryObject \ub4e4\uc740 \uc54c\ub9de\ub294 RegistryEvent$Register<T> \uac00 \ubc29\uc1a1\ub420\ub54c \uac31\uc2e0\ub429\ub2c8\ub2e4. RegistryObject \uc778\uc2a4\ud134\uc2a4\uc758 \ucc38\uc870\ub97c \ub2e4\ub978 \ubc29\ubc95\uc73c\ub85c \uc5bb\uae30 \uc704\ud574\uc11c\ub294 RegistryObject#create \ub97c \ub4f1\ub85d\ub41c \uac1d\uccb4\uc758 ResourceLocation \uacfc \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 IForgeRegistry \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud638\ucd9c\ud558\uc138\uc694. \ucee4\uc2a4\ud140 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 \ub4f1\ub85d\ub420 \uac1d\uccb4\ub4e4\uc758 \ud074\ub798\uc2a4\ub97c \uacf5\uae09\ud558\ub294 \uacf5\uae09\uc790\ub97c \uc774\uc6a9\ud558\uc5ec RegistryObject \uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. RegistryObject \ub97c public static final \ud544\ub4dc\ub97c \uc774\uc6a9\ud574 \uc800\uc7a5\ud558\uace0 #get \ud568\uc218\ub97c \uc774\uc6a9\ud574 \ub4f1\ub85d\ub41c \uac1d\uccb4\uc5d0 \uc811\uadfc\ud558\uc138\uc694. RegistryObject \uc0ac\uc6a9 \uc608\uc2dc: public static final RegistryObject<Item> BOW = RegistryObject.create(new ResourceLocation(\"minecraft:bow\"), ForgeRegistries.ITEMS); // \uc544\ub798 \uc608\uc2dc\uc5d0\uc11c\ub294 'neomagicae:mana_type' \uc740 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc774\uba70, 'neomagicae:coffeinum' \uc774 \ud574\ub2f9 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub41c \uac1d\uccb4\ub77c \uac00\uc815\ud569\ub2c8\ub2e4 public static final RegistryObject<ManaType> COFFEINUM = RegistryObject.create(new ResourceLocation(\"neomagicae\", \"coffeinum\"), new ResourceLocation(\"neomagicae\", \"mana_type\"), \"neomagicae\");","title":"RegistryObject \ub85c \ucc38\uc870\ud558\uae30"},{"location":"concepts/registries/#objectholder","text":"@ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc744 \ud074\ub798\uc2a4 \ub610\ub294 \ud544\ub4dc\uc5d0 \ub2ec\uace0 ResourceLocation \uc744 \ucd94\ub860\ud574 \ub0b4\uae30 \ucda9\ubd84\ud55c \uc815\ubcf4\ub97c \uc81c\uacf5\ud558\uc5ec, public static \ud544\ub4dc\uc5d0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \ub4f1\ub85d\ub41c \uac1d\uccb4\ub4e4\uc744 \uc8fc\uc785\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. @ObjectHolder \ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: \ub9cc\uc57d \ud074\ub798\uc2a4\uc5d0 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\ub2e4\uba74, \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \ub97c \uadf8 \ud074\ub798\uc2a4\uc758 \ud544\ub4dc\ub4e4\uc758 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uae30\ubcf8\uac12\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud074\ub798\uc2a4\uc5d0 @Mod \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\ub2e4\uba74, modid \ub97c \uadf8 \ud074\ub798\uc2a4\uc758 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uae30\ubcf8\uac12\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ud544\ub4dc\uac00 \ub2e4\uc74c \uc870\uac74\ub4e4\uc744 \ucda9\uc871\uc2dc\ud0a8\ub2e4\uba74 \uc8fc\uc785\uc774 \uc774\ub8e8\uc5b4 \uc9d1\ub2c8\ub2e4: \ucd5c\uc18c\ud55c public static \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc744\ub54c; \ub2e4\uc74c\uc911 \ud558\ub098\ub77c\ub3c4 \ucc38\uc77c\ub54c: \ud544\ub4dc\ub97c \uac10\uc2f8\ub294 \ud074\ub798\uc2a4 \uc5d0 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc788\uc73c\uba70 \ud544\ub4dc\uac00 final \uc774\ub77c\uba74: \ud544\ub4dc\uc758 \uc774\ub984\uc744 \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \uacbd\ub85c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud074\ub798\uc2a4\uc758 ObjectHolder \uc758 value \ub97c \uc0c1\uc18d\ubc1b\uc544 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub97c \ucc3e\uc744 \uc218\ub3c4, \uc0c1\uc18d \ubc1b\uc744 \uc218\ub3c4 \uc5c6\ub2e4\uba74 \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ud544\ub4dc \uc5d0 @ObjectHolder \uac00 \uc788\uc744\ub54c: \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \uacbd\ub85c\ub294 \ud544\ub4dc\uc758 \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \uac12\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uc5b4\ub178\ud14c\uc774\uc158\uc5d0\uc11c \uc9c0\uc815\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 \ud074\ub798\uc2a4\uc758 \uc5b4\ub178\ud14c\uc774\uc158\uc5d0\uc11c \uc0c1\uc18d \ubc1b\uc2b5\ub2c8\ub2e4. \ud544\ub4dc\uc758 \ud0c0\uc785\uc774\ub098, \ud544\ub4dc\uc758 \ud0c0\uc785\uc758 \uc870\uc0c1\uc911 \uc77c\uce58\ud558\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\ub2e4\uba74(\uc608: Item \ub610\ub294 ArrowItem \uc740 Item \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc77c\uce58\ud55c\ub2e4); \ub9cc\uc57d \ud544\ub4dc\uc5d0 \uc77c\uce58\ud558\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\ub2e4\uba74 \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ucd94\ub860\ub41c ResourceLocation \uc774 \ubbf8\uc644\uc131\uc774\uac70\ub098, \ubb38\uc81c\uac00 \uc788\ub2e4\uba74 (\ud5c8\uc6a9\ub418\uc9c0 \uc54a\uc740 \ubb38\uc790\uac00 \uc788\ub2e4\uba74) \uc608\uc678\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ubb38\uc81c\uac00 \uc5c6\uac70\ub098, \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 \ud544\ub4dc\uc5d0 \ub4f1\ub85d\ub41c \uac1d\uccb4\uac00 \uc8fc\uc785\ub420 \uac83\uc785\ub2c8\ub2e4. \ub9cc\uc57d \uc704 \uc870\uac74\uc911 \ud558\ub098\ub77c\ub3c4 \ub9cc\uc871\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc544\ubb34 \uc77c\ub3c4 \uc77c\uc5b4\ub098\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. (\uadf8\ub9ac\uace0 \uc774\uc5d0 \uad00\ud55c \uba54\uc138\uc9c0\uac00 \ucd9c\ub825\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.) \uc704 \uc870\uac74\uc744 \ucda9\uc871\ud558\ub294 @ObjectHolder \uc8fc\uc785 \ub300\uc0c1 \ud544\ub4dc\ub294 \uadf8\uc5d0 \uc54c\ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 RegistryEvent$Register \uc774\ubca4\ud2b8\uac00 \ubc29\uc1a1\ub420\ub54c \uac1d\uccb4\uac00 \uc8fc\uc785\ub429\ub2c8\ub2e4. \ub610\ud55c RegistryObject \ub4e4\ub3c4 \uc774\ub54c \uac31\uc2e0 \ub429\ub2c8\ub2e4. Note \ub9cc\uc57d \ucd94\ub860\ub41c \ub9ac\uc18c\uc2a4 \uc704\uce58\ub97c \ud1b5\ud574 \uac1d\uccb4\ub97c \ucc38\uc870\ud558\uc5ec \uc774\ub97c \ud544\ub4dc\uc5d0 \uc8fc\uc785\ud558\ub824\uace0 \ud560 \ub54c, \uadf8 \uac1d\uccb4\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc774\uc5d0 \uad00\ud55c \uba54\uc138\uc9c0\uac00 \ucd9c\ub825\ub420 \uac83\uc774\uba70 \ud544\ub4dc\uc5d0 \uac12\uc774 \uc8fc\uc785\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc704\uc5d0 \uae30\uc220\ub41c \uaddc\uce59\ub4e4\uc774 \ubcf5\uc7a1\ud574 \ubcf4\uc774\uc2e4 \uc218 \uc788\uc73c\ub2c8, \uba87\uac00\uc9c0 \uc608\uc81c\ub97c \uc900\ube44\ud574 \ubcf4\uc558\uc2b5\ub2c8\ub2e4: @ObjectHolder(\"minecraft\") // \uc0c1\uc18d \uac00\ub2a5\ud55c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4: \"minecraft\" class AnnotatedHolder { public static final Block diamond_block = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc5c6\uc74c, [public static final] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // Block \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [Block] // \ub9ac\uc18c\uc2a4\uc758 \uacbd\ub85c\ub294: \"diamond_block\" // \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c. // \uadf8\ub807\uae30\uc5d0, \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud074\ub798\uc2a4 \uc5b4\ub178\ud14c\uc774\uc158\uc73c\ub85c \ubd80\ud130 \uc0c1\uc18d\ubc1b\uc74c: \"minecraft\" // \uc8fc\uc785 \ub300\uc0c1: [Block] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \"minecraft:diamond_block\" @ObjectHolder(\"ambient.cave\") public static SoundEvent ambient_sound = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // SoundEvent \ub294 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [SoundEvent] // \ub9ac\uc18c\uc2a4\uc758 \uacbd\ub85c\ub294 \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \uc784: \"ambient.cave\" // \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c. // \uadf8\ub807\uae30\uc5d0, \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud074\ub798\uc2a4 \uc5b4\ub178\ud14c\uc774\uc158\uc73c\ub85c \ubd80\ud130 \uc0c1\uc18d\ubc1b\uc74c: \"minecraft\" // \uc8fc\uc785 \ub300\uc0c1: [SoundEvent] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \"minecraft:ambient.cave\" // [ManaType] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc874\uc7ac\ud55c\ub2e4\uace0 \uac00\uc815\ud569\ub2c8\ub2e4. @ObjectHolder(\"neomagicae:coffeinum\") public static final ManaType coffeinum = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. [final] \uc740 \uc120\ud0dd \uc0ac\ud56d. // ManaType \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [ManaType] (\ucee4\uc2a4\ud140 \ub808\uc9c0\uc2a4\ud2b8\ub9ac) // \ub9ac\uc18c\uc2a4 \uc704\uce58\uac00 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub428: \"neomagicae:coffeinum\" // \uc8fc\uc785 \ub300\uc0c1: [ManaType] \uc758 \"neomagicae:coffeinum\" public static final Item ENDER_PEARL = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc5c6\uc74c, [public static final] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // Item \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [Item]. // \ud544\ub4dc\uc758 \uc774\ub984\uc774 \ub9ac\uc18c\uc2a4\uc758 \uacbd\ub85c\uc784: \"ENDER_PEARL\" -> \"ender_pearl\" // !! ^ \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud544\ub4dc \uc774\ub984, \uc18c\ubb38\uc790\ub85c \uc790\ub3d9\uc73c\ub85c \ubcc0\ud658\ub428. // \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c. // \uadf8\ub807\uae30\uc5d0, \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \ud074\ub798\uc2a4 \uc5b4\ub178\ud14c\uc774\uc158\uc73c\ub85c \ubd80\ud130 \uc0c1\uc18d\ubc1b\uc74c: \"minecraft\" // \uc8fc\uc785 \ub300\uc0c1: [Item] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \"minecraft:ender_pearl\" @ObjectHolder(\"minecraft:arrow\") public static final ArrowItem arrow = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. [final] \uc740 \uc120\ud0dd \uc0ac\ud56d. // ArrowItem \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // ArrowItem \uc758 \uc870\uc0c1 Item \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [Item] // \ub9ac\uc18c\uc2a4 \uc704\uce58\uac00 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub428: \"minecraft:arrow\" // \uc8fc\uc785 \ub300\uc0c1: [Item] \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \"minecraft:arrow\" public static Block bedrock = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc5c6\uc74c, [public static final] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // \uadf8\ub7ec\ub098 \uc5c6\uc74c, \uadf8\ub807\uae30\uc5d0 \uc774 \ud544\ub4dc\ub294 \ubb34\uc2dc\ub428. public static final ItemGroup group = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc5c6\uc74c, [public static final] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // ItemGroup \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // ItemGroup \uc758 \uc870\uc0c1\uc911 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // \uadf8\ub807\uae30\uc5d0, \uc774\ub294 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b4. } class UnannotatedHolder { // \uc774 \ud074\ub798\uc2a4\ub294 @ObjectHolder \uac00 \uc5c6\uc74c. @ObjectHolder(\"minecraft:flame\") public static final Enchantment flame = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. [final] \uc740 \uc120\ud0dd \uc0ac\ud56d.. // Enchantment \ub294 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c:: [Enchantment]. // \ub9ac\uc18c\uc2a4 \uc704\uce58\uac00 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub428: \"minecraft:flame\" // \uc8fc\uc785 \ub300\uc0c1: [Enchantment]\uc758 \"minecraft:flame\" public static final Biome ice_flat = null; // \ud074\ub798\uc2a4\uc5d0 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc5c6\uc74c. // \uadf8\ub807\uae30\uc5d0 \uc774 \ud544\ub4dc\ub294 \ubb34\uc2dc\ub428. @ObjectHolder(\"minecraft:creeper\") public static Entity creeper = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. // Entity \ub294 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // Entity \uc758 \uc870\uc0c1\uc911 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc5c6\uc74c. // \uadf8\ub807\uae30\uc5d0, \uc774\ub294 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b4. @ObjectHolder(\"levitation\") public static final Potion levitation = null; // \uc5b4\ub178\ud14c\uc774\uc158 \uc788\uc74c, [public static] \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc5b4\uc57c\ud568. [final] \uc740 \uc120\ud0dd \uc0ac\ud56d.. // Potion \uc740 \uc774\uc5d0 \ub9de\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \uc788\uc74c: [Potion]. // \ub9ac\uc18c\uc2a4 \uc704\uce58\uc758 \uacbd\ub85c\ub294 \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \"levitation\" \uc784 // \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c. // \ud074\ub798\uc2a4\uc5d0 @ObjectHolder \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc5c6\uc74c. // \uadf8\ub807\uae30\uc5d0, \uc774\ub294 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b4. }","title":"@ObjectHolder \uc0ac\uc6a9\ud558\uae30"},{"location":"concepts/registries/#_5","text":"\ubaa8\ub4dc\uc5d0\uc11c \ucee4\uc2a4\ud140 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \ub9cc\ub4e4 \ub54c Map \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4dc\ub294 \uacbd\uc6b0\ub294 \uaf64\ub098 \ud754\ud569\ub2c8\ub2e4; \uadf8\ub7ec\ub098 \uc774\ub294 \uac15\uc81c\uc801\uc73c\ub85c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc758\uc874\uc131\uc744 \ubd80\uc5ec\ud558\uba70 \uc0ac\uc774\ub4dc\uac04\uc758 \ub370\uc774\ud130 \ub3d9\uae30\ud654\ub97c \uc218\ub3d9\uc73c\ub85c \uc2dc\ucf1c \uc8fc\uc5b4\uc57c \ud55c\ub2e4\ub294 \ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ucee4\uc2a4\ud140 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 \uac15\uc81c\uc801\uc778 \uc758\uc874\uc131\uc744 \ud53c\ud558\uace0, \uc790\ub3d9\uc73c\ub85c \ub3d9\uae30\ud654\ub97c \ud574 \uc8fc\uba70(\uc124\uc815\uc2dc \ubcc0\uacbd \uac00\ub2a5) \uad00\ub9ac\ub610\ud55c \uc798 \ud574\uc8fc\ub294 \ucc38 \uc88b\uc740 \ub300\uc548\uc785\ub2c8\ub2e4. \ub4f1\ub85d\ub418\ub294 \uac1d\uccb4\ub4e4\ub3c4 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub2c8 \ub4f1\ub85d \uacfc\uc815\uc774 \ub3d9\uc77c\ud569\ub2c8\ub2e4. \ucee4\uc2a4\ud140 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 NewRegistryEvent \ub610\ub294 DeferredRegister \ub97c \ud1b5\ud574 RegistryBuilder \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4ed\ub2c8\ub2e4. RegistryBuilder \ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \uc774\ub984, \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub420 \uac1d\uccb4\ub4e4\uc758 \ud074\ub798\uc2a4, \uc5ec\ub7ec \uc774\ubca4\ud2b8\ub4e4\uc5d0 \ubc18\uc751\ud560 \ucf5c\ubc31\ub4e4 \ub4f1 \uc5ec\ub7ec\uac00\uc9c0 \uc124\uc815 \uac00\ub2a5\ud55c \uc18d\uc131\ub4e4\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc0c8\ub86d\uac8c \ub9cc\ub4e4\uc5b4\uc9c4 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4\uc740 RegistryManager \uc5d0 NewRegistryEvent \uac00 \ub05d\ub098\uace0 \ub4f1\ub85d\ub429\ub2c8\ub2e4. \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub420 \uac1d\uccb4\uc758 \ud074\ub798\uc2a4\ub294 \ubb34\uc870\uac74 IForgeRegisterEntry \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4, \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub294 #setRegistryName \uacfc #getRegistryName \uba54\uc11c\ub4dc\ub97c \uc815\uc758\ud569\ub2c8\ub2e4. \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ubc14\ub85c \uad6c\ud604\ud558\ub294 \uac83 \ubcf4\ub2e8 ForgeRegistryEntry \ub97c \uc0c1\uc18d\ud558\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4, \uc774 \ud074\ub798\uc2a4\ub294 IForgeRegistryEntry \uc778\ud130\ud398\uc774\uc2a4\uc758 \uae30\ubcf8\uc801\uc778 \uad6c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. #setRegistryName(String) \uc774 \ubb38\uc790\uc5f4\uc744 \uc778\uc790\ub85c \ubc1b\uc544 \ud638\ucd9c\ub420 \ub54c, \ub9cc\uc57d \uadf8 \ubb38\uc790\uc5f4\uc5d0 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\ub2e4\uba74, \uc774\ub294 \uc790\ub3d9\uc73c\ub85c \ud574\ub2f9 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514\ub85c \ucd94\ub860\ub429\ub2c8\ub2e4. \ubaa8\ub4e0 \uc0c8\ub85c \ub9cc\ub4e4\uc5b4\uc9c4 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub4e4 \ub610\ud55c \uc774 \ubc29\ubc95\ub4e4 \uc744 \ud1b5\ud574 \uac1d\uccb4\ub4e4\uc744 \ub4f1\ub85d\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4.","title":"\ucee4\uc2a4\ud140 \ud3ec\uc9c0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \ub9cc\ub4e4\uae30"},{"location":"concepts/registries/#newregistryevent","text":"NewRegistryEvent \ub97c \uc0ac\uc6a9\ud560 \ub54c, #create \ub97c RegistryBuilder \ub97c \uc778\uc790\ub85c \ud638\ucd9c\ud558\uba74 Supplier \ub85c \uac10\uc2f8\uc9c4 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uac00 \ubc18\ud658\ub429\ub2c8\ub2e4. \uc774 \uac10\uc2f8\uc9c4 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub41c NewRegistryEvent \uac00 \uc644\uc804\ud788 \ub05d\ub09c \uc774\ud6c4 \uc811\uadfc\ud558\uc2e4 \uc218 \uc788\uc73c\uba70, \uadf8 \uc774\uc804\uc5d0 \uc811\uadfc\ud558\uc2e4 \uacbd\uc6b0 null \uc774 \ub300\uc2e0 \ubc18\ud658\ub429\ub2c8\ub2e4.","title":"NewRegistryEvent \uc4f0\uae30"},{"location":"concepts/registries/#deferredregister_1","text":"DeferredRegister \ub294, \ub2e4\uc2dc \ub9d0\ud558\uc9c0\ub9cc, \uc704 \uc774\ubca4\ud2b8\ub97c \uc0ac\uc6a9\ud558\ub294 wrapper \uc785\ub2c8\ub2e4. DeferredRegister \ub97c \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uacfc \ubaa8\ub4dc \uc544\uc774\ub514\ub97c \uc778\uc790\ub85c \ubc1b\ub294 \uc624\ubc84\ub85c\ub4dc \uba54\uc11c\ub4dc #create \ub97c \ud1b5\ud574 \uc0dd\uc131\ud558\uace0 \uc774\ub97c \uc0c1\uc218 \ud544\ub4dc\uc5d0 \ud560\ub2f9\ud55c \uc774\ud6c4, DeferredRegister#makeRegistry \ub97c \ud1b5\ud574 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \uc0dd\uc131\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub4f1\ub85d\ub420 \uac1d\uccb4\uc758 \ud074\ub798\uc2a4\uc640 \uc0dd\uc131\ub420 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \uc18d\uc131 \ubc0f \uc124\uc815\uac12\ub4e4\uc744 \ub2f4\uace0 \uc788\ub294 RegistryBuilder \ub97c \uac10\uc2f8\ub294 Supplier \ub97c \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4. DeferredRegister#makeRegistry \ub294 \uc790\ub3d9\uc73c\ub85c RegistryBuilder#setName \uacfc RegistryBuilder#setType \uc744 \ud638\ucd9c\ud569\ub2c8\ub2e4. \ud574\ub2f9 \uba54\uc11c\ub4dc\ub294 \uc5b8\uc81c\ub4e0\uc9c0 \ubc18\ud658\ub420 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 IForgeRegistry \ub97c Supplier \ub85c \uac10\uc2fc \uac83\uc744 \ub300\uc2e0 \ubc18\ud658\ud569\ub2c8\ub2e4. NewRegistryEvent \uac00 \ub05d\ub098\uae30 \uc774\uc804 \ucee4\uc2a4\ud140 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \ud558\uba74 null d\u3163 \ub300\uc2e0 \ubc18\ud658\ub429\ub2c8\ub2e4. Important DeferredRegister#makeRegistry \ub294 \ubb34\uc870\uac74 DeferredRegister#register \uac00 \ud638\ucd9c\ub418\uc5b4 \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ub4f1\ub85d\ub418\uae30 \uc774\uc804\uc5d0 \ud638\ucd9c\ub418\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4. \ub610\ud55c, #makeRegistry \ub294 #register \ub97c \ud1b5\ud574 \ub4f1\ub85d \ub418\uc5b4\uc57c\ub9cc NewRegistryEvent \uc774\ubca4\ud2b8 \ub3c4\uc911 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 #makeRegistry \ub97c \uba3c\uc800 \ud558\uc2dc\uace0 #register \ub97c \uc774\ud6c4\uc5d0 \ud558\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694.","title":"DeferredRegister \uc4f0\uae30"},{"location":"concepts/registries/#_6","text":"\uac00\ub054\uc529, \ubaa8\ub4dc\uac00 \uc5c5\ub370\uc774\ud2b8\ub418\uac70\ub098 \uc81c\uac70\ub418\uc5c8\uc744 \ub54c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \uac1d\uccb4\uac00 \uac11\uc790\uae30 \uc5c6\uc5b4\uc9c8 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uac11\uc790\uae30 \uc5c6\uc5b4\uc9c4 \ud56d\ubaa9\uc744 \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc744 \uc138\ubc88\uc9f8 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ubca4\ud2b8\uc778 RegistryEvent$MissingMappings \uc774\ubca4\ud2b8\ub85c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8 \ub3c4\uc911\uc5d0 getMappings \ub97c \ud1b5\ud574 \ud574\ub2f9 \ubaa8\ub4dc\uc758 \ub204\ub77d\ub41c \ub9e4\ud551 \ub9ac\uc2a4\ud2b8\ub97c \ubc1b\uc544\uc62c \uc218 \uc788\uc73c\uba70, #getAllMappings \ub97c \ud1b5\ud574 \uc5b4\ub5a4 \ubaa8\ub4dc\uc5d0\uc11c \uc774 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\ub294\uac00\uc640 \uad00\ub828 \uc5c6\uc774 \ubaa8\ub4e0 \ub9e4\ud551\ub4e4\uc744 \ubc1b\uc544\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \ub204\ub77d\ub41c \ud56d\ubaa9\ub9c8\ub2e4, \uc774 4\uac00\uc9c0 \ubc29\ubc95\uc911 \ud558\ub098\ub97c \uc120\ud0dd\ud558\uc5ec \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud560\uc9c0 \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: \ub3d9\uc791 \uc124\uba85 IGNORE \ub204\ub77d\ub41c \ud56d\ubaa9\uc744 \ubb34\uc2dc\ud558\uace0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \ub9e4\ud551\uc744 \ubc84\ub9bd\ub2c8\ub2e4. WARN \ub85c\uadf8\uc5d0 \uacbd\uace0\ub97c \ub744\uc6c1\ub2c8\ub2e4. FAIL \uc6d4\ub4dc\ub97c \ubd88\ub7ec\uc624\ub294 \uac83\uc744 \ub9c9\uc2b5\ub2c8\ub2e4. REMAP \ub2e4\ub978 \ud56d\ubaa9\uc73c\ub85c \ub300\uccb4\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ub204\ub77d\ub41c \ud56d\ubaa9\uc744 \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc774 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc558\ub2e4\uba74 \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \uc774\uc5d0 \ub300\ud574 \uc54c\ub9ac\ub294 \uae30\ubcf8 \ub3d9\uc791\uc744 \uc218\ud589\ud558\uac8c \ub429\ub2c8\ub2e4. \ud50c\ub808\uc774\uc5b4\ub294 \uc6d4\ub4dc\ub97c \ubd88\ub7ec\uc624\uace0 \uc2f6\uc744 \uac83\uc774\uae30\uc5d0, REMAP \uc744 \uc81c\uc678\ud55c \ub2e4\ub978 \ub3d9\uc791\uc758 \uacbd\uc6b0. \ub204\ub77d\ub41c \ud56d\ubaa9\uc774 \ub2e4\uc2dc \ucd94\uac00\ub420 \uc218 \uc788\uc73c\ub2c8 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \ub2e4\ub978 \uac1d\uccb4\ub4e4\uc774 \ub204\ub77d\ub41c \ud56d\ubaa9\uc744 \ub300\uccb4\ud558\ub294 \uac83\uc744 \ub9c9\uc2b5\ub2c8\ub2e4.","title":"\ub204\ub77d\ub41c \ud56d\ubaa9 \ucc98\ub9ac\ud558\uae30"},{"location":"concepts/resources/","text":"\ub9ac\uc18c\uc2a4\ub780 \ub9ac\uc18c\uc2a4\ub294 \uac8c\uc784\uc774 \uc0ac\uc6a9\ud558\ub294 \ucd94\uac00\uc801\uc778 \ub370\uc774\ud130 \uc785\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \ucf54\ub4dc \uc548\uc5d0 \uc788\uc9c0 \uc54a\uace0 \ub370\uc774\ud130 \ud30c\uc77c \ud615\uc2dd\uc73c\ub85c \uc800\uc7a5\ub429\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \uc8fc\ub85c 2\uac1c\uc758 \ub9ac\uc18c\uc2a4 \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub294\ub370, \ud558\ub098\ub294 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \ubaa8\ub378, \ud14d\uc2a4\uccd0, \uc5b8\uc5b4\uc640 \uac19\uc774 \ud654\uba74\uc5d0 \uadf8\ub9ac\uae30 \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 \uc5d0\uc14b , \ub2e4\ub978 \ud558\ub098\ub294 \ub17c\ub9ac \uc11c\ubc84\uc5d0\uc11c \uc870\ud569\ubc95\uc774\ub098 \ub178\ud68d\ubb3c \ubaa9\ub85d\uacfc \uac19\uc740 \uac8c\uc784 \ud50c\ub808\uc774\ub97c \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 \ub370\uc774\ud130 \uac00 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4\ud329 \uc740 \uc804\uc790\ub97c \ud1b5\uc81c\ud558\uace0, \ub370\uc774\ud130\ud329 \uc740 \ud6c4\uc790\ub97c \ud1b5\uc81c\ud569\ub2c8\ub2e4. \uae30\ubcf8 \ubaa8\ub4dc \uac1c\ubc1c \ud0a4\ud2b8\uc758 \uc5d0\uc14b\uacfc \ub370\uc774\ud130\ub294 \ud504\ub85c\uc81d\ud2b8\uc758 src/main/resources \uc544\ub798 \uc704\uce58\ud569\ub2c8\ub2e4. \uc5ec\ub7ec\uac1c\uc758 \ub9ac\uc18c\uc2a4\ud329\uacfc \ub370\uc774\ud130\ud329\uc774 \ud65c\uc131\ud654 \ub418\uc5b4\uc788\uc744 \uacbd\uc6b0, \ud558\ub098\ub85c \ud569\uccd0\uc9d1\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc2a4\ud0dd \ub9e8 \uc704\uc5d0 \uc788\ub294 \ub9ac\uc18c\uc2a4\ud329/\ub370\uc774\ud130\ud329\uc774 \uadf8 \uc544\ub798\uc5d0 \uc704\uce58\ud55c \uac83\ub4e4\uc744 \ub36e\uc5b4\uc501\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc5b8\uc5b4 \ud30c\uc77c\uc774\ub098 \ud0dc\uadf8\ub4e4 \ucc98\ub7fc \uc77c\ubd80 \ud30c\uc77c\ub4e4\uc740 \uadf8 \ub0b4\uc6a9\uc774 \ud569\uccd0\uc9d1\ub2c8\ub2e4. \ubaa8\ub4dc\ub4e4\uc740 resources \ud3f4\ub354\uc5d0 \ub9ac\uc18c\uc2a4\ud329/\ub370\uc774\ud130\ud329\uc744 \ub9cc\ub4ed\ub2c8\ub2e4, \ub9ac\uc18c\uc2a4\ud329\uc740 Mod Resources \ub77c\ub294 \ud558\ub098\uc758 \uac70\ub300\ud55c \ub9ac\uc18c\uc2a4\ud329\uc73c\ub85c \ud569\uccd0\uc9d1\ub2c8\ub2e4. \uc774\ub294 \ube44\ud65c\uc131\ud654 \ub420 \uc218 \uc5c6\uc9c0\ub9cc \ub2e4\ub978 \ub9ac\uc18c\uc2a4\ud329\uc5d0 \uc758\ud574 \ub36e\uc5b4\uc50c\uc6cc \uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\uc758 \ub370\uc774\ud130\ud329\uc740 /datapack \uba85\ub839\uc5b4\ub85c \uac1c\ubcc4\uc801\uc73c\ub85c \uad00\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 1.11\ubd80\ud130 \ubaa8\ub4e0 \ub9ac\uc18c\uc2a4\ub294 \ud30c\uc77c \uc774\ub984\uacfc \uacbd\ub85c\uc5d0 \uc2a4\ub124\uc774\ud06c \ucf00\uc774\uc2a4(\ubaa8\ub4e0 \ubb38\uc790 \uc18c\ubb38\uc790, \u201c_\u201d\ub97c \ub744\uc5b4\uc4f0\uae30 \ub300\uc2e0 \uc0ac\uc6a9)\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. ResourceLocation \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ub9ac\uc18c\uc2a4\ub97c ResourceLocation , \ub610\ub294 \ub9ac\uc18c\uc2a4 \uc704\uce58\ub85c \uad6c\ubd84\ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc704\uce58\ub294 2\uac00\uc9c0\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\ub294\ub370, \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\uc640 \uacbd\ub85c\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ub9ac\uc18c\uc2a4 \uc704\uce58\uac00 \ub098\ud0c0\ub0b4\ub294 \uc5d0\uc14b \ub370\uc774\ud130\uc758 \ud30c\uc77c \uacbd\ub85c\ub294 asset/<\ub124\uc784 \uc2a4\ud398\uc774\uc2a4>/<ctx>/<\uacbd\ub85c> \uc785\ub2c8\ub2e4, ctx \ub294 \uc0c1\ud669\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc9c8 \uc218 \uc788\ub294 \ub514\ub809\ud130\ub9ac \uacbd\ub85c\uc758 \uc77c\ubd80\uc785\ub2c8\ub2e4, \uc18c\ub9ac \ub370\uc774\ud130\uc5d0 \uc811\uadfc\ud560 \ub54c\ub294 ctx \ub294 sounds \uac00 \ub418\uba70, \ud14d\uc2a4\uccd0\uc5d0 \uc811\uadfc\ud560 \ub54c\uc5d0\ub294 ctx \uac00 textures \uac00 \ub429\ub2c8\ub2e4. \uadf8 \uc678\uc5d0 ctx \uac00 \ud544\uc694\uac00 \uc5c6\ub294 \uc0c1\ud669\uc5d0\uc120 ctx \uac00 \uc0dd\ub7b5\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc704\uce58\ub97c \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\ud558\uac70\ub098, \ubb38\uc790\uc5f4\ub85c\ubd80\ud130 \uc77d\uc5b4\ub4e4\uc77c \ub54c\ub294 <\ub124\uc784 \uc2a4\ud398\uc774\uc2a4>:<\uacbd\ub85c> \ud615\uc2dd\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ubb38\uc790\uc5f4\ub85c\ubd80\ud130 \uc77d\uc5b4\ub4e4\uc77c\ub54c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\uac00 \uc5c6\ub2e4\uba74 \uae30\ubcf8\uac12\uc73c\ub85c \u201cminecraft\u201d\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ubaa8\ub4dc\ub4e4\uc740 \ub300\uac1c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub85c \ubaa8\ub4dc\uc758 \uc544\uc774\ub514\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4(\uc608: examplemod \ub77c\ub294 \uc544\uc774\ub514\ub97c \uac00\uc9c4 \ubaa8\ub4dc\ub294 \uc5d0\uc14b\uc744 assets/examplemod \uc5d0, \ub370\uc774\ud130\ub97c data/examplemod \uc5d0 \ub9cc\ub4ed\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc774\ub97c \uac00\ub9ac\ud0a4\ub294 \ub9ac\uc18c\uc2a4 \uc704\uce58\ub294 examplemod:<\uacbd\ub85c> \uc785\ub2c8\ub2e4). \uc774\ub294 \ubb34\uc870\uac74 \ub530\ub77c\uc57c \ud558\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4, \uac00\ub054\uc529 \ub2e4\ub978 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud560 \ub54c\ub3c4 \uc788\uc73c\uba70, \uc2ec\uc9c0\uc5b4 \ubaa8\ub4dc \ud558\ub098\uc5d0\uc11c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4 \uc5ec\ub7ec\uac1c\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud560 \ub54c\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc704\uce58\ub294 \uc0ac\uc2e4 \ub9ac\uc18c\uc2a4 \uc2dc\uc2a4\ud15c \ub9d0\uace0 \ub2e4\ub978\uacf3\uc5d0\uc11c\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4, \uc65c\ub0d0\ud558\uba74 \uc5ec\ub7ec \ubaa8\ub4dc\uc5d0\uc11c \ucd94\uac00\ud558\ub294 \ub2e4\uc591\ud55c \uac1d\uccb4\ub4e4\uc744 \uac04\ub2e8\ud558\uac8c \uad6c\ubcc4\ud558\ub294\ub370 \ub531 \uc88b\uae30 \ub54c\ubb38\uc774\uc8e0.","title":"\ub9ac\uc18c\uc2a4"},{"location":"concepts/resources/#_1","text":"\ub9ac\uc18c\uc2a4\ub294 \uac8c\uc784\uc774 \uc0ac\uc6a9\ud558\ub294 \ucd94\uac00\uc801\uc778 \ub370\uc774\ud130 \uc785\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \ucf54\ub4dc \uc548\uc5d0 \uc788\uc9c0 \uc54a\uace0 \ub370\uc774\ud130 \ud30c\uc77c \ud615\uc2dd\uc73c\ub85c \uc800\uc7a5\ub429\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \uc8fc\ub85c 2\uac1c\uc758 \ub9ac\uc18c\uc2a4 \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub294\ub370, \ud558\ub098\ub294 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \ubaa8\ub378, \ud14d\uc2a4\uccd0, \uc5b8\uc5b4\uc640 \uac19\uc774 \ud654\uba74\uc5d0 \uadf8\ub9ac\uae30 \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 \uc5d0\uc14b , \ub2e4\ub978 \ud558\ub098\ub294 \ub17c\ub9ac \uc11c\ubc84\uc5d0\uc11c \uc870\ud569\ubc95\uc774\ub098 \ub178\ud68d\ubb3c \ubaa9\ub85d\uacfc \uac19\uc740 \uac8c\uc784 \ud50c\ub808\uc774\ub97c \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 \ub370\uc774\ud130 \uac00 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4\ud329 \uc740 \uc804\uc790\ub97c \ud1b5\uc81c\ud558\uace0, \ub370\uc774\ud130\ud329 \uc740 \ud6c4\uc790\ub97c \ud1b5\uc81c\ud569\ub2c8\ub2e4. \uae30\ubcf8 \ubaa8\ub4dc \uac1c\ubc1c \ud0a4\ud2b8\uc758 \uc5d0\uc14b\uacfc \ub370\uc774\ud130\ub294 \ud504\ub85c\uc81d\ud2b8\uc758 src/main/resources \uc544\ub798 \uc704\uce58\ud569\ub2c8\ub2e4. \uc5ec\ub7ec\uac1c\uc758 \ub9ac\uc18c\uc2a4\ud329\uacfc \ub370\uc774\ud130\ud329\uc774 \ud65c\uc131\ud654 \ub418\uc5b4\uc788\uc744 \uacbd\uc6b0, \ud558\ub098\ub85c \ud569\uccd0\uc9d1\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc2a4\ud0dd \ub9e8 \uc704\uc5d0 \uc788\ub294 \ub9ac\uc18c\uc2a4\ud329/\ub370\uc774\ud130\ud329\uc774 \uadf8 \uc544\ub798\uc5d0 \uc704\uce58\ud55c \uac83\ub4e4\uc744 \ub36e\uc5b4\uc501\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc5b8\uc5b4 \ud30c\uc77c\uc774\ub098 \ud0dc\uadf8\ub4e4 \ucc98\ub7fc \uc77c\ubd80 \ud30c\uc77c\ub4e4\uc740 \uadf8 \ub0b4\uc6a9\uc774 \ud569\uccd0\uc9d1\ub2c8\ub2e4. \ubaa8\ub4dc\ub4e4\uc740 resources \ud3f4\ub354\uc5d0 \ub9ac\uc18c\uc2a4\ud329/\ub370\uc774\ud130\ud329\uc744 \ub9cc\ub4ed\ub2c8\ub2e4, \ub9ac\uc18c\uc2a4\ud329\uc740 Mod Resources \ub77c\ub294 \ud558\ub098\uc758 \uac70\ub300\ud55c \ub9ac\uc18c\uc2a4\ud329\uc73c\ub85c \ud569\uccd0\uc9d1\ub2c8\ub2e4. \uc774\ub294 \ube44\ud65c\uc131\ud654 \ub420 \uc218 \uc5c6\uc9c0\ub9cc \ub2e4\ub978 \ub9ac\uc18c\uc2a4\ud329\uc5d0 \uc758\ud574 \ub36e\uc5b4\uc50c\uc6cc \uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\uc758 \ub370\uc774\ud130\ud329\uc740 /datapack \uba85\ub839\uc5b4\ub85c \uac1c\ubcc4\uc801\uc73c\ub85c \uad00\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 1.11\ubd80\ud130 \ubaa8\ub4e0 \ub9ac\uc18c\uc2a4\ub294 \ud30c\uc77c \uc774\ub984\uacfc \uacbd\ub85c\uc5d0 \uc2a4\ub124\uc774\ud06c \ucf00\uc774\uc2a4(\ubaa8\ub4e0 \ubb38\uc790 \uc18c\ubb38\uc790, \u201c_\u201d\ub97c \ub744\uc5b4\uc4f0\uae30 \ub300\uc2e0 \uc0ac\uc6a9)\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4.","title":"\ub9ac\uc18c\uc2a4\ub780"},{"location":"concepts/resources/#resourcelocation","text":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ub9ac\uc18c\uc2a4\ub97c ResourceLocation , \ub610\ub294 \ub9ac\uc18c\uc2a4 \uc704\uce58\ub85c \uad6c\ubd84\ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc704\uce58\ub294 2\uac00\uc9c0\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\ub294\ub370, \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\uc640 \uacbd\ub85c\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ub9ac\uc18c\uc2a4 \uc704\uce58\uac00 \ub098\ud0c0\ub0b4\ub294 \uc5d0\uc14b \ub370\uc774\ud130\uc758 \ud30c\uc77c \uacbd\ub85c\ub294 asset/<\ub124\uc784 \uc2a4\ud398\uc774\uc2a4>/<ctx>/<\uacbd\ub85c> \uc785\ub2c8\ub2e4, ctx \ub294 \uc0c1\ud669\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc9c8 \uc218 \uc788\ub294 \ub514\ub809\ud130\ub9ac \uacbd\ub85c\uc758 \uc77c\ubd80\uc785\ub2c8\ub2e4, \uc18c\ub9ac \ub370\uc774\ud130\uc5d0 \uc811\uadfc\ud560 \ub54c\ub294 ctx \ub294 sounds \uac00 \ub418\uba70, \ud14d\uc2a4\uccd0\uc5d0 \uc811\uadfc\ud560 \ub54c\uc5d0\ub294 ctx \uac00 textures \uac00 \ub429\ub2c8\ub2e4. \uadf8 \uc678\uc5d0 ctx \uac00 \ud544\uc694\uac00 \uc5c6\ub294 \uc0c1\ud669\uc5d0\uc120 ctx \uac00 \uc0dd\ub7b5\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc704\uce58\ub97c \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\ud558\uac70\ub098, \ubb38\uc790\uc5f4\ub85c\ubd80\ud130 \uc77d\uc5b4\ub4e4\uc77c \ub54c\ub294 <\ub124\uc784 \uc2a4\ud398\uc774\uc2a4>:<\uacbd\ub85c> \ud615\uc2dd\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ubb38\uc790\uc5f4\ub85c\ubd80\ud130 \uc77d\uc5b4\ub4e4\uc77c\ub54c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\uac00 \uc5c6\ub2e4\uba74 \uae30\ubcf8\uac12\uc73c\ub85c \u201cminecraft\u201d\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ubaa8\ub4dc\ub4e4\uc740 \ub300\uac1c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub85c \ubaa8\ub4dc\uc758 \uc544\uc774\ub514\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4(\uc608: examplemod \ub77c\ub294 \uc544\uc774\ub514\ub97c \uac00\uc9c4 \ubaa8\ub4dc\ub294 \uc5d0\uc14b\uc744 assets/examplemod \uc5d0, \ub370\uc774\ud130\ub97c data/examplemod \uc5d0 \ub9cc\ub4ed\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc774\ub97c \uac00\ub9ac\ud0a4\ub294 \ub9ac\uc18c\uc2a4 \uc704\uce58\ub294 examplemod:<\uacbd\ub85c> \uc785\ub2c8\ub2e4). \uc774\ub294 \ubb34\uc870\uac74 \ub530\ub77c\uc57c \ud558\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4, \uac00\ub054\uc529 \ub2e4\ub978 \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud560 \ub54c\ub3c4 \uc788\uc73c\uba70, \uc2ec\uc9c0\uc5b4 \ubaa8\ub4dc \ud558\ub098\uc5d0\uc11c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4 \uc5ec\ub7ec\uac1c\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud560 \ub54c\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc704\uce58\ub294 \uc0ac\uc2e4 \ub9ac\uc18c\uc2a4 \uc2dc\uc2a4\ud15c \ub9d0\uace0 \ub2e4\ub978\uacf3\uc5d0\uc11c\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4, \uc65c\ub0d0\ud558\uba74 \uc5ec\ub7ec \ubaa8\ub4dc\uc5d0\uc11c \ucd94\uac00\ud558\ub294 \ub2e4\uc591\ud55c \uac1d\uccb4\ub4e4\uc744 \uac04\ub2e8\ud558\uac8c \uad6c\ubcc4\ud558\ub294\ub370 \ub531 \uc88b\uae30 \ub54c\ubb38\uc774\uc8e0.","title":"ResourceLocation"},{"location":"concepts/sides/","text":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \uc0ac\uc774\ub4dc \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubaa8\ub4dc\ub97c \uac1c\ubc1c\ud558\uba74\uc11c \uc219\uc9c0\ud574\uc57c \ud560 \ub9e4\uc6b0 \uc911\uc694\ud55c \uac1c\ub150\uc740 \u201c\ud074\ub77c\uc774\uc5b8\ud2b8 \uc0ac\uc774\ub4dc\u201d \uc640 \u201c\uc11c\ubc84 \uc0ac\uc774\ub4dc\u201d \uc785\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud574 \ub9ce\uc740 \uc0ac\ub78c\ub4e4\uc774 \uc624\ud574\ud558\uace0 \uc788\uace0, \uc774\ub85c \uc778\ud574 \uac8c\uc784\uc744 \ud295\uae30\uac8c \ud558\uc9c4 \uc54a\uc9c0\ub9cc \uc608\uae30\uce58 \ubabb\ud55c \ub3d9\uc791\uc744 \ud558\ub3c4\ub85d \ub9cc\ub4e4 \uc218 \uc788\ub294 \ud574\uacb0\ud558\uae30 \uae4c\ub2e4\ub85c\uc6b4 \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc774\ub4dc\uc758 \uc885\ub958\ub4e4 \ub204\uad70\uac00 \u201c\ud074\ub77c\uc774\uc5b8\ud2b8\u201d \ub610\ub294 \u201c\uc11c\ubc84\u201d \uc5d0 \ub300\ud574 \uc774\uc57c\uae30\ud560 \ub54c, \uaf64\ub098 \uc9c1\uad00\uc801\uc73c\ub85c \uac8c\uc784\uc758 \ubb34\uc2a8 \ubd80\ubd84\uc744 \ub73b\ud558\ub294\uc9c0 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub530\uc9c0\uace0 \ubcf4\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \uc720\uc800\uc640 \uc0c1\ud638\uc791\uc6a9 \ud558\ub294 \uac83\uc774\uace0 \uc11c\ubc84\ub294 \uba40\ud2f0 \ud50c\ub808\uc774\ub97c \uc704\ud574 \uc5ec\ub7ec \uc720\uc800\uac00 \uc811\uc18d\ud558\ub294 \uac83\uc774\uc9c0\uc694. \uac04\ub2e8\ud558\ub124\uc694, \uc548\uadf8\ub7f0\uac00\uc694? \uc0ac\uc2e4\uc740 \uadf8\ub807\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc0ac\uc774\ub4dc\ub97c \uad6c\ubd84\ud558\ub294\ub370 \ubaa8\ud638\ud55c \uc810\uc774 \uc788\uc744 \uc218 \uc788\ub294\ub370, \uadf8\ub807\uae30\uc5d0 \uc5ec\uae30 \ud655\uc2e4\ud558\uac8c \u201c\ud074\ub77c\uc774\uc5b8\ud2b8\u201d \ub610\ub294 \u201c\uc11c\ubc84\u201d \uac00 \uac00\uc9c0\ub294 4\uac00\uc9c0 \uc758\ubbf8\ub97c \uc815\ub9ac\ud574 \ub193\uc558\uc2b5\ub2c8\ub2e4: \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 - \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 \ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub97c \ub7f0\ucc98\ub85c \uc2e4\ud589\ud558\uc600\uc744\ub54c \ucf1c\uc9c0\ub294 \ud504\ub85c\uadf8\ub7a8 \uc804\uccb4\ub97c \ub73b\ud569\ub2c8\ub2e4. \uc774\ub294 \ubaa8\ub4e0 \uc2a4\ub808\ub4dc, \ud504\ub85c\uc138\uc2a4, \uadf8\ub798\ud53d\uc744 \ud45c\uc2dc\ud558\ub294 \uc0c1\ud638 \uc791\uc6a9 \uac00\ub2a5\ud55c \uc0dd\uba85\uc8fc\uae30 \ub3d9\uc548 \uc2e4\ud589\ub418\ub294 \uc11c\ube44\uc2a4\ub4e4\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. \ubb3c\ub9ac \uc11c\ubc84 - \uc804\uc6a9 \uc11c\ubc84\ub77c\uace0 \ubd88\ub9ac\uae30\ub3c4 \ud569\ub2c8\ub2e4. \ubb3c\ub9ac \uc11c\ubc84 \ub294 \uc544\ubb34 \uc885\ub958\uc758 \u201cminecraft_server.jar\u201d \uc744 \uc2e4\ud589\ud558\uba74 \ucf1c\uc9c0\ub294, \ud50c\ub808\uc774 \uac00\ub2a5\ud55c GUI \ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\ub294 \ud504\ub85c\uadf8\ub7a8 \uc804\uccb4\ub97c \ub73b\ud569\ub2c8\ub2e4. \ub17c\ub9ac \uc11c\ubc84 - \ub17c\ub9ac \uc11c\ubc84 \ub294 \uac8c\uc784\uc758 \ub17c\ub9ac \uc5f0\uc0b0\uc744 \uc218\ud589\ud558\ub294 \uac83\uc785\ub2c8\ub2e4: \ubaac\uc2a4\ud130 \uc0dd\uc131, \ub0a0\uc528 \uc870\uc808, \uc778\ubca4\ud1a0\ub9ac \uac31\uc2e0, \ucc44\ub825 \uad00\ub9ac, \ubaac\uc2a4\ud130\uc758 \ud589\ub3d9 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub17c\ub9ac \uc11c\ubc84\ub294 \ubb3c\ub9ac \uc11c\ubc84\uc5d0 \uc874\uc7ac\ud558\ub098, \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uac19\uc774 \uc874\uc7ac\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc2f1\uae00 \ud50c\ub808\uc774 \uc6d4\ub4dc\uc5d0\ub294 Server Thread \uc5d0 \ub17c\ub9ac \uc11c\ubc84\uac00 \uc5b8\uc81c\ub098 \uc2e4\ud589\ub429\ub2c8\ub2e4. \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 - \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 \ub294 \ud50c\ub808\uc774\uc5b4\uc758 \uc785\ub825\uc744 \ubc1b\uace0 \ub17c\ub9ac \uc11c\ubc84\ub85c \uc804\ub2ec\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub610, \ub17c\ub9ac \uc11c\ubc84\ub85c \ubd80\ud130 \uc815\ubcf4\ub97c \ubc1b\uc544 \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \uadf8\ub798\ud53d\uc744 \ud65c\uc6a9\ud574 \ud45c\uc2dc\ud558\uae30\ub3c4 \ud569\ub2c8\ub2e4. \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 Render Thread \uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4\ub9cc, \uc624\ub514\uc624\ub098 \uccad\ud06c \ubc30\uce6d \ub4f1\uacfc \uac19\uc740 \uc791\uc5c5\ub4e4\uc744 \ucc98\ub9ac\ud558\uae30 \uc704\ud574 \ucd94\uac00\uc801\uc778 \uc2a4\ub808\ub4dc\uac00 \ub354 \uc2e4\ud589\ub429\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0\uc5d0\uc11c\ub294 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\ub97c Dist \uc5f4\uac70\ud615\uc744 \uc0ac\uc6a9\ud574 \ub300\ud45c\ud569\ub2c8\ub2e4, \ub17c\ub9ac \uc0ac\uc774\ub4dc\ub294 LogicalSide \uc5f4\uac70\ud615\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub300\ud45c\ud569\ub2c8\ub2e4. \uc0ac\uc774\ub4dc\ubcc4 \uc5f0\uc0b0 \uc218\ud589\ud558\uae30 Level#isClientSide \uc774 boolean \ud544\ub4dc\ub294 \uc0ac\uc774\ub4dc\ub97c \ud655\uc778\ud558\ub294 \ubc29\ubc95\uc911 \uac00\uc7a5 \uc790\uc8fc \uc4f0\uc785\ub2c8\ub2e4. Level \uac1d\uccb4\uc5d0 \uc774 \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub808\ubca8\uc774 \uc18d\ud558\ub294 \ub17c\ub9ac \uc0ac\uc774\ub4dc\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uc758 \uac12\uc774 true \ub77c\uba74 \uadf8 \ub808\ubca8\uc740 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\ub2e4\ub294 \uac83\uc774\uace0, false \ub97c \ubc18\ud658\ud558\uba74 \ub17c\ub9ac \uc11c\ubc84\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 \ubb3c\ub9ac \uc11c\ubc84\uc5d0\uc11c\ub294 \ub298 false \ub9cc \ubc18\ud658\ud569\ub2c8\ub2e4. \uadf8\ub807\uc9c0\ub9cc \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ud3ec\ud568\ub41c \ub17c\ub9ac \uc11c\ubc84 \ub610\ud55c false \ub97c \ubc18\ud658\ud558\uae30 \ub54c\ubb38\uc5d0, \uc774 \uba54\uc11c\ub4dc\uac00 false \ub97c \ubc18\ud658\ud55c\ub2e4\uace0 \ud574\uc11c \ud574\ub2f9 \ub808\ubca8\uc774 \ubb3c\ub9ac \uc11c\ubc84\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\ub2e4\uace0 \uc9d0\uc791\ud558\uc2dc\uba74 \uc548\ub429\ub2c8\ub2e4. \uc774 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ub17c\ub9ac \uc5f0\uc0b0\uc774\ub098 \uac8c\uc784 \uba54\uce74\ub2c9\uc744 \ucc98\ub9ac\ud574\uc57c \ud560\uc9c0\ub97c \uacb0\uc815\ud558\ub3c4\ub85d \ud558\uc138\uc694. \uc608\ub97c \ub4e4\uc5b4, \ud50c\ub808\uc774\uc5b4\uac00 \ube14\ub85d\uc744 \ud074\ub9ad\ud560 \ub54c\ub9c8\ub2e4 \ud53c\ud574\ub97c \uc8fc\uace0 \uc2f6\ub2e4\uba74, \ub610\ub294 \uae30\uacc4\ub97c \uc0ac\uc6a9\ud574 \ud759\uc744 \ub2e4\uc774\uc544\ubaac\ub4dc\ub85c \uac00\uacf5\ud558\uace0 \uc2f6\ub2e4\uba74, #isClientSide \uac00 false \uc784\uc744 \uba3c\uc800 \ud655\uc778\ud55c \uc774\ud6c4 \ub17c\ub9ac \uc5f0\uc0b0\uc744 \uc218\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. \ub17c\ub9ac \uc5f0\uc0b0\uc744 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc218\ud589\ud558\uba74, \uc6b4\uc774 \uc88b\uc740 \uacbd\uc6b0\uc5d4 \ube44\ub3d9\uae30\ud654(\uc720\ub839 \uc5d4\ud2f0\ud2f0, \uc815\ud655\ud558\uc9c0 \uc54a\uc740 \uc2a4\ud0ef \ub4f1)\uac00 \uc77c\uc5b4\ub0a0 \uc218 \uc788\uace0, \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \uac8c\uc784\uc774 \ud295\uae41\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\ub2e4\uba74 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud558\uc138\uc694. DistExecutor \ub97c \uc81c\uc678\ud558\uba74, \uc774\uac70 \ub9d0\uace0 \ub2e4\ub978 \ubc29\ubc95\uc73c\ub85c \uc0ac\uc774\ub4dc\ub97c \ud655\uc778\ud560 \ud544\uc694\uac00 \uac70\uc758 \uc5c6\uc2b5\ub2c8\ub2e4. DistExecutor \uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ub3d9\uc77c\ud55c \ubaa8\ub4dc jar \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud55c\ub2e4\ub294 \uac83\uacfc, \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uc11c\ubc84\uac00 \uc544\uc608 \ub2e4\ub978 jar \ud30c\uc77c\ub85c \uad6c\ubd84\ub41c\ub2e4\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uba74, \ubaa8\ub4dc\uac00 \uc5b4\ub5bb\uac8c \ud558\ub098\uc758 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\ub9cc \uc874\uc7ac\ud558\ub294 \ucf54\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294\uc9c0 \uc758\ubb38\uc810\uc774 \uc0dd\uae41\ub2c8\ub2e4. net.minecraft.client \ud328\ud0a4\uc9c0\uc5d0 \ub4e4\uc5b4\uc788\ub294 \ucf54\ub4dc\ub4e4\uc740 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub9cc \uc874\uc7ac\ud569\ub2c8\ub2e4. \ub9cc\uc57d \uc774 \ucf54\ub4dc\ub4e4\uc744 \uc5b4\ub5bb\uac8c\ub4e0 \ucc38\uc870\ud558\ub294 \ud074\ub798\uc2a4\ub97c \uc791\uc131\ud558\uc2dc\uba74, \uadf8 \ucf54\ub4dc\ub4e4\uc774 \uc5c6\ub294 \ud658\uacbd\uc5d0\uc11c \uadf8 \ud074\ub798\uc2a4\uac00 \ubd88\ub7ec\uc640\uc9c8 \ub54c \uac8c\uc784\uc774 \ud295\uae41\ub2c8\ub2e4. \ucd08\ubcf4\ubd84\ub4e4\uc774 \ub9ce\uc774 \ud558\uc2dc\ub294 \uc2e4\uc218\uac00 Minecraft.getInstance().<\ubb34\uc5b8\uac00> \ub97c \ube14\ub85d\uc774\ub098 \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uac83\uc778\ub370, \uc774\ub294 \uadf8 \ud074\ub798\uc2a4\uac00 \ubd88\ub7ec\uc640\uc9c0\ub294 \uadf8 \uc21c\uac04 \uac8c\uc784\uc774 \ud295\uae38 \uac83\uc785\ub2c8\ub2e4. \uc774\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574 FML \uc5d0\uc120 DistExecutor \ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub294 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0 \ub530\ub77c \ub2e4\ub978 \uba54\uc11c\ub4dc\ub97c \uc2e4\ud589\ud558\uac70\ub098, \uc544\uc608 \ud55c\ucabd \uc0ac\uc774\ub4dc\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub420 \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Note \uc219\uc9c0\ud558\uc154\uc57c \ud560 \uc810\uc740 FML \uc740 \ub17c\ub9ac \uc0ac\uc774\ub4dc\ub97c \uc774\uc6a9\ud574 \uc5b8\uc81c \ucf54\ub4dc\ub97c \uc2e4\ud589\ud560\uc9c0\ub97c \uacb0\uc815\ud55c\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uc2f1\uae00 \ud50c\ub808\uc774 \uc6d4\ub4dc(\ub17c\ub9ac \uc11c\ubc84\uc640 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc788\ub294 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8) \uc5d0\uc11c\ub294 Dist.CLIENT \uac00 \uc0ac\uc6a9\ub429\ub2c8\ub2e4! DistExecutor \ub294 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud560 Supplier \ub97c \uc804\ub2ec\ubc1b\ub294 \uac83\uc73c\ub85c \uc791\ub3d9\ud558\ub294\ub370, \uc774\ub294 invokedynamic JVM \uba85\ub839 \uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub798\uc2a4 \ub85c\ub529\uc744 \ub9c9\uc544, \ub7f0\ud0c0\uc784 \ub3c4\uc911 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \ud074\ub798\uc2a4\ub97c \ubd88\ub7ec\uc624\ub824\uace0 \uc2dc\ub3c4\ud558\ub294 \uac83\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4. \uc774\ub54c \ud638\ucd9c\ub420 \uba54\uc11c\ub4dc\ub294 \uc815\uc801 \uba54\uc11c\ub4dc\uc774\uc5b4\uc57c \ud558\uba70 \ub2e4\ub978 \ud074\ub798\uc2a4\uc5d0 \uc815\uc758\ub418\uc5b4 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud574\ub2f9 \uc815\uc801 \uba54\uc11c\ub4dc\uac00 \ubc1b\ub294 \uc778\uc790\uac00 \uc5c6\ub2e4\uba74, Supplier \ub97c \uc804\ub2ec\ud558\uae30 \ubcf4\ub2e8 \uba54\uc11c\ub4dc \ub808\ud37c\ub7f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. DistExecutor \uc5d0\ub294 \ub300\ud45c\uc801\uc73c\ub85c 2\uac1c\uc758 \uba54\uc11c\ub4dc\uac00 \uc788\ub294\ub370: #runWhenOn \uacfc #callWhenOn \uc785\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub4e4\uc740 \uc804\ub2ec\ubc1b\uc740 \uba54\uc11c\ub4dc\ub97c \uc2e4\ud589\ud560 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc640, \uc2e4\ud589\ub420 \uba54\uc11c\ub4dc\ub4e4\uc744 \ubc1b\uc2b5\ub2c8\ub2e4. runWhenOn \uc740 \uacb0\uacfc\ub97c \ubc18\ud658\ud558\uc9c0 \uc54a\uc73c\uba70, callWhenOn \uc740 \uacb0\uacfc\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774\ub54c callWhenOn \uc740 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0 \ub530\ub77c null \uc744 \ubc18\ud658\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ub610, \uc774 \ub450 \uba54\uc11c\ub4dc\ub4e4\uc740 #safe* \uc640 #unsafe* \ub85c \ub2e4\uc2dc \ub098\ub258\ub294\ub370, \uc774 \ub458\uc758 \ucc28\uc774\uc810\uc740 \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c\uc758 \uae30\ub2a5 \ucc28\uc774\uc785\ub2c8\ub2e4, #safe* \ub294 \uc804\ub2ec\ub41c \ub78c\ub2e4\uac00 \ub2e4\ub978 \uba54\uc11c\ub4dc\uc5d0 \uc815\uc758\ub41c \uba54\uc11c\ub4dc \ub808\ud37c\ub7f0\uc2a4\uc778\uc9c0 \ud655\uc778\ud558\ub294 \uac83\uc785\ub2c8\ub2e4, \ub9cc\uc57d \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b5\ub2c8\ub2e4. \ud574\ub2f9 \uac80\uc0ac\ub294 \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c\ub9cc \uc9c4\ud589\ub418\uae30 \ub54c\ubb38\uc5d0 \ub9b4\ub9ac\uc988 \ud658\uacbd\uc5d0\uc11c\ub294 #safe* \uc640 #unsafe* \ub294 \uae30\ub2a5\uc0c1 \ub3d9\uc77c\ud569\ub2c8\ub2e4. // \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ud074\ub798\uc2a4\uc18d \uc5b4\ub518\uac00: ExampleClass public static void unsafeRunMethodExample(Object param1, Object param2) { // ... } public static Object safeCallMethodExample() { // ... } // \uacf5\uc6a9 \ud074\ub798\uc2a4 \uc5b4\ub518\uac00 DistExecutor.unsafeRunWhenOn(Dist.CLIENT, () -> ExampleClass.unsafeRunMethodExample(var1, var2)); DistExecutor.safeCallWhenOn(Dist.CLIENT, () -> ExampleClass::safeCallMethodExample); Warning Java 9, \ub610\ub294 \uc774\ud6c4 \ubc84\uc804\uc740 invokedynamic \uba85\ub839\uc774 \ubcc0\uacbd\ub418\uc5b4 DistExecutor \uc758 #safe* \uac00 \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c \ub354 \uc774\uc0c1 \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4, \uadf8 \ub300\uc2e0 BootstrapMethodError \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b5\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 #unsafe* \ub610\ub294 FMLEnvironment#dist \ub97c \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc138\uc694. ( \ud574\ub2f9 \uc774\uc288 \ud398\uc774\uc9c0 ) \uc2a4\ub808\ub4dc \uadf8\ub8f9 \ub9cc\uc57d Thread.currentThread().getTHreadGroup() == SidedThreadGroups.Server \uac00 \ucc38\uc774\ub77c\uba74 \uadf8 \uc2a4\ub808\ub4dc\ub294 \ub17c\ub9ac \uc11c\ubc84\ub97c \uc2e4\ud589\ud558\uace0 \uc788\uc744 \uac00\ub2a5\uc131\uc774 \ud07d\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc2e4\ud589\ud560 \uac00\ub2a5\uc131\uc774 \ud07d\ub2c8\ub2e4. \uc774\ub294 Level \uac1d\uccb4\uc5d0 \uc811\uadfc\ud560 \uc218 \uc5c6\uc744\ub54c \ub17c\ub9ac \uc0ac\uc774\ub4dc\ub97c \ud655\uc778\ud558\ub294\ub370 \uc720\uc6a9\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc774\ub294 \ud655\uc2e4\ud558\uac8c \ud655\uc778\ud558\ub294 \uac83\uc774 \uc544\ub2cc \ud604\uc7ac \uc2e4\ud589\uc911\uc778 \uc2a4\ub808\ub4dc\uc758 \uadf8\ub8f9\uc744 \ube44\uad50\ud558\uc5ec \uc9d0\uc791\ud558\ub294 \uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \uac00\ub2a5\ud558\uba74 \uc0ac\uc6a9\ud558\uc2dc\uc9c0 \uc54a\ub294 \uac83\uc744 \uad8c\uc7a5\ub4dc\ub9bd\ub2c8\ub2e4. \ub300\uc2e0 Level#isClientSide \ub97c \uac00\ub2a5\ud558\uba74 \uc0ac\uc6a9\ud558\uc138\uc694. FMLEnvironment#dist \uc640 @OnlyIn FMLEnvironment#dist \ub294 \ud604\uc7ac \ucf54\ub4dc\uac00 \uc2e4\ud589\ub418\uace0 \uc788\ub294 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\ub97c \uc800\uc7a5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uac12\uc740 \ud504\ub85c\uadf8\ub7a8\uc774 \uc2dc\uc791\ub420 \ub54c \uacb0\uc815\ub418\uae30 \ub54c\ubb38\uc5d0 \uc9d0\uc791\ud558\uc9c0 \uc54a\uace0 \ud655\uc2e4\ud55c \uac12\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc774\ub97c \uc2e4\uc81c\ub85c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\ub294 \ub4dc\ubb45\ub2c8\ub2e4. \uba54\uc11c\ub4dc\ub098 \ud544\ub4dc\uc5d0 @OnlyIn(Dist) \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uba74, \uac8c\uc784\uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc5d0 \uc804\ub2ec\ub41c \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\uc9c0 \uc54a\ub2e4\uba74, \uc774 \uba64\ubc84\ub4e4\uc774 \ubd88\ub7ec\uc640\uc9c0\ub294 \uacfc\uc815\uc5d0\uc11c \uc815\uc758 \uc790\uccb4\uac00 \uc544\uc608 \uc81c\uac70\ub418\uc5b4\uc57c \ud568\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ub514\ucef4\ud30c\uc77c\ub41c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ucf54\ub4dc\uc5d0\uc11c \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc790\uc8fc \uc774\uc6a9\ub418\ub294\ub370, \uc774\ub294 \ubaa8\uc7a5\uc5d0\uc11c \ub09c\ub3c5\ud654\ub97c \uc9c4\ud589\ud558\uba70 \uc81c\uac70\ud55c \uba54\uc11c\ub4dc\ub4e4\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc4f0\uc785\ub2c8\ub2e4. \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc9c1\uc811 \uc0ac\uc6a9\ud560 \uc774\uc720\ub294 \uc544\uc608 \uc5c6\uc73c\uba70 , \ub300\uc2e0 DistExecutor \ub610\ub294 FMLEnviroment#dist \ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uc790\uc8fc\ud558\ub294 \uc2e4\uc218\ub4e4 \ub17c\ub9ac \uc0ac\uc774\ub4dc \uac00\ub85c\uc9c0\ub974\uae30 \ud55c\ucabd \ub17c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\uc11c \ubc18\ub300\ucabd\uc73c\ub85c \uc815\ubcf4\ub97c \ubcf4\ub0b4\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74, \uc5b8\uc81c\ub098 \ub124\ud2b8\uc6cc\ud06c \ud328\ud0b7\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\ub2ec\ud558\ub3c4\ub85d \ud558\uc138\uc694. \uc0ac\uc2e4 \uc2f1\uae00 \ud50c\ub808\uc774\uc5d0\uc11c \uc0ac\uc774\ub4dc\ub97c \uac00\ub85c\uc9c8\ub7ec \uc815\ubcf4\ub97c \uc9c1\uc811\uc801\uc73c\ub85c \ubcf4\ub0b4\ub294 \uac83\uc774 \uc88b\uc544\ubcf4\uc77c \uc218\ub294 \uc788\uc2b5\ub2c8\ub2e4. \uacc4\ub2e4\uac00 \uc774\ub294 \ub9ce\uc740 \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc774 \uc815\uc801 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc2f1\uae00 \ud50c\ub808\uc774\uc5d0\uc11c\ub294 \ub17c\ub9ac \uc11c\ubc84\uc640 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uac19\uc740 JVM \uc5d0\uc11c \uc2e4\ud589\ub418\uae30 \ub54c\ubb38\uc5d0, \uc2a4\ub808\ub4dc 2\uac1c\uac00 \uc815\uc801 \ud544\ub4dc \ud558\ub098\ub97c \uc77d\uace0 \uc4f0\ub294 \uac83\uc740 \uacbd\uc7c1 \uc0c1\ud0dc\ub97c \uc720\ubc1c\ud560 \uc218 \uc788\uc73c\uba70 \uc2a4\ub808\ub4dc\uc640 \uad00\ub828\ub41c \uc5ec\ub7ec \uace0\uc9c8\uc801\uc778 \ubb38\uc81c\ub4e4\uc744 \uc77c\uc73c\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610, Minecraft \ud074\ub798\uc2a4\uc640 \uac19\uc774 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ucf54\ub4dc\ub97c, \uc591\ucabd \uc0ac\uc774\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uac70\ub098, \ub610\ub294 \ub17c\ub9ac \uc11c\ubc84\uc5d0\uc11c \uc811\uadfc\ud558\ub294 \uac83 \ub610\ud55c \uc0ac\uc774\ub4dc\ub97c \uac00\ub85c\uc9c0\ub974\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ub294 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \ub514\ubc84\uadf8\ub97c \ud558\ub294 \ucd08\ubcf4\uc790 \ubd84\ub4e4\uc774 \ub193\uce58\uae30 \uc26c\uc6b4 \uac83\uc785\ub2c8\ub2e4. \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc791\ub3d9\uc740 \ub418\uaca0\uc9c0\ub9cc \ubb3c\ub9ac \uc11c\ubc84\uc5d0\uc11c\ub294 \ubc14\ub85c \ud295\uae41\ub2c8\ub2e4. \ud55c\ucabd \uc0ac\uc774\ub4dc \uc804\uc6a9 \ubaa8\ub4dc \ub9cc\ub4e4\uae30 \ucd5c\uadfc \ucd9c\uc2dc\ub41c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc5d0\uc11c \ud3ec\uc9c0\ub294 \u201csideness\u201d \uc18d\uc131\uc744 mods.toml \uc5d0\uc11c \uc81c\uac70\ud558\uc600\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \ub9d0\ud574\uc11c \ubaa8\ub4dc\ub97c \ubb3c\ub9ac \uc11c\ubc84\uc5d0 \uc124\uce58\ud558\ub4e0 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc124\uce58\ud558\ub4e0 \uc791\ub3d9\uc740 \ud574\uc57c \ud55c\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \ud55c\ucabd \uc0ac\uc774\ub4dc\ub9cc\uc744 \uc704\ud55c \ubaa8\ub4dc\ub97c \ub9cc\ub4dc\uc2e0\ub2e4\uba74 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \uc9c1\uc811\uc801\uc73c\ub85c \ub4f1\ub85d\ud558\uae30 \ubcf4\ub2e8 DistExecutor#safeRunWhenOn \ub610\ub294 DistExecutor#unsafeRunWhenOn \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub4f1\ub85d\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud558\uc5ec \ub9cc\uc57d \ubaa8\ub4dc\uac00 \uc798\ubabb\ub41c \uc0ac\uc774\ub4dc\uc5d0 \uc124\uce58\ub418\uc5c8\ub2e4\uba74 \uc874\uc7ac\ub294 \ud558\uc9c0\ub9cc \uc544\ubb34\uac83\ub3c4 \uc548\ud558\ub3c4\ub85d \ud558\ub294 \uac83\uc774\uc9c0\uc694. \uc774\ub7ec\ud55c \ubaa8\ub4dc\ub4e4\uc740 \ube14\ub85d\uc774\ub098 \uc5d4\ud2f0\ud2f0, \uc544\uc774\ud15c \ub4f1\uc744 \ub4f1\ub85d\ud558\uba74 \uc548\ub429\ub2c8\ub2e4, \uc65c\ub0d0\ud558\uba74 \uc774\ub7ec\ud55c \uac83\ub4e4\uc740 \ubc18\ub300\ucabd \uc0ac\uc774\ub4dc\uc5d0\ub3c4 \uc874\uc7ac\ud574\uc57c \ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ucd94\uac00\uc801\uc73c\ub85c \ud55c\ucabd \uc0ac\uc774\ub4dc \uc804\uc6a9 \ubaa8\ub4dc\ub97c \ub9cc\ub4dc\uc2e0\ub2e4\uba74 \uadf8 \ubaa8\ub4dc\uac00 \uc5c6\ub294 \uc720\uc800\uac00 \uc11c\ubc84\uc5d0 \ub4e4\uc5b4\uc62c \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 IExtensionPoint$DisplayTest extension point \ub97c \ub4f1\ub85d\ud558\uc5ec, \ud574\ub2f9 \uc11c\ubc84\uc5d0 \uc811\uc18d\ud558\uae30 \uc704\ud574 \uadf8 \ubaa8\ub4dc\uac00 \uc694\uad6c\ub418\uc9c0 \uc54a\ub3c4\ub85d \uc54a\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ub4f1\ub85d\ud558\ub294 \ubc29\ubc95\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \ub0b4\uc6a9\uc744 \ubaa8\ub4dc\uc758 \uba54\uc778 \ud074\ub798\uc2a4 \uc0dd\uc131\uc790\uc5d0 \ucd94\uac00\ud558\uc138\uc694: // \ubaa8\ub4dc\uac00 \uc5c6\uc5b4\ub3c4 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc11c\ubc84\uac00 \ud638\ud658\ub418\uc9c0 \uc54a\ub294\ub2e4\uace0 \ud45c\uc2dc\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\uc138\uc694. ModLoadingContext.get().registerExtensionPoint(IExtensionPoint.DisplayTest.class, () -> new IExtensionPoint.DisplayTest(() -> NetworkConstants.IGNORESERVERONLY, (a, b) -> true)); \uc774\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc11c\ubc84 \ubc84\uc804\uc774 \uc5c6\uc5b4\ub3c4 \ubb34\uc2dc\ud558\ub3c4\ub85d \ud558\uace0, \uc11c\ubc84\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ubaa8\ub4dc \uc124\uce58\ub97c \uc694\uad6c\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \uc704 \ucf54\ub4dc\ub294 \uc11c\ubc84 \uc804\uc6a9 \ub610\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ubaa8\ub4dc \ub458\ub2e4\uc5d0\uc11c \uc791\ub3d9\ud569\ub2c8\ub2e4.","title":"\uc0ac\uc774\ub4dc"},{"location":"concepts/sides/#_1","text":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubaa8\ub4dc\ub97c \uac1c\ubc1c\ud558\uba74\uc11c \uc219\uc9c0\ud574\uc57c \ud560 \ub9e4\uc6b0 \uc911\uc694\ud55c \uac1c\ub150\uc740 \u201c\ud074\ub77c\uc774\uc5b8\ud2b8 \uc0ac\uc774\ub4dc\u201d \uc640 \u201c\uc11c\ubc84 \uc0ac\uc774\ub4dc\u201d \uc785\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud574 \ub9ce\uc740 \uc0ac\ub78c\ub4e4\uc774 \uc624\ud574\ud558\uace0 \uc788\uace0, \uc774\ub85c \uc778\ud574 \uac8c\uc784\uc744 \ud295\uae30\uac8c \ud558\uc9c4 \uc54a\uc9c0\ub9cc \uc608\uae30\uce58 \ubabb\ud55c \ub3d9\uc791\uc744 \ud558\ub3c4\ub85d \ub9cc\ub4e4 \uc218 \uc788\ub294 \ud574\uacb0\ud558\uae30 \uae4c\ub2e4\ub85c\uc6b4 \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \uc0ac\uc774\ub4dc"},{"location":"concepts/sides/#_2","text":"\ub204\uad70\uac00 \u201c\ud074\ub77c\uc774\uc5b8\ud2b8\u201d \ub610\ub294 \u201c\uc11c\ubc84\u201d \uc5d0 \ub300\ud574 \uc774\uc57c\uae30\ud560 \ub54c, \uaf64\ub098 \uc9c1\uad00\uc801\uc73c\ub85c \uac8c\uc784\uc758 \ubb34\uc2a8 \ubd80\ubd84\uc744 \ub73b\ud558\ub294\uc9c0 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub530\uc9c0\uace0 \ubcf4\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \uc720\uc800\uc640 \uc0c1\ud638\uc791\uc6a9 \ud558\ub294 \uac83\uc774\uace0 \uc11c\ubc84\ub294 \uba40\ud2f0 \ud50c\ub808\uc774\ub97c \uc704\ud574 \uc5ec\ub7ec \uc720\uc800\uac00 \uc811\uc18d\ud558\ub294 \uac83\uc774\uc9c0\uc694. \uac04\ub2e8\ud558\ub124\uc694, \uc548\uadf8\ub7f0\uac00\uc694? \uc0ac\uc2e4\uc740 \uadf8\ub807\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc0ac\uc774\ub4dc\ub97c \uad6c\ubd84\ud558\ub294\ub370 \ubaa8\ud638\ud55c \uc810\uc774 \uc788\uc744 \uc218 \uc788\ub294\ub370, \uadf8\ub807\uae30\uc5d0 \uc5ec\uae30 \ud655\uc2e4\ud558\uac8c \u201c\ud074\ub77c\uc774\uc5b8\ud2b8\u201d \ub610\ub294 \u201c\uc11c\ubc84\u201d \uac00 \uac00\uc9c0\ub294 4\uac00\uc9c0 \uc758\ubbf8\ub97c \uc815\ub9ac\ud574 \ub193\uc558\uc2b5\ub2c8\ub2e4: \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 - \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 \ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub97c \ub7f0\ucc98\ub85c \uc2e4\ud589\ud558\uc600\uc744\ub54c \ucf1c\uc9c0\ub294 \ud504\ub85c\uadf8\ub7a8 \uc804\uccb4\ub97c \ub73b\ud569\ub2c8\ub2e4. \uc774\ub294 \ubaa8\ub4e0 \uc2a4\ub808\ub4dc, \ud504\ub85c\uc138\uc2a4, \uadf8\ub798\ud53d\uc744 \ud45c\uc2dc\ud558\ub294 \uc0c1\ud638 \uc791\uc6a9 \uac00\ub2a5\ud55c \uc0dd\uba85\uc8fc\uae30 \ub3d9\uc548 \uc2e4\ud589\ub418\ub294 \uc11c\ube44\uc2a4\ub4e4\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. \ubb3c\ub9ac \uc11c\ubc84 - \uc804\uc6a9 \uc11c\ubc84\ub77c\uace0 \ubd88\ub9ac\uae30\ub3c4 \ud569\ub2c8\ub2e4. \ubb3c\ub9ac \uc11c\ubc84 \ub294 \uc544\ubb34 \uc885\ub958\uc758 \u201cminecraft_server.jar\u201d \uc744 \uc2e4\ud589\ud558\uba74 \ucf1c\uc9c0\ub294, \ud50c\ub808\uc774 \uac00\ub2a5\ud55c GUI \ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\ub294 \ud504\ub85c\uadf8\ub7a8 \uc804\uccb4\ub97c \ub73b\ud569\ub2c8\ub2e4. \ub17c\ub9ac \uc11c\ubc84 - \ub17c\ub9ac \uc11c\ubc84 \ub294 \uac8c\uc784\uc758 \ub17c\ub9ac \uc5f0\uc0b0\uc744 \uc218\ud589\ud558\ub294 \uac83\uc785\ub2c8\ub2e4: \ubaac\uc2a4\ud130 \uc0dd\uc131, \ub0a0\uc528 \uc870\uc808, \uc778\ubca4\ud1a0\ub9ac \uac31\uc2e0, \ucc44\ub825 \uad00\ub9ac, \ubaac\uc2a4\ud130\uc758 \ud589\ub3d9 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub17c\ub9ac \uc11c\ubc84\ub294 \ubb3c\ub9ac \uc11c\ubc84\uc5d0 \uc874\uc7ac\ud558\ub098, \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uac19\uc774 \uc874\uc7ac\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc2f1\uae00 \ud50c\ub808\uc774 \uc6d4\ub4dc\uc5d0\ub294 Server Thread \uc5d0 \ub17c\ub9ac \uc11c\ubc84\uac00 \uc5b8\uc81c\ub098 \uc2e4\ud589\ub429\ub2c8\ub2e4. \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 - \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 \ub294 \ud50c\ub808\uc774\uc5b4\uc758 \uc785\ub825\uc744 \ubc1b\uace0 \ub17c\ub9ac \uc11c\ubc84\ub85c \uc804\ub2ec\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub610, \ub17c\ub9ac \uc11c\ubc84\ub85c \ubd80\ud130 \uc815\ubcf4\ub97c \ubc1b\uc544 \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \uadf8\ub798\ud53d\uc744 \ud65c\uc6a9\ud574 \ud45c\uc2dc\ud558\uae30\ub3c4 \ud569\ub2c8\ub2e4. \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 Render Thread \uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4\ub9cc, \uc624\ub514\uc624\ub098 \uccad\ud06c \ubc30\uce6d \ub4f1\uacfc \uac19\uc740 \uc791\uc5c5\ub4e4\uc744 \ucc98\ub9ac\ud558\uae30 \uc704\ud574 \ucd94\uac00\uc801\uc778 \uc2a4\ub808\ub4dc\uac00 \ub354 \uc2e4\ud589\ub429\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0\uc5d0\uc11c\ub294 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\ub97c Dist \uc5f4\uac70\ud615\uc744 \uc0ac\uc6a9\ud574 \ub300\ud45c\ud569\ub2c8\ub2e4, \ub17c\ub9ac \uc0ac\uc774\ub4dc\ub294 LogicalSide \uc5f4\uac70\ud615\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub300\ud45c\ud569\ub2c8\ub2e4.","title":"\uc0ac\uc774\ub4dc\uc758 \uc885\ub958\ub4e4"},{"location":"concepts/sides/#_3","text":"","title":"\uc0ac\uc774\ub4dc\ubcc4 \uc5f0\uc0b0 \uc218\ud589\ud558\uae30"},{"location":"concepts/sides/#levelisclientside","text":"\uc774 boolean \ud544\ub4dc\ub294 \uc0ac\uc774\ub4dc\ub97c \ud655\uc778\ud558\ub294 \ubc29\ubc95\uc911 \uac00\uc7a5 \uc790\uc8fc \uc4f0\uc785\ub2c8\ub2e4. Level \uac1d\uccb4\uc5d0 \uc774 \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub808\ubca8\uc774 \uc18d\ud558\ub294 \ub17c\ub9ac \uc0ac\uc774\ub4dc\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uc758 \uac12\uc774 true \ub77c\uba74 \uadf8 \ub808\ubca8\uc740 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\ub2e4\ub294 \uac83\uc774\uace0, false \ub97c \ubc18\ud658\ud558\uba74 \ub17c\ub9ac \uc11c\ubc84\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 \ubb3c\ub9ac \uc11c\ubc84\uc5d0\uc11c\ub294 \ub298 false \ub9cc \ubc18\ud658\ud569\ub2c8\ub2e4. \uadf8\ub807\uc9c0\ub9cc \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ud3ec\ud568\ub41c \ub17c\ub9ac \uc11c\ubc84 \ub610\ud55c false \ub97c \ubc18\ud658\ud558\uae30 \ub54c\ubb38\uc5d0, \uc774 \uba54\uc11c\ub4dc\uac00 false \ub97c \ubc18\ud658\ud55c\ub2e4\uace0 \ud574\uc11c \ud574\ub2f9 \ub808\ubca8\uc774 \ubb3c\ub9ac \uc11c\ubc84\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\ub2e4\uace0 \uc9d0\uc791\ud558\uc2dc\uba74 \uc548\ub429\ub2c8\ub2e4. \uc774 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ub17c\ub9ac \uc5f0\uc0b0\uc774\ub098 \uac8c\uc784 \uba54\uce74\ub2c9\uc744 \ucc98\ub9ac\ud574\uc57c \ud560\uc9c0\ub97c \uacb0\uc815\ud558\ub3c4\ub85d \ud558\uc138\uc694. \uc608\ub97c \ub4e4\uc5b4, \ud50c\ub808\uc774\uc5b4\uac00 \ube14\ub85d\uc744 \ud074\ub9ad\ud560 \ub54c\ub9c8\ub2e4 \ud53c\ud574\ub97c \uc8fc\uace0 \uc2f6\ub2e4\uba74, \ub610\ub294 \uae30\uacc4\ub97c \uc0ac\uc6a9\ud574 \ud759\uc744 \ub2e4\uc774\uc544\ubaac\ub4dc\ub85c \uac00\uacf5\ud558\uace0 \uc2f6\ub2e4\uba74, #isClientSide \uac00 false \uc784\uc744 \uba3c\uc800 \ud655\uc778\ud55c \uc774\ud6c4 \ub17c\ub9ac \uc5f0\uc0b0\uc744 \uc218\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. \ub17c\ub9ac \uc5f0\uc0b0\uc744 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc218\ud589\ud558\uba74, \uc6b4\uc774 \uc88b\uc740 \uacbd\uc6b0\uc5d4 \ube44\ub3d9\uae30\ud654(\uc720\ub839 \uc5d4\ud2f0\ud2f0, \uc815\ud655\ud558\uc9c0 \uc54a\uc740 \uc2a4\ud0ef \ub4f1)\uac00 \uc77c\uc5b4\ub0a0 \uc218 \uc788\uace0, \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \uac8c\uc784\uc774 \ud295\uae41\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\ub2e4\uba74 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud558\uc138\uc694. DistExecutor \ub97c \uc81c\uc678\ud558\uba74, \uc774\uac70 \ub9d0\uace0 \ub2e4\ub978 \ubc29\ubc95\uc73c\ub85c \uc0ac\uc774\ub4dc\ub97c \ud655\uc778\ud560 \ud544\uc694\uac00 \uac70\uc758 \uc5c6\uc2b5\ub2c8\ub2e4.","title":"Level#isClientSide"},{"location":"concepts/sides/#distexecutor","text":"\uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ub3d9\uc77c\ud55c \ubaa8\ub4dc jar \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud55c\ub2e4\ub294 \uac83\uacfc, \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uc11c\ubc84\uac00 \uc544\uc608 \ub2e4\ub978 jar \ud30c\uc77c\ub85c \uad6c\ubd84\ub41c\ub2e4\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uba74, \ubaa8\ub4dc\uac00 \uc5b4\ub5bb\uac8c \ud558\ub098\uc758 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\ub9cc \uc874\uc7ac\ud558\ub294 \ucf54\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294\uc9c0 \uc758\ubb38\uc810\uc774 \uc0dd\uae41\ub2c8\ub2e4. net.minecraft.client \ud328\ud0a4\uc9c0\uc5d0 \ub4e4\uc5b4\uc788\ub294 \ucf54\ub4dc\ub4e4\uc740 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub9cc \uc874\uc7ac\ud569\ub2c8\ub2e4. \ub9cc\uc57d \uc774 \ucf54\ub4dc\ub4e4\uc744 \uc5b4\ub5bb\uac8c\ub4e0 \ucc38\uc870\ud558\ub294 \ud074\ub798\uc2a4\ub97c \uc791\uc131\ud558\uc2dc\uba74, \uadf8 \ucf54\ub4dc\ub4e4\uc774 \uc5c6\ub294 \ud658\uacbd\uc5d0\uc11c \uadf8 \ud074\ub798\uc2a4\uac00 \ubd88\ub7ec\uc640\uc9c8 \ub54c \uac8c\uc784\uc774 \ud295\uae41\ub2c8\ub2e4. \ucd08\ubcf4\ubd84\ub4e4\uc774 \ub9ce\uc774 \ud558\uc2dc\ub294 \uc2e4\uc218\uac00 Minecraft.getInstance().<\ubb34\uc5b8\uac00> \ub97c \ube14\ub85d\uc774\ub098 \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uac83\uc778\ub370, \uc774\ub294 \uadf8 \ud074\ub798\uc2a4\uac00 \ubd88\ub7ec\uc640\uc9c0\ub294 \uadf8 \uc21c\uac04 \uac8c\uc784\uc774 \ud295\uae38 \uac83\uc785\ub2c8\ub2e4. \uc774\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574 FML \uc5d0\uc120 DistExecutor \ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub294 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0 \ub530\ub77c \ub2e4\ub978 \uba54\uc11c\ub4dc\ub97c \uc2e4\ud589\ud558\uac70\ub098, \uc544\uc608 \ud55c\ucabd \uc0ac\uc774\ub4dc\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub420 \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Note \uc219\uc9c0\ud558\uc154\uc57c \ud560 \uc810\uc740 FML \uc740 \ub17c\ub9ac \uc0ac\uc774\ub4dc\ub97c \uc774\uc6a9\ud574 \uc5b8\uc81c \ucf54\ub4dc\ub97c \uc2e4\ud589\ud560\uc9c0\ub97c \uacb0\uc815\ud55c\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uc2f1\uae00 \ud50c\ub808\uc774 \uc6d4\ub4dc(\ub17c\ub9ac \uc11c\ubc84\uc640 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc788\ub294 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8) \uc5d0\uc11c\ub294 Dist.CLIENT \uac00 \uc0ac\uc6a9\ub429\ub2c8\ub2e4! DistExecutor \ub294 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud560 Supplier \ub97c \uc804\ub2ec\ubc1b\ub294 \uac83\uc73c\ub85c \uc791\ub3d9\ud558\ub294\ub370, \uc774\ub294 invokedynamic JVM \uba85\ub839 \uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub798\uc2a4 \ub85c\ub529\uc744 \ub9c9\uc544, \ub7f0\ud0c0\uc784 \ub3c4\uc911 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \ud074\ub798\uc2a4\ub97c \ubd88\ub7ec\uc624\ub824\uace0 \uc2dc\ub3c4\ud558\ub294 \uac83\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4. \uc774\ub54c \ud638\ucd9c\ub420 \uba54\uc11c\ub4dc\ub294 \uc815\uc801 \uba54\uc11c\ub4dc\uc774\uc5b4\uc57c \ud558\uba70 \ub2e4\ub978 \ud074\ub798\uc2a4\uc5d0 \uc815\uc758\ub418\uc5b4 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud574\ub2f9 \uc815\uc801 \uba54\uc11c\ub4dc\uac00 \ubc1b\ub294 \uc778\uc790\uac00 \uc5c6\ub2e4\uba74, Supplier \ub97c \uc804\ub2ec\ud558\uae30 \ubcf4\ub2e8 \uba54\uc11c\ub4dc \ub808\ud37c\ub7f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. DistExecutor \uc5d0\ub294 \ub300\ud45c\uc801\uc73c\ub85c 2\uac1c\uc758 \uba54\uc11c\ub4dc\uac00 \uc788\ub294\ub370: #runWhenOn \uacfc #callWhenOn \uc785\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub4e4\uc740 \uc804\ub2ec\ubc1b\uc740 \uba54\uc11c\ub4dc\ub97c \uc2e4\ud589\ud560 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc640, \uc2e4\ud589\ub420 \uba54\uc11c\ub4dc\ub4e4\uc744 \ubc1b\uc2b5\ub2c8\ub2e4. runWhenOn \uc740 \uacb0\uacfc\ub97c \ubc18\ud658\ud558\uc9c0 \uc54a\uc73c\uba70, callWhenOn \uc740 \uacb0\uacfc\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774\ub54c callWhenOn \uc740 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0 \ub530\ub77c null \uc744 \ubc18\ud658\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ub610, \uc774 \ub450 \uba54\uc11c\ub4dc\ub4e4\uc740 #safe* \uc640 #unsafe* \ub85c \ub2e4\uc2dc \ub098\ub258\ub294\ub370, \uc774 \ub458\uc758 \ucc28\uc774\uc810\uc740 \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c\uc758 \uae30\ub2a5 \ucc28\uc774\uc785\ub2c8\ub2e4, #safe* \ub294 \uc804\ub2ec\ub41c \ub78c\ub2e4\uac00 \ub2e4\ub978 \uba54\uc11c\ub4dc\uc5d0 \uc815\uc758\ub41c \uba54\uc11c\ub4dc \ub808\ud37c\ub7f0\uc2a4\uc778\uc9c0 \ud655\uc778\ud558\ub294 \uac83\uc785\ub2c8\ub2e4, \ub9cc\uc57d \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b5\ub2c8\ub2e4. \ud574\ub2f9 \uac80\uc0ac\ub294 \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c\ub9cc \uc9c4\ud589\ub418\uae30 \ub54c\ubb38\uc5d0 \ub9b4\ub9ac\uc988 \ud658\uacbd\uc5d0\uc11c\ub294 #safe* \uc640 #unsafe* \ub294 \uae30\ub2a5\uc0c1 \ub3d9\uc77c\ud569\ub2c8\ub2e4. // \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ud074\ub798\uc2a4\uc18d \uc5b4\ub518\uac00: ExampleClass public static void unsafeRunMethodExample(Object param1, Object param2) { // ... } public static Object safeCallMethodExample() { // ... } // \uacf5\uc6a9 \ud074\ub798\uc2a4 \uc5b4\ub518\uac00 DistExecutor.unsafeRunWhenOn(Dist.CLIENT, () -> ExampleClass.unsafeRunMethodExample(var1, var2)); DistExecutor.safeCallWhenOn(Dist.CLIENT, () -> ExampleClass::safeCallMethodExample); Warning Java 9, \ub610\ub294 \uc774\ud6c4 \ubc84\uc804\uc740 invokedynamic \uba85\ub839\uc774 \ubcc0\uacbd\ub418\uc5b4 DistExecutor \uc758 #safe* \uac00 \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c \ub354 \uc774\uc0c1 \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4, \uadf8 \ub300\uc2e0 BootstrapMethodError \uc608\uc678\ub97c \ubc1c\uc0dd\uc2dc\ud0b5\ub2c8\ub2e4. \uadf8\ub7ec\ub2c8 #unsafe* \ub610\ub294 FMLEnvironment#dist \ub97c \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc138\uc694. ( \ud574\ub2f9 \uc774\uc288 \ud398\uc774\uc9c0 )","title":"DistExecutor"},{"location":"concepts/sides/#_4","text":"\ub9cc\uc57d Thread.currentThread().getTHreadGroup() == SidedThreadGroups.Server \uac00 \ucc38\uc774\ub77c\uba74 \uadf8 \uc2a4\ub808\ub4dc\ub294 \ub17c\ub9ac \uc11c\ubc84\ub97c \uc2e4\ud589\ud558\uace0 \uc788\uc744 \uac00\ub2a5\uc131\uc774 \ud07d\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc2e4\ud589\ud560 \uac00\ub2a5\uc131\uc774 \ud07d\ub2c8\ub2e4. \uc774\ub294 Level \uac1d\uccb4\uc5d0 \uc811\uadfc\ud560 \uc218 \uc5c6\uc744\ub54c \ub17c\ub9ac \uc0ac\uc774\ub4dc\ub97c \ud655\uc778\ud558\ub294\ub370 \uc720\uc6a9\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc774\ub294 \ud655\uc2e4\ud558\uac8c \ud655\uc778\ud558\ub294 \uac83\uc774 \uc544\ub2cc \ud604\uc7ac \uc2e4\ud589\uc911\uc778 \uc2a4\ub808\ub4dc\uc758 \uadf8\ub8f9\uc744 \ube44\uad50\ud558\uc5ec \uc9d0\uc791\ud558\ub294 \uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \uac00\ub2a5\ud558\uba74 \uc0ac\uc6a9\ud558\uc2dc\uc9c0 \uc54a\ub294 \uac83\uc744 \uad8c\uc7a5\ub4dc\ub9bd\ub2c8\ub2e4. \ub300\uc2e0 Level#isClientSide \ub97c \uac00\ub2a5\ud558\uba74 \uc0ac\uc6a9\ud558\uc138\uc694.","title":"\uc2a4\ub808\ub4dc \uadf8\ub8f9"},{"location":"concepts/sides/#fmlenvironmentdist-onlyin","text":"FMLEnvironment#dist \ub294 \ud604\uc7ac \ucf54\ub4dc\uac00 \uc2e4\ud589\ub418\uace0 \uc788\ub294 \ubb3c\ub9ac \uc0ac\uc774\ub4dc\ub97c \uc800\uc7a5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uac12\uc740 \ud504\ub85c\uadf8\ub7a8\uc774 \uc2dc\uc791\ub420 \ub54c \uacb0\uc815\ub418\uae30 \ub54c\ubb38\uc5d0 \uc9d0\uc791\ud558\uc9c0 \uc54a\uace0 \ud655\uc2e4\ud55c \uac12\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc774\ub97c \uc2e4\uc81c\ub85c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\ub294 \ub4dc\ubb45\ub2c8\ub2e4. \uba54\uc11c\ub4dc\ub098 \ud544\ub4dc\uc5d0 @OnlyIn(Dist) \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uba74, \uac8c\uc784\uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc5d0 \uc804\ub2ec\ub41c \ubb3c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\uc9c0 \uc54a\ub2e4\uba74, \uc774 \uba64\ubc84\ub4e4\uc774 \ubd88\ub7ec\uc640\uc9c0\ub294 \uacfc\uc815\uc5d0\uc11c \uc815\uc758 \uc790\uccb4\uac00 \uc544\uc608 \uc81c\uac70\ub418\uc5b4\uc57c \ud568\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ub514\ucef4\ud30c\uc77c\ub41c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ucf54\ub4dc\uc5d0\uc11c \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc790\uc8fc \uc774\uc6a9\ub418\ub294\ub370, \uc774\ub294 \ubaa8\uc7a5\uc5d0\uc11c \ub09c\ub3c5\ud654\ub97c \uc9c4\ud589\ud558\uba70 \uc81c\uac70\ud55c \uba54\uc11c\ub4dc\ub4e4\uc744 \ub098\ud0c0\ub0b4\ub294\ub370 \uc4f0\uc785\ub2c8\ub2e4. \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc9c1\uc811 \uc0ac\uc6a9\ud560 \uc774\uc720\ub294 \uc544\uc608 \uc5c6\uc73c\uba70 , \ub300\uc2e0 DistExecutor \ub610\ub294 FMLEnviroment#dist \ub97c \uc0ac\uc6a9\ud558\uc138\uc694.","title":"FMLEnvironment#dist \uc640 @OnlyIn"},{"location":"concepts/sides/#_5","text":"","title":"\uc790\uc8fc\ud558\ub294 \uc2e4\uc218\ub4e4"},{"location":"concepts/sides/#_6","text":"\ud55c\ucabd \ub17c\ub9ac \uc0ac\uc774\ub4dc\uc5d0\uc11c \ubc18\ub300\ucabd\uc73c\ub85c \uc815\ubcf4\ub97c \ubcf4\ub0b4\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74, \uc5b8\uc81c\ub098 \ub124\ud2b8\uc6cc\ud06c \ud328\ud0b7\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\ub2ec\ud558\ub3c4\ub85d \ud558\uc138\uc694. \uc0ac\uc2e4 \uc2f1\uae00 \ud50c\ub808\uc774\uc5d0\uc11c \uc0ac\uc774\ub4dc\ub97c \uac00\ub85c\uc9c8\ub7ec \uc815\ubcf4\ub97c \uc9c1\uc811\uc801\uc73c\ub85c \ubcf4\ub0b4\ub294 \uac83\uc774 \uc88b\uc544\ubcf4\uc77c \uc218\ub294 \uc788\uc2b5\ub2c8\ub2e4. \uacc4\ub2e4\uac00 \uc774\ub294 \ub9ce\uc740 \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc774 \uc815\uc801 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc2f1\uae00 \ud50c\ub808\uc774\uc5d0\uc11c\ub294 \ub17c\ub9ac \uc11c\ubc84\uc640 \ub17c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uac19\uc740 JVM \uc5d0\uc11c \uc2e4\ud589\ub418\uae30 \ub54c\ubb38\uc5d0, \uc2a4\ub808\ub4dc 2\uac1c\uac00 \uc815\uc801 \ud544\ub4dc \ud558\ub098\ub97c \uc77d\uace0 \uc4f0\ub294 \uac83\uc740 \uacbd\uc7c1 \uc0c1\ud0dc\ub97c \uc720\ubc1c\ud560 \uc218 \uc788\uc73c\uba70 \uc2a4\ub808\ub4dc\uc640 \uad00\ub828\ub41c \uc5ec\ub7ec \uace0\uc9c8\uc801\uc778 \ubb38\uc81c\ub4e4\uc744 \uc77c\uc73c\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610, Minecraft \ud074\ub798\uc2a4\uc640 \uac19\uc774 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ucf54\ub4dc\ub97c, \uc591\ucabd \uc0ac\uc774\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uac70\ub098, \ub610\ub294 \ub17c\ub9ac \uc11c\ubc84\uc5d0\uc11c \uc811\uadfc\ud558\ub294 \uac83 \ub610\ud55c \uc0ac\uc774\ub4dc\ub97c \uac00\ub85c\uc9c0\ub974\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ub294 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \ub514\ubc84\uadf8\ub97c \ud558\ub294 \ucd08\ubcf4\uc790 \ubd84\ub4e4\uc774 \ub193\uce58\uae30 \uc26c\uc6b4 \uac83\uc785\ub2c8\ub2e4. \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc791\ub3d9\uc740 \ub418\uaca0\uc9c0\ub9cc \ubb3c\ub9ac \uc11c\ubc84\uc5d0\uc11c\ub294 \ubc14\ub85c \ud295\uae41\ub2c8\ub2e4.","title":"\ub17c\ub9ac \uc0ac\uc774\ub4dc \uac00\ub85c\uc9c0\ub974\uae30"},{"location":"concepts/sides/#_7","text":"\ucd5c\uadfc \ucd9c\uc2dc\ub41c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc5d0\uc11c \ud3ec\uc9c0\ub294 \u201csideness\u201d \uc18d\uc131\uc744 mods.toml \uc5d0\uc11c \uc81c\uac70\ud558\uc600\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \ub9d0\ud574\uc11c \ubaa8\ub4dc\ub97c \ubb3c\ub9ac \uc11c\ubc84\uc5d0 \uc124\uce58\ud558\ub4e0 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc124\uce58\ud558\ub4e0 \uc791\ub3d9\uc740 \ud574\uc57c \ud55c\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \ud55c\ucabd \uc0ac\uc774\ub4dc\ub9cc\uc744 \uc704\ud55c \ubaa8\ub4dc\ub97c \ub9cc\ub4dc\uc2e0\ub2e4\uba74 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \uc9c1\uc811\uc801\uc73c\ub85c \ub4f1\ub85d\ud558\uae30 \ubcf4\ub2e8 DistExecutor#safeRunWhenOn \ub610\ub294 DistExecutor#unsafeRunWhenOn \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub4f1\ub85d\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud558\uc5ec \ub9cc\uc57d \ubaa8\ub4dc\uac00 \uc798\ubabb\ub41c \uc0ac\uc774\ub4dc\uc5d0 \uc124\uce58\ub418\uc5c8\ub2e4\uba74 \uc874\uc7ac\ub294 \ud558\uc9c0\ub9cc \uc544\ubb34\uac83\ub3c4 \uc548\ud558\ub3c4\ub85d \ud558\ub294 \uac83\uc774\uc9c0\uc694. \uc774\ub7ec\ud55c \ubaa8\ub4dc\ub4e4\uc740 \ube14\ub85d\uc774\ub098 \uc5d4\ud2f0\ud2f0, \uc544\uc774\ud15c \ub4f1\uc744 \ub4f1\ub85d\ud558\uba74 \uc548\ub429\ub2c8\ub2e4, \uc65c\ub0d0\ud558\uba74 \uc774\ub7ec\ud55c \uac83\ub4e4\uc740 \ubc18\ub300\ucabd \uc0ac\uc774\ub4dc\uc5d0\ub3c4 \uc874\uc7ac\ud574\uc57c \ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ucd94\uac00\uc801\uc73c\ub85c \ud55c\ucabd \uc0ac\uc774\ub4dc \uc804\uc6a9 \ubaa8\ub4dc\ub97c \ub9cc\ub4dc\uc2e0\ub2e4\uba74 \uadf8 \ubaa8\ub4dc\uac00 \uc5c6\ub294 \uc720\uc800\uac00 \uc11c\ubc84\uc5d0 \ub4e4\uc5b4\uc62c \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 IExtensionPoint$DisplayTest extension point \ub97c \ub4f1\ub85d\ud558\uc5ec, \ud574\ub2f9 \uc11c\ubc84\uc5d0 \uc811\uc18d\ud558\uae30 \uc704\ud574 \uadf8 \ubaa8\ub4dc\uac00 \uc694\uad6c\ub418\uc9c0 \uc54a\ub3c4\ub85d \uc54a\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ub4f1\ub85d\ud558\ub294 \ubc29\ubc95\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \ub0b4\uc6a9\uc744 \ubaa8\ub4dc\uc758 \uba54\uc778 \ud074\ub798\uc2a4 \uc0dd\uc131\uc790\uc5d0 \ucd94\uac00\ud558\uc138\uc694: // \ubaa8\ub4dc\uac00 \uc5c6\uc5b4\ub3c4 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc11c\ubc84\uac00 \ud638\ud658\ub418\uc9c0 \uc54a\ub294\ub2e4\uace0 \ud45c\uc2dc\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\uc138\uc694. ModLoadingContext.get().registerExtensionPoint(IExtensionPoint.DisplayTest.class, () -> new IExtensionPoint.DisplayTest(() -> NetworkConstants.IGNORESERVERONLY, (a, b) -> true)); \uc774\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc11c\ubc84 \ubc84\uc804\uc774 \uc5c6\uc5b4\ub3c4 \ubb34\uc2dc\ud558\ub3c4\ub85d \ud558\uace0, \uc11c\ubc84\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ubaa8\ub4dc \uc124\uce58\ub97c \uc694\uad6c\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \uc704 \ucf54\ub4dc\ub294 \uc11c\ubc84 \uc804\uc6a9 \ub610\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ubaa8\ub4dc \ub458\ub2e4\uc5d0\uc11c \uc791\ub3d9\ud569\ub2c8\ub2e4.","title":"\ud55c\ucabd \uc0ac\uc774\ub4dc \uc804\uc6a9 \ubaa8\ub4dc \ub9cc\ub4e4\uae30"},{"location":"datagen/","text":"\ub370\uc774\ud130 \uc0dd\uc131\uae30 \ub370\uc774\ud130 \uc0dd\uc131\uae30\ub294 \ucf54\ub4dc\ub97c \uc0ac\uc6a9\ud574 \ubaa8\ub4dc\uc5d0 \ud544\uc694\ud55c \uc5d0\uc14b\uacfc \ub370\uc774\ud130\ub97c \ub9cc\ub4dc\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc5d0\uc14b\uacfc \ub370\uc774\ud130 \ud30c\uc77c\ub4e4\uc758 \ub0b4\uc6a9\uc744 \ucf54\ub4dc\uc5d0\uc11c \uc815\uc758\ud558\uace0 \ubb38\ubc95\uc774\ub098 \uaddc\uaca9\uc5d0 \uc0c1\uad00\uc5c6\uc774 \ud3b8\ud558\uac8c \uc0dd\uc131\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \ub370\uc774\ud130 \uc0dd\uc131 \uc2dc\uc2a4\ud15c\uc740 \uba54\uc778 \ud074\ub798\uc2a4 net.minecraft.data.Main \uc5d0\uc11c \ubd88\ub7ec\uc635\ub2c8\ub2e4. \uac8c\uc784 \uc2e4\ud589 \uba85\ub839 \uc778\uc218\ub97c \ubc14\uafd4 \uc5b4\ub5a4 \ubaa8\ub4dc\uc758 \ub370\uc774\ud130\ub97c \uc218\uc9d1\ud560\uc9c0, \uc5b4\ub5a4 \ud30c\uc77c\ub4e4\uc744 \uace0\ub824\ud560\uc9c0 \ub4f1\uc744 \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130 \uc0dd\uc131\uc744 \uad00\ub9ac\ud558\ub294 \ud074\ub798\uc2a4\ub294 net.minecraft.data.DataGenerator \uc785\ub2c8\ub2e4. MDK \uc758 build.gradle \uc740 \uae30\ubcf8\uc801\uc73c\ub85c runData \ub97c \ucd94\uac00\ud558\uc5ec \ub370\uc774\ud130 \uc0dd\uc131\uae30\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc774\ubbf8 \uc874\uc7ac\ud558\ub358 \ud30c\uc77c \ub370\uc774\ud130 \uc0dd\uc131\uc744 \ud1b5\ud574 \ub9cc\ub4e4\uc5b4\uc9c0\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 \ud14d\uc2a4\uccd0 \ubc0f \ub370\uc774\ud130\ub4e4\uc744 \ucc38\uc870\ud558\ub824\uba74, \uc77c\ub2e8 \uadf8 \ub370\uc774\ud130\ub4e4\uc774 \uc2dc\uc2a4\ud15c\uc5d0 \uc874\uc7ac\ud558\uae34 \ud558\ub294\uc9c0\ub97c \ud655\uc778\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4, \uc774\ub294 \uc774\ub7ec\ud55c \ucc38\uc870\ub4e4\uc774 \uc720\ud6a8\ud568\uc744 \ud655\uc778\ud558\uae30 \uc704\ud568\uc774\uba70, \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984 \ub4f1\uc5d0 \ubc1c\uc0dd\ud55c \uc624\ud0c0\ub97c \ucc3e\uae30 \ud3b8\ud558\uac8c \ud574\uc90d\ub2c8\ub2e4. ExistingFileHelper \ub294 \ud574\ub2f9 \ub370\uc774\ud130\ub4e4\uc774 \uc874\uc7ac\ud558\ub294\uc9c0 \ud655\uc778\ud558\ub294 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uc774 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub294 GatherDataEvent#getExistingFileHelper \ub97c \ud1b5\ud574 \ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba85\ub839 \uc778\uc218 --existing <folderpath> \ub294 \ub370\uc774\ud130 \uc0dd\uc131\uc911 \uc9c0\uc815\ub41c \ud3f4\ub354, \uadf8\ub9ac\uace0 \uadf8 \ud558\uc704 \ud3f4\ub354\ub4e4\uc5d0 \uc788\ub294 \ub370\uc774\ud130\ub4e4\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \ucd94\uac00\uc801\uc73c\ub85c, \uba85\ub839 \uc778\uc218 --existing-mod <modid> \ub294 \ub370\uc774\ud130 \uc0dd\uc131\uc911 \uc9c0\uc815\ub41c \ubaa8\ub4dc\uc758 \ub9ac\uc18c\uc2a4\ub4e4\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc778\uc218\ub4e4\uc744 \uc9c0\uc815\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 \uc624\uc9c1 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uae30\ubcf8 \ub370\uc774\ud130\ud329\uacfc \ub9ac\uc18c\uc2a4\ud329\ub9cc\uc774 ExistingFileHelper \uc5d0 \ub4f1\ub85d\ub429\ub2c8\ub2e4. \uc0dd\uc131 \ubaa8\ub4dc \ub370\uc774\ud130 \uc0dd\uc131\uae30\ub294 4\uac00\uc9c0 \uc885\ub958\uc758 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uc5b4\ub5a4 \uc885\ub958\uc758 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud560 \uc9c0\ub294 \uac8c\uc784 \uc2e4\ud589 \uba85\ub839 \uc778\uc218\ub97c \ud1b5\ud574 \uc124\uc815\ud560 \uc218 \uc788\uace0, \uc5b4\ub5a4 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud558\ub824\uace0 \ud558\ub294\uc9c0\ub294 GatherDataEvent#include*** \uba54\uc11c\ub4dc\ub85c \ud655\uc778\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8 \uc5d0\uc14b asset \uc5d0 \ub4e4\uc5b4\uac00\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ud30c\uc77c\ub4e4\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4: \ube14\ub85d/\uc544\uc774\ud15c \ubaa8\ub378, BlockState \uc815\uc758 JSON \ud30c\uc77c\ub4e4, \uc5b8\uc5b4 \ud30c\uc77c \ub4f1. --client , #includeClient \uc11c\ubc84 \ub370\uc774\ud130 data \uc548\uc5d0 \ub4e4\uc5b4\uac00\ub294 \uc11c\ubc84 \uc804\uc6a9 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4: \uc870\ud569\ubc95, \ub3c4\uc804\uacfc\uc81c, \ud0dc\uadf8 \ub4f1. --server , #includeServer \uac1c\ubc1c \ub3c4\uad6c \uac1c\ubc1c \ub3c4\uad6c\ub4e4\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4: SNBT \ub97c NBT \ub85c \ubc14\uafb8\uae30, \uadf8 \ubc18\ub300\ub85c \ubc14\uafb8\uae30 \ub4f1. --dev , #includeDev \ubcf4\uace0\uc11c \uc791\uc131 \ub4f1\ub85d\ub41c \ubaa8\ub4e0 \ube14\ub85d, \uc544\uc774\ud15c, \uba85\ub839\uc5b4\ub4f1\uc744 \ub364\ud504\ud569\ub2c8\ub2e4. --reports , #includeReports \ubaa8\ub4e0 \uc885\ub958\uc758 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud558\ub824\uba74 -all \uc744 \uc0ac\uc6a9\ud558\uc138\uc694. \ub370\uc774\ud130 \uc0dd\uc131\ud558\uae30 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574\uc11c\ub294, \ub370\uc774\ud130 \uc81c\uacf5\uc790\uac00 \ud544\uc694\ud55c\ub370, \uc774\ub294 \uc5b4\ub5a4 \ub370\uc774\ud130\uac00 \uc0dd\uc131\ub418\uace0 \uc81c\uacf5\ub420 \uc9c0\ub97c \uc815\uc758\ud558\ub294 \ud074\ub798\uc2a4 \uc785\ub2c8\ub2e4. \ubaa8\ub4e0 \ub370\uc774\ud130 \uc81c\uacf5\uc790\ub4e4\uc740 DataProvider \ub97c \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ub300\ubd80\ubd84\uc758 \uc5d0\uc14b\uacfc \ub370\uc774\ud130\uc5d0 \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c \ub370\uc774\ud130 \uc81c\uacf5\uc790\ub97c \ucd94\uc0c1\ud654 \ud074\ub798\uc2a4\ub85c \uc81c\uacf5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4, \uadf8\ub807\uae30\uc5d0 \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc740 \uc815\ud574\uc9c4 \uba54\uc11c\ub4dc \uba87\uac1c\ub9cc \uc7ac\uc815\uc758\ud558\uba74 \ub429\ub2c8\ub2e4. GatherDataEvent \ub294 \ub370\uc774\ud130 \uc0dd\uc131\uae30\uac00 \ucd08\uae30\ud654 \ub420 \ub54c \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4, DataGenerator \uc778\uc2a4\ud134\uc2a4\ub97c \uc774 \uc774\ubca4\ud2b8\uc5d0\uc11c \uc811\uadfc\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DataGenerator#addProvider \ub97c \uc0ac\uc6a9\ud574 \ub370\uc774\ud130 \uc81c\uacf5\uc790\ub97c \ub9cc\ub4e4\uace0 \ub4f1\ub85d\ud558\uc138\uc694. \ud074\ub77c\uc774\uc5b8\ud2b8 \uc5d0\uc14b net.minecraftforge.common.data.LanguageProvider - \uc5b8\uc5b4 \ubb38\uc790\uc5f4 \uc0dd\uc131: #addTranslations \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694 ModelProvider<?> - \ubaa8\ub4e0 \ubaa8\ub378 \uc81c\uacf5\uc790\ub4e4\uc758 \uae30\ubc18\uc774 \ub418\ub294 \ud074\ub798\uc2a4 \uc774 \ud074\ub798\uc2a4\ub4e4\uc740 net.minecraftforge.client.model.generators \ud328\uce90\uc9c0\uc5d0 \uc788\uc2b5\ub2c8\ub2e4 ItemModelProvider - \uc544\uc774\ud15c \ubaa8\ub378 \uc0dd\uc131; #registerModels \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694 BlockStateProvider - BlockState \uc815\uc758, \ube14\ub85d \ubaa8\ub378, \uc544\uc774\ud15c \ubaa8\ub378 \uc0dd\uc131: #registerStatesAndModels \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694 BlockModelProvider - \ube14\ub85d \ubaa8\ub378 \uc0dd\uc131; #registerModels \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694 \uc11c\ubc84 \ub370\uc774\ud130 net.minecraftforge.common.data.GlobalLootModifierProvider - \uc804\uccb4 \uc804\ub9ac\ud488 \uc218\uc815 \ub370\uc774\ud130 \uc0dd\uc131 ; #start \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694 \uc544\ub798 \ud074\ub798\uc2a4\ub4e4\uc740 net.minecraft.data \ud328\ud0a4\uc9c0\uc5d0 \uc788\uc2b5\ub2c8\ub2e4 LootTableProvider - \ucee8\ud14c\uc774\ub108 \uc804\ub9ac\ud488 \ud14c\uc774\ube14 \uc0dd\uc131 ; #getTables \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694 RecipeProvider - \uc870\ud569\ubc95 \uacfc \uc870\ud569\ubc95\uc774 \ud574\uae08\ud558\ub294 \ub3c4\uc804\uacfc\uc81c \ub370\uc774\ud130 \uc0dd\uc131; #buildCraftingRecipes \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694 TagsProvider - \ud0dc\uadf8 \ub370\uc774\ud130 \uc0dd\uc131 ; #addTags \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694 AdvancementProvider - \ub3c4\uc804\uacfc\uc81c \ub370\uc774\ud130 \uc0dd\uc131 ; #registerAdvancements \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694","title":"\uc18c\uac1c"},{"location":"datagen/#_1","text":"\ub370\uc774\ud130 \uc0dd\uc131\uae30\ub294 \ucf54\ub4dc\ub97c \uc0ac\uc6a9\ud574 \ubaa8\ub4dc\uc5d0 \ud544\uc694\ud55c \uc5d0\uc14b\uacfc \ub370\uc774\ud130\ub97c \ub9cc\ub4dc\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc5d0\uc14b\uacfc \ub370\uc774\ud130 \ud30c\uc77c\ub4e4\uc758 \ub0b4\uc6a9\uc744 \ucf54\ub4dc\uc5d0\uc11c \uc815\uc758\ud558\uace0 \ubb38\ubc95\uc774\ub098 \uaddc\uaca9\uc5d0 \uc0c1\uad00\uc5c6\uc774 \ud3b8\ud558\uac8c \uc0dd\uc131\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \ub370\uc774\ud130 \uc0dd\uc131 \uc2dc\uc2a4\ud15c\uc740 \uba54\uc778 \ud074\ub798\uc2a4 net.minecraft.data.Main \uc5d0\uc11c \ubd88\ub7ec\uc635\ub2c8\ub2e4. \uac8c\uc784 \uc2e4\ud589 \uba85\ub839 \uc778\uc218\ub97c \ubc14\uafd4 \uc5b4\ub5a4 \ubaa8\ub4dc\uc758 \ub370\uc774\ud130\ub97c \uc218\uc9d1\ud560\uc9c0, \uc5b4\ub5a4 \ud30c\uc77c\ub4e4\uc744 \uace0\ub824\ud560\uc9c0 \ub4f1\uc744 \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130 \uc0dd\uc131\uc744 \uad00\ub9ac\ud558\ub294 \ud074\ub798\uc2a4\ub294 net.minecraft.data.DataGenerator \uc785\ub2c8\ub2e4. MDK \uc758 build.gradle \uc740 \uae30\ubcf8\uc801\uc73c\ub85c runData \ub97c \ucd94\uac00\ud558\uc5ec \ub370\uc774\ud130 \uc0dd\uc131\uae30\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4.","title":"\ub370\uc774\ud130 \uc0dd\uc131\uae30"},{"location":"datagen/#_2","text":"\ub370\uc774\ud130 \uc0dd\uc131\uc744 \ud1b5\ud574 \ub9cc\ub4e4\uc5b4\uc9c0\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 \ud14d\uc2a4\uccd0 \ubc0f \ub370\uc774\ud130\ub4e4\uc744 \ucc38\uc870\ud558\ub824\uba74, \uc77c\ub2e8 \uadf8 \ub370\uc774\ud130\ub4e4\uc774 \uc2dc\uc2a4\ud15c\uc5d0 \uc874\uc7ac\ud558\uae34 \ud558\ub294\uc9c0\ub97c \ud655\uc778\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4, \uc774\ub294 \uc774\ub7ec\ud55c \ucc38\uc870\ub4e4\uc774 \uc720\ud6a8\ud568\uc744 \ud655\uc778\ud558\uae30 \uc704\ud568\uc774\uba70, \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984 \ub4f1\uc5d0 \ubc1c\uc0dd\ud55c \uc624\ud0c0\ub97c \ucc3e\uae30 \ud3b8\ud558\uac8c \ud574\uc90d\ub2c8\ub2e4. ExistingFileHelper \ub294 \ud574\ub2f9 \ub370\uc774\ud130\ub4e4\uc774 \uc874\uc7ac\ud558\ub294\uc9c0 \ud655\uc778\ud558\ub294 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uc774 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub294 GatherDataEvent#getExistingFileHelper \ub97c \ud1b5\ud574 \ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba85\ub839 \uc778\uc218 --existing <folderpath> \ub294 \ub370\uc774\ud130 \uc0dd\uc131\uc911 \uc9c0\uc815\ub41c \ud3f4\ub354, \uadf8\ub9ac\uace0 \uadf8 \ud558\uc704 \ud3f4\ub354\ub4e4\uc5d0 \uc788\ub294 \ub370\uc774\ud130\ub4e4\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \ucd94\uac00\uc801\uc73c\ub85c, \uba85\ub839 \uc778\uc218 --existing-mod <modid> \ub294 \ub370\uc774\ud130 \uc0dd\uc131\uc911 \uc9c0\uc815\ub41c \ubaa8\ub4dc\uc758 \ub9ac\uc18c\uc2a4\ub4e4\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc778\uc218\ub4e4\uc744 \uc9c0\uc815\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 \uc624\uc9c1 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uae30\ubcf8 \ub370\uc774\ud130\ud329\uacfc \ub9ac\uc18c\uc2a4\ud329\ub9cc\uc774 ExistingFileHelper \uc5d0 \ub4f1\ub85d\ub429\ub2c8\ub2e4.","title":"\uc774\ubbf8 \uc874\uc7ac\ud558\ub358 \ud30c\uc77c"},{"location":"datagen/#_3","text":"\ub370\uc774\ud130 \uc0dd\uc131\uae30\ub294 4\uac00\uc9c0 \uc885\ub958\uc758 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uc5b4\ub5a4 \uc885\ub958\uc758 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud560 \uc9c0\ub294 \uac8c\uc784 \uc2e4\ud589 \uba85\ub839 \uc778\uc218\ub97c \ud1b5\ud574 \uc124\uc815\ud560 \uc218 \uc788\uace0, \uc5b4\ub5a4 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud558\ub824\uace0 \ud558\ub294\uc9c0\ub294 GatherDataEvent#include*** \uba54\uc11c\ub4dc\ub85c \ud655\uc778\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8 \uc5d0\uc14b asset \uc5d0 \ub4e4\uc5b4\uac00\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ud30c\uc77c\ub4e4\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4: \ube14\ub85d/\uc544\uc774\ud15c \ubaa8\ub378, BlockState \uc815\uc758 JSON \ud30c\uc77c\ub4e4, \uc5b8\uc5b4 \ud30c\uc77c \ub4f1. --client , #includeClient \uc11c\ubc84 \ub370\uc774\ud130 data \uc548\uc5d0 \ub4e4\uc5b4\uac00\ub294 \uc11c\ubc84 \uc804\uc6a9 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4: \uc870\ud569\ubc95, \ub3c4\uc804\uacfc\uc81c, \ud0dc\uadf8 \ub4f1. --server , #includeServer \uac1c\ubc1c \ub3c4\uad6c \uac1c\ubc1c \ub3c4\uad6c\ub4e4\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4: SNBT \ub97c NBT \ub85c \ubc14\uafb8\uae30, \uadf8 \ubc18\ub300\ub85c \ubc14\uafb8\uae30 \ub4f1. --dev , #includeDev \ubcf4\uace0\uc11c \uc791\uc131 \ub4f1\ub85d\ub41c \ubaa8\ub4e0 \ube14\ub85d, \uc544\uc774\ud15c, \uba85\ub839\uc5b4\ub4f1\uc744 \ub364\ud504\ud569\ub2c8\ub2e4. --reports , #includeReports \ubaa8\ub4e0 \uc885\ub958\uc758 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud558\ub824\uba74 -all \uc744 \uc0ac\uc6a9\ud558\uc138\uc694.","title":"\uc0dd\uc131 \ubaa8\ub4dc"},{"location":"datagen/#_4","text":"\ub370\uc774\ud130\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574\uc11c\ub294, \ub370\uc774\ud130 \uc81c\uacf5\uc790\uac00 \ud544\uc694\ud55c\ub370, \uc774\ub294 \uc5b4\ub5a4 \ub370\uc774\ud130\uac00 \uc0dd\uc131\ub418\uace0 \uc81c\uacf5\ub420 \uc9c0\ub97c \uc815\uc758\ud558\ub294 \ud074\ub798\uc2a4 \uc785\ub2c8\ub2e4. \ubaa8\ub4e0 \ub370\uc774\ud130 \uc81c\uacf5\uc790\ub4e4\uc740 DataProvider \ub97c \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ub300\ubd80\ubd84\uc758 \uc5d0\uc14b\uacfc \ub370\uc774\ud130\uc5d0 \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c \ub370\uc774\ud130 \uc81c\uacf5\uc790\ub97c \ucd94\uc0c1\ud654 \ud074\ub798\uc2a4\ub85c \uc81c\uacf5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4, \uadf8\ub807\uae30\uc5d0 \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4\uc740 \uc815\ud574\uc9c4 \uba54\uc11c\ub4dc \uba87\uac1c\ub9cc \uc7ac\uc815\uc758\ud558\uba74 \ub429\ub2c8\ub2e4. GatherDataEvent \ub294 \ub370\uc774\ud130 \uc0dd\uc131\uae30\uac00 \ucd08\uae30\ud654 \ub420 \ub54c \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub429\ub2c8\ub2e4, DataGenerator \uc778\uc2a4\ud134\uc2a4\ub97c \uc774 \uc774\ubca4\ud2b8\uc5d0\uc11c \uc811\uadfc\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DataGenerator#addProvider \ub97c \uc0ac\uc6a9\ud574 \ub370\uc774\ud130 \uc81c\uacf5\uc790\ub97c \ub9cc\ub4e4\uace0 \ub4f1\ub85d\ud558\uc138\uc694.","title":"\ub370\uc774\ud130 \uc0dd\uc131\ud558\uae30"},{"location":"datagen/#_5","text":"net.minecraftforge.common.data.LanguageProvider - \uc5b8\uc5b4 \ubb38\uc790\uc5f4 \uc0dd\uc131: #addTranslations \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694 ModelProvider<?> - \ubaa8\ub4e0 \ubaa8\ub378 \uc81c\uacf5\uc790\ub4e4\uc758 \uae30\ubc18\uc774 \ub418\ub294 \ud074\ub798\uc2a4 \uc774 \ud074\ub798\uc2a4\ub4e4\uc740 net.minecraftforge.client.model.generators \ud328\uce90\uc9c0\uc5d0 \uc788\uc2b5\ub2c8\ub2e4 ItemModelProvider - \uc544\uc774\ud15c \ubaa8\ub378 \uc0dd\uc131; #registerModels \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694 BlockStateProvider - BlockState \uc815\uc758, \ube14\ub85d \ubaa8\ub378, \uc544\uc774\ud15c \ubaa8\ub378 \uc0dd\uc131: #registerStatesAndModels \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694 BlockModelProvider - \ube14\ub85d \ubaa8\ub378 \uc0dd\uc131; #registerModels \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694","title":"\ud074\ub77c\uc774\uc5b8\ud2b8 \uc5d0\uc14b"},{"location":"datagen/#_6","text":"net.minecraftforge.common.data.GlobalLootModifierProvider - \uc804\uccb4 \uc804\ub9ac\ud488 \uc218\uc815 \ub370\uc774\ud130 \uc0dd\uc131 ; #start \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694 \uc544\ub798 \ud074\ub798\uc2a4\ub4e4\uc740 net.minecraft.data \ud328\ud0a4\uc9c0\uc5d0 \uc788\uc2b5\ub2c8\ub2e4 LootTableProvider - \ucee8\ud14c\uc774\ub108 \uc804\ub9ac\ud488 \ud14c\uc774\ube14 \uc0dd\uc131 ; #getTables \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694 RecipeProvider - \uc870\ud569\ubc95 \uacfc \uc870\ud569\ubc95\uc774 \ud574\uae08\ud558\ub294 \ub3c4\uc804\uacfc\uc81c \ub370\uc774\ud130 \uc0dd\uc131; #buildCraftingRecipes \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694 TagsProvider - \ud0dc\uadf8 \ub370\uc774\ud130 \uc0dd\uc131 ; #addTags \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694 AdvancementProvider - \ub3c4\uc804\uacfc\uc81c \ub370\uc774\ud130 \uc0dd\uc131 ; #registerAdvancements \ub97c \uc7ac\uc815\uc758\ud558\uc138\uc694","title":"\uc11c\ubc84 \ub370\uc774\ud130"},{"location":"datagen/client/localization/","text":"\uc5b8\uc5b4 \uc0dd\uc131 \ubaa8\ub4dc\uc758 \uc5b8\uc5b4 \ud30c\uc77c\ub4e4 \uc740 LanguageProvider \uc758 \ud558\uc704 \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4\uace0 #addTranslation \uc744 \uad6c\ud604\ud558\ub294 \uac83\uc73c\ub85c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac01 LanguageProvider \ud558\uc704 \ud074\ub798\uc2a4\ub4e4\uc740 \uc5b8\uc5b4 \ud55c\uac1c\uc758 \uc5b8\uc5b4 \ud30c\uc77c\ub4e4\uc744 \ud615\uc131\ud569\ub2c8\ub2e4. \ud558\uc704 \ud074\ub798\uc2a4\ub97c \uad6c\ud604\ud55c \uc774\ud6c4, DataGenerator \uc5d0 \ub4f1\ub85d \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. LanguageProvider LanguageProvider \uc758 \ud558\uc704 \ud074\ub798\uc2a4\ub4e4\uc740 \uad81\uadf9\uc801\uc73c\ub85c\ub294 \uac01 \ubc88\uc5ed \ud0a4\ub4e4\uc744 \uc5b8\uc5b4\uc5d0 \ub9de\ub294 \ubb38\uc790\uc5f4\ub85c \ubc14\uafb8\ub294 Map \uc785\ub2c8\ub2e4. \uac01 \ubc88\uc5ed \ud0a4\ub4e4\uc740 #add \ub97c \uc0ac\uc6a9\ud574 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubfd0\ub9cc \uc544\ub2c8\ub77c Block , Item , ItemStack , Enchantment , MobEffect , \uadf8\ub9ac\uace0 EntityType \uc758 \ubc88\uc5ed \ud0a4 \uac12\uc744 \uc4f0\ub294 \uba54\uc11c\ub4dc\ub4e4\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. // LanguageProvider#addTranslations this.addBlock(EXAMPLE_BLOCK, \"\uc608\uc81c \ube14\ub85d\"); this.add(\"object.examplemod.example_object\", \"\uc608\uc81c \uc624\ube0c\uc81d\ud2b8\");","title":"\uc5b8\uc5b4 \uc0dd\uc131\ud558\uae30"},{"location":"datagen/client/localization/#_1","text":"\ubaa8\ub4dc\uc758 \uc5b8\uc5b4 \ud30c\uc77c\ub4e4 \uc740 LanguageProvider \uc758 \ud558\uc704 \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4\uace0 #addTranslation \uc744 \uad6c\ud604\ud558\ub294 \uac83\uc73c\ub85c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac01 LanguageProvider \ud558\uc704 \ud074\ub798\uc2a4\ub4e4\uc740 \uc5b8\uc5b4 \ud55c\uac1c\uc758 \uc5b8\uc5b4 \ud30c\uc77c\ub4e4\uc744 \ud615\uc131\ud569\ub2c8\ub2e4. \ud558\uc704 \ud074\ub798\uc2a4\ub97c \uad6c\ud604\ud55c \uc774\ud6c4, DataGenerator \uc5d0 \ub4f1\ub85d \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.","title":"\uc5b8\uc5b4 \uc0dd\uc131"},{"location":"datagen/client/localization/#languageprovider","text":"LanguageProvider \uc758 \ud558\uc704 \ud074\ub798\uc2a4\ub4e4\uc740 \uad81\uadf9\uc801\uc73c\ub85c\ub294 \uac01 \ubc88\uc5ed \ud0a4\ub4e4\uc744 \uc5b8\uc5b4\uc5d0 \ub9de\ub294 \ubb38\uc790\uc5f4\ub85c \ubc14\uafb8\ub294 Map \uc785\ub2c8\ub2e4. \uac01 \ubc88\uc5ed \ud0a4\ub4e4\uc740 #add \ub97c \uc0ac\uc6a9\ud574 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubfd0\ub9cc \uc544\ub2c8\ub77c Block , Item , ItemStack , Enchantment , MobEffect , \uadf8\ub9ac\uace0 EntityType \uc758 \ubc88\uc5ed \ud0a4 \uac12\uc744 \uc4f0\ub294 \uba54\uc11c\ub4dc\ub4e4\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. // LanguageProvider#addTranslations this.addBlock(EXAMPLE_BLOCK, \"\uc608\uc81c \ube14\ub85d\"); this.add(\"object.examplemod.example_object\", \"\uc608\uc81c \uc624\ube0c\uc81d\ud2b8\");","title":"LanguageProvider"},{"location":"datagen/client/modelproviders/","text":"Model Generation Models can be generated for models or block states by default. Each provides a method of generating the necessary JSONs ( ModelBuilder#toJson for models and IGeneratedBlockState#toJson for block states). After implementation, the associated providers must be added to the DataGenerator . Model Files A ModelFile acts as the base for all models referenced or generated by a provider. Each model file stores the location relative to the models subdirectory and can assert whether the file exists. Existing Model Files ExistingModelFile is a subclass of ModelFile which checks via ExistingFileHelper#exists whether the model already exists within the models subdirectory. All non-generated models are usually referenced through ExistingModelFile s. Unchecked Model Files UncheckedModelFile is a subclass of ModelFile which assumes the specified model exists in some location. Note There should be no cases where an UncheckedModelFile is used to reference a model. If there is, then the associated resources are not properly being tracked by ExistingFileHelper . Model Builders A ModelBuilder represents a to-be-generated ModelFile . It contains all the data about a model: its parent, faces, textures, transformations, lighting, and loader . Tip While a complex model can be generated, it is recommended that those models be constructed using a modeling software beforehand. Then, the data provider can generate the children models with specific textures applied through the defined references in the parent complex model. The parent (via ModelBuilder#parent ) of the builder can be any ModelFile : generated or existing. Generated files are added to ModelProvider s as soon as the builder is created. The builder itself can be passed in as a parent, or the ResourceLocation can supplied alternatively. Warning If the parent is not generated before the child model when passing in a ResourceLocation , then an exception will be thrown. Each element (via ModelBuilder#element ) within a model is defined as cube using two three-dimensional points ( ElementBuilder#from and #to respectively) where each axis is limited to the values [-16,32] (between -16 and 32 inclusive). Each face ( ElementBuilder#face ) of the cube can specify when the face is culled ( FaceBuilder#cullface ), tint index ( FaceBuilder#tintindex ), texture reference from the textures keys ( FaceBuilder#texture ), UV coordinate on the texture ( FaceBuilder#uvs ), and rotation in 90 degree intervals ( FaceBuilder#rotation ). Note It recommended for block models which have elements that exceed a bound of [0,16] on any axis to separate into multiple blocks, such as for a multiblock structure, to avoid lighting and culling issues. Each cube can additionally be rotated ( ElementBuilder#rotation ) around a specified point ( RotationBuilder#origin ) for a given axis ( RotationBuilder#axis ) in 22.5 degree intervals ( RotationBuilder#angle ). The cube can scale all faces in relation to the entire model as well ( RotationBuilder#rescale ). The cube can also determine whether its shadows should be rendered ( ElementBuilder#shade ). Each model defines a list of texture keys ( ModelBuilder#texture ) which points to either a location or a reference. Each key can then be referenced in any element by prefixing using a # (a texture key of example can be referenced in an element using #example ). A location specifies where a texture is in assets/<namespace>/textures/<path>.png . A reference is used by any models parenting the current model as keys to define textures for later. The model can additionally be transformed ( ModelBuilder#transforms ) for any defined perspective (in the left hand in first person, in the gui, on the ground, etc.). For any perspective ( TransformsBuilder#transform ), the rotation ( TransformVecBuilder#rotation ), translation ( TransformVecBuilder#translation ), and scale ( TransformVecBuilder#scale ) can be set. Finally, the model can set whether to use ambient occlusion in a level ( ModelBuilder#ao ) and from what location to light and shade the model from ModelBuilder#guiLight . BlockModelBuilder A BlockModelBuilder represents a block model to-be-generated. There is no additional functionality compared to a ModelBuilder . ItemModelBuilder An ItemModelBuilder represents an item model to-be-generated. In addition to the ModelBuilder , overrides ( OverrideBuilder#override ) can be generated. Each override applied to a model can apply conditions which represent for a given property that must be above the specified value ( OverrideBuilder#predicate ). If the conditions are met, then the specified model ( OverrideBuilder#model ) will be rendered instead of this model. Model Providers The ModelProvider subclasses are responsible for generating the constructed ModelBuilder s. The provider takes in the generator, mod id, subdirectory in the models folder to generate within, a ModelBuilder factory, and the existing file helper. Each provider subclass must implement #registerModels . The provider contains basic methods which either create the ModelBuilder or provides convenience for getting texture or model references: Method Description getBuilder Creates a new ModelBuilder within the provider\u2019s subdirectory for the given mod id. withExistingParent Creates a new ModelBuilder for the given parent. Should be used when the parent is not generated by the builder. mcLoc Creates a ResourceLocation for the path in the minecraft namespace. modLoc Creates a ResourceLocation for the path in the given mod id\u2019s namespace. Additionally, there are several helpers for easily generating common models using vanilla templates. Most are for block models with only a few being universal. Note Although the models are within a specific subdirectory, that does not mean that the model cannot be referenced by a model in another subdirectory. Usually, it is indicative of that model being used for that type of object. BlockModelProvider The BlockModelProvider is used for generating block models via BlockModelBuilder in the block folder. Block models should typically parent minecraft:block/block or one of its children models for use with item models. Note Block models and its item model counterpart are typically not generated through a direct subclass of BlockModelProvider and ItemModelProvider but through BlockStateProvider . ItemModelProvider The ItemModelProvider is used for generating block models via ItemModelBuilder in the item folder. Most item models parent item/generated and use layer0 to specify their texture, which can be done using #singleTexture . Note item/generated can support five texture layers stacked on top of each other: layer0 , layer1 , layer2 , layer3 , and layer4 . // In some ItemModelProvider#registerModels this.singleTexture(\"example_item\", // For 'assets/<modid>/models/item/example_item.json' \"item/generated\", // Set parent to 'minecraft:item/generated' \"layer0\", // For the texture key 'layer0' modLoc(\"item/example_texture\") // Set the reference to 'assets/<modid>/textures/item/example_texture.png' ); Note Item models for blocks should typically parent an existing block model instead of generating a separate model for an item. Block State Provider A BlockStateProvider is responsible for generating block state JSONs in blockstates , block models in models/block , and item models in models/item for said blocks. The provider takes in the data generator, mod id, and existing file helper. Each BlockStateProvider subclass must implement #registerStatesAndModels . The provider contains basic methods for generating block state JSONs and block models. Item models must be generated separately as a block state JSON may define multiple models to use in different contexts. There are a number of common methods, however, that that the modder should be aware of when dealing with more complex tasks: Method Description models Gets the BlockModelProvider used to generate the item block models. itemModels Gets the ItemModelProvider used to generate the item block models. modLoc Creates a ResourceLocation for the path in the given mod id\u2019s namespace. mcLoc Creates a ResourceLocation for the path in the minecraft namespace. blockTexture References a texture within textures/block which has the same name as the block. simpleBlockItem Creates an item model for a block given the associated model file. A block state JSON is made up of variants or conditions. Each variant or condition references a ConfiguredModelList : a list of ConfiguredModel s. Each configured model contains the model file (via ConfiguredModel$Builder#modelFile ), the X and Y rotation in 90 degree intervals (via #rotationX and rotationY respectively), whether the texture can rotate when the model is rotated by the block state JSON (via #uvLock ), and the weight of the model appearing compared to other models in the list (via #weight ). The builder ( ConfiguredModel#builder ) can also create an array of ConfiguredModel s by creating the next model using #nextModel and repeating the settings until #build is called. VariantBlockStateBuilder Variants can be generated using BlockStateProvider#getVariantBuilder . Each variant specifies a list of properties ( PartialBlockstate ) which when matches a BlockState in a level, will display a model chosen from the corresponding model list. An exception is thrown if there is a BlockState which is not covered by any variant defined. Only one variant can be true for any BlockState . A PartialBlockstate is typically defined using one of three methods: Method Description partialState Creates a PartialBlockstate to be defined. forAllStates Defines a function where a given BlockState can be represented by an array of ConfiguredModel s. forAllStatesExcept Defines a function similar to #forAllStates ; however, it also specifies which properties do not affect the models rendered. For a PartialBlockstate , the properties defined can be specified ( #with ). The configured models can be set ( #setModels ), appended to the existing models ( #addModels ), or built ( #modelForState and then ConfiguredModel$Builder#addModel once finished instead of #ConfiguredModel$Builder#build ). // In some BlockStateProvider#registerStatesAndModels // EXAMPLE_BLOCK_1: Has Property BlockStateProperties#AXIS this.getVariantBuilder(EXAMPLE_BLOCK_1) // Get variant builder .partialState() // Construct partial state .with(AXIS, Axis.Y) // When BlockState AXIS = Y .modelForState() // Set models when AXIS = Y .modelFile(yModelFile1) // Can show 'yModelFile1' .nextModel() // Adds another model when AXIS = Y .modelFile(yModelFile2) // Can show 'yModelFile2' .weight(2) // Will show 'yModelFile2' 2/3 of the time .addModel() // Finalizes models when AXIS = Y .with(AXIS, Axis.Z) // When BlockState AXIS = Z .modelForState() // Set models when AXIS = Z .modelFile(hModelFile) // Can show 'hModelFile' .addModel() // Finalizes models when AXIS = Z .with(AXIS, Axis.X) // When BlockState AXIS = X .modelForState() // Set models when AXIS = X .modelFile(hModelFile) // Can show 'hModelFile' .rotationY(90) // Rotates 'hModelFile' 90 degrees on the Y axis .addModel(); // Finalizes models when AXIS = X // EXAMPLE_BLOCK_2: Has Property BlockStateProperties#HORIZONTAL_FACING this.getVariantBuilder(EXAMPLE_BLOCK_2) // Get variant builder .forAllStates(state -> // For all possible states ConfiguredModel.builder() // Creates configured model builder .modelFile(modelFile) // Can show 'modelFile' .rotationY((int) state.getValue(HORIZONTAL_FACING).toYRot()) // Rotates 'modelFile' on the Y axis depending on the property .build() // Creates the array of configured models ); // EXAMPLE_BLOCK_3: Has Properties BlockStateProperties#HORIZONTAL_FACING, BlockStateProperties#WATERLOGGED this.getVariantBuilder(EXAMPLE_BLOCK_3) // Get variant builder .forAllStatesExcept(state -> // For all HORIZONTAL_FACING states ConfiguredModel.builder() // Creates configured model builder .modelFile(modelFile) // Can show 'modelFile' .rotationY((int) state.getValue(HORIZONTAL_FACING).toYRot()) // Rotates 'modelFile' on the Y axis depending on the property .build(), // Creates the array of configured models WATERLOGGED); // Ignores WATERLOGGED property MultiPartBlockStateBuilder Multiparts can be generated using BlockStateProvider#getMultipartBuilder . Each part ( MultiPartBlockStateBuilder#part ) specifies a group of conditions of properties which when matches a BlockState in a level, will display a model from the model list. All condition groups that match the BlockState will display their chosen model overlaid on each other. For any part (obtained via ConfiguredModel$Builder#addModel ), a condition can be added (via #condition ) when a property is one of the specified values. Conditions must all succeed or, when #useOr is set, at least one must succeed. Conditions can be grouped (via #nestedGroup ) as long as the current grouping only contains other groups and no single conditions. Groups of conditions can be left using #endNestedGroup and a given part can be finished via #end . // In some BlockStateProvider#registerStatesAndModels // Redstone Wire this.getMultipartBuilder(REDSTONE) // Get multipart builder .part() // Create part .modelFile(redstoneDot) // Can show 'redstoneDot' .addModel() // 'redstoneDot' is displayed when... .useOr() // At least one of these conditions are true .nestedGroup() // true when all grouped conditions are true .condition(WEST_REDSTONE, NONE) // true when WEST_REDSTONE is NONE .condition(EAST_REDSTONE, NONE) // true when EAST_REDSTONE is NONE .condition(SOUTH_REDSTONE, NONE) // true when SOUTH_REDSTONE is NONE .condition(NORTH_REDSTONE, NONE) // true when NORTH_REDSTONE is NONE .endNestedGroup() // End group .nestedGroup() // true when all grouped conditions are true .condition(EAST_REDSTONE, SIDE, UP) // true when EAST_REDSTONE is SIDE or UP .condition(NORTH_REDSTONE, SIDE, UP) // true when NORTH_REDSTONE is SIDE or UP .endNestedGroup() // End group .nestedGroup() // true when all grouped conditions are true .condition(EAST_REDSTONE, SIDE, UP) // true when EAST_REDSTONE is SIDE or UP .condition(SOUTH_REDSTONE, SIDE, UP) // true when SOUTH_REDSTONE is SIDE or UP .endNestedGroup() // End group .nestedGroup() // true when all grouped conditions are true .condition(WEST_REDSTONE, SIDE, UP) // true when WEST_REDSTONE is SIDE or UP .condition(SOUTH_REDSTONE, SIDE, UP) // true when SOUTH_REDSTONE is SIDE or UP .endNestedGroup() // End group .nestedGroup() // true when all grouped conditions are true .condition(WEST_REDSTONE, SIDE, UP) // true when WEST_REDSTONE is SIDE or UP .condition(NORTH_REDSTONE, SIDE, UP) // true when NORTH_REDSTONE is SIDE or UP .endNestedGroup() // End group .end() // Finish part .part() // Create part .modelFile(redstoneSide0) // Can show 'redstoneSide0' .addModel() // 'redstoneSide0' is displayed when... .condition(NORTH_REDSTONE, SIDE, UP) // NORTH_REDSTONE is SIDE or UP .end() // Finish part .part() // Create part .modelFile(redstoneSideAlt0) // Can show 'redstoneSideAlt0' .addModel() // 'redstoneSideAlt0' is displayed when... .condition(SOUTH_REDSTONE, SIDE, UP) // SOUTH_REDSTONE is SIDE or UP .end() // Finish part .part() // Create part .modelFile(redstoneSideAlt1) // Can show 'redstoneSideAlt1' .rotationY(270) // Rotates 'redstoneSideAlt1' 270 degrees on the Y axis .addModel() // 'redstoneSideAlt1' is displayed when... .condition(EAST_REDSTONE, SIDE, UP) // EAST_REDSTONE is SIDE or UP .end() // Finish part .part() // Create part .modelFile(redstoneSide1) // Can show 'redstoneSide1' .rotationY(270) // Rotates 'redstoneSide1' 270 degrees on the Y axis .addModel() // 'redstoneSide1' is displayed when... .condition(WEST_REDSTONE, SIDE, UP) // WEST_REDSTONE is SIDE or UP .end() // Finish part .part() // Create part .modelFile(redstoneUp) // Can show 'redstoneUp' .addModel() // 'redstoneUp' is displayed when... .condition(NORTH_REDSTONE, UP) // NORTH_REDSTONE is UP .end() // Finish part .part() // Create part .modelFile(redstoneUp) // Can show 'redstoneUp' .rotationY(90) // Rotates 'redstoneUp' 90 degrees on the Y axis .addModel() // 'redstoneUp' is displayed when... .condition(EAST_REDSTONE, UP) // EAST_REDSTONE is UP .end() // Finish part .part() // Create part .modelFile(redstoneUp) // Can show 'redstoneUp' .rotationY(180) // Rotates 'redstoneUp' 180 degrees on the Y axis .addModel() // 'redstoneUp' is displayed when... .condition(SOUTH_REDSTONE, UP) // SOUTH_REDSTONE is UP .end() // Finish part .part() // Create part .modelFile(redstoneUp) // Can show 'redstoneUp' .rotationY(270) // Rotates 'redstoneUp' 270 degrees on the Y axis .addModel() // 'redstoneUp' is displayed when... .condition(WEST_REDSTONE, UP) // WEST_REDSTONE is UP .end(); // Finish part Model Loader Builders Custom model loaders can also be generated for a given ModelBuilder . Custom model loaders subclass CustomLoaderBuilder and can be applied to a ModelBuilder via #customLoader . The factory method passed in creates a new loader builder to which configurations can be made. After all the changes have been finished, the custom loader can return back to the ModelBuilder via CustomLoaderBuilder#end . Model Builder Factory Method Description DynamicBucketModelBuilder #begin Generates a bucket model for the specified fluid. CompositeModelBuilder #begin Generates a model composed of models. ItemLayersModelBuilder #begin Generates a Forge implementation of an item/generated model. SeparatePerspectiveModelBuilder #begin Generates a model which changes based on the specified perspective . OBJLoaderBuilder #begin Generates an OBJ model . MultiLayerModelBuilder #begin Generates a model made up of models in different rendering layers. // For some BlockModelBuilder builder builder.customLoader(OBJLoaderBuilder::begin) // Custom loader 'forge:obj' .modelLocation(modLoc(\"models/block/model.obj\")) // Set the OBJ model location .flipV(true) // Flips the V coordinate in the supplied .mtl texture .end() // Finish custom loader configuration .texture(\"particle\", mcLoc(\"block/dirt\")) // Set particle texture to dirt .texture(\"texture0\", mcLoc(\"block/dirt\")); // Set 'texture0' texture to dirt Custom Model Loader Builders Custom loader builders can be created by extending CustomLoaderBuilder . The constructor can still have a protected visibility with the ResourceLocation hardcoded to the loader id registered via ModelLoaderRegistry#registerLoader . The builder can then be initialized via a static factory method or the constructor if made public . public class ExampleLoaderBuilder<T extends ModelBuilder<T>> extends CustomLoaderBuilder<T> { public static <T extends ModelBuilder<T>> ExampleLoaderBuilder<T> begin(T parent, ExistingFileHelper existingFileHelper) { return new ExampleLoaderBuilder<>(parent, existingFileHelper); } protected ExampleLoaderBuilder(T parent, ExistingFileHelper existingFileHelper) { super(new ResourceLocation(MOD_ID, \"example_loader\"), parent, existingFileHelper); } } Afterwards, any configurations specified by the loader should be added as chainable methods. // In ExampleLoaderBuilder public ExampleLoaderBuilder<T> exampleInt(int example) { // Set int return this; } public ExampleLoaderBuilder<T> exampleString(String example) { // Set string return this; } If any additional configuration is specified, #toJson should be overridden to write the additional properties. // In ExampleLoaderBuilder @Override public JsonObject toJson(JsonObject json) { json = super.toJson(json); // Handle base loader properties // Encode custom loader properties return json; } Custom Model Providers Custom model providers require a ModelBuilder subclass, which defines the base of the model to generate, and a ModelProvider subclass, which generates the models. The ModelBuilder subclass contains any special properties to which can be applied specifically to those types of models (item models can have overrides). If any additional properties are added, #toJson needs to be overridden to write the additional information. public class ExampleModelBuilder extends ModelBuilder<ExampleModelBuilder> { // ... } The ModelProvider subclass requires no special logic. The constructor should hardcode the subdirectory within the models folder and the ModelBuilder to represent the to-be-generated models. public class ExampleModelProvider extends ModelProvider<ExampleModelBuilder> { public ExampleModelProvider(DataGenerator generator, String modid, ExistingFileHelper existingFileHelper) { // Models will be generated to 'assets/<modid>/models/example' if no modid is specified in '#getBuilder' super(generator, modid, \"example\", ExampleModelBuilder::new, existingFileHelper); } } Custom Model Consumers Custom model consumers like BlockStateProvider can be created by manually generating the models themselves. The ModelProvider subclass used to generate the models should be specified and made available. public class ExampleModelConsumerProvider implements IDataProvider { public ExampleModelConsumerProvider(DataGenerator generator, String modid, ExistingFileHelper existingFileHelper) { this.example = new ExampleModelProvider(generator, modid, existingFileHelper); } } Once the data provider is running, the models within the ModelProvider subclass can be generated using ModelProvider#generateAll . // In ExampleModelConsumerProvider @Override public void run(HashCache cache) throws IOException { // Populate the model provider this.example.generateAll(cache); // Generate the models // ... }","title":"\ubaa8\ub378 \uc0dd\uc131\ud558\uae30"},{"location":"datagen/client/modelproviders/#model-generation","text":"Models can be generated for models or block states by default. Each provides a method of generating the necessary JSONs ( ModelBuilder#toJson for models and IGeneratedBlockState#toJson for block states). After implementation, the associated providers must be added to the DataGenerator .","title":"Model Generation"},{"location":"datagen/client/modelproviders/#model-files","text":"A ModelFile acts as the base for all models referenced or generated by a provider. Each model file stores the location relative to the models subdirectory and can assert whether the file exists.","title":"Model Files"},{"location":"datagen/client/modelproviders/#existing-model-files","text":"ExistingModelFile is a subclass of ModelFile which checks via ExistingFileHelper#exists whether the model already exists within the models subdirectory. All non-generated models are usually referenced through ExistingModelFile s.","title":"Existing Model Files"},{"location":"datagen/client/modelproviders/#unchecked-model-files","text":"UncheckedModelFile is a subclass of ModelFile which assumes the specified model exists in some location. Note There should be no cases where an UncheckedModelFile is used to reference a model. If there is, then the associated resources are not properly being tracked by ExistingFileHelper .","title":"Unchecked Model Files"},{"location":"datagen/client/modelproviders/#model-builders","text":"A ModelBuilder represents a to-be-generated ModelFile . It contains all the data about a model: its parent, faces, textures, transformations, lighting, and loader . Tip While a complex model can be generated, it is recommended that those models be constructed using a modeling software beforehand. Then, the data provider can generate the children models with specific textures applied through the defined references in the parent complex model. The parent (via ModelBuilder#parent ) of the builder can be any ModelFile : generated or existing. Generated files are added to ModelProvider s as soon as the builder is created. The builder itself can be passed in as a parent, or the ResourceLocation can supplied alternatively. Warning If the parent is not generated before the child model when passing in a ResourceLocation , then an exception will be thrown. Each element (via ModelBuilder#element ) within a model is defined as cube using two three-dimensional points ( ElementBuilder#from and #to respectively) where each axis is limited to the values [-16,32] (between -16 and 32 inclusive). Each face ( ElementBuilder#face ) of the cube can specify when the face is culled ( FaceBuilder#cullface ), tint index ( FaceBuilder#tintindex ), texture reference from the textures keys ( FaceBuilder#texture ), UV coordinate on the texture ( FaceBuilder#uvs ), and rotation in 90 degree intervals ( FaceBuilder#rotation ). Note It recommended for block models which have elements that exceed a bound of [0,16] on any axis to separate into multiple blocks, such as for a multiblock structure, to avoid lighting and culling issues. Each cube can additionally be rotated ( ElementBuilder#rotation ) around a specified point ( RotationBuilder#origin ) for a given axis ( RotationBuilder#axis ) in 22.5 degree intervals ( RotationBuilder#angle ). The cube can scale all faces in relation to the entire model as well ( RotationBuilder#rescale ). The cube can also determine whether its shadows should be rendered ( ElementBuilder#shade ). Each model defines a list of texture keys ( ModelBuilder#texture ) which points to either a location or a reference. Each key can then be referenced in any element by prefixing using a # (a texture key of example can be referenced in an element using #example ). A location specifies where a texture is in assets/<namespace>/textures/<path>.png . A reference is used by any models parenting the current model as keys to define textures for later. The model can additionally be transformed ( ModelBuilder#transforms ) for any defined perspective (in the left hand in first person, in the gui, on the ground, etc.). For any perspective ( TransformsBuilder#transform ), the rotation ( TransformVecBuilder#rotation ), translation ( TransformVecBuilder#translation ), and scale ( TransformVecBuilder#scale ) can be set. Finally, the model can set whether to use ambient occlusion in a level ( ModelBuilder#ao ) and from what location to light and shade the model from ModelBuilder#guiLight .","title":"Model Builders"},{"location":"datagen/client/modelproviders/#blockmodelbuilder","text":"A BlockModelBuilder represents a block model to-be-generated. There is no additional functionality compared to a ModelBuilder .","title":"BlockModelBuilder"},{"location":"datagen/client/modelproviders/#itemmodelbuilder","text":"An ItemModelBuilder represents an item model to-be-generated. In addition to the ModelBuilder , overrides ( OverrideBuilder#override ) can be generated. Each override applied to a model can apply conditions which represent for a given property that must be above the specified value ( OverrideBuilder#predicate ). If the conditions are met, then the specified model ( OverrideBuilder#model ) will be rendered instead of this model.","title":"ItemModelBuilder"},{"location":"datagen/client/modelproviders/#model-providers","text":"The ModelProvider subclasses are responsible for generating the constructed ModelBuilder s. The provider takes in the generator, mod id, subdirectory in the models folder to generate within, a ModelBuilder factory, and the existing file helper. Each provider subclass must implement #registerModels . The provider contains basic methods which either create the ModelBuilder or provides convenience for getting texture or model references: Method Description getBuilder Creates a new ModelBuilder within the provider\u2019s subdirectory for the given mod id. withExistingParent Creates a new ModelBuilder for the given parent. Should be used when the parent is not generated by the builder. mcLoc Creates a ResourceLocation for the path in the minecraft namespace. modLoc Creates a ResourceLocation for the path in the given mod id\u2019s namespace. Additionally, there are several helpers for easily generating common models using vanilla templates. Most are for block models with only a few being universal. Note Although the models are within a specific subdirectory, that does not mean that the model cannot be referenced by a model in another subdirectory. Usually, it is indicative of that model being used for that type of object.","title":"Model Providers"},{"location":"datagen/client/modelproviders/#blockmodelprovider","text":"The BlockModelProvider is used for generating block models via BlockModelBuilder in the block folder. Block models should typically parent minecraft:block/block or one of its children models for use with item models. Note Block models and its item model counterpart are typically not generated through a direct subclass of BlockModelProvider and ItemModelProvider but through BlockStateProvider .","title":"BlockModelProvider"},{"location":"datagen/client/modelproviders/#itemmodelprovider","text":"The ItemModelProvider is used for generating block models via ItemModelBuilder in the item folder. Most item models parent item/generated and use layer0 to specify their texture, which can be done using #singleTexture . Note item/generated can support five texture layers stacked on top of each other: layer0 , layer1 , layer2 , layer3 , and layer4 . // In some ItemModelProvider#registerModels this.singleTexture(\"example_item\", // For 'assets/<modid>/models/item/example_item.json' \"item/generated\", // Set parent to 'minecraft:item/generated' \"layer0\", // For the texture key 'layer0' modLoc(\"item/example_texture\") // Set the reference to 'assets/<modid>/textures/item/example_texture.png' ); Note Item models for blocks should typically parent an existing block model instead of generating a separate model for an item.","title":"ItemModelProvider"},{"location":"datagen/client/modelproviders/#block-state-provider","text":"A BlockStateProvider is responsible for generating block state JSONs in blockstates , block models in models/block , and item models in models/item for said blocks. The provider takes in the data generator, mod id, and existing file helper. Each BlockStateProvider subclass must implement #registerStatesAndModels . The provider contains basic methods for generating block state JSONs and block models. Item models must be generated separately as a block state JSON may define multiple models to use in different contexts. There are a number of common methods, however, that that the modder should be aware of when dealing with more complex tasks: Method Description models Gets the BlockModelProvider used to generate the item block models. itemModels Gets the ItemModelProvider used to generate the item block models. modLoc Creates a ResourceLocation for the path in the given mod id\u2019s namespace. mcLoc Creates a ResourceLocation for the path in the minecraft namespace. blockTexture References a texture within textures/block which has the same name as the block. simpleBlockItem Creates an item model for a block given the associated model file. A block state JSON is made up of variants or conditions. Each variant or condition references a ConfiguredModelList : a list of ConfiguredModel s. Each configured model contains the model file (via ConfiguredModel$Builder#modelFile ), the X and Y rotation in 90 degree intervals (via #rotationX and rotationY respectively), whether the texture can rotate when the model is rotated by the block state JSON (via #uvLock ), and the weight of the model appearing compared to other models in the list (via #weight ). The builder ( ConfiguredModel#builder ) can also create an array of ConfiguredModel s by creating the next model using #nextModel and repeating the settings until #build is called.","title":"Block State Provider"},{"location":"datagen/client/modelproviders/#variantblockstatebuilder","text":"Variants can be generated using BlockStateProvider#getVariantBuilder . Each variant specifies a list of properties ( PartialBlockstate ) which when matches a BlockState in a level, will display a model chosen from the corresponding model list. An exception is thrown if there is a BlockState which is not covered by any variant defined. Only one variant can be true for any BlockState . A PartialBlockstate is typically defined using one of three methods: Method Description partialState Creates a PartialBlockstate to be defined. forAllStates Defines a function where a given BlockState can be represented by an array of ConfiguredModel s. forAllStatesExcept Defines a function similar to #forAllStates ; however, it also specifies which properties do not affect the models rendered. For a PartialBlockstate , the properties defined can be specified ( #with ). The configured models can be set ( #setModels ), appended to the existing models ( #addModels ), or built ( #modelForState and then ConfiguredModel$Builder#addModel once finished instead of #ConfiguredModel$Builder#build ). // In some BlockStateProvider#registerStatesAndModels // EXAMPLE_BLOCK_1: Has Property BlockStateProperties#AXIS this.getVariantBuilder(EXAMPLE_BLOCK_1) // Get variant builder .partialState() // Construct partial state .with(AXIS, Axis.Y) // When BlockState AXIS = Y .modelForState() // Set models when AXIS = Y .modelFile(yModelFile1) // Can show 'yModelFile1' .nextModel() // Adds another model when AXIS = Y .modelFile(yModelFile2) // Can show 'yModelFile2' .weight(2) // Will show 'yModelFile2' 2/3 of the time .addModel() // Finalizes models when AXIS = Y .with(AXIS, Axis.Z) // When BlockState AXIS = Z .modelForState() // Set models when AXIS = Z .modelFile(hModelFile) // Can show 'hModelFile' .addModel() // Finalizes models when AXIS = Z .with(AXIS, Axis.X) // When BlockState AXIS = X .modelForState() // Set models when AXIS = X .modelFile(hModelFile) // Can show 'hModelFile' .rotationY(90) // Rotates 'hModelFile' 90 degrees on the Y axis .addModel(); // Finalizes models when AXIS = X // EXAMPLE_BLOCK_2: Has Property BlockStateProperties#HORIZONTAL_FACING this.getVariantBuilder(EXAMPLE_BLOCK_2) // Get variant builder .forAllStates(state -> // For all possible states ConfiguredModel.builder() // Creates configured model builder .modelFile(modelFile) // Can show 'modelFile' .rotationY((int) state.getValue(HORIZONTAL_FACING).toYRot()) // Rotates 'modelFile' on the Y axis depending on the property .build() // Creates the array of configured models ); // EXAMPLE_BLOCK_3: Has Properties BlockStateProperties#HORIZONTAL_FACING, BlockStateProperties#WATERLOGGED this.getVariantBuilder(EXAMPLE_BLOCK_3) // Get variant builder .forAllStatesExcept(state -> // For all HORIZONTAL_FACING states ConfiguredModel.builder() // Creates configured model builder .modelFile(modelFile) // Can show 'modelFile' .rotationY((int) state.getValue(HORIZONTAL_FACING).toYRot()) // Rotates 'modelFile' on the Y axis depending on the property .build(), // Creates the array of configured models WATERLOGGED); // Ignores WATERLOGGED property","title":"VariantBlockStateBuilder"},{"location":"datagen/client/modelproviders/#multipartblockstatebuilder","text":"Multiparts can be generated using BlockStateProvider#getMultipartBuilder . Each part ( MultiPartBlockStateBuilder#part ) specifies a group of conditions of properties which when matches a BlockState in a level, will display a model from the model list. All condition groups that match the BlockState will display their chosen model overlaid on each other. For any part (obtained via ConfiguredModel$Builder#addModel ), a condition can be added (via #condition ) when a property is one of the specified values. Conditions must all succeed or, when #useOr is set, at least one must succeed. Conditions can be grouped (via #nestedGroup ) as long as the current grouping only contains other groups and no single conditions. Groups of conditions can be left using #endNestedGroup and a given part can be finished via #end . // In some BlockStateProvider#registerStatesAndModels // Redstone Wire this.getMultipartBuilder(REDSTONE) // Get multipart builder .part() // Create part .modelFile(redstoneDot) // Can show 'redstoneDot' .addModel() // 'redstoneDot' is displayed when... .useOr() // At least one of these conditions are true .nestedGroup() // true when all grouped conditions are true .condition(WEST_REDSTONE, NONE) // true when WEST_REDSTONE is NONE .condition(EAST_REDSTONE, NONE) // true when EAST_REDSTONE is NONE .condition(SOUTH_REDSTONE, NONE) // true when SOUTH_REDSTONE is NONE .condition(NORTH_REDSTONE, NONE) // true when NORTH_REDSTONE is NONE .endNestedGroup() // End group .nestedGroup() // true when all grouped conditions are true .condition(EAST_REDSTONE, SIDE, UP) // true when EAST_REDSTONE is SIDE or UP .condition(NORTH_REDSTONE, SIDE, UP) // true when NORTH_REDSTONE is SIDE or UP .endNestedGroup() // End group .nestedGroup() // true when all grouped conditions are true .condition(EAST_REDSTONE, SIDE, UP) // true when EAST_REDSTONE is SIDE or UP .condition(SOUTH_REDSTONE, SIDE, UP) // true when SOUTH_REDSTONE is SIDE or UP .endNestedGroup() // End group .nestedGroup() // true when all grouped conditions are true .condition(WEST_REDSTONE, SIDE, UP) // true when WEST_REDSTONE is SIDE or UP .condition(SOUTH_REDSTONE, SIDE, UP) // true when SOUTH_REDSTONE is SIDE or UP .endNestedGroup() // End group .nestedGroup() // true when all grouped conditions are true .condition(WEST_REDSTONE, SIDE, UP) // true when WEST_REDSTONE is SIDE or UP .condition(NORTH_REDSTONE, SIDE, UP) // true when NORTH_REDSTONE is SIDE or UP .endNestedGroup() // End group .end() // Finish part .part() // Create part .modelFile(redstoneSide0) // Can show 'redstoneSide0' .addModel() // 'redstoneSide0' is displayed when... .condition(NORTH_REDSTONE, SIDE, UP) // NORTH_REDSTONE is SIDE or UP .end() // Finish part .part() // Create part .modelFile(redstoneSideAlt0) // Can show 'redstoneSideAlt0' .addModel() // 'redstoneSideAlt0' is displayed when... .condition(SOUTH_REDSTONE, SIDE, UP) // SOUTH_REDSTONE is SIDE or UP .end() // Finish part .part() // Create part .modelFile(redstoneSideAlt1) // Can show 'redstoneSideAlt1' .rotationY(270) // Rotates 'redstoneSideAlt1' 270 degrees on the Y axis .addModel() // 'redstoneSideAlt1' is displayed when... .condition(EAST_REDSTONE, SIDE, UP) // EAST_REDSTONE is SIDE or UP .end() // Finish part .part() // Create part .modelFile(redstoneSide1) // Can show 'redstoneSide1' .rotationY(270) // Rotates 'redstoneSide1' 270 degrees on the Y axis .addModel() // 'redstoneSide1' is displayed when... .condition(WEST_REDSTONE, SIDE, UP) // WEST_REDSTONE is SIDE or UP .end() // Finish part .part() // Create part .modelFile(redstoneUp) // Can show 'redstoneUp' .addModel() // 'redstoneUp' is displayed when... .condition(NORTH_REDSTONE, UP) // NORTH_REDSTONE is UP .end() // Finish part .part() // Create part .modelFile(redstoneUp) // Can show 'redstoneUp' .rotationY(90) // Rotates 'redstoneUp' 90 degrees on the Y axis .addModel() // 'redstoneUp' is displayed when... .condition(EAST_REDSTONE, UP) // EAST_REDSTONE is UP .end() // Finish part .part() // Create part .modelFile(redstoneUp) // Can show 'redstoneUp' .rotationY(180) // Rotates 'redstoneUp' 180 degrees on the Y axis .addModel() // 'redstoneUp' is displayed when... .condition(SOUTH_REDSTONE, UP) // SOUTH_REDSTONE is UP .end() // Finish part .part() // Create part .modelFile(redstoneUp) // Can show 'redstoneUp' .rotationY(270) // Rotates 'redstoneUp' 270 degrees on the Y axis .addModel() // 'redstoneUp' is displayed when... .condition(WEST_REDSTONE, UP) // WEST_REDSTONE is UP .end(); // Finish part","title":"MultiPartBlockStateBuilder"},{"location":"datagen/client/modelproviders/#model-loader-builders","text":"Custom model loaders can also be generated for a given ModelBuilder . Custom model loaders subclass CustomLoaderBuilder and can be applied to a ModelBuilder via #customLoader . The factory method passed in creates a new loader builder to which configurations can be made. After all the changes have been finished, the custom loader can return back to the ModelBuilder via CustomLoaderBuilder#end . Model Builder Factory Method Description DynamicBucketModelBuilder #begin Generates a bucket model for the specified fluid. CompositeModelBuilder #begin Generates a model composed of models. ItemLayersModelBuilder #begin Generates a Forge implementation of an item/generated model. SeparatePerspectiveModelBuilder #begin Generates a model which changes based on the specified perspective . OBJLoaderBuilder #begin Generates an OBJ model . MultiLayerModelBuilder #begin Generates a model made up of models in different rendering layers. // For some BlockModelBuilder builder builder.customLoader(OBJLoaderBuilder::begin) // Custom loader 'forge:obj' .modelLocation(modLoc(\"models/block/model.obj\")) // Set the OBJ model location .flipV(true) // Flips the V coordinate in the supplied .mtl texture .end() // Finish custom loader configuration .texture(\"particle\", mcLoc(\"block/dirt\")) // Set particle texture to dirt .texture(\"texture0\", mcLoc(\"block/dirt\")); // Set 'texture0' texture to dirt","title":"Model Loader Builders"},{"location":"datagen/client/modelproviders/#custom-model-loader-builders","text":"Custom loader builders can be created by extending CustomLoaderBuilder . The constructor can still have a protected visibility with the ResourceLocation hardcoded to the loader id registered via ModelLoaderRegistry#registerLoader . The builder can then be initialized via a static factory method or the constructor if made public . public class ExampleLoaderBuilder<T extends ModelBuilder<T>> extends CustomLoaderBuilder<T> { public static <T extends ModelBuilder<T>> ExampleLoaderBuilder<T> begin(T parent, ExistingFileHelper existingFileHelper) { return new ExampleLoaderBuilder<>(parent, existingFileHelper); } protected ExampleLoaderBuilder(T parent, ExistingFileHelper existingFileHelper) { super(new ResourceLocation(MOD_ID, \"example_loader\"), parent, existingFileHelper); } } Afterwards, any configurations specified by the loader should be added as chainable methods. // In ExampleLoaderBuilder public ExampleLoaderBuilder<T> exampleInt(int example) { // Set int return this; } public ExampleLoaderBuilder<T> exampleString(String example) { // Set string return this; } If any additional configuration is specified, #toJson should be overridden to write the additional properties. // In ExampleLoaderBuilder @Override public JsonObject toJson(JsonObject json) { json = super.toJson(json); // Handle base loader properties // Encode custom loader properties return json; }","title":"Custom Model Loader Builders"},{"location":"datagen/client/modelproviders/#custom-model-providers","text":"Custom model providers require a ModelBuilder subclass, which defines the base of the model to generate, and a ModelProvider subclass, which generates the models. The ModelBuilder subclass contains any special properties to which can be applied specifically to those types of models (item models can have overrides). If any additional properties are added, #toJson needs to be overridden to write the additional information. public class ExampleModelBuilder extends ModelBuilder<ExampleModelBuilder> { // ... } The ModelProvider subclass requires no special logic. The constructor should hardcode the subdirectory within the models folder and the ModelBuilder to represent the to-be-generated models. public class ExampleModelProvider extends ModelProvider<ExampleModelBuilder> { public ExampleModelProvider(DataGenerator generator, String modid, ExistingFileHelper existingFileHelper) { // Models will be generated to 'assets/<modid>/models/example' if no modid is specified in '#getBuilder' super(generator, modid, \"example\", ExampleModelBuilder::new, existingFileHelper); } }","title":"Custom Model Providers"},{"location":"datagen/client/modelproviders/#custom-model-consumers","text":"Custom model consumers like BlockStateProvider can be created by manually generating the models themselves. The ModelProvider subclass used to generate the models should be specified and made available. public class ExampleModelConsumerProvider implements IDataProvider { public ExampleModelConsumerProvider(DataGenerator generator, String modid, ExistingFileHelper existingFileHelper) { this.example = new ExampleModelProvider(generator, modid, existingFileHelper); } } Once the data provider is running, the models within the ModelProvider subclass can be generated using ModelProvider#generateAll . // In ExampleModelConsumerProvider @Override public void run(HashCache cache) throws IOException { // Populate the model provider this.example.generateAll(cache); // Generate the models // ... }","title":"Custom Model Consumers"},{"location":"datagen/client/sounds/","text":"Sound Definition Generation The sounds.json file can be generated for a mod by subclassing SoundDefinitionsProvider and implementing #registerSounds . After implementation, the provider must be added to the DataGenerator . Adding a Sound A sound definition can be generated by specifying the sound name and definition via #add . The sound name can either be provided from a SoundEvent , ResourceLocation , or string. Warning The sound name supplied will always assume the namespace is the mod id supplied to the constructor of the provider. There is no validation performed on the namespace of the sound name! SoundDefinition The SoundDefinition can be created using #definition . The definition contains the data to define a sound instance. A definition specifies a few methods: Method Description with Adds a sound(s) which may be played when the definition is selected. subtitle Sets the translation key of the definition. replace When true , removes the sounds already defined by other sounds.json for this definition instead of appending to it. SoundDefinition$Sound A sound supplied to the SoundDefinition can be specified using SoundDefinitionsProvider#sound . These methods take in the reference of the sound and a SoundType if specified. The SoundType can be one of two values: Sound Type Definition SOUND Specifies a reference to the sound located at assets/<namespace>/sounds/<path>.ogg . EVENT Specifies a reference to the name of another sound defined by the sounds.json . Each Sound created from SoundDefinitionsProvider#sound can specify additional configurations on how to load and play the sound provided: Method Description volume Sets the volume scale of the sound, must be greater than 0 . pitch Sets the pitch scale of the sound, must be greater than 0 . weight Sets the likelihood of the sound getting played when the sound is selected. stream When true , reads the sound from file instead of loading the sound into memory. Recommended for long sounds: background music, music discs, etc. attenuationDistance Sets the number of blocks the sound can be heard from. preload When true , immediately loads the sound into memory as soon as the resource pack is loaded. // In some SoundDefinitionsProvider#registerSounds this.add(EXAMPLE_SOUND_EVENT, definition() .subtitle(\"sound.examplemod.example_sound\") // Set translation key .with( sound(new ResourceLocation(MODID, \"example_sound_1\")) // Set first sound .weight(4) // Has a 4 / 5 = 80% chance of playing .volume(0.5), // Scales all volumes called on this sound by half sound(new ResourceLocation(MODID, \"example_sound_2\")) // Set second sound .stream() // Streams the sound ) ); this.add(EXAMPLE_SOUND_EVENT_2, definition() .subtitle(\"sound.examplemod.example_sound\") // Set translation key .with( sound(EXAMPLE_SOUND_EVENT.getLocation(), SoundType.EVENT) // Adds sounds from 'EXAMPLE_SOUND_EVENT' .pitch(0.5) // Scales all pitches called on this sound by half ) );","title":"\uc18c\ub9ac \uc0dd\uc131\ud558\uae30"},{"location":"datagen/client/sounds/#sound-definition-generation","text":"The sounds.json file can be generated for a mod by subclassing SoundDefinitionsProvider and implementing #registerSounds . After implementation, the provider must be added to the DataGenerator .","title":"Sound Definition Generation"},{"location":"datagen/client/sounds/#adding-a-sound","text":"A sound definition can be generated by specifying the sound name and definition via #add . The sound name can either be provided from a SoundEvent , ResourceLocation , or string. Warning The sound name supplied will always assume the namespace is the mod id supplied to the constructor of the provider. There is no validation performed on the namespace of the sound name!","title":"Adding a Sound"},{"location":"datagen/client/sounds/#sounddefinition","text":"The SoundDefinition can be created using #definition . The definition contains the data to define a sound instance. A definition specifies a few methods: Method Description with Adds a sound(s) which may be played when the definition is selected. subtitle Sets the translation key of the definition. replace When true , removes the sounds already defined by other sounds.json for this definition instead of appending to it.","title":"SoundDefinition"},{"location":"datagen/client/sounds/#sounddefinitionsound","text":"A sound supplied to the SoundDefinition can be specified using SoundDefinitionsProvider#sound . These methods take in the reference of the sound and a SoundType if specified. The SoundType can be one of two values: Sound Type Definition SOUND Specifies a reference to the sound located at assets/<namespace>/sounds/<path>.ogg . EVENT Specifies a reference to the name of another sound defined by the sounds.json . Each Sound created from SoundDefinitionsProvider#sound can specify additional configurations on how to load and play the sound provided: Method Description volume Sets the volume scale of the sound, must be greater than 0 . pitch Sets the pitch scale of the sound, must be greater than 0 . weight Sets the likelihood of the sound getting played when the sound is selected. stream When true , reads the sound from file instead of loading the sound into memory. Recommended for long sounds: background music, music discs, etc. attenuationDistance Sets the number of blocks the sound can be heard from. preload When true , immediately loads the sound into memory as soon as the resource pack is loaded. // In some SoundDefinitionsProvider#registerSounds this.add(EXAMPLE_SOUND_EVENT, definition() .subtitle(\"sound.examplemod.example_sound\") // Set translation key .with( sound(new ResourceLocation(MODID, \"example_sound_1\")) // Set first sound .weight(4) // Has a 4 / 5 = 80% chance of playing .volume(0.5), // Scales all volumes called on this sound by half sound(new ResourceLocation(MODID, \"example_sound_2\")) // Set second sound .stream() // Streams the sound ) ); this.add(EXAMPLE_SOUND_EVENT_2, definition() .subtitle(\"sound.examplemod.example_sound\") // Set translation key .with( sound(EXAMPLE_SOUND_EVENT.getLocation(), SoundType.EVENT) // Adds sounds from 'EXAMPLE_SOUND_EVENT' .pitch(0.5) // Scales all pitches called on this sound by half ) );","title":"SoundDefinition$Sound"},{"location":"datagen/server/advancements/","text":"\ub3c4\uc804 \uacfc\uc81c \uc0dd\uc131 \ub3c4\uc804 \uacfc\uc81c \ub294 AdvancementProvider \uc758 #registerAdvancements \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc5ec \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub3c4\uc804 \uacfc\uc81c \uac1d\uccb4\ub97c \uc9c1\uc811 \ub9cc\ub4dc\uc2e4 \uc218\ub3c4 \uc788\uc9c0\ub9cc, Advancement$Builder \ub97c \uc774\uc6a9\ud558\uc2dc\ub294 \uac83\uc774 \ub354 \ud3b8\ub9ac\ud569\ub2c8\ub2e4. \ub3c4\uc804 \uacfc\uc81c \uc0dd\uc131\uae30\ub97c \uad6c\ud604\ud558\uc168\ub2e4\uba74, \uc774\ub97c DataGenerator \ub97c \uc774\uc6a9\ud574 \ub4f1\ub85d \ud558\uc154\uc57c \ud569\ub2c8\ub2e4. Advancement$Builder Advancement$Builder \ub294 Advancement \ub97c \uac1d\uccb4\ub97c \uc0dd\uc131\ud574 \uc8fc\ub294 \uc720\ud2f8\ub9ac\ud2f0 \uc785\ub2c8\ub2e4. \ub3c4\uc804 \uacfc\uc81c\ub07c\ub9ac \uc0c1\uad00 \uad00\uacc4, \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud45c\uc2dc\ud560 \uc815\ubcf4, \ub3c4\uc804 \uacfc\uc81c\uc758 \ubcf4\uc0c1, \uadf8\ub9ac\uace0 \ub3c4\uc804 \uacfc\uc81c \ud574\uae08 \uc870\uac74\uc744 \uc815\uc758\ud560 \uc218 \uc788\ub3c4\ub85d \ud574 \uc90d\ub2c8\ub2e4. \ub3c4\uc804 \uacfc\uc81c\ub97c \uc815\uc758\ud560 \ub550 \uc624\uc9c1 \ud574\uae08 \uc870\uac74\ub9cc \uc9c0\uc815\ud574 \uc8fc\uba74 \ub429\ub2c8\ub2e4. \uadf8\ub798\ub3c4 \uc54c\uc544\ub450\uc2dc\uba74 \uc88b\uc744\ub9cc\ud55c \uba54\uc11c\ub4dc \ub4e4\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: \uba54\uc11c\ub4dc \uc774\ub984 \uc124\uba85 parent \ub3c4\uc804 \uacfc\uc81c \ub07c\ub9ac\uc758 \uc0c1\uad00 \uad00\uacc4\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \ub3c4\uc804 \uacfc\uc81c\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984 \ub610\ub294 Advancement \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4. display \ucc44\ud305, \ud1a0\uc2a4\ud2b8 \uc54c\ub9bc, \uadf8\ub9ac\uace0 \ub3c4\uc804 \uacfc\uc81c \uba54\ub274\uc5d0\uc11c \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud45c\uc2dc\ud560 \uc815\ubcf4\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. rewards \ub3c4\uc804 \uacfc\uc81c \ub2ec\uc131 \ubcf4\uc0c1\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4. addCriterion \ub3c4\uc804 \uacfc\uc81c \ud574\uae08 \uc870\uac74\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. requirements \ub3c4\uc804 \uacfc\uc81c \ud574\uae08 \uc870\uac74\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uc870\uac74\ub4e4\uc744 \ub9cc\uc871\ud558\ub3c4\ub85d( RequirementsStrategy#AND ), \ub610\ub294 \ud558\ub098\ub9cc \ub9cc\uc871\ud574\ub3c4 \ub418\ub3c4\ub85d( RequirementsStrategy#OR ) \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc73c\uba70, \uc9c1\uc811 \uc870\uac74 \ubaa9\ub85d\uc744 \uc804\ub2ec\ud558\uac70\ub098 RequirementsStrategy \ub97c \uad6c\ud604\ud558\uc5ec \ub354 \uc0c1\uc138\ud558\uac8c \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Advancement$Builder \ub97c \ub2e4 \uc124\uc815\ud558\uc168\ub2e4\uba74, #save \ub97c \ud638\ucd9c\ud558\uc5ec Advancement \uac1d\uccb4\ub97c \uc0dd\uc131\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. #save \ub294 \ub3c4\uc804 \uacfc\uc81c\ub97c \uc800\uc7a5\ud558\ub294 Consumer<Advancement> \uc640, \ub3c4\uc804 \uacfc\uc81c\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984, \uadf8\ub9ac\uace0 \ub2e4\ub978 \ub3c4\uc804 \uacfc\uc81c\ub4e4 \ub07c\ub9ac\uc758 \uc0c1\uad00 \uad00\uacc4\ub97c \ud655\uc778\ud558\uae30 \uc704\ud55c ExistingFileHelper \ub97c \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4. AdvancementProvider#registerAdvancements \uc5d0 \uc804\ub2ec\ub41c \uac83\uc744 \uadf8\ub300\ub85c \uc0ac\uc6a9\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. // AdvancementProvider#registerAdvancements(writer, fileHelper) \uc624\ubc84\ub77c\uc774\ub4dc \uc608\uc2dc Advancement example = Advancement.Builder.advancement() .addCriterion(\"example_criterion\", triggerInstance) // \ub3c4\uc804 \uacfc\uc81c \ud574\uae08 \uc870\uac74 .save(consumer, name, fileHelper); }","title":"\ub3c4\uc804\uacfc\uc81c \uc0dd\uc131\ud558\uae30"},{"location":"datagen/server/advancements/#_1","text":"\ub3c4\uc804 \uacfc\uc81c \ub294 AdvancementProvider \uc758 #registerAdvancements \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud558\uc5ec \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub3c4\uc804 \uacfc\uc81c \uac1d\uccb4\ub97c \uc9c1\uc811 \ub9cc\ub4dc\uc2e4 \uc218\ub3c4 \uc788\uc9c0\ub9cc, Advancement$Builder \ub97c \uc774\uc6a9\ud558\uc2dc\ub294 \uac83\uc774 \ub354 \ud3b8\ub9ac\ud569\ub2c8\ub2e4. \ub3c4\uc804 \uacfc\uc81c \uc0dd\uc131\uae30\ub97c \uad6c\ud604\ud558\uc168\ub2e4\uba74, \uc774\ub97c DataGenerator \ub97c \uc774\uc6a9\ud574 \ub4f1\ub85d \ud558\uc154\uc57c \ud569\ub2c8\ub2e4.","title":"\ub3c4\uc804 \uacfc\uc81c \uc0dd\uc131"},{"location":"datagen/server/advancements/#advancementbuilder","text":"Advancement$Builder \ub294 Advancement \ub97c \uac1d\uccb4\ub97c \uc0dd\uc131\ud574 \uc8fc\ub294 \uc720\ud2f8\ub9ac\ud2f0 \uc785\ub2c8\ub2e4. \ub3c4\uc804 \uacfc\uc81c\ub07c\ub9ac \uc0c1\uad00 \uad00\uacc4, \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud45c\uc2dc\ud560 \uc815\ubcf4, \ub3c4\uc804 \uacfc\uc81c\uc758 \ubcf4\uc0c1, \uadf8\ub9ac\uace0 \ub3c4\uc804 \uacfc\uc81c \ud574\uae08 \uc870\uac74\uc744 \uc815\uc758\ud560 \uc218 \uc788\ub3c4\ub85d \ud574 \uc90d\ub2c8\ub2e4. \ub3c4\uc804 \uacfc\uc81c\ub97c \uc815\uc758\ud560 \ub550 \uc624\uc9c1 \ud574\uae08 \uc870\uac74\ub9cc \uc9c0\uc815\ud574 \uc8fc\uba74 \ub429\ub2c8\ub2e4. \uadf8\ub798\ub3c4 \uc54c\uc544\ub450\uc2dc\uba74 \uc88b\uc744\ub9cc\ud55c \uba54\uc11c\ub4dc \ub4e4\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: \uba54\uc11c\ub4dc \uc774\ub984 \uc124\uba85 parent \ub3c4\uc804 \uacfc\uc81c \ub07c\ub9ac\uc758 \uc0c1\uad00 \uad00\uacc4\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \ub3c4\uc804 \uacfc\uc81c\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984 \ub610\ub294 Advancement \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4. display \ucc44\ud305, \ud1a0\uc2a4\ud2b8 \uc54c\ub9bc, \uadf8\ub9ac\uace0 \ub3c4\uc804 \uacfc\uc81c \uba54\ub274\uc5d0\uc11c \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud45c\uc2dc\ud560 \uc815\ubcf4\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. rewards \ub3c4\uc804 \uacfc\uc81c \ub2ec\uc131 \ubcf4\uc0c1\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4. addCriterion \ub3c4\uc804 \uacfc\uc81c \ud574\uae08 \uc870\uac74\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. requirements \ub3c4\uc804 \uacfc\uc81c \ud574\uae08 \uc870\uac74\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uc870\uac74\ub4e4\uc744 \ub9cc\uc871\ud558\ub3c4\ub85d( RequirementsStrategy#AND ), \ub610\ub294 \ud558\ub098\ub9cc \ub9cc\uc871\ud574\ub3c4 \ub418\ub3c4\ub85d( RequirementsStrategy#OR ) \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc73c\uba70, \uc9c1\uc811 \uc870\uac74 \ubaa9\ub85d\uc744 \uc804\ub2ec\ud558\uac70\ub098 RequirementsStrategy \ub97c \uad6c\ud604\ud558\uc5ec \ub354 \uc0c1\uc138\ud558\uac8c \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Advancement$Builder \ub97c \ub2e4 \uc124\uc815\ud558\uc168\ub2e4\uba74, #save \ub97c \ud638\ucd9c\ud558\uc5ec Advancement \uac1d\uccb4\ub97c \uc0dd\uc131\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. #save \ub294 \ub3c4\uc804 \uacfc\uc81c\ub97c \uc800\uc7a5\ud558\ub294 Consumer<Advancement> \uc640, \ub3c4\uc804 \uacfc\uc81c\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984, \uadf8\ub9ac\uace0 \ub2e4\ub978 \ub3c4\uc804 \uacfc\uc81c\ub4e4 \ub07c\ub9ac\uc758 \uc0c1\uad00 \uad00\uacc4\ub97c \ud655\uc778\ud558\uae30 \uc704\ud55c ExistingFileHelper \ub97c \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4. AdvancementProvider#registerAdvancements \uc5d0 \uc804\ub2ec\ub41c \uac83\uc744 \uadf8\ub300\ub85c \uc0ac\uc6a9\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. // AdvancementProvider#registerAdvancements(writer, fileHelper) \uc624\ubc84\ub77c\uc774\ub4dc \uc608\uc2dc Advancement example = Advancement.Builder.advancement() .addCriterion(\"example_criterion\", triggerInstance) // \ub3c4\uc804 \uacfc\uc81c \ud574\uae08 \uc870\uac74 .save(consumer, name, fileHelper); }","title":"Advancement$Builder"},{"location":"datagen/server/glm/","text":"Global Loot Modifier Generation Global Loot Modifiers (GLMs) can be generated for a mod by subclassing GlobalLootModifierProvider and implementing #start . Each GLM can be added generated by calling #add and specifying the name of the modifier, the serializer of the modifier , and the modifier instance to be serialized. After implementation, the provider must be added to the DataGenerator . // In some GlobalLootModifierProvider#start this.add(\"example_modifier\", EXAMPLE_MODIFIER_SERIALIZER, new ExampleModifier( new LootItemCondition[] { WeatherCheck.weather().setRaining(true).build() // Executes when raining }, \"val1\", 10, Items.DIRT ));","title":"\uc804\uccb4 \uc804\ub9ac\ud488 \uc218\uc815 \ub370\uc774\ud130 \uc0dd\uc131\ud558\uae30"},{"location":"datagen/server/glm/#global-loot-modifier-generation","text":"Global Loot Modifiers (GLMs) can be generated for a mod by subclassing GlobalLootModifierProvider and implementing #start . Each GLM can be added generated by calling #add and specifying the name of the modifier, the serializer of the modifier , and the modifier instance to be serialized. After implementation, the provider must be added to the DataGenerator . // In some GlobalLootModifierProvider#start this.add(\"example_modifier\", EXAMPLE_MODIFIER_SERIALIZER, new ExampleModifier( new LootItemCondition[] { WeatherCheck.weather().setRaining(true).build() // Executes when raining }, \"val1\", 10, Items.DIRT ));","title":"Global Loot Modifier Generation"},{"location":"datagen/server/loottables/","text":"Loot Table Generation Loot tables can be generated for a mod by subclassing LootTableProvider with a few modifications. After implementation, the provider must be added to the DataGenerator . The LootTableProvider Subclass LootTableProvider is simplified into two methods: #getTables , which collect the table builders, and #validate , which checks whether the generated loot tables are valid. Both of these methods need to be overridden to use LootTableProvider . #validate can be simplified to call LootTables#validate for every single table. It initially fails since it expects the tables defined within BuiltInLootTables to be generated as well. // In some LootTableProvider subclass @Override protected void validate(Map<ResourceLocation, LootTable> tables, ValidationContext ctx) { tables.forEach((name, table) -> LootTables.validate(ctx, name, table)); } #getTables defines a list of factory methods for table builders for a given LootContextParamSet . Each table builder consumes a writer used to generate the given table for a specific name. To simplify understanding: // In some LootTableProvider subclass @Override protected List< // Get a list Pair< // of pairs Supplier< // for a factory Consumer< // which takes in BiConsumer< // a writer of ResourceLocation, // the name of the table LootTable.Builder // and the table to generate > > >, LootContextParamSet // with a given parameter set > > getTables() { // Return table builders here } Table Builders Each table builder has a method which takes in the writer to generate a table. This is typically done implementing a Consumer<BiConsumer<ResourceLocation, LootTable.Builder>> . public class ExampleLoot implements Consumer<BiConsumer<ResourceLocation, LootTable.Builder>> { // Used to create a factory method for the wrapping Supplier public ExampleLoot() {} // The method used to generate the loot tables @Override public void accept(BiConsumer<ResourceLocation, LootTable.Builder> writer) { // Generate loot tables here by calling writer#accept } } The table can then be added to LootTableProvider#getTables for any available LootContextParamSet : // In some LootTableProvider subclass @Override protected List<Pair<Supplier<Consumer<BiConsumer<ResourceLocation, LootTable.Builder>>>, LootContextParamSet>> getTables() { return ImmutableList.of( Pair.of(ExampleLoot::new, LootContextParamSets.EMPTY) // Loot table builder for the 'empty' parameter set //... ); } BlockLoot and EntityLoot Subclasses For LootContextParamSets#BLOCK and #ENTITY , there are special types ( BlockLoot and EntityLoot respectively) which provide additional helper methods for creating and validating that there are loot tables. To use them, all registered objects must be supplied to either BlockLoot#getKnownBlocks and EntityLoot#getKnownEntities respectively. These methods are to make sure all objects within the iterable has a loot table. Tip If DeferredRegister is being used to register a mod\u2019s objects, then the #getKnown* methods can be supplied the entries via DeferredRegister#getEntities : // In some BlockLoot subclass for some DeferredRegister BLOCK_REGISTRAR @Override protected Iterable<Block> getKnownBlocks() { return BLOCK_REGISTRAR.getEntries() // Get all registered entries .stream() // Stream the wrapped objects .flatMap(RegistryObject::stream) // Get the object if available ::iterator; // Create the iterable } Loot Table Builders To generate loot tables, they are accepted by the LootTableProvider as a LootTable$Builder . Afterwards, the specified LootContextParamSet is set and then built via #build . Before being built, the builder can specify entries, conditions, and modifiers which affect how the loot table functions. Note The functionality of loot tables is so expansive that it will not be covered by this documentation in its entirety. Instead, a brief description of each component will be mentioned. The specific subtypes of each component can be found using an IDE. Their implementations will be left as an exercise to the reader. LootTable Loot tables are the base object and can be transformed into the required LootTable$Builder using LootTable#lootTable . The loot table can be built with a list of pools (via #withPool ) applied in the order they are specified along with functions (via #apply ) to modify the resulting items of those pools. LootPool Loot pools represents a group to perform operations and can generate a LootPool$Builder using LootPool#lootPool . Each loot pool can specify the entries (via #add ) which define the operations in the pool, the conditions (via #when ) which define if the operations in the pool should be performed, and functions (via #apply ) to modify the resulting items of the entries. Each pool can be executed as many times as specified (via #setRolls ). Additionally, bonus executions can be specified (via #setBonusRolls ) which is modified by the luck of the executor. LootPoolEntryContainer Loot entries define the operations to occur when selected, typically generating items. Each entry has an associated, registered LootPoolEntryType . They also have their own associated builders which subtype LootPoolEntryContainer$Builder . Multiple entries can execute at the same time (via #append ) or sequentially until one fails (via #then ). Additionally, entries can default to another entry on failure (via #otherwise ). LootItemCondition Loot conditions define requirements which need to be met for some operation to execute. Each condition has an associated, registered LootItemConditionType . They also have their own associated builders which subtype LootItemCondition$Builder . By default, all loot conditions specified must return true for an operation to execute. Loot conditions can also be specified such that only one must return true instead (via #or ). Additionally, the resulting output of a condition can be inverted (via #invert ). LootItemFunction Loot functions modify the result of an execution before passing it to the output. Each function has an associated, registered LootItemFunctionType . They also have their own associated builders which subtype LootItemFunction$Builder . NbtProvider NBT providers are a special type of functions defined by CopyNbtFunction . They define where to pull tag information from. Each provider has an associated, registered LootNbtProviderType . NumberProvider Number providers determine how many times a loot pool executes. Each provider has an associated, registered LootNumberProviderType . ScoreboardNameProvider Scoreboard providers are a special type of number providers defined by ScoreboardValue . They define the name of the scoreboard to pull the number of rolls to execute from. Each provider has an associated, registered LootScoreProviderType .","title":"\ucee8\ud14c\uc774\ub108 \uc804\ub9ac\ud488 \ud14c\uc774\ube14 \uc0dd\uc131\ud558\uae30"},{"location":"datagen/server/loottables/#loot-table-generation","text":"Loot tables can be generated for a mod by subclassing LootTableProvider with a few modifications. After implementation, the provider must be added to the DataGenerator .","title":"Loot Table Generation"},{"location":"datagen/server/loottables/#the-loottableprovider-subclass","text":"LootTableProvider is simplified into two methods: #getTables , which collect the table builders, and #validate , which checks whether the generated loot tables are valid. Both of these methods need to be overridden to use LootTableProvider . #validate can be simplified to call LootTables#validate for every single table. It initially fails since it expects the tables defined within BuiltInLootTables to be generated as well. // In some LootTableProvider subclass @Override protected void validate(Map<ResourceLocation, LootTable> tables, ValidationContext ctx) { tables.forEach((name, table) -> LootTables.validate(ctx, name, table)); } #getTables defines a list of factory methods for table builders for a given LootContextParamSet . Each table builder consumes a writer used to generate the given table for a specific name. To simplify understanding: // In some LootTableProvider subclass @Override protected List< // Get a list Pair< // of pairs Supplier< // for a factory Consumer< // which takes in BiConsumer< // a writer of ResourceLocation, // the name of the table LootTable.Builder // and the table to generate > > >, LootContextParamSet // with a given parameter set > > getTables() { // Return table builders here }","title":"The LootTableProvider Subclass"},{"location":"datagen/server/loottables/#table-builders","text":"Each table builder has a method which takes in the writer to generate a table. This is typically done implementing a Consumer<BiConsumer<ResourceLocation, LootTable.Builder>> . public class ExampleLoot implements Consumer<BiConsumer<ResourceLocation, LootTable.Builder>> { // Used to create a factory method for the wrapping Supplier public ExampleLoot() {} // The method used to generate the loot tables @Override public void accept(BiConsumer<ResourceLocation, LootTable.Builder> writer) { // Generate loot tables here by calling writer#accept } } The table can then be added to LootTableProvider#getTables for any available LootContextParamSet : // In some LootTableProvider subclass @Override protected List<Pair<Supplier<Consumer<BiConsumer<ResourceLocation, LootTable.Builder>>>, LootContextParamSet>> getTables() { return ImmutableList.of( Pair.of(ExampleLoot::new, LootContextParamSets.EMPTY) // Loot table builder for the 'empty' parameter set //... ); }","title":"Table Builders"},{"location":"datagen/server/loottables/#blockloot-and-entityloot-subclasses","text":"For LootContextParamSets#BLOCK and #ENTITY , there are special types ( BlockLoot and EntityLoot respectively) which provide additional helper methods for creating and validating that there are loot tables. To use them, all registered objects must be supplied to either BlockLoot#getKnownBlocks and EntityLoot#getKnownEntities respectively. These methods are to make sure all objects within the iterable has a loot table. Tip If DeferredRegister is being used to register a mod\u2019s objects, then the #getKnown* methods can be supplied the entries via DeferredRegister#getEntities : // In some BlockLoot subclass for some DeferredRegister BLOCK_REGISTRAR @Override protected Iterable<Block> getKnownBlocks() { return BLOCK_REGISTRAR.getEntries() // Get all registered entries .stream() // Stream the wrapped objects .flatMap(RegistryObject::stream) // Get the object if available ::iterator; // Create the iterable }","title":"BlockLoot and EntityLoot Subclasses"},{"location":"datagen/server/loottables/#loot-table-builders","text":"To generate loot tables, they are accepted by the LootTableProvider as a LootTable$Builder . Afterwards, the specified LootContextParamSet is set and then built via #build . Before being built, the builder can specify entries, conditions, and modifiers which affect how the loot table functions. Note The functionality of loot tables is so expansive that it will not be covered by this documentation in its entirety. Instead, a brief description of each component will be mentioned. The specific subtypes of each component can be found using an IDE. Their implementations will be left as an exercise to the reader.","title":"Loot Table Builders"},{"location":"datagen/server/loottables/#loottable","text":"Loot tables are the base object and can be transformed into the required LootTable$Builder using LootTable#lootTable . The loot table can be built with a list of pools (via #withPool ) applied in the order they are specified along with functions (via #apply ) to modify the resulting items of those pools.","title":"LootTable"},{"location":"datagen/server/loottables/#lootpool","text":"Loot pools represents a group to perform operations and can generate a LootPool$Builder using LootPool#lootPool . Each loot pool can specify the entries (via #add ) which define the operations in the pool, the conditions (via #when ) which define if the operations in the pool should be performed, and functions (via #apply ) to modify the resulting items of the entries. Each pool can be executed as many times as specified (via #setRolls ). Additionally, bonus executions can be specified (via #setBonusRolls ) which is modified by the luck of the executor.","title":"LootPool"},{"location":"datagen/server/loottables/#lootpoolentrycontainer","text":"Loot entries define the operations to occur when selected, typically generating items. Each entry has an associated, registered LootPoolEntryType . They also have their own associated builders which subtype LootPoolEntryContainer$Builder . Multiple entries can execute at the same time (via #append ) or sequentially until one fails (via #then ). Additionally, entries can default to another entry on failure (via #otherwise ).","title":"LootPoolEntryContainer"},{"location":"datagen/server/loottables/#lootitemcondition","text":"Loot conditions define requirements which need to be met for some operation to execute. Each condition has an associated, registered LootItemConditionType . They also have their own associated builders which subtype LootItemCondition$Builder . By default, all loot conditions specified must return true for an operation to execute. Loot conditions can also be specified such that only one must return true instead (via #or ). Additionally, the resulting output of a condition can be inverted (via #invert ).","title":"LootItemCondition"},{"location":"datagen/server/loottables/#lootitemfunction","text":"Loot functions modify the result of an execution before passing it to the output. Each function has an associated, registered LootItemFunctionType . They also have their own associated builders which subtype LootItemFunction$Builder .","title":"LootItemFunction"},{"location":"datagen/server/loottables/#nbtprovider","text":"NBT providers are a special type of functions defined by CopyNbtFunction . They define where to pull tag information from. Each provider has an associated, registered LootNbtProviderType .","title":"NbtProvider"},{"location":"datagen/server/loottables/#numberprovider","text":"Number providers determine how many times a loot pool executes. Each provider has an associated, registered LootNumberProviderType .","title":"NumberProvider"},{"location":"datagen/server/loottables/#scoreboardnameprovider","text":"Scoreboard providers are a special type of number providers defined by ScoreboardValue . They define the name of the scoreboard to pull the number of rolls to execute from. Each provider has an associated, registered LootScoreProviderType .","title":"ScoreboardNameProvider"},{"location":"datagen/server/recipes/","text":"Recipe Generation Recipes can be generated for a mod by subclassing RecipeProvider and overriding #buildCraftingRecipes . A recipe is supplied for data generation once a FinishedRecipe view is accepted by the consumer. FinishedRecipe s can either be created and supplied manually or, for convenience, created using a RecipeBuilder . After implementation, the provider must be added to the DataGenerator . RecipeBuilder RecipeBuilder is a convenience implementation for creating FinishedRecipe s to generate. It provides basic definitions for unlocking, grouping, saving, and getting the result of a recipe. This is done through #unlockedBy , #group , #save , and #getResult respectively. Important ItemStack outputs in recipes are not supported within vanilla recipe builders for RecipeProvider . A FinishedRecipe must be built in a different manner for existing vanilla recipe serializers to generate this data. Warning The item results being generated must have a valid CreativeModeTab specified; otherwise, a NullPointerException will be thrown. If no category accurately represents the item and no tab should be created, set the #tab property during item initialization to CreativeModeTab#TAB_SEARCH . All recipe builders except for [ SpecialRecipeBuilder ] require an advancement criteria to be specified. All recipes generate a criteria unlocking the recipe if the player has used the recipe previously. However, an additional criteria must be specified that allows the player to obtain the recipe without any prior knowledge. If any of the criteria specified is true, then the played will obtain the recipe for the recipe book. Tip Recipe criteria commonly use InventoryChangeTrigger to unlock their recipe when certain items are present in the user\u2019s inventory. ShapedRecipeBuilder ShapedRecipeBuilder is used to generate shaped recipes. The builder can be initialized via #shaped . The recipe group, input symbol pattern, symbol definition of ingredients, and the recipe unlock criteria can be specified before saving. // In RecipeProvider#buildCraftingRecipes(writer) ShapedRecipeBuilder builder = ShapedRecipeBuilder.shaped(result) .pattern(\"a a\") // Create recipe pattern .define('a', item) // Define what the symbol represents .unlockedBy(\"criteria\", criteria) // How the recipe is unlocked .save(writer); // Add data to builder Additional Validation Checks Shaped recipes have some additional validation checks performed before building: A pattern must be defined and take in more than one item. All pattern rows must be the same width. A symbol cannot be defined more than once. The space character ( ' ' ) is reserved for representing no item in a slot and, as such, cannot be defined. A pattern must use all symbols defined by the user. A criteria besides from using the recipe must be specified to unlock the recipe. ShapelessRecipeBuilder ShapelessRecipeBuilder is used to generate shapeless recipes. The builder can be initialized via #shapeless . The recipe group, input ingredients, and the recipe unlock criteria can be specified before saving. // In RecipeProvider#buildCraftingRecipes(writer) ShapelessRecipeBuilder builder = ShapelessRecipeBuilder.shapeless(result) .requires(item) // Add item to the recipe .unlockedBy(\"criteria\", criteria) // How the recipe is unlocked .save(writer); // Add data to builder SimpleCookingRecipeBuilder SimpleCookingRecipeBuilder is used to generate smelting, blasting, smoking, and campfire cooking recipes. Additionally, custom cooking recipes using the SimpleCookingSerializer can also be data generated using this builder. The builder can be initialized via #smelting , #blasting , #smoking , #campfireCooking , or #cooking respectively. The recipe group and the recipe unlock criteria can be specified before saving. // In RecipeProvider#buildCraftingRecipes(writer) SimpleCookingRecipeBuilder builder = SimpleCookingRecipeBuilder.smelting(input, result, experience, cookingTime) .unlockedBy(\"criteria\", criteria) // How the recipe is unlocked .save(writer); // Add data to builder SingleItemRecipeBuilder SingleItemRecipeBuilder is used to generate stonecutting recipes. Additionally, custom single item recipes using a serializer like SingleItemRecipe$Serializer can also be data generated using this builder. The builder can be initialized via #stonecutting or through the constructor respectively. The recipe group and the recipe unlock criteria can be specified before saving. // In RecipeProvider#buildCraftingRecipes(writer) SingleItemRecipeBuilder builder = SingleItemRecipeBuilder.stonecutting(input, result) .unlockedBy(\"criteria\", criteria) // How the recipe is unlocked .save(writer); // Add data to builder Non- RecipeBuilder Builders Some recipe builders do not implement RecipeBuilder due to lacking features used by all previously mentioned recipes. UpgradeRecipeBuilder UpgradeRecipeBuilder is used to generate smithing recipes. Additionally, custom upgrade recipes using a serializer like UpgradeRecipe$Serializer can also be data generated using this builder. The builder can be initialized via #smithing or through the constructor respectively. The recipe unlock criteria can be specified before saving. // In RecipeProvider#buildCraftingRecipes(writer) UpgradeRecipeBuilder builder = UpgradeRecipeBuilder.smithing(base, addition, result) .unlocks(\"criteria\", criteria) // How the recipe is unlocked .save(writer, name); // Add data to builder SpecialRecipeBuilder SpecialRecipeBuilder is used to generate empty JSONs for dynamic recipes that cannot easily be constrained to the recipe JSON format (dying armor, firework, etc.). The builder can be initialized via #special . // In RecipeProvider#buildCraftingRecipes(writer) SpecialRecipeBuilder.special(dynamicRecipeSerializer) .save(writer, name); // Add data to builder Conditional Recipes Conditional recipes can also be data generated via ConditionalRecipe$Builder . The builder can be obtained using #builder . Conditions for each recipe can be specified by first calling #addCondition and then calling #addRecipe after all conditions have been specified. This process can be repeated as many times as the programmer would like. After all recipes have been specified, advancements can be added for each recipe at the end using #generateAdvancement . Alternatively, the conditional advancement can be set using #setAdvancement . // In RecipeProvider#buildCraftingRecipes(writer) ConditionalRecipe.builder() // Add the conditions for the recipe .addCondition(...) // Add recipe to return when conditions are true .addRecipe(...) // Add the next conditions for the next recipe .addCondition(...) // Add next recipe to return when the next conditions are true .addRecipe(...) // Create conditional advancement which uses the conditions // and unlocking advancement in the recipes above .generateAdvancement() .build(writer, name); IConditionBuilder To simplify adding conditions to conditional recipes without having to construct the instances of each condition instance manually, the extended RecipeProvider can implement IConditionBuilder . The interface adds methods to easily construct condition instances. // In ConditionalRecipe$Builder#addCondition ( // If either 'examplemod:example_item' // OR 'examplemod:example_item2' exists // AND // NOT FALSE // Methods are defined by IConditionBuilder and( or( itemExists(\"examplemod\", \"example_item\"), itemExists(\"examplemod\", \"example_item2\") ), not( FALSE() ) ) ) Custom Recipe Serializers Custom recipe serializers can be data generated by creating a builder that can construct a FinishedRecipe . The finished recipe encodes the recipe data and its unlocking advancement, when present, to JSON. Additionally, the name and serializer of the recipe is also specified to know where to write to and what can decode the object when loading. Once a FinishedRecipe is constructed, it simply needs to be passed to the Consumer supplied by RecipeProvider#buildCraftingRecipes . Tip FinishedRecipe s are flexible enough that any object transformation can be data generated, not just items.","title":"\uc870\ud569\ubc95 \uc0dd\uc131\ud558\uae30"},{"location":"datagen/server/recipes/#recipe-generation","text":"Recipes can be generated for a mod by subclassing RecipeProvider and overriding #buildCraftingRecipes . A recipe is supplied for data generation once a FinishedRecipe view is accepted by the consumer. FinishedRecipe s can either be created and supplied manually or, for convenience, created using a RecipeBuilder . After implementation, the provider must be added to the DataGenerator .","title":"Recipe Generation"},{"location":"datagen/server/recipes/#recipebuilder","text":"RecipeBuilder is a convenience implementation for creating FinishedRecipe s to generate. It provides basic definitions for unlocking, grouping, saving, and getting the result of a recipe. This is done through #unlockedBy , #group , #save , and #getResult respectively. Important ItemStack outputs in recipes are not supported within vanilla recipe builders for RecipeProvider . A FinishedRecipe must be built in a different manner for existing vanilla recipe serializers to generate this data. Warning The item results being generated must have a valid CreativeModeTab specified; otherwise, a NullPointerException will be thrown. If no category accurately represents the item and no tab should be created, set the #tab property during item initialization to CreativeModeTab#TAB_SEARCH . All recipe builders except for [ SpecialRecipeBuilder ] require an advancement criteria to be specified. All recipes generate a criteria unlocking the recipe if the player has used the recipe previously. However, an additional criteria must be specified that allows the player to obtain the recipe without any prior knowledge. If any of the criteria specified is true, then the played will obtain the recipe for the recipe book. Tip Recipe criteria commonly use InventoryChangeTrigger to unlock their recipe when certain items are present in the user\u2019s inventory.","title":"RecipeBuilder"},{"location":"datagen/server/recipes/#shapedrecipebuilder","text":"ShapedRecipeBuilder is used to generate shaped recipes. The builder can be initialized via #shaped . The recipe group, input symbol pattern, symbol definition of ingredients, and the recipe unlock criteria can be specified before saving. // In RecipeProvider#buildCraftingRecipes(writer) ShapedRecipeBuilder builder = ShapedRecipeBuilder.shaped(result) .pattern(\"a a\") // Create recipe pattern .define('a', item) // Define what the symbol represents .unlockedBy(\"criteria\", criteria) // How the recipe is unlocked .save(writer); // Add data to builder","title":"ShapedRecipeBuilder"},{"location":"datagen/server/recipes/#additional-validation-checks","text":"Shaped recipes have some additional validation checks performed before building: A pattern must be defined and take in more than one item. All pattern rows must be the same width. A symbol cannot be defined more than once. The space character ( ' ' ) is reserved for representing no item in a slot and, as such, cannot be defined. A pattern must use all symbols defined by the user. A criteria besides from using the recipe must be specified to unlock the recipe.","title":"Additional Validation Checks"},{"location":"datagen/server/recipes/#shapelessrecipebuilder","text":"ShapelessRecipeBuilder is used to generate shapeless recipes. The builder can be initialized via #shapeless . The recipe group, input ingredients, and the recipe unlock criteria can be specified before saving. // In RecipeProvider#buildCraftingRecipes(writer) ShapelessRecipeBuilder builder = ShapelessRecipeBuilder.shapeless(result) .requires(item) // Add item to the recipe .unlockedBy(\"criteria\", criteria) // How the recipe is unlocked .save(writer); // Add data to builder","title":"ShapelessRecipeBuilder"},{"location":"datagen/server/recipes/#simplecookingrecipebuilder","text":"SimpleCookingRecipeBuilder is used to generate smelting, blasting, smoking, and campfire cooking recipes. Additionally, custom cooking recipes using the SimpleCookingSerializer can also be data generated using this builder. The builder can be initialized via #smelting , #blasting , #smoking , #campfireCooking , or #cooking respectively. The recipe group and the recipe unlock criteria can be specified before saving. // In RecipeProvider#buildCraftingRecipes(writer) SimpleCookingRecipeBuilder builder = SimpleCookingRecipeBuilder.smelting(input, result, experience, cookingTime) .unlockedBy(\"criteria\", criteria) // How the recipe is unlocked .save(writer); // Add data to builder","title":"SimpleCookingRecipeBuilder"},{"location":"datagen/server/recipes/#singleitemrecipebuilder","text":"SingleItemRecipeBuilder is used to generate stonecutting recipes. Additionally, custom single item recipes using a serializer like SingleItemRecipe$Serializer can also be data generated using this builder. The builder can be initialized via #stonecutting or through the constructor respectively. The recipe group and the recipe unlock criteria can be specified before saving. // In RecipeProvider#buildCraftingRecipes(writer) SingleItemRecipeBuilder builder = SingleItemRecipeBuilder.stonecutting(input, result) .unlockedBy(\"criteria\", criteria) // How the recipe is unlocked .save(writer); // Add data to builder","title":"SingleItemRecipeBuilder"},{"location":"datagen/server/recipes/#non-recipebuilder-builders","text":"Some recipe builders do not implement RecipeBuilder due to lacking features used by all previously mentioned recipes.","title":"Non-RecipeBuilder Builders"},{"location":"datagen/server/recipes/#upgraderecipebuilder","text":"UpgradeRecipeBuilder is used to generate smithing recipes. Additionally, custom upgrade recipes using a serializer like UpgradeRecipe$Serializer can also be data generated using this builder. The builder can be initialized via #smithing or through the constructor respectively. The recipe unlock criteria can be specified before saving. // In RecipeProvider#buildCraftingRecipes(writer) UpgradeRecipeBuilder builder = UpgradeRecipeBuilder.smithing(base, addition, result) .unlocks(\"criteria\", criteria) // How the recipe is unlocked .save(writer, name); // Add data to builder","title":"UpgradeRecipeBuilder"},{"location":"datagen/server/recipes/#specialrecipebuilder","text":"SpecialRecipeBuilder is used to generate empty JSONs for dynamic recipes that cannot easily be constrained to the recipe JSON format (dying armor, firework, etc.). The builder can be initialized via #special . // In RecipeProvider#buildCraftingRecipes(writer) SpecialRecipeBuilder.special(dynamicRecipeSerializer) .save(writer, name); // Add data to builder","title":"SpecialRecipeBuilder"},{"location":"datagen/server/recipes/#conditional-recipes","text":"Conditional recipes can also be data generated via ConditionalRecipe$Builder . The builder can be obtained using #builder . Conditions for each recipe can be specified by first calling #addCondition and then calling #addRecipe after all conditions have been specified. This process can be repeated as many times as the programmer would like. After all recipes have been specified, advancements can be added for each recipe at the end using #generateAdvancement . Alternatively, the conditional advancement can be set using #setAdvancement . // In RecipeProvider#buildCraftingRecipes(writer) ConditionalRecipe.builder() // Add the conditions for the recipe .addCondition(...) // Add recipe to return when conditions are true .addRecipe(...) // Add the next conditions for the next recipe .addCondition(...) // Add next recipe to return when the next conditions are true .addRecipe(...) // Create conditional advancement which uses the conditions // and unlocking advancement in the recipes above .generateAdvancement() .build(writer, name);","title":"Conditional Recipes"},{"location":"datagen/server/recipes/#iconditionbuilder","text":"To simplify adding conditions to conditional recipes without having to construct the instances of each condition instance manually, the extended RecipeProvider can implement IConditionBuilder . The interface adds methods to easily construct condition instances. // In ConditionalRecipe$Builder#addCondition ( // If either 'examplemod:example_item' // OR 'examplemod:example_item2' exists // AND // NOT FALSE // Methods are defined by IConditionBuilder and( or( itemExists(\"examplemod\", \"example_item\"), itemExists(\"examplemod\", \"example_item2\") ), not( FALSE() ) ) )","title":"IConditionBuilder"},{"location":"datagen/server/recipes/#custom-recipe-serializers","text":"Custom recipe serializers can be data generated by creating a builder that can construct a FinishedRecipe . The finished recipe encodes the recipe data and its unlocking advancement, when present, to JSON. Additionally, the name and serializer of the recipe is also specified to know where to write to and what can decode the object when loading. Once a FinishedRecipe is constructed, it simply needs to be passed to the Consumer supplied by RecipeProvider#buildCraftingRecipes . Tip FinishedRecipe s are flexible enough that any object transformation can be data generated, not just items.","title":"Custom Recipe Serializers"},{"location":"datagen/server/tags/","text":"Tag Generation Tags can be generated for a mod by subclassing TagsProvider and implementing #addTags . After implementation, the provider must be added to the DataGenerator . TagsProvider The tags provider has two methods used for generating tags: creating a tag with objects and other tags via #tag , or using tags from other object types to generate the tag data via #getOrCreateRawBuilder . Note Typically, a provider will not call #getOrCreateRawBuilder directly unless a registry contains a representation of objects from a different registry (blocks have item representations to obtain the blocks in the inventory). When #tag is called, a TagAppender is created which acts as a chainable consumer of elements to add to the tag: Method Description add Adds an object to a tag. addOptional Adds an object to a tag through its name. If the object is not present, then the object will be skipped when loading. addTag Adds a tag to a tag. All elements within the inner tag are now a part of the outer tag. addOptionalTag Adds a tag to a tag through its name. If the tag is not present, then the tag will be skipped when loading. replace When true , all previously loaded entries added to this tag from other datapacks will be discarded. If a datapack is loaded after this one, then it will still append the entries to the tag. remove Removes an object or tag from a tag. // In some TagProvider#addTags this.tag(EXAMPLE_TAG) .add(EXAMPLE_OBJECT) // Adds an object to the tag .addOptional(new ResourceLocation(\"othermod\", \"other_object\")) // Adds an object from another mod to the tag this.tag(EXAMPLE_TAG_2) .addTag(EXAMPLE_TAG) // Adds a tag to the tag .remove(EXAMPLE_OBJECT) // Removes an object from this tag Important If the mod\u2019s tags softly depends on another mod\u2019s tags (the other mod may or may not be present at runtime), the other mods\u2019 tags should be referenced using the optional methods. Existing Providers Minecraft contains a few tag providers for certain registries that can be subclassed instead. Additionally, some providers contain additional helper methods to more easily create tags. Registry Object Type Tag Provider Block BlockTagsProvider Item ItemTagsProvider EntityType EntityTypeTagsProvider Fluid FluidTagsProvider GameEvent GameEventTagsProvider Biome BiomeTagsProvider ConfiguredStructureFeature ConfiguredStructureTagsProvider ItemTagsProvider#copy Blocks have item representations to obtain them in the inventory. As such, many of the block tags can also be an item tag. To easily generate item tags to have the same entries as block tags, the #copy method can be used which takes in the block tag to copy from and the item tag to copy to. //In ItemTagsProvider#addTags this.copy(EXAMPLE_BLOCK_TAG, EXAMPLE_ITEM_TAG); Custom Tag Providers A custom tag provider can be created via a TagsProvider subclass which takes in the Registry to generate tags for. public RecipeTypeTagsProvider(DataGenerator generator, ExistingFileHelper fileHelper) { super(generator, Registry.RECIPE_TYPE, MOD_ID, fileHelper); } Forge Registry Tag Providers If a registry is wrapped by Forge or created by a mod , a provider can be created via a ForgeRegistryTagsProvider subclass instead: public MotiveTagsProvider(DataGenerator generator, ExistingFileHelper fileHelper) { super(generator, ForgeRegistries.PAINTING_TYPES, MOD_ID, fileHelper); }","title":"\ud0dc\uadf8 \uc0dd\uc131\ud558\uae30"},{"location":"datagen/server/tags/#tag-generation","text":"Tags can be generated for a mod by subclassing TagsProvider and implementing #addTags . After implementation, the provider must be added to the DataGenerator .","title":"Tag Generation"},{"location":"datagen/server/tags/#tagsprovider","text":"The tags provider has two methods used for generating tags: creating a tag with objects and other tags via #tag , or using tags from other object types to generate the tag data via #getOrCreateRawBuilder . Note Typically, a provider will not call #getOrCreateRawBuilder directly unless a registry contains a representation of objects from a different registry (blocks have item representations to obtain the blocks in the inventory). When #tag is called, a TagAppender is created which acts as a chainable consumer of elements to add to the tag: Method Description add Adds an object to a tag. addOptional Adds an object to a tag through its name. If the object is not present, then the object will be skipped when loading. addTag Adds a tag to a tag. All elements within the inner tag are now a part of the outer tag. addOptionalTag Adds a tag to a tag through its name. If the tag is not present, then the tag will be skipped when loading. replace When true , all previously loaded entries added to this tag from other datapacks will be discarded. If a datapack is loaded after this one, then it will still append the entries to the tag. remove Removes an object or tag from a tag. // In some TagProvider#addTags this.tag(EXAMPLE_TAG) .add(EXAMPLE_OBJECT) // Adds an object to the tag .addOptional(new ResourceLocation(\"othermod\", \"other_object\")) // Adds an object from another mod to the tag this.tag(EXAMPLE_TAG_2) .addTag(EXAMPLE_TAG) // Adds a tag to the tag .remove(EXAMPLE_OBJECT) // Removes an object from this tag Important If the mod\u2019s tags softly depends on another mod\u2019s tags (the other mod may or may not be present at runtime), the other mods\u2019 tags should be referenced using the optional methods.","title":"TagsProvider"},{"location":"datagen/server/tags/#existing-providers","text":"Minecraft contains a few tag providers for certain registries that can be subclassed instead. Additionally, some providers contain additional helper methods to more easily create tags. Registry Object Type Tag Provider Block BlockTagsProvider Item ItemTagsProvider EntityType EntityTypeTagsProvider Fluid FluidTagsProvider GameEvent GameEventTagsProvider Biome BiomeTagsProvider ConfiguredStructureFeature ConfiguredStructureTagsProvider","title":"Existing Providers"},{"location":"datagen/server/tags/#itemtagsprovidercopy","text":"Blocks have item representations to obtain them in the inventory. As such, many of the block tags can also be an item tag. To easily generate item tags to have the same entries as block tags, the #copy method can be used which takes in the block tag to copy from and the item tag to copy to. //In ItemTagsProvider#addTags this.copy(EXAMPLE_BLOCK_TAG, EXAMPLE_ITEM_TAG);","title":"ItemTagsProvider#copy"},{"location":"datagen/server/tags/#custom-tag-providers","text":"A custom tag provider can be created via a TagsProvider subclass which takes in the Registry to generate tags for. public RecipeTypeTagsProvider(DataGenerator generator, ExistingFileHelper fileHelper) { super(generator, Registry.RECIPE_TYPE, MOD_ID, fileHelper); }","title":"Custom Tag Providers"},{"location":"datagen/server/tags/#forge-registry-tag-providers","text":"If a registry is wrapped by Forge or created by a mod , a provider can be created via a ForgeRegistryTagsProvider subclass instead: public MotiveTagsProvider(DataGenerator generator, ExistingFileHelper fileHelper) { super(generator, ForgeRegistries.PAINTING_TYPES, MOD_ID, fileHelper); }","title":"Forge Registry Tag Providers"},{"location":"datastorage/capabilities/","text":"\uce90\ud328\ube4c\ub9ac\ud2f0 \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 \uc5ec\ub7ec \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\ud558\ub290\ub77c \uace0\uc0dd\ud560 \ud544\uc694 \uc5c6\uc774 \ub3d9\uc801\uc774\uace0 \uc720\uc5f0\ud558\uac8c \uc5ec\ub7ec \uae30\ub2a5\ub4e4\uc744 \ub178\ucd9c\uc2dc\ud0ac \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc774 \uc2dc\uc2a4\ud15c\uc740 \ud2b9\uc815 \uac1d\uccb4\uc5d0 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ucd94\uac00\ud558\uac70\ub098 \ub178\ucd9c\uc2dc\ucf1c, \ub3d9\uc801\uc73c\ub85c \uae30\ub2a5\uc744 \ucd94\uac00\ud558\uac70\ub098 \ub370\uc774\ud130\ub97c \ucd94\uac00\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 \uaddc\uaca9\uc744 \uc815\uc758\ud558\ub294 \uc778\ud130\ud398\uc774\uc2a4 , \uadf8 \uc778\ud130\ud398\uc774\uc2a4\uc758 \uae30\ubcf8 \uad6c\ud604 , \uadf8\ub9ac\uace0 \ub370\uc774\ud130 \ud578\ub4e4\ub7ec \uc774 3\uac00\uc9c0\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \ud074\ub798\uc2a4\ub294 \uc5ec\ub7ec\uac1c \uc788\uc744 \uc218 \uc788\uc73c\ub098, \ubb34\uc870\uac74 \ud558\ub098 \uc774\uc0c1\uc740 \uc788\uc5b4\uc57c \ud558\uae30\uc5d0 \uae30\ubcf8 \uad6c\ud604\uc774 \uc694\uad6c\ub429\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \ub370\uc774\ud130 \ud578\ub4e4\ub7ec\ub294 \uae30\ubcf8 \uad6c\ud604\ub9cc \uc9c0\uc6d0\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\ub294 BlockEntity, Entity, ItemStack, Level, \uadf8\ub9ac\uace0 LevelChunk \uac00 \uae30\ubcf8\uc801\uc73c\ub85c \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc744 \uc9c0\uc6d0\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4, \uadf8\ub807\uae30\uc5d0 \uc774 \uac1d\uccb4\ub4e4\uc5d0\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc774\ubca4\ud2b8\ub97c \ud1b5\ud574\uc11c \ucd94\uac00\ud558\uac70\ub098, \uac1d\uccb4\ub4e4\uc744 \uad6c\ud604\ud558\uba70 \ub178\ucd9c\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud574\uc11c\ub294 \uc544\ub798 \ub354 \uc790\uc138\ud788 \ub2e4\ub8e8\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \ud3ec\uc9c0\uc5d0\uc11c\ub294 IItemHandler , IFluidHandler , \uadf8\ub9ac\uace0 IEnergyStorage \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. IItemHandler \ub294 \uc778\ubca4\ud1a0\ub9ac \uc2ac\ub86f\uc744 \uad00\ub9ac\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uaddc\uaca9\uc785\ub2c8\ub2e4. \uc774 \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 BlockEntity, Entity, \ub610\ub294 ItemStack \uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IInventory \uc640 ISidedInventory \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc138\uc694. IFluidHandler \ub294 \uc561\uccb4 \uc800\uc7a5 \uacf5\uac04\uc744 \uad00\ub9ac\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uaddc\uaca9\uc785\ub2c8\ub2e4. \uc774 \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 BlockEntity, Entity, \ub610\ub294 ItemStack \uc5d0 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IEnergyStorage \ub294 \uc5d0\ub108\uc9c0 \uc800\uc7a5 \uacf5\uac04\uc744 \uad00\ub9ac\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uaddc\uaca9\uc785\ub2c8\ub2e4. \uc774\ub294 BlockEntity, Entity, \ub610\ub294 ItemStack \uc5d0 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. TeamCoFH \uc758 RedstoneFlux API \ub97c \uae30\ubc18\uc73c\ub85c \ud558\uc5ec \ub9cc\ub4e4\uc5b4 \uc84c\uc2b5\ub2c8\ub2e4. \uc5ec\ub2f4\uc73c\ub85c, \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4 \uc0ac\uc774\uc5d0\uc120 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uce90\ud328\ube4c\ub9ac\ud2f0 \uadf8 \uc790\uccb4\uc778\uac83 \ucc98\ub7fc \ud45c\ud604\ud558\uae30\ub3c4 \ud569\ub2c8\ub2e4, IItemHandler \uce90\ud328\ube4c\ub9ac\ud2f0\ub77c\uace0 \ud558\uba74, IItemHandler \uc778\ud130\ud398\uc774\uc2a4\ub97c \uaddc\uaca9\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub9d0\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ubbf8 \uc874\uc7ac\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc0ac\uc6a9\ud558\uae30 \uc774\ubbf8 \uc774\uc804\uc5d0 \ub9d0\ud588\ub2e4\uc2f6\uc774, BlockEntity , Entity , \uadf8\ub9ac\uace0 ItemStack \uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. ICapabilityProvider \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \uac83\uc73c\ub85c \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc744 \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \uac1d\uccb4\ub4e4\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub77c\uace0 \ud569\ub2c8\ub2e4. \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub294 #getCapability \uba54\uc11c\ub4dc\ub97c \uc815\uc758\ud558\ub294\ub370, \uc774 \uba54\uc11c\ub4dc\ub294 \uc81c\uacf5\uc790\uac00 \uac00\uc9c4 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uac10\uc2f8\ub294 LazyOptional \uc774 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud574\uc11c\ub294 \uc544\ub798\uc5d0\uc11c \ub354 \ub2e4\ub8e8\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. \ud55c \uc81c\uacf5\uc790\uac00 \uc5ec\ub7ec \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uac00\uc9c0\uace0 \uc788\uc744 \uc218 \uc788\ub2e4 \ubcf4\ub2c8, \uadf8\uc911 \ud558\ub098\ub9cc \uc120\ud0dd\ud558\uc5ec \ucc38\uc870\ud558\uae30 \uc704\ud574\uc11c\ub294, \ud574\ub2f9 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. IItemHandler \uc758 \uacbd\uc6b0 CapabilityItemHandler#ITEM_HANDLER_CAPABILITY \uc5d0 \uc778\uc2a4\ud134\uc2a4\uac00 \ud560\ub2f9\ub418\uc5b4 \uc788\uc9c0\ub9cc, \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub4e4\uc740 CapabilityManager#get \ub97c \uc0ac\uc6a9\ud558\uc5ec \ucc38\uc870\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 static Capability<IItemHandler> ITEM_HANDLER_CAPABILITY = CapabilityManager.get(new CapabilityToken<>(){}); static Capability<IItemHandler> STATIC_REFERENCE = CapabilityItemHandler#ITEM_HANDLER_CAPABILITY; // \uc704 \ub450\uac00\uc9c0 \ub2e4 \ub3d9\uc77c\ud55c \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4 CapabilityManager#get \uc740 \ud638\ucd9c\ub418\uc5c8\uc744 \uacbd\uc6b0 null \uc774 \uc544\ub2cc \uc694\uccad\ub41c \ud0c0\uc785\uc758 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. CapabilityToken \uc775\uba85 \ud074\ub798\uc2a4\ub294 \ud3ec\uc9c0\uac00 \uac15\uc81c\uc801\uc778 \uc758\uc874\uc131\uc744 \ubd80\uc5ec\ud558\ub294 \uac83\uc744 \ud53c\ud558\uba74\uc11c, \uc62c\ubc14\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud558\uae30 \uc704\ud574 \ud544\uc694\ud55c \uc81c\ub108\ub9ad \ud0c0\uc785 \uc778\uc790\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c \uc81c\uacf5\ubc1b\uc744 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. Important null \uc774 \uc544\ub2cc \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\uc758 \ucc38\uc870\ub97c \uc5b8\uc81c\ub098 \uc5bb\uc744 \uc218 \uc788\uae34 \ud558\ub098, \uadf8\ub807\uac8c \uc5bb\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc5b8\uc81c\ub098 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \uc0ac\uc6a9\uac00\ub2a5\ud55c\uc9c0 \ud655\uc778\ud558\ub824\uba74 Capability#isRegistered \ub97c \uc0ac\uc6a9\ud558\uc138\uc694. #getCapability \uba54\uc11c\ub4dc\ub294 Direction \ub97c \ub450\ubc88\uc9f8 \uc778\uc790\ub85c \ubc1b\ub294\ub370, \uc774\ub294 \ubc29\ud5a5(\ub610\ub294 \uba74)\uc5d0 \ub530\ub77c \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \ub9cc\uc57d \ubc29\ud5a5\uc73c\ub85c null \uc774 \uc804\ub2ec\ub418\uc5c8\ub2e4\uba74, \ube14\ub85d \uc548\ucabd\uc5d0\uc11c \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc694\uccad\ud558\uc600\uac70\ub098, \ub9e5\ub77d\uc0c1 \ubc29\ud5a5\uc774 \ud544\uc694\uac00 \uc5c6\uc5b4 \ubc29\ud5a5\uc744 \uc2e0\uacbd\uc4f0\uc9c0 \uc54a\ub294 \ubc94\uc6a9\uc801\uc778 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc694\uccad\ud558\uc600\ub2e4\uace0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. #getCapability \uac00 \ubc18\ud658\ud558\ub294 \ud0c0\uc785\uc740 \uc804\ub2ec\ub41c \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\uc758 \ud0c0\uc785\uc744 \uac10\uc2f8\ub294 LazyOptional \uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, IItemHandler \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \uc804\ub2ec\ub418\uc5c8\uc744 \uacbd\uc6b0, LazyOptional<IItemHalder> \uac00 \ubc18\ud658\ub429\ub2c8\ub2e4. \ub9cc\uc57d #getCapability \uba54\uc11c\ub4dc\uac00 \uc694\uccad\ubc1b\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubc18\ud658\ud560 \uc218 \uc5c6\ub2e4\uba74, \ube44\uc5b4\uc788\ub294 LazyOptional \uc774 \ub300\uc2e0 \ubc18\ud658\ub429\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0 \ub178\ucd9c\ud558\uae30 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub178\ucd9c\ud558\uae30 \uc704\ud574\uc11c\ub294 \uccab\ubc88\uca30\ub85c \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\uc758 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ud558\ub098 \uc54c\uc544\ub450\uc154\uc57c \ud560 \uc810\uc740, \uac01 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub4e4\uc740 \uac01\uc790 \ub2e4\ub978 \ub370\uc774\ud130\ub97c \uac00\uc9c8 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4, \uc774\ub97c \ud65c\uc6a9\ud55c \uc608\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\uc758 \uad6c\ud604\uc758 \uac01\uae30 \ub2e4\ub978 \uc778\uc2a4\ud134\uc2a4\ub4e4\uc744 \uc5ec\ub7ec \uc5d4\ud2f0\ud2f0\uc5d0 \uac01\uac01 \ud560\ub2f9\ud558\uc5ec \uac01\uac01\uc758 \uc5d4\ud2f0\ud2f0\uac00 \ub2e4\ub978 \ub370\uc774\ud130\ub97c \uac00\uc9c0\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc774\ub7f0\uc2dd\uc73c\ub85c \ud65c\uc6a9\ud558\ub294 \uac83\uc740 \ubcf4\ud3b8\uc801\uc774\uba70 \uad8c\uc7a5\ub429\ub2c8\ub2e4. IItemHandler \uc758 \uacbd\uc6b0, \uae30\ubcf8 \uad6c\ud604\uc740 ItemStackHandler \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4, \uc774 \ud074\ub798\uc2a4\uc758 \uc0dd\uc131\uc790\ub294 \uc778\ubca4\ud1a0\ub9ac \uc2ac\ub86f \uac2f\uc218\ub97c \uc778\uc790\ub85c \ubc1b\uc73c\uba70, \uae30\ubcf8\uac12\uc740 1\uc785\ub2c8\ub2e4. \uadf8\ub807\uc9c0\ub9cc \uc774\ub807\uac8c \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uacf5\ud558\ub294 \uad6c\ud604\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uad8c\uc7a5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc758 \ubaa9\uc801\uc740 \uac8c\uc784\uc744 \ubd88\ub7ec\uc624\ub294 \ub3c4\uc911, \uba87\uba87 \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc744 \ub54c \ubc1c\uc0dd\ud560 \uc218 \uc788\ub294 \uc624\ub958\ub4e4\uc744 \ucd5c\uc18c\ud654\ud558\ub294 \uac83\uc774\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4, \uadf8\ub807\uae30\uc5d0 \uae30\ubcf8 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4dc\ub294 \uac83\uc740 \ud574\ub2f9 \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \uc774\ubbf8 \uc874\uc7ac\ud558\ub294\uc9c0 \ud655\uc778\ud55c \uc774\ud6c4 \uc9c4\ud589\ud558\uc154\uc57c\ub9cc \ud569\ub2c8\ub2e4. (\uc774\uc804 \uc139\uc158\uc758 CapabilityManager#get \uc5d0 \uad00\ud55c \ub0b4\uc6a9\uc744 \ucc38\uace0\ud558\uc138\uc694). \uc774\uc81c \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \uc788\uc73c\ub2c8, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c \uc0ac\uc6a9\uc790\ub4e4\uc5d0\uac8c \uc0c8\ub85c\uc6b4 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub178\ucd9c\ud55c\ub2e4\uace0 \uc54c\ub9ac\uace0 LazyOptional \uc744 \ud1b5\ud55c \ucc38\uc870\ub97c \uc81c\uacf5\ud574\uc57c \ud569\ub2c8\ub2e4. #getCapability \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud558\uace0, \uc778\uc790\ub85c \uc804\ub2ec\ubc1b\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\uc2a4\ud134\uc2a4\ub97c \ub178\ucd9c\ud558\uace0\uc790 \ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc640 \ube44\uad50\ud558\uc138\uc694. \ub9cc\uc57d \ud574\ub2f9 \uc81c\uacf5\uc790\uac00 \ubc29\ud5a5\uc5d0 \ub530\ub77c \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubc18\ud658\ud574\uc57c \ud55c\ub2e4\uba74 \uc804\ub2ec\ubc1b\uc740 side \uc778\uc790\ub97c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uc0ac\uc6a9 \uc608\uc2dc\ub85c\ub294 \ubc29\ud5a5\uc5d0 \ub530\ub77c \ub2e4\ub978 \uc778\ubca4\ud1a0\ub9ac \uc2ac\ub86f\uc744 \uac00\uc9c0\ub294 \uae30\uacc4\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc5d4\ud2f0\ud2f0\uc640 \uc544\uc774\ud15c \uc2a4\ud0dd\uc758 \uacbd\uc6b0 side \ub97c \ubb34\uc2dc\ud560 \uc218 \uc788\uc73c\ub098, \ud50c\ub808\uc774\uc5b4 \uac11\uc637 ( Direction#UP \ub294 \ud50c\ub808\uc774\uc5b4\uc758 \ud22c\uad6c \uc2ac\ub86f\uc758 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub178\ucd9c\ud568) \ub4f1\uacfc \uac19\uc740 \uc6a9\ub3c4\uc5d0 \uc0ac\uc6a9\ud558\uc2e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. super \uba54\uc11c\ub4dc \ud638\ucd9c\uc744 \ud558\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694, \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc774\ubbf8 \ubd80\ucc29\ub41c \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc81c\uacf5\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 \uc81c\uacf5\uc790\uc758 \uc0dd\uba85\uc8fc\uae30\uac00 \ub05d\ub098\uba74 \ubb34\uc870\uac74 LazyOptional#invalidate \ub97c \ud638\ucd9c\ud558\uc5ec \ubb34\ud6a8\ud654 \ud558\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4, \uc5d4\ud2f0\ud2f0\uc640 \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc758 \uacbd\uc6b0 \uc6d4\ub4dc\uc5d0\uc11c \uc81c\uac70\ub420 \ub54c #invalidateCaps \ub97c \uc790\ub3d9\uc73c\ub85c \ud638\ucd9c\ud558\uae30 \ub54c\ubb38\uc5d0, \ub9cc\uc57d \uc9c1\uc811 \uc774\ub4e4\uc744 \uad6c\ud604\ud558\uace0 \uacc4\uc2e0\ub2e4\uba74 #invalidateCaps \ub97c \uc7ac\uc815\uc758\ud558\uc5ec \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubb34\ud6a8\ud654 \uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\uc678 \ub2e4\ub978 \uc81c\uacf5\uc790\ub4e4\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubb34\ud6a8\ud654\uc2dc\ud0a4\ub294 Runnable \uc744 AttachCapabilitiesEvent#addListener \uc5d0 \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4. // \ube14\ub85d \uc5d4\ud2f0\ud2f0 \uc790\uc2dd \ud074\ub798\uc2a4 \uc5b4\ub518\uac00\uc5d0 \uc544\ub798 \ub0b4\uc6a9\uc744 \ucd94\uac00\ud558\uc138\uc694 LazyOptional<IItemHandler> inventoryHandlerLazyOptional; // inventoryHandlerSupplier \ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\uc744 \ubc18\ud658\ud558\ub294 Supplier \uc785\ub2c8\ub2e4 (\uc608: () -> inventoryHandler). // \uac1c\uc73c\ub978 \ucd08\uae30\ud654\ub97c \ud558\ub3c4\ub85d \ud558\uc5ec \uaf2d \ud544\uc694\ud560 \ub54c\ub9cc \ucd08\uae30\ud654 \ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. inventoryHandlerLazyOptional = LazyOptional.of(inventoryHandlerSupplier); @Override public <T> LazyOptional<T> getCapability(Capability<T> cap, Direction side) { // cap \uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\uc2a4\ud134\uc2a4 if (cap == CapabilityItemHandler.ITEM_HANDLER_CAPABILITY) { return inventoryHandlerLazyOptional.cast(); } // super \ub97c \ud638\ucd9c\ud558\uc9c0 \uc54a\uc73c\uba74 \ubd80\ucc29\ub41c \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4!! return super.getCapability(cap, side); } @Override public void invalidateCaps() { super.invalidateCaps(); inventoryHandlerLazyOptional.invalidate(); } Item \ub4e4\uc740 \uc870\uae08 \ud2b9\uc774\ud558\uac8c \ub2e4\ub8e8\uc5b4\uc57c \ud558\ub294\ub370, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub4e4\uc744 Item \uc774 \uc544\ub2c8\ub77c ItemStack \uc5d0 \ubd80\ucc29\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 Item#initCapabilities \uc5d0\uc11c \uc0c8\ub85c\uc6b4 \uc81c\uacf5\uc790\ub4e4\uc744 \ubd80\ucc29\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774\ub54c \ubd80\ucc29\ub41c \uce90\ud328\ube4c\ub9ac\ud2f0\ub4e4\uc740 \uadf8 \uc544\uc774\ud15c \uc2a4\ud0dd\uc758 \uc0dd\uba85\uc8fc\uae30\uac00 \ub05d\ub098\uba74 \ubb34\ud6a8\ud654 \ub429\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0 \uc694\uccad\uc740 \ub9e4 \ud2f1\ub9c8\ub2e4, \uc218\uc2ed\ubc88\uc529 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc73c\ub2c8, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub294 \ub9e4\uc6b0 \ube68\ub77c\uc57c\ub9cc \ud569\ub2c8\ub2e4, \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uac8c\uc784\uc758 \uc804\ubc18\uc801\uc778 \uc131\ub2a5\uc744 \uc800\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \uc678\ubd80 \uc790\ub8cc\uad6c\uc870 \ub4f1\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uad8c\uc7a5\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0 \ubd80\ucc29\ud558\uae30 \uc774\ubbf8 \uc774\uc804\uc5d0 \uc5b8\uae09\ud588\ub4ef\uc774, \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc774\ubbf8 \uc874\uc7ac\ud558\ub294 Level \uc774\ub098 LevelChunk \uc640 \uac19\uc740 \uc81c\uacf5\uc790\uc5d0 \ubd80\ucc29\ud558\ub294 \uac83\uc740 AttachCapabilitiesEvent \ub97c \ud1b5\ud574 \uc774\ub8e8\uc5b4\uc9d1\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 \ubaa8\ub4e0 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. AttachCapabilitiesEvent \ub294 5\uac1c\uc758 \uc81c\ub108\ub9ad \ud0c0\uc785\uc774 \uc788\ub294\ub370, \uc774\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: AttachCapabilitiesEvent<Entity> : \uc5d4\ud2f0\ud2f0\uc5d0 \ub4f1\ub85d\ud560 \ub54c\ub9cc \ubc29\uc1a1\ub428. AttachCapabilitiesEvent<BlockEntity> : \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0 \ub4f1\ub85d\ud560 \ub54c\ub9cc \ubc29\uc1a1\ub428. AttachCapabilitiesEvent<ItemStack> : \uc544\uc774\ud15c \uc2a4\ud0dd\uc5d0 \ub4f1\ub85d\ud560 \ub54c\ub9cc \ubc29\uc1a1\ub428. AttachCapabilitiesEvent<Level> : \uc6d4\ub4dc\uc5d0 \ub4f1\ub85d\ud560 \ub54c\ub9cc \ubc29\uc1a1\ub428. AttachCapabilitiesEvent<LevelChunk> : \uccad\ud06c\uc5d0 \ub4f1\ub85d\ud560 \ub54c\ub9cc \ubc29\uc1a1\ub428. \uc774 \uc81c\ub108\ub9ad \ud0c0\uc785\ub4e4\uc740 \uc704\uc5d0 \uc9c0\uc815\ub41c \ud0c0\uc785\ub4e4\ubcf4\ub2e4 \ub354 \uad6c\uccb4\uc801\uc77c \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4, \uc608\ub97c \ub4e4\uc5b4, Player \uc5d0\ub2e4\uac00 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubd80\ucc29\uc2dc\ud0a4\uace0 \uc2f6\ub2e4\uba74 AttachCapabilitiesEvent<Event> \uc774\ubca4\ud2b8\ub97c \uad6c\ub3c5\ud55c \uc774\ud6c4, \uc804\ub2ec\ub41c \uc81c\uacf5\uc790 \uac1d\uccb4\uac00 Player \uc778\uc9c0 \ud655\uc778\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 #addCapability \uba54\uc11c\ub4dc\uac00 \uc788\ub294\ub370, \uc774 \uc774\ubca4\ud2b8\ub294 \ub300\uc0c1 \uc81c\uacf5\uc790 \uac1d\uccb4\uc5d0\ub2e4\uac00 \uc0c8\ub85c\uc6b4 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubd80\ucc29\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uc2a4\ud2b8\uc5d0 \uce90\ud328\ube4c\ub9ac\ud2f0 \uadf8 \uc790\uccb4\ub97c \ucd94\uac00\ud558\uae30 \ubcf4\ub2e4\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4, \uc989 \uc774\ubbf8 \uc874\uc7ac\ud558\ub294 \uc81c\uacf5\uc790\uc5d0\ub2e4\uac00 \ub610 \ub2e4\ub978 \uc81c\uacf5\uc790\ub97c \ucd94\uac00\ud558\ub294 \uac83\uc774\uc9c0\uc694. \uc774\ub54c, \ucd94\uac00\ub418\ub294 \uc81c\uacf5\uc790\ub4e4\uc740 \ubcf4\ud3b8\uc801\uc73c\ub85c \uc775\uba85\ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \ub610\ud55c, \ucd94\uac00\ub418\ub294 \uc81c\uacf5\uc790\ub4e4\uc740 \ubc29\ud5a5\uc5d0 \ub530\ub77c \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubc18\ud658\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub294 ICapabilityProvider \ub9cc \uad6c\ud604\ud558\uba74 \ub418\uc9c0\ub9cc, \ub9cc\uc57d \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\uac00 \uc720\uc9c0\ub418\uc5b4\uc57c \ud560 \uacbd\uc6b0, ICapabilitySerializable<T extends Tag> \ub97c \ub300\uc2e0 \uad6c\ud604\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4, \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc81c\uacf5\ud558\ub294 \uba54\uc11c\ub4dc \ubfd0\ub9cc \uc544\ub2c8\ub77c NBT\ub97c \uc800\uc7a5\ud558\uace0 \ubd88\ub7ec\uc624\ub294 \uba54\uc11c\ub4dc \ub610\ud55c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. ICapabilityProvider \uad6c\ud604\uc5d0 \uad00\ud574\uc11c\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \ub178\ucd9c\uc2dc\ud0a4\uae30 \uc139\uc158\uc744 \ucc38\uace0\ud558\uc138\uc694. \uce90\ud328\ube4c\ub9ac\ud2f0 \uc9c1\uc811 \ub9cc\ub4e4\uae30 \uc77c\ubc18\uc801\uc73c\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub418\ub294 RegisterCapabilitiesEvent \uc774\ubca4\ud2b8\uc5d0 #register \ub97c \ud638\ucd9c\ud558\uc5ec \ub4f1\ub85d\ub429\ub2c8\ub2e4. @SubscribeEvent public void registerCaps(RegisterCapabilitiesEvent event) { event.register(IExampleCapability.class); } LevelChunk \uc640 BlockEntity \uce90\ud328\ube4c\ub9ac\ud2f0 \ub370\uc774\ud130 \uc720\uc9c0\uc2dc\ud0a4\uc9c0 \ub808\ubca8, \uc5d4\ud2f0\ud2f0, \uc544\uc774\ud15c \uc2a4\ud0dd\uacfc \ub2e4\ub974\uac8c, \ub808\ubca8 \uccad\ud06c\uc640 \ube14\ub85d \uc5d4\ud2f0\ud2f0\ub4e4\uc740 \uadf8 \ub370\uc774\ud130\uac00 \uc218\uc815\ub418\uc5c8\ub2e4\uace0 \ud45c\uae30\ub418\uc5c8\uc744 \uacbd\uc6b0\uc5d0\ub9cc \ub514\uc2a4\ud06c\uc5d0 \uc368\uc9d1\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \ub808\ubca8 \uccad\ud06c \ub610\ub294 \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0 \uc0ac\uc6a9\ud560 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\ub97c \uc62c\ubc14\ub974\uac8c \uc720\uc9c0\uc2dc\ud0a4\uc9c0 \uc704\ud574\uc11c\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\uac00 \ubcc0\uacbd\ub418\uc5c8\uc744 \ub54c \ud574\ub2f9 \uac1d\uccb4\uc758 \ub370\uc774\ud130\uac00 \uc218\uc815\ub418\uc5c8\ub2e4\uace0 \ud45c\uae30\ud558\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4. \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0 \uc778\ubca4\ud1a0\ub9ac\ub97c \ucd94\uac00\ud558\ub294 ItemStackHandler \ub294 void onContentsChanged(int slot) \uc774\ub77c\ub294 \uba54\uc11c\ub4dc\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc758 \ub370\uc774\ud130\uac00 \uc218\uc815\ub418\uc5c8\ub2e4\uace0 \ud45c\uae30\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. public class MyBlockEntity extends BlockEntity { private final IItemHandler inventory = new ItemStackHandler(...) { @Override protected void onContentsChanged(int slot) { super.onContentsChanged(slot); setChanged(); } } // ... } \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ub370\uc774\ud130 \ub3d9\uae30\ud654 \ud558\uae30 \uae30\ubcf8\uc801\uc73c\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uac8c \uc804\uc1a1\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \ubaa8\ub4dc\ub4e4\uc740 \uc2a4\uc2a4\ub85c \ud328\ud0b7\uc744 \uc0ac\uc6a9\ud574\uc11c \ub370\uc774\ud130\ub97c \uc9c1\uc811 \ub3d9\uae30\ud654 \ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654\ud574\uc57c \ud558\ub294 \uc0c1\ud669\uc740 \ud06c\uac8c \uc544\ub798 3\uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4, \uc774\ub7ec\ud55c \uc0c1\ud669\ub4e4\uc744 \ucc98\ub9ac\ud558\ub294 \uac83\uc740 \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. \uc5d4\ud2f0\ud2f0\uac00 \ub808\ubca8\uc5d0 \uc2a4\ud3f0\ub420\ub54c\ub098, \ube14\ub85d\uc774 \uc124\uce58\ub418\ub294 \uacbd\uc6b0. \uc774\ub7f4\ub550 \ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uc5d0 \ucd08\uae30 \uac12\uc744 \ubcf4\ub0b4\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc800\uc7a5\ub41c \ub370\uc774\ud130\uac00 \uc218\uc815\ub418\ub294 \uacbd\uc6b0, \uc774\uacbd\uc6b0 \ub370\uc774\ud130\ub97c \uc8fc\uc2dc\ud558\uace0 \uc788\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uc5d0 \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ud2b9\uc815 \uc5d4\ud2f0\ud2f0\ub098 \ube14\ub85d\uc744 \ucc98\ub2e4\ubcf4\uae30 \uc2dc\uc791\ud560 \ub54c, \uc774 \uacbd\uc6b0 \uc774\ubbf8 \uc874\uc7ac\ud558\ub294 \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud0b9 \ub97c \ucc38\uace0\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \ud328\ud0b7\uc744 \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc138\uc694. Refer to the Networking page for more information on implementing network packets. \ud50c\ub808\uc774\uc5b4\uac00 \uc8fd\uc5b4\ub3c4 \ub370\uc774\ud130 \uc720\uc9c0\uc2dc\ud0a4\uae30 \uae30\ubcf8\uc801\uc73c\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\ub294 \uc0ac\ub9dd\ud558\uba74 \ub2e4 \uc0ac\ub77c\uc9d1\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \ud50c\ub808\uc774\uc5b4\uac00 \uc0ac\ub9dd\uc2dc \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\ub97c \ub9ac\uc2a4\ud3f0 \uacfc\uc815\uc5d0\uc11c \uc218\ub3d9\uc73c\ub85c \ubcf5\uc0ac\ud558\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4. PlayerEvent$Clone \uc758 \uc774\ubca4\ud2b8\ub97c \uad6c\ub3c5\ud558\uc5ec \uc774\ub97c \uad6c\ud604\ud560 \uc218 \uc788\ub294\ub370, \uc8fd\uae30 \uc804 \ud50c\ub808\uc774\uc5b4 \uc5d4\ud2f0\ud2f0\ub85c \ubd80\ud130 \ub370\uc774\ud130\ub97c \uc77d\uc5b4 \uc640 \uc0c8\ub85c\uc6b4 \ud50c\ub808\uc774\uc5b4 \uc5d4\ud2f0\ud2f0\uc5d0 \ub370\uc774\ud130\ub97c \uc791\uc131\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 #isWasDead \uba54\uc11c\ub4dc\ub97c \uc81c\uacf5\ud558\uc5ec, \ud50c\ub808\uc774\uc5b4\uac00 \uc9c4\uc9dc \uc8fd\uc740 \uac83\uc778\uc9c0, \uc544\ub2c8\uba74 \uc5d4\ub4dc\uc5d0\uc11c \ub3cc\uc544\uc624\ub294 \uac83\uc778\uc9c0 \uad6c\ubd84\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uac00 \uc911\uc694\ud55c \uc774\uc720\ub294, \uc5d4\ub4dc\uc5d0\uc11c \ub3cc\uc544\uc62c \ub54c\ub294 \ub370\uc774\ud130\uac00 \uadf8\ub300\ub85c \ub0a8\uc544\uc788\uae30 \ub54c\ubb38\uc5d0 \uc911\ubcf5\uc744 \ubc29\uc9c0\ud574\uc57c \ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. IExtendedEntityProperties \ub85c \ubd80\ud130 \uc774\uc804\ud558\uae30 Warning \uc774\ubd80\ubd84\uc740 \ubc88\uc5ed\uac00\uac00 \uc775\uc219\ud558\uc9c0 \uc54a\uc740 \ubd80\ubd84\uc774\ub77c \ubc88\uc5ed\uc774 \uc644\uc804\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4, IEEP \ub97c \uce90\ud328\ube4c\ub9ac\ud2f0\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud574\uc57c \ud560 \ud544\uc694\uac00 \uc5c6\ub2e4\uba74 \ub118\uc5b4\uac00\uc154\ub3c4 \ub429\ub2c8\ub2e4! \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc740 \uc774\ubbf8 IEEP \ubcf4\ub2e4 \ubaa8\ub4e0 \ubc29\uba74\uc5d0\uc11c \uc6b0\uc6d4\ud558\uc9c0\ub9cc, \uc774 \ub450 \uc2dc\uc2a4\ud15c\uc740 1\ub3001\ub85c \ub300\uc751\ub418\uc9c4 \uc54a\uc2b5\ub2c8\ub2e4, \uc774 \uc139\uc158\uc5d0\uc11c\ub294 IEEP \ub97c \uce90\ud328\ube4c\ub9ac\ud2f0\ub85c \ubc14\uafb8\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \ub2e4\ub8e8\uaca0\uc2b5\ub2c8\ub2e4. \uc544\ub798\ub294 IEEP\uc640 \uce90\ud328\ube4c\ub9ac\ud2f0\uc5d0\uc11c \ub3d9\uc77c\ud55c \uac1c\ub150\ub4e4\uc785\ub2c8\ub2e4: \uc18d\uc131 \uc774\ub984/\uc544\uc774\ub514 ( String ): \uce90\ud328\ube4c\ub9ac\ud2f0 \ud0a4 ( ResourceLocation ) \ub4f1\ub85d ( EntityConstructing ): \ubd80\ucc29 ( AttachCapabilitiesEvent<Entity> ), \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 FMLCommonSetupEvent \uc774\ubca4\ud2b8 \ub3c4\uc911 \ub4f1\ub85d\ud569\ub2c8\ub2e4. Tag \uc77d\uae30/\uc4f0\uae30: \ub370\uc774\ud130 \uc77d\uae30/\uc4f0\uae30\ub294 \uc790\ub3d9\uc73c\ub85c \uc77c\uc5b4\ub098\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. ICapabilitySerializable \ub97c \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uc5d0\uc11c \ubd80\ucc29\ud558\uace0, serializeNBT / deserializeNBT \uc5d0\uc11c \uc77d\uae30/\uc4f0\uae30 \uba54\uc11c\ub4dc\ub4e4\uc744 \ud638\ucd9c\ud558\uc138\uc694. IEEP \ub97c \uce90\ud328\ube4c\ub9ac\ud2f0\ub85c \ubcc0\ud658\ud558\ub294\ubc95: IEEP\uc758 \ud0a4/\uc544\uc774\ub514 \ubb38\uc790\uc5f4\uc744 ResourceLocation \uc73c\ub85c \ubc14\uafb8\uc138\uc694. (modid \ub97c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub85c \uc0ac\uc6a9\ud558\uc138\uc694). \ub370\uc774\ud130 \ud578\ub4e4\ub7ec\uc5d0 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ucc38\uc870\ud558\ub294 \ud544\ub4dc\ub97c \ub9cc\ub4dc\uc138\uc694. EntityConstructing \uc774\ubca4\ud2b8\ub97c AttachCapabilityEvent \ub85c \ubc14\uafb8\uc138\uc694, \uadf8\ub9ac\uace0 IEEP \ub97c \ubc14\ub85c \ub4f1\ub85d\ud558\ub294 \ub300\uc2e0 ICapabilityProvider \ub97c \ubd80\ucc29\ud558\uc138\uc694(\ub370\uc774\ud130\ub97c \ub514\uc2a4\ud06c\uc5d0 \uc800\uc7a5\ud560 \ud544\uc694\uac00 \uc788\ub2e4\uba74 ICapabilitySerializable \uc744 \ub300\uc2e0 \ubd80\ucc29\ud558\uc138\uc694). IEEP\ub97c \uc0ac\uc6a9\ud558\uc168\ub2e4\uba74, \uc544\ub9c8 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \ub4f1\ub85d\ud558\ub294 register() \ub77c\ub294 \uba54\uc11c\ub4dc\ub97c IEEP \uc5d0 \uc815\uc758\ud574 \ub450\uc168\uc744 \ud150\ub370, \uc5c6\ub2e4\uba74 \ud558\ub098 \ub9cc\ub4dc\uc138\uc694. \uc774 \uba54\uc11c\ub4dc\uc5d0\uc11c\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub4f1\ub85d\ud558\ub294 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\uc138\uc694 (\uadf8\ub9ac\uace0 \ub2e4\uc2dc \ud55c\ubc88 \ub9d0\uc500\ub4e4\uc774\uc9c0\ub9cc, \uc774 \uba54\uc11c\ub4dc\ub97c FMLCommonSetupEvent \ub3c4\uc911 \ud638\ucd9c\ud558\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694).","title":"\uce90\ud328\ube4c\ub9ac\ud2f0"},{"location":"datastorage/capabilities/#_1","text":"\uce90\ud328\ube4c\ub9ac\ud2f0\ub294 \uc5ec\ub7ec \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\ud558\ub290\ub77c \uace0\uc0dd\ud560 \ud544\uc694 \uc5c6\uc774 \ub3d9\uc801\uc774\uace0 \uc720\uc5f0\ud558\uac8c \uc5ec\ub7ec \uae30\ub2a5\ub4e4\uc744 \ub178\ucd9c\uc2dc\ud0ac \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc774 \uc2dc\uc2a4\ud15c\uc740 \ud2b9\uc815 \uac1d\uccb4\uc5d0 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ucd94\uac00\ud558\uac70\ub098 \ub178\ucd9c\uc2dc\ucf1c, \ub3d9\uc801\uc73c\ub85c \uae30\ub2a5\uc744 \ucd94\uac00\ud558\uac70\ub098 \ub370\uc774\ud130\ub97c \ucd94\uac00\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 \uaddc\uaca9\uc744 \uc815\uc758\ud558\ub294 \uc778\ud130\ud398\uc774\uc2a4 , \uadf8 \uc778\ud130\ud398\uc774\uc2a4\uc758 \uae30\ubcf8 \uad6c\ud604 , \uadf8\ub9ac\uace0 \ub370\uc774\ud130 \ud578\ub4e4\ub7ec \uc774 3\uac00\uc9c0\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \ud074\ub798\uc2a4\ub294 \uc5ec\ub7ec\uac1c \uc788\uc744 \uc218 \uc788\uc73c\ub098, \ubb34\uc870\uac74 \ud558\ub098 \uc774\uc0c1\uc740 \uc788\uc5b4\uc57c \ud558\uae30\uc5d0 \uae30\ubcf8 \uad6c\ud604\uc774 \uc694\uad6c\ub429\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \ub370\uc774\ud130 \ud578\ub4e4\ub7ec\ub294 \uae30\ubcf8 \uad6c\ud604\ub9cc \uc9c0\uc6d0\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\ub294 BlockEntity, Entity, ItemStack, Level, \uadf8\ub9ac\uace0 LevelChunk \uac00 \uae30\ubcf8\uc801\uc73c\ub85c \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc744 \uc9c0\uc6d0\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4, \uadf8\ub807\uae30\uc5d0 \uc774 \uac1d\uccb4\ub4e4\uc5d0\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc774\ubca4\ud2b8\ub97c \ud1b5\ud574\uc11c \ucd94\uac00\ud558\uac70\ub098, \uac1d\uccb4\ub4e4\uc744 \uad6c\ud604\ud558\uba70 \ub178\ucd9c\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud574\uc11c\ub294 \uc544\ub798 \ub354 \uc790\uc138\ud788 \ub2e4\ub8e8\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","title":"\uce90\ud328\ube4c\ub9ac\ud2f0"},{"location":"datastorage/capabilities/#_2","text":"\ud3ec\uc9c0\uc5d0\uc11c\ub294 IItemHandler , IFluidHandler , \uadf8\ub9ac\uace0 IEnergyStorage \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. IItemHandler \ub294 \uc778\ubca4\ud1a0\ub9ac \uc2ac\ub86f\uc744 \uad00\ub9ac\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uaddc\uaca9\uc785\ub2c8\ub2e4. \uc774 \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 BlockEntity, Entity, \ub610\ub294 ItemStack \uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IInventory \uc640 ISidedInventory \ub300\uc2e0 \uc0ac\uc6a9\ud558\uc138\uc694. IFluidHandler \ub294 \uc561\uccb4 \uc800\uc7a5 \uacf5\uac04\uc744 \uad00\ub9ac\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uaddc\uaca9\uc785\ub2c8\ub2e4. \uc774 \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 BlockEntity, Entity, \ub610\ub294 ItemStack \uc5d0 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IEnergyStorage \ub294 \uc5d0\ub108\uc9c0 \uc800\uc7a5 \uacf5\uac04\uc744 \uad00\ub9ac\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uaddc\uaca9\uc785\ub2c8\ub2e4. \uc774\ub294 BlockEntity, Entity, \ub610\ub294 ItemStack \uc5d0 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. TeamCoFH \uc758 RedstoneFlux API \ub97c \uae30\ubc18\uc73c\ub85c \ud558\uc5ec \ub9cc\ub4e4\uc5b4 \uc84c\uc2b5\ub2c8\ub2e4. \uc5ec\ub2f4\uc73c\ub85c, \ubaa8\ub4dc \uac1c\ubc1c\uc790\ub4e4 \uc0ac\uc774\uc5d0\uc120 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uce90\ud328\ube4c\ub9ac\ud2f0 \uadf8 \uc790\uccb4\uc778\uac83 \ucc98\ub7fc \ud45c\ud604\ud558\uae30\ub3c4 \ud569\ub2c8\ub2e4, IItemHandler \uce90\ud328\ube4c\ub9ac\ud2f0\ub77c\uace0 \ud558\uba74, IItemHandler \uc778\ud130\ud398\uc774\uc2a4\ub97c \uaddc\uaca9\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub9d0\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.","title":"\ud3ec\uc9c0\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0"},{"location":"datastorage/capabilities/#_3","text":"\uc774\ubbf8 \uc774\uc804\uc5d0 \ub9d0\ud588\ub2e4\uc2f6\uc774, BlockEntity , Entity , \uadf8\ub9ac\uace0 ItemStack \uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. ICapabilityProvider \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \uac83\uc73c\ub85c \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc744 \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \uac1d\uccb4\ub4e4\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub77c\uace0 \ud569\ub2c8\ub2e4. \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub294 #getCapability \uba54\uc11c\ub4dc\ub97c \uc815\uc758\ud558\ub294\ub370, \uc774 \uba54\uc11c\ub4dc\ub294 \uc81c\uacf5\uc790\uac00 \uac00\uc9c4 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uac10\uc2f8\ub294 LazyOptional \uc774 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud574\uc11c\ub294 \uc544\ub798\uc5d0\uc11c \ub354 \ub2e4\ub8e8\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. \ud55c \uc81c\uacf5\uc790\uac00 \uc5ec\ub7ec \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uac00\uc9c0\uace0 \uc788\uc744 \uc218 \uc788\ub2e4 \ubcf4\ub2c8, \uadf8\uc911 \ud558\ub098\ub9cc \uc120\ud0dd\ud558\uc5ec \ucc38\uc870\ud558\uae30 \uc704\ud574\uc11c\ub294, \ud574\ub2f9 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. IItemHandler \uc758 \uacbd\uc6b0 CapabilityItemHandler#ITEM_HANDLER_CAPABILITY \uc5d0 \uc778\uc2a4\ud134\uc2a4\uac00 \ud560\ub2f9\ub418\uc5b4 \uc788\uc9c0\ub9cc, \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub4e4\uc740 CapabilityManager#get \ub97c \uc0ac\uc6a9\ud558\uc5ec \ucc38\uc870\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 static Capability<IItemHandler> ITEM_HANDLER_CAPABILITY = CapabilityManager.get(new CapabilityToken<>(){}); static Capability<IItemHandler> STATIC_REFERENCE = CapabilityItemHandler#ITEM_HANDLER_CAPABILITY; // \uc704 \ub450\uac00\uc9c0 \ub2e4 \ub3d9\uc77c\ud55c \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4 CapabilityManager#get \uc740 \ud638\ucd9c\ub418\uc5c8\uc744 \uacbd\uc6b0 null \uc774 \uc544\ub2cc \uc694\uccad\ub41c \ud0c0\uc785\uc758 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. CapabilityToken \uc775\uba85 \ud074\ub798\uc2a4\ub294 \ud3ec\uc9c0\uac00 \uac15\uc81c\uc801\uc778 \uc758\uc874\uc131\uc744 \ubd80\uc5ec\ud558\ub294 \uac83\uc744 \ud53c\ud558\uba74\uc11c, \uc62c\ubc14\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud558\uae30 \uc704\ud574 \ud544\uc694\ud55c \uc81c\ub108\ub9ad \ud0c0\uc785 \uc778\uc790\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c \uc81c\uacf5\ubc1b\uc744 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. Important null \uc774 \uc544\ub2cc \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\uc758 \ucc38\uc870\ub97c \uc5b8\uc81c\ub098 \uc5bb\uc744 \uc218 \uc788\uae34 \ud558\ub098, \uadf8\ub807\uac8c \uc5bb\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc5b8\uc81c\ub098 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \uc0ac\uc6a9\uac00\ub2a5\ud55c\uc9c0 \ud655\uc778\ud558\ub824\uba74 Capability#isRegistered \ub97c \uc0ac\uc6a9\ud558\uc138\uc694. #getCapability \uba54\uc11c\ub4dc\ub294 Direction \ub97c \ub450\ubc88\uc9f8 \uc778\uc790\ub85c \ubc1b\ub294\ub370, \uc774\ub294 \ubc29\ud5a5(\ub610\ub294 \uba74)\uc5d0 \ub530\ub77c \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \ub9cc\uc57d \ubc29\ud5a5\uc73c\ub85c null \uc774 \uc804\ub2ec\ub418\uc5c8\ub2e4\uba74, \ube14\ub85d \uc548\ucabd\uc5d0\uc11c \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc694\uccad\ud558\uc600\uac70\ub098, \ub9e5\ub77d\uc0c1 \ubc29\ud5a5\uc774 \ud544\uc694\uac00 \uc5c6\uc5b4 \ubc29\ud5a5\uc744 \uc2e0\uacbd\uc4f0\uc9c0 \uc54a\ub294 \ubc94\uc6a9\uc801\uc778 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc694\uccad\ud558\uc600\ub2e4\uace0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. #getCapability \uac00 \ubc18\ud658\ud558\ub294 \ud0c0\uc785\uc740 \uc804\ub2ec\ub41c \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\uc758 \ud0c0\uc785\uc744 \uac10\uc2f8\ub294 LazyOptional \uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, IItemHandler \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \uc804\ub2ec\ub418\uc5c8\uc744 \uacbd\uc6b0, LazyOptional<IItemHalder> \uac00 \ubc18\ud658\ub429\ub2c8\ub2e4. \ub9cc\uc57d #getCapability \uba54\uc11c\ub4dc\uac00 \uc694\uccad\ubc1b\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubc18\ud658\ud560 \uc218 \uc5c6\ub2e4\uba74, \ube44\uc5b4\uc788\ub294 LazyOptional \uc774 \ub300\uc2e0 \ubc18\ud658\ub429\ub2c8\ub2e4.","title":"\uc774\ubbf8 \uc874\uc7ac\ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc0ac\uc6a9\ud558\uae30"},{"location":"datastorage/capabilities/#_4","text":"\uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub178\ucd9c\ud558\uae30 \uc704\ud574\uc11c\ub294 \uccab\ubc88\uca30\ub85c \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\uc758 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ud558\ub098 \uc54c\uc544\ub450\uc154\uc57c \ud560 \uc810\uc740, \uac01 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub4e4\uc740 \uac01\uc790 \ub2e4\ub978 \ub370\uc774\ud130\ub97c \uac00\uc9c8 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4, \uc774\ub97c \ud65c\uc6a9\ud55c \uc608\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4\uc758 \uad6c\ud604\uc758 \uac01\uae30 \ub2e4\ub978 \uc778\uc2a4\ud134\uc2a4\ub4e4\uc744 \uc5ec\ub7ec \uc5d4\ud2f0\ud2f0\uc5d0 \uac01\uac01 \ud560\ub2f9\ud558\uc5ec \uac01\uac01\uc758 \uc5d4\ud2f0\ud2f0\uac00 \ub2e4\ub978 \ub370\uc774\ud130\ub97c \uac00\uc9c0\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc774\ub7f0\uc2dd\uc73c\ub85c \ud65c\uc6a9\ud558\ub294 \uac83\uc740 \ubcf4\ud3b8\uc801\uc774\uba70 \uad8c\uc7a5\ub429\ub2c8\ub2e4. IItemHandler \uc758 \uacbd\uc6b0, \uae30\ubcf8 \uad6c\ud604\uc740 ItemStackHandler \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4, \uc774 \ud074\ub798\uc2a4\uc758 \uc0dd\uc131\uc790\ub294 \uc778\ubca4\ud1a0\ub9ac \uc2ac\ub86f \uac2f\uc218\ub97c \uc778\uc790\ub85c \ubc1b\uc73c\uba70, \uae30\ubcf8\uac12\uc740 1\uc785\ub2c8\ub2e4. \uadf8\ub807\uc9c0\ub9cc \uc774\ub807\uac8c \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uacf5\ud558\ub294 \uad6c\ud604\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uad8c\uc7a5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc758 \ubaa9\uc801\uc740 \uac8c\uc784\uc744 \ubd88\ub7ec\uc624\ub294 \ub3c4\uc911, \uba87\uba87 \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc744 \ub54c \ubc1c\uc0dd\ud560 \uc218 \uc788\ub294 \uc624\ub958\ub4e4\uc744 \ucd5c\uc18c\ud654\ud558\ub294 \uac83\uc774\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4, \uadf8\ub807\uae30\uc5d0 \uae30\ubcf8 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4dc\ub294 \uac83\uc740 \ud574\ub2f9 \uce90\ud328\ube4c\ub9ac\ud2f0\uac00 \uc774\ubbf8 \uc874\uc7ac\ud558\ub294\uc9c0 \ud655\uc778\ud55c \uc774\ud6c4 \uc9c4\ud589\ud558\uc154\uc57c\ub9cc \ud569\ub2c8\ub2e4. (\uc774\uc804 \uc139\uc158\uc758 CapabilityManager#get \uc5d0 \uad00\ud55c \ub0b4\uc6a9\uc744 \ucc38\uace0\ud558\uc138\uc694). \uc774\uc81c \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \uc788\uc73c\ub2c8, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c \uc0ac\uc6a9\uc790\ub4e4\uc5d0\uac8c \uc0c8\ub85c\uc6b4 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub178\ucd9c\ud55c\ub2e4\uace0 \uc54c\ub9ac\uace0 LazyOptional \uc744 \ud1b5\ud55c \ucc38\uc870\ub97c \uc81c\uacf5\ud574\uc57c \ud569\ub2c8\ub2e4. #getCapability \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud558\uace0, \uc778\uc790\ub85c \uc804\ub2ec\ubc1b\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\uc2a4\ud134\uc2a4\ub97c \ub178\ucd9c\ud558\uace0\uc790 \ud558\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc640 \ube44\uad50\ud558\uc138\uc694. \ub9cc\uc57d \ud574\ub2f9 \uc81c\uacf5\uc790\uac00 \ubc29\ud5a5\uc5d0 \ub530\ub77c \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubc18\ud658\ud574\uc57c \ud55c\ub2e4\uba74 \uc804\ub2ec\ubc1b\uc740 side \uc778\uc790\ub97c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uc0ac\uc6a9 \uc608\uc2dc\ub85c\ub294 \ubc29\ud5a5\uc5d0 \ub530\ub77c \ub2e4\ub978 \uc778\ubca4\ud1a0\ub9ac \uc2ac\ub86f\uc744 \uac00\uc9c0\ub294 \uae30\uacc4\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc5d4\ud2f0\ud2f0\uc640 \uc544\uc774\ud15c \uc2a4\ud0dd\uc758 \uacbd\uc6b0 side \ub97c \ubb34\uc2dc\ud560 \uc218 \uc788\uc73c\ub098, \ud50c\ub808\uc774\uc5b4 \uac11\uc637 ( Direction#UP \ub294 \ud50c\ub808\uc774\uc5b4\uc758 \ud22c\uad6c \uc2ac\ub86f\uc758 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub178\ucd9c\ud568) \ub4f1\uacfc \uac19\uc740 \uc6a9\ub3c4\uc5d0 \uc0ac\uc6a9\ud558\uc2e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. super \uba54\uc11c\ub4dc \ud638\ucd9c\uc744 \ud558\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694, \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc774\ubbf8 \ubd80\ucc29\ub41c \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc81c\uacf5\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 \uc81c\uacf5\uc790\uc758 \uc0dd\uba85\uc8fc\uae30\uac00 \ub05d\ub098\uba74 \ubb34\uc870\uac74 LazyOptional#invalidate \ub97c \ud638\ucd9c\ud558\uc5ec \ubb34\ud6a8\ud654 \ud558\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4, \uc5d4\ud2f0\ud2f0\uc640 \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc758 \uacbd\uc6b0 \uc6d4\ub4dc\uc5d0\uc11c \uc81c\uac70\ub420 \ub54c #invalidateCaps \ub97c \uc790\ub3d9\uc73c\ub85c \ud638\ucd9c\ud558\uae30 \ub54c\ubb38\uc5d0, \ub9cc\uc57d \uc9c1\uc811 \uc774\ub4e4\uc744 \uad6c\ud604\ud558\uace0 \uacc4\uc2e0\ub2e4\uba74 #invalidateCaps \ub97c \uc7ac\uc815\uc758\ud558\uc5ec \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubb34\ud6a8\ud654 \uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\uc678 \ub2e4\ub978 \uc81c\uacf5\uc790\ub4e4\uc740 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubb34\ud6a8\ud654\uc2dc\ud0a4\ub294 Runnable \uc744 AttachCapabilitiesEvent#addListener \uc5d0 \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4. // \ube14\ub85d \uc5d4\ud2f0\ud2f0 \uc790\uc2dd \ud074\ub798\uc2a4 \uc5b4\ub518\uac00\uc5d0 \uc544\ub798 \ub0b4\uc6a9\uc744 \ucd94\uac00\ud558\uc138\uc694 LazyOptional<IItemHandler> inventoryHandlerLazyOptional; // inventoryHandlerSupplier \ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\ud130\ud398\uc774\uc2a4 \uad6c\ud604\uc744 \ubc18\ud658\ud558\ub294 Supplier \uc785\ub2c8\ub2e4 (\uc608: () -> inventoryHandler). // \uac1c\uc73c\ub978 \ucd08\uae30\ud654\ub97c \ud558\ub3c4\ub85d \ud558\uc5ec \uaf2d \ud544\uc694\ud560 \ub54c\ub9cc \ucd08\uae30\ud654 \ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. inventoryHandlerLazyOptional = LazyOptional.of(inventoryHandlerSupplier); @Override public <T> LazyOptional<T> getCapability(Capability<T> cap, Direction side) { // cap \uc740 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc778\uc2a4\ud134\uc2a4 if (cap == CapabilityItemHandler.ITEM_HANDLER_CAPABILITY) { return inventoryHandlerLazyOptional.cast(); } // super \ub97c \ud638\ucd9c\ud558\uc9c0 \uc54a\uc73c\uba74 \ubd80\ucc29\ub41c \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4!! return super.getCapability(cap, side); } @Override public void invalidateCaps() { super.invalidateCaps(); inventoryHandlerLazyOptional.invalidate(); } Item \ub4e4\uc740 \uc870\uae08 \ud2b9\uc774\ud558\uac8c \ub2e4\ub8e8\uc5b4\uc57c \ud558\ub294\ub370, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub4e4\uc744 Item \uc774 \uc544\ub2c8\ub77c ItemStack \uc5d0 \ubd80\ucc29\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 Item#initCapabilities \uc5d0\uc11c \uc0c8\ub85c\uc6b4 \uc81c\uacf5\uc790\ub4e4\uc744 \ubd80\ucc29\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774\ub54c \ubd80\ucc29\ub41c \uce90\ud328\ube4c\ub9ac\ud2f0\ub4e4\uc740 \uadf8 \uc544\uc774\ud15c \uc2a4\ud0dd\uc758 \uc0dd\uba85\uc8fc\uae30\uac00 \ub05d\ub098\uba74 \ubb34\ud6a8\ud654 \ub429\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0 \uc694\uccad\uc740 \ub9e4 \ud2f1\ub9c8\ub2e4, \uc218\uc2ed\ubc88\uc529 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc73c\ub2c8, \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub294 \ub9e4\uc6b0 \ube68\ub77c\uc57c\ub9cc \ud569\ub2c8\ub2e4, \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uac8c\uc784\uc758 \uc804\ubc18\uc801\uc778 \uc131\ub2a5\uc744 \uc800\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \uc678\ubd80 \uc790\ub8cc\uad6c\uc870 \ub4f1\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uad8c\uc7a5\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"\uce90\ud328\ube4c\ub9ac\ud2f0 \ub178\ucd9c\ud558\uae30"},{"location":"datastorage/capabilities/#_5","text":"\uc774\ubbf8 \uc774\uc804\uc5d0 \uc5b8\uae09\ud588\ub4ef\uc774, \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc774\ubbf8 \uc874\uc7ac\ud558\ub294 Level \uc774\ub098 LevelChunk \uc640 \uac19\uc740 \uc81c\uacf5\uc790\uc5d0 \ubd80\ucc29\ud558\ub294 \uac83\uc740 AttachCapabilitiesEvent \ub97c \ud1b5\ud574 \uc774\ub8e8\uc5b4\uc9d1\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 \ubaa8\ub4e0 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. AttachCapabilitiesEvent \ub294 5\uac1c\uc758 \uc81c\ub108\ub9ad \ud0c0\uc785\uc774 \uc788\ub294\ub370, \uc774\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: AttachCapabilitiesEvent<Entity> : \uc5d4\ud2f0\ud2f0\uc5d0 \ub4f1\ub85d\ud560 \ub54c\ub9cc \ubc29\uc1a1\ub428. AttachCapabilitiesEvent<BlockEntity> : \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0 \ub4f1\ub85d\ud560 \ub54c\ub9cc \ubc29\uc1a1\ub428. AttachCapabilitiesEvent<ItemStack> : \uc544\uc774\ud15c \uc2a4\ud0dd\uc5d0 \ub4f1\ub85d\ud560 \ub54c\ub9cc \ubc29\uc1a1\ub428. AttachCapabilitiesEvent<Level> : \uc6d4\ub4dc\uc5d0 \ub4f1\ub85d\ud560 \ub54c\ub9cc \ubc29\uc1a1\ub428. AttachCapabilitiesEvent<LevelChunk> : \uccad\ud06c\uc5d0 \ub4f1\ub85d\ud560 \ub54c\ub9cc \ubc29\uc1a1\ub428. \uc774 \uc81c\ub108\ub9ad \ud0c0\uc785\ub4e4\uc740 \uc704\uc5d0 \uc9c0\uc815\ub41c \ud0c0\uc785\ub4e4\ubcf4\ub2e4 \ub354 \uad6c\uccb4\uc801\uc77c \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4, \uc608\ub97c \ub4e4\uc5b4, Player \uc5d0\ub2e4\uac00 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubd80\ucc29\uc2dc\ud0a4\uace0 \uc2f6\ub2e4\uba74 AttachCapabilitiesEvent<Event> \uc774\ubca4\ud2b8\ub97c \uad6c\ub3c5\ud55c \uc774\ud6c4, \uc804\ub2ec\ub41c \uc81c\uacf5\uc790 \uac1d\uccb4\uac00 Player \uc778\uc9c0 \ud655\uc778\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 #addCapability \uba54\uc11c\ub4dc\uac00 \uc788\ub294\ub370, \uc774 \uc774\ubca4\ud2b8\ub294 \ub300\uc0c1 \uc81c\uacf5\uc790 \uac1d\uccb4\uc5d0\ub2e4\uac00 \uc0c8\ub85c\uc6b4 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubd80\ucc29\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uc2a4\ud2b8\uc5d0 \uce90\ud328\ube4c\ub9ac\ud2f0 \uadf8 \uc790\uccb4\ub97c \ucd94\uac00\ud558\uae30 \ubcf4\ub2e4\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4, \uc989 \uc774\ubbf8 \uc874\uc7ac\ud558\ub294 \uc81c\uacf5\uc790\uc5d0\ub2e4\uac00 \ub610 \ub2e4\ub978 \uc81c\uacf5\uc790\ub97c \ucd94\uac00\ud558\ub294 \uac83\uc774\uc9c0\uc694. \uc774\ub54c, \ucd94\uac00\ub418\ub294 \uc81c\uacf5\uc790\ub4e4\uc740 \ubcf4\ud3b8\uc801\uc73c\ub85c \uc775\uba85\ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \ub610\ud55c, \ucd94\uac00\ub418\ub294 \uc81c\uacf5\uc790\ub4e4\uc740 \ubc29\ud5a5\uc5d0 \ub530\ub77c \ub2e4\ub978 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ubc18\ud658\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uce90\ud328\ube4c\ub9ac\ud2f0 \uc81c\uacf5\uc790\ub294 ICapabilityProvider \ub9cc \uad6c\ud604\ud558\uba74 \ub418\uc9c0\ub9cc, \ub9cc\uc57d \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\uac00 \uc720\uc9c0\ub418\uc5b4\uc57c \ud560 \uacbd\uc6b0, ICapabilitySerializable<T extends Tag> \ub97c \ub300\uc2e0 \uad6c\ud604\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4, \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \uc81c\uacf5\ud558\ub294 \uba54\uc11c\ub4dc \ubfd0\ub9cc \uc544\ub2c8\ub77c NBT\ub97c \uc800\uc7a5\ud558\uace0 \ubd88\ub7ec\uc624\ub294 \uba54\uc11c\ub4dc \ub610\ud55c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. ICapabilityProvider \uad6c\ud604\uc5d0 \uad00\ud574\uc11c\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0 \ub178\ucd9c\uc2dc\ud0a4\uae30 \uc139\uc158\uc744 \ucc38\uace0\ud558\uc138\uc694.","title":"\uce90\ud328\ube4c\ub9ac\ud2f0 \ubd80\ucc29\ud558\uae30"},{"location":"datastorage/capabilities/#_6","text":"\uc77c\ubc18\uc801\uc73c\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 \ubaa8\ub4dc \ubc84\uc2a4\uc5d0 \ubc29\uc1a1\ub418\ub294 RegisterCapabilitiesEvent \uc774\ubca4\ud2b8\uc5d0 #register \ub97c \ud638\ucd9c\ud558\uc5ec \ub4f1\ub85d\ub429\ub2c8\ub2e4. @SubscribeEvent public void registerCaps(RegisterCapabilitiesEvent event) { event.register(IExampleCapability.class); }","title":"\uce90\ud328\ube4c\ub9ac\ud2f0 \uc9c1\uc811 \ub9cc\ub4e4\uae30"},{"location":"datastorage/capabilities/#levelchunk-blockentity","text":"\ub808\ubca8, \uc5d4\ud2f0\ud2f0, \uc544\uc774\ud15c \uc2a4\ud0dd\uacfc \ub2e4\ub974\uac8c, \ub808\ubca8 \uccad\ud06c\uc640 \ube14\ub85d \uc5d4\ud2f0\ud2f0\ub4e4\uc740 \uadf8 \ub370\uc774\ud130\uac00 \uc218\uc815\ub418\uc5c8\ub2e4\uace0 \ud45c\uae30\ub418\uc5c8\uc744 \uacbd\uc6b0\uc5d0\ub9cc \ub514\uc2a4\ud06c\uc5d0 \uc368\uc9d1\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \ub808\ubca8 \uccad\ud06c \ub610\ub294 \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0 \uc0ac\uc6a9\ud560 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\ub97c \uc62c\ubc14\ub974\uac8c \uc720\uc9c0\uc2dc\ud0a4\uc9c0 \uc704\ud574\uc11c\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\uac00 \ubcc0\uacbd\ub418\uc5c8\uc744 \ub54c \ud574\ub2f9 \uac1d\uccb4\uc758 \ub370\uc774\ud130\uac00 \uc218\uc815\ub418\uc5c8\ub2e4\uace0 \ud45c\uae30\ud558\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4. \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0 \uc778\ubca4\ud1a0\ub9ac\ub97c \ucd94\uac00\ud558\ub294 ItemStackHandler \ub294 void onContentsChanged(int slot) \uc774\ub77c\ub294 \uba54\uc11c\ub4dc\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\ub294 \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc758 \ub370\uc774\ud130\uac00 \uc218\uc815\ub418\uc5c8\ub2e4\uace0 \ud45c\uae30\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. public class MyBlockEntity extends BlockEntity { private final IItemHandler inventory = new ItemStackHandler(...) { @Override protected void onContentsChanged(int slot) { super.onContentsChanged(slot); setChanged(); } } // ... }","title":"LevelChunk \uc640 BlockEntity \uce90\ud328\ube4c\ub9ac\ud2f0 \ub370\uc774\ud130 \uc720\uc9c0\uc2dc\ud0a4\uc9c0"},{"location":"datastorage/capabilities/#_7","text":"\uae30\ubcf8\uc801\uc73c\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uac8c \uc804\uc1a1\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \ubaa8\ub4dc\ub4e4\uc740 \uc2a4\uc2a4\ub85c \ud328\ud0b7\uc744 \uc0ac\uc6a9\ud574\uc11c \ub370\uc774\ud130\ub97c \uc9c1\uc811 \ub3d9\uae30\ud654 \ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654\ud574\uc57c \ud558\ub294 \uc0c1\ud669\uc740 \ud06c\uac8c \uc544\ub798 3\uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4, \uc774\ub7ec\ud55c \uc0c1\ud669\ub4e4\uc744 \ucc98\ub9ac\ud558\ub294 \uac83\uc740 \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. \uc5d4\ud2f0\ud2f0\uac00 \ub808\ubca8\uc5d0 \uc2a4\ud3f0\ub420\ub54c\ub098, \ube14\ub85d\uc774 \uc124\uce58\ub418\ub294 \uacbd\uc6b0. \uc774\ub7f4\ub550 \ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uc5d0 \ucd08\uae30 \uac12\uc744 \ubcf4\ub0b4\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc800\uc7a5\ub41c \ub370\uc774\ud130\uac00 \uc218\uc815\ub418\ub294 \uacbd\uc6b0, \uc774\uacbd\uc6b0 \ub370\uc774\ud130\ub97c \uc8fc\uc2dc\ud558\uace0 \uc788\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uc5d0 \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ud2b9\uc815 \uc5d4\ud2f0\ud2f0\ub098 \ube14\ub85d\uc744 \ucc98\ub2e4\ubcf4\uae30 \uc2dc\uc791\ud560 \ub54c, \uc774 \uacbd\uc6b0 \uc774\ubbf8 \uc874\uc7ac\ud558\ub294 \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud0b9 \ub97c \ucc38\uace0\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \ud328\ud0b7\uc744 \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc138\uc694. Refer to the Networking page for more information on implementing network packets.","title":"\ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ub370\uc774\ud130 \ub3d9\uae30\ud654 \ud558\uae30"},{"location":"datastorage/capabilities/#_8","text":"\uae30\ubcf8\uc801\uc73c\ub85c, \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\ub294 \uc0ac\ub9dd\ud558\uba74 \ub2e4 \uc0ac\ub77c\uc9d1\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \ud50c\ub808\uc774\uc5b4\uac00 \uc0ac\ub9dd\uc2dc \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \ub370\uc774\ud130\ub97c \ub9ac\uc2a4\ud3f0 \uacfc\uc815\uc5d0\uc11c \uc218\ub3d9\uc73c\ub85c \ubcf5\uc0ac\ud558\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4. PlayerEvent$Clone \uc758 \uc774\ubca4\ud2b8\ub97c \uad6c\ub3c5\ud558\uc5ec \uc774\ub97c \uad6c\ud604\ud560 \uc218 \uc788\ub294\ub370, \uc8fd\uae30 \uc804 \ud50c\ub808\uc774\uc5b4 \uc5d4\ud2f0\ud2f0\ub85c \ubd80\ud130 \ub370\uc774\ud130\ub97c \uc77d\uc5b4 \uc640 \uc0c8\ub85c\uc6b4 \ud50c\ub808\uc774\uc5b4 \uc5d4\ud2f0\ud2f0\uc5d0 \ub370\uc774\ud130\ub97c \uc791\uc131\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774 \uc774\ubca4\ud2b8\ub294 #isWasDead \uba54\uc11c\ub4dc\ub97c \uc81c\uacf5\ud558\uc5ec, \ud50c\ub808\uc774\uc5b4\uac00 \uc9c4\uc9dc \uc8fd\uc740 \uac83\uc778\uc9c0, \uc544\ub2c8\uba74 \uc5d4\ub4dc\uc5d0\uc11c \ub3cc\uc544\uc624\ub294 \uac83\uc778\uc9c0 \uad6c\ubd84\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uac00 \uc911\uc694\ud55c \uc774\uc720\ub294, \uc5d4\ub4dc\uc5d0\uc11c \ub3cc\uc544\uc62c \ub54c\ub294 \ub370\uc774\ud130\uac00 \uadf8\ub300\ub85c \ub0a8\uc544\uc788\uae30 \ub54c\ubb38\uc5d0 \uc911\ubcf5\uc744 \ubc29\uc9c0\ud574\uc57c \ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.","title":"\ud50c\ub808\uc774\uc5b4\uac00 \uc8fd\uc5b4\ub3c4 \ub370\uc774\ud130 \uc720\uc9c0\uc2dc\ud0a4\uae30"},{"location":"datastorage/capabilities/#iextendedentityproperties","text":"Warning \uc774\ubd80\ubd84\uc740 \ubc88\uc5ed\uac00\uac00 \uc775\uc219\ud558\uc9c0 \uc54a\uc740 \ubd80\ubd84\uc774\ub77c \ubc88\uc5ed\uc774 \uc644\uc804\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4, IEEP \ub97c \uce90\ud328\ube4c\ub9ac\ud2f0\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud574\uc57c \ud560 \ud544\uc694\uac00 \uc5c6\ub2e4\uba74 \ub118\uc5b4\uac00\uc154\ub3c4 \ub429\ub2c8\ub2e4! \uce90\ud328\ube4c\ub9ac\ud2f0 \uc2dc\uc2a4\ud15c\uc740 \uc774\ubbf8 IEEP \ubcf4\ub2e4 \ubaa8\ub4e0 \ubc29\uba74\uc5d0\uc11c \uc6b0\uc6d4\ud558\uc9c0\ub9cc, \uc774 \ub450 \uc2dc\uc2a4\ud15c\uc740 1\ub3001\ub85c \ub300\uc751\ub418\uc9c4 \uc54a\uc2b5\ub2c8\ub2e4, \uc774 \uc139\uc158\uc5d0\uc11c\ub294 IEEP \ub97c \uce90\ud328\ube4c\ub9ac\ud2f0\ub85c \ubc14\uafb8\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \ub2e4\ub8e8\uaca0\uc2b5\ub2c8\ub2e4. \uc544\ub798\ub294 IEEP\uc640 \uce90\ud328\ube4c\ub9ac\ud2f0\uc5d0\uc11c \ub3d9\uc77c\ud55c \uac1c\ub150\ub4e4\uc785\ub2c8\ub2e4: \uc18d\uc131 \uc774\ub984/\uc544\uc774\ub514 ( String ): \uce90\ud328\ube4c\ub9ac\ud2f0 \ud0a4 ( ResourceLocation ) \ub4f1\ub85d ( EntityConstructing ): \ubd80\ucc29 ( AttachCapabilitiesEvent<Entity> ), \uce90\ud328\ube4c\ub9ac\ud2f0\ub294 FMLCommonSetupEvent \uc774\ubca4\ud2b8 \ub3c4\uc911 \ub4f1\ub85d\ud569\ub2c8\ub2e4. Tag \uc77d\uae30/\uc4f0\uae30: \ub370\uc774\ud130 \uc77d\uae30/\uc4f0\uae30\ub294 \uc790\ub3d9\uc73c\ub85c \uc77c\uc5b4\ub098\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. ICapabilitySerializable \ub97c \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\uc5d0\uc11c \ubd80\ucc29\ud558\uace0, serializeNBT / deserializeNBT \uc5d0\uc11c \uc77d\uae30/\uc4f0\uae30 \uba54\uc11c\ub4dc\ub4e4\uc744 \ud638\ucd9c\ud558\uc138\uc694. IEEP \ub97c \uce90\ud328\ube4c\ub9ac\ud2f0\ub85c \ubcc0\ud658\ud558\ub294\ubc95: IEEP\uc758 \ud0a4/\uc544\uc774\ub514 \ubb38\uc790\uc5f4\uc744 ResourceLocation \uc73c\ub85c \ubc14\uafb8\uc138\uc694. (modid \ub97c \ub124\uc784 \uc2a4\ud398\uc774\uc2a4\ub85c \uc0ac\uc6a9\ud558\uc138\uc694). \ub370\uc774\ud130 \ud578\ub4e4\ub7ec\uc5d0 \uce90\ud328\ube4c\ub9ac\ud2f0\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ucc38\uc870\ud558\ub294 \ud544\ub4dc\ub97c \ub9cc\ub4dc\uc138\uc694. EntityConstructing \uc774\ubca4\ud2b8\ub97c AttachCapabilityEvent \ub85c \ubc14\uafb8\uc138\uc694, \uadf8\ub9ac\uace0 IEEP \ub97c \ubc14\ub85c \ub4f1\ub85d\ud558\ub294 \ub300\uc2e0 ICapabilityProvider \ub97c \ubd80\ucc29\ud558\uc138\uc694(\ub370\uc774\ud130\ub97c \ub514\uc2a4\ud06c\uc5d0 \uc800\uc7a5\ud560 \ud544\uc694\uac00 \uc788\ub2e4\uba74 ICapabilitySerializable \uc744 \ub300\uc2e0 \ubd80\ucc29\ud558\uc138\uc694). IEEP\ub97c \uc0ac\uc6a9\ud558\uc168\ub2e4\uba74, \uc544\ub9c8 \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub97c \ub4f1\ub85d\ud558\ub294 register() \ub77c\ub294 \uba54\uc11c\ub4dc\ub97c IEEP \uc5d0 \uc815\uc758\ud574 \ub450\uc168\uc744 \ud150\ub370, \uc5c6\ub2e4\uba74 \ud558\ub098 \ub9cc\ub4dc\uc138\uc694. \uc774 \uba54\uc11c\ub4dc\uc5d0\uc11c\ub294 \uce90\ud328\ube4c\ub9ac\ud2f0\ub97c \ub4f1\ub85d\ud558\ub294 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\uc138\uc694 (\uadf8\ub9ac\uace0 \ub2e4\uc2dc \ud55c\ubc88 \ub9d0\uc500\ub4e4\uc774\uc9c0\ub9cc, \uc774 \uba54\uc11c\ub4dc\ub97c FMLCommonSetupEvent \ub3c4\uc911 \ud638\ucd9c\ud558\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694).","title":"IExtendedEntityProperties \ub85c \ubd80\ud130 \uc774\uc804\ud558\uae30"},{"location":"datastorage/saveddata/","text":"\ub808\ubca8 \uc800\uc7a5 \ub370\uc774\ud130 \ub808\ubca8 \uc800\uc7a5 \ub370\uc774\ud130\ub294 (\ub610\ub294 World Saved Data, WSD) \uce90\ud328\ube4c\ub9ac\ud2f0 \ub300\uc2e0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc2dc\uc2a4\ud15c\uc73c\ub85c \uac01 \ub808\ubca8\uc5d0\ub2e4\uac00 \ub370\uc774\ud130\ub97c \ubd80\ucc29\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc120\uc5b8\ud558\uae30 \uc6d4\ub4dc\uc758 \ubd80\ucc29\uc2dc\ud0ac \ub370\uc774\ud130\ub4e4\uc740 SavedData \ud074\ub798\uc2a4\uc758 \ud558\uc704 \ud074\ub798\uc2a4\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4. \uc774\ub54c \uc8fc\ubaa9\ud574\uc57c \ud560 \uba54\uc11c\ub4dc\uac00 3\uac1c\uac00 \uc788\ub294\ub370: save : NBT \ub370\uc774\ud130\ub97c \ub808\ubca8\uc5d0 \uc791\uc131\ud569\ub2c8\ub2e4. setDirty : \ub808\ubca8\uc758 \ub370\uc774\ud130\uac00 \uc218\uc815\ub41c \uc774\ud6c4, \uac8c\uc784\uc5d0 \ub808\ubca8\uc758 \ub370\uc774\ud130\uac00 \ubcc0\uacbd\ub418\uc5c8\uc74c\uc744 \uc54c\ub9ac\uae30 \uc704\ud574 \ubb34\uc870\uac74 \ud638\ucd9c\ub418\uc5b4\uc57c \ud558\ub294 \uba54\uc11c\ub4dc\uc785\ub2c8\ub2e4. \ub9cc\uc57d \uc774 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 #save \uba54\uc11c\ub4dc\ub294 \ud638\ucd9c\ub418\uc9c0 \uc54a\uc744 \uac83\uc774\uace0, \ubcc0\uacbd\ub41c \ub370\uc774\ud130\ub294 \uc720\uc9c0\ub418\uc9c0 \uc54a\uc744 \uac83\uc785\ub2c8\ub2e4. \ub808\ubca8\uc5d0 \ucd94\uac00\ud558\uae30 \ubaa8\ub4e0 SavedData \ub294 \ub3d9\uc801\uc73c\ub85c \ubd88\ub7ec\uc640\uc9c0\uace0 \ub808\ubca8\uc5d0 \ucd94\uac00\ub429\ub2c8\ub2e4. \uadf8\ub7ec\ub2e4\ubcf4\ub2c8 \ub808\ubca8\uc5d0 \ucd94\uac00\ub41c \uc801\uc774 \uc5c6\ub294 \ub370\uc774\ud130\ub294 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. SavedData \ub294 DimensionDataStorage \uc5d0\uc11c \uc0dd\uc131\ud558\uace0 \ubd88\ub7ec\uc635\ub2c8\ub2e4, \uc774\ub294 ServerChunkCache#getDataStorage \ub610\ub294 ServerLevel#getDataStorage \ub97c \ud1b5\ud574 \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DimensionDataStorage#computeIfAbsent \ub97c \ud638\ucd9c\ud558\uc5ec \ub808\ubca8 \uc800\uc7a5 \ub370\uc774\ud130\uc5d0 \uc811\uadfc \ub610\ub294 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uc774 \uba54\uc11c\ub4dc\ub294 \ub370\uc774\ud130\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc73c\uba74 \uc0dd\uc131\ud558\uace0, \uc874\uc7ac\ud55c\ub2e4\uba74 \uadf8 \ub370\uc774\ud130\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. DimensionDataStorage#computeIfAbsent \ub294 \uc138\uac1c\uc758 \uc778\uc790\ub97c \ubc1b\ub294\ub370, NBT \ub370\uc774\ud130\ub97c \ub808\ubca8 \uc800\uc7a5 \ub370\uc774\ud130\ub85c \ubd88\ub7ec\uc624\uace0 \ubc18\ud658\ud558\ub294 \ud568\uc218, \uc0c8\ub85c\uc6b4 \ub808\ubca8 \uc800\uc7a5 \ub370\uc774\ud130\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud560 Supplier , \ub808\ubca8\uc758 data \ud3f4\ub354\uc5d0 \uc800\uc7a5\ub420 .dat \ud30c\uc77c \uc774\ub984\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \u201cexample\u201d \uc774\ub77c\ub294 \uc774\ub984\uc758 \ub370\uc774\ud130\ub97c \ub124\ub354\uc5d0 \ucd94\uac00\ud55c\ub2e4\uba74, ./<level_folder>/DIM-1/data/example.dat \uc5d0 \uc0c8\ub85c\uc6b4 \ud30c\uc77c\uc774 \uc0dd\uc131\ub429\ub2c8\ub2e4, \uadf8\ub9ac\uace0 \ucf54\ub4dc \uad6c\ud604\uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \ud569\ub2c8\ub2e4: // \uc5b4\ub5a4 \ud074\ub798\uc2a4 \uc548\uc5d0\uc11c public ExampleSavedData create() { return new ExampleSavedData(); } public ExampleSavedData load(CompoundTag tag) { ExampleSavedData data = this.create(); // Load saved data return data; } // \ub370\uc774\ud130\ub97c \ub2e4\ub978\uacf3\uc5d0\uc11c \ubd88\ub7ec\uc62c\ub54c netherDataStorage.computeIfAbsent(this::load, this::create, \"example\"); \uc5ec\ub7ec \ub808\ubca8\uc5d0\uc11c \uc811\uadfc \uac00\ub2a5\ud55c \ub808\ubca8 \uc800\uc7a5 \ub370\uc774\ud130\ub97c \ub9cc\ub4e4\ub824\uba74, \ub2e8\uc21c\ud788 \uc624\ubc84\uc6d4\ub4dc\uc5d0 \ub370\uc774\ud130\ub97c \ucd94\uac00\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4, MinecraftServer#overworld \ub97c \uc0ac\uc6a9\ud574 \uc624\ubc84\uc6d4\ub4dc\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc624\ubc84\uc6d4\ub4dc\ub294 \uc720\uc77c\ud558\uac8c \uc644\uc804\ud788 \uc5b8\ub85c\ub4dc\ub418\ub294 \uc77c\uc774 \uc5c6\ub294 \ub808\ubca8\ub85c, \uc5b8\uc81c\ub4e0\uc9c0 \uc548\uc804\ud558\uac8c \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub808\ubca8 \uc800\uc7a5 \ub370\uc774\ud130"},{"location":"datastorage/saveddata/#_1","text":"\ub808\ubca8 \uc800\uc7a5 \ub370\uc774\ud130\ub294 (\ub610\ub294 World Saved Data, WSD) \uce90\ud328\ube4c\ub9ac\ud2f0 \ub300\uc2e0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc2dc\uc2a4\ud15c\uc73c\ub85c \uac01 \ub808\ubca8\uc5d0\ub2e4\uac00 \ub370\uc774\ud130\ub97c \ubd80\ucc29\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub808\ubca8 \uc800\uc7a5 \ub370\uc774\ud130"},{"location":"datastorage/saveddata/#_2","text":"\uc6d4\ub4dc\uc758 \ubd80\ucc29\uc2dc\ud0ac \ub370\uc774\ud130\ub4e4\uc740 SavedData \ud074\ub798\uc2a4\uc758 \ud558\uc704 \ud074\ub798\uc2a4\uc5ec\uc57c\ub9cc \ud569\ub2c8\ub2e4. \uc774\ub54c \uc8fc\ubaa9\ud574\uc57c \ud560 \uba54\uc11c\ub4dc\uac00 3\uac1c\uac00 \uc788\ub294\ub370: save : NBT \ub370\uc774\ud130\ub97c \ub808\ubca8\uc5d0 \uc791\uc131\ud569\ub2c8\ub2e4. setDirty : \ub808\ubca8\uc758 \ub370\uc774\ud130\uac00 \uc218\uc815\ub41c \uc774\ud6c4, \uac8c\uc784\uc5d0 \ub808\ubca8\uc758 \ub370\uc774\ud130\uac00 \ubcc0\uacbd\ub418\uc5c8\uc74c\uc744 \uc54c\ub9ac\uae30 \uc704\ud574 \ubb34\uc870\uac74 \ud638\ucd9c\ub418\uc5b4\uc57c \ud558\ub294 \uba54\uc11c\ub4dc\uc785\ub2c8\ub2e4. \ub9cc\uc57d \uc774 \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 #save \uba54\uc11c\ub4dc\ub294 \ud638\ucd9c\ub418\uc9c0 \uc54a\uc744 \uac83\uc774\uace0, \ubcc0\uacbd\ub41c \ub370\uc774\ud130\ub294 \uc720\uc9c0\ub418\uc9c0 \uc54a\uc744 \uac83\uc785\ub2c8\ub2e4.","title":"\uc120\uc5b8\ud558\uae30"},{"location":"datastorage/saveddata/#_3","text":"\ubaa8\ub4e0 SavedData \ub294 \ub3d9\uc801\uc73c\ub85c \ubd88\ub7ec\uc640\uc9c0\uace0 \ub808\ubca8\uc5d0 \ucd94\uac00\ub429\ub2c8\ub2e4. \uadf8\ub7ec\ub2e4\ubcf4\ub2c8 \ub808\ubca8\uc5d0 \ucd94\uac00\ub41c \uc801\uc774 \uc5c6\ub294 \ub370\uc774\ud130\ub294 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. SavedData \ub294 DimensionDataStorage \uc5d0\uc11c \uc0dd\uc131\ud558\uace0 \ubd88\ub7ec\uc635\ub2c8\ub2e4, \uc774\ub294 ServerChunkCache#getDataStorage \ub610\ub294 ServerLevel#getDataStorage \ub97c \ud1b5\ud574 \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DimensionDataStorage#computeIfAbsent \ub97c \ud638\ucd9c\ud558\uc5ec \ub808\ubca8 \uc800\uc7a5 \ub370\uc774\ud130\uc5d0 \uc811\uadfc \ub610\ub294 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uc774 \uba54\uc11c\ub4dc\ub294 \ub370\uc774\ud130\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc73c\uba74 \uc0dd\uc131\ud558\uace0, \uc874\uc7ac\ud55c\ub2e4\uba74 \uadf8 \ub370\uc774\ud130\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. DimensionDataStorage#computeIfAbsent \ub294 \uc138\uac1c\uc758 \uc778\uc790\ub97c \ubc1b\ub294\ub370, NBT \ub370\uc774\ud130\ub97c \ub808\ubca8 \uc800\uc7a5 \ub370\uc774\ud130\ub85c \ubd88\ub7ec\uc624\uace0 \ubc18\ud658\ud558\ub294 \ud568\uc218, \uc0c8\ub85c\uc6b4 \ub808\ubca8 \uc800\uc7a5 \ub370\uc774\ud130\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud560 Supplier , \ub808\ubca8\uc758 data \ud3f4\ub354\uc5d0 \uc800\uc7a5\ub420 .dat \ud30c\uc77c \uc774\ub984\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \u201cexample\u201d \uc774\ub77c\ub294 \uc774\ub984\uc758 \ub370\uc774\ud130\ub97c \ub124\ub354\uc5d0 \ucd94\uac00\ud55c\ub2e4\uba74, ./<level_folder>/DIM-1/data/example.dat \uc5d0 \uc0c8\ub85c\uc6b4 \ud30c\uc77c\uc774 \uc0dd\uc131\ub429\ub2c8\ub2e4, \uadf8\ub9ac\uace0 \ucf54\ub4dc \uad6c\ud604\uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \ud569\ub2c8\ub2e4: // \uc5b4\ub5a4 \ud074\ub798\uc2a4 \uc548\uc5d0\uc11c public ExampleSavedData create() { return new ExampleSavedData(); } public ExampleSavedData load(CompoundTag tag) { ExampleSavedData data = this.create(); // Load saved data return data; } // \ub370\uc774\ud130\ub97c \ub2e4\ub978\uacf3\uc5d0\uc11c \ubd88\ub7ec\uc62c\ub54c netherDataStorage.computeIfAbsent(this::load, this::create, \"example\"); \uc5ec\ub7ec \ub808\ubca8\uc5d0\uc11c \uc811\uadfc \uac00\ub2a5\ud55c \ub808\ubca8 \uc800\uc7a5 \ub370\uc774\ud130\ub97c \ub9cc\ub4e4\ub824\uba74, \ub2e8\uc21c\ud788 \uc624\ubc84\uc6d4\ub4dc\uc5d0 \ub370\uc774\ud130\ub97c \ucd94\uac00\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4, MinecraftServer#overworld \ub97c \uc0ac\uc6a9\ud574 \uc624\ubc84\uc6d4\ub4dc\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc624\ubc84\uc6d4\ub4dc\ub294 \uc720\uc77c\ud558\uac8c \uc644\uc804\ud788 \uc5b8\ub85c\ub4dc\ub418\ub294 \uc77c\uc774 \uc5c6\ub294 \ub808\ubca8\ub85c, \uc5b8\uc81c\ub4e0\uc9c0 \uc548\uc804\ud558\uac8c \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub808\ubca8\uc5d0 \ucd94\uac00\ud558\uae30"},{"location":"forgedev/","text":"\uc2dc\uc791\ud558\uae30\uc5d0 \uc55e\uc11c \ud3ec\uc9c0\uc5d0 \uae30\uc5ec\ud558\uc2dc\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74 \uac1c\ubc1c \ud658\uacbd \uc124\uc815\uc744 \uc704\ud574 \uac70\uccd0\uc57c \ud560 \ub2e8\uacc4\ub4e4\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\uc800 \ub2e8\uc21c\ud55c \ubaa8\ub4dc \uac1c\ubc1c \ud658\uacbd\uc740 \ud3ec\uc9c0 \ucf54\ub4dc\ubca0\uc774\uc2a4 \uc218\uc815\uc744 \uc9c0\uc6d0\ud558\uc9c0 \ubabb\ud569\ub2c8\ub2e4. \uadf8 \ub300\uc2e0, \uc544\ub798 \uc548\ub0b4\ub97c \ucc38\uace0\ud558\uc5ec \ud3ec\uc9c0 \uac1c\uc120\uc744 \uc704\ud55c \uac1c\ubc1c \ud658\uacbd\uc744 \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4! \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac \ud3ec\ud0b9 \ubc0f \ud074\ub860 \ud3ec\uc9c0 \ub610\ud55c \uc5ec\ub7ec \uc624\ud508 \uc18c\uc2a4 \ud504\ub85c\uc81d\ud2b8\ub4e4\ucc98\ub7fc GitHub \uc5d0 \ud638\uc2a4\ud305 \ub429\ub2c8\ub2e4. \ub9cc\uc57d \uc774\uc804\uc5d0\ub3c4 \ub2e4\ub978 \uc624\ud508 \uc18c\uc2a4 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\uc5ec\ud558\uc2e0 \uc801\uc774 \uc788\uc73c\uc2dc\ub2e4\uba74 \uc774 \ub2e8\uacc4\ub294 \uc774\ubbf8 \ucda9\ubd84\ud788 \uc798 \uc544\uc2e4 \ud14c\ub2c8 \uac74\ub108\ub6f0\uc154\ub3c4 \ub429\ub2c8\ub2e4. Git \uc744 \uc774\uc6a9\ud55c \ud611\uc5c5\uc774 \ucc98\uc74c\uc774\uc2dc\ub77c\uba74 \uc544\ub798 \ub2e8\uacc4\ub4e4\uc744 \ub530\ub77c\uc8fc\uc138\uc694. Note \uc774 \ubb38\uc11c\ub294 \uc774\ubbf8 \ub2f9\uc2e0\uc5d0\uac8c GitHub \uacc4\uc815\uc774 \uc788\ub2e4\uace0 \uac00\uc815\ud558\uace0 \uc791\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uacc4\uc815\uc774 \uc5c6\uc73c\uc2dc\ub2e4\uba74 \uac00\uc785 \ud398\uc774\uc9c0 \ub97c \ubc29\ubb38\ud558\uc5ec \uacc4\uc815\uc744 \ub9cc\ub4e4\uc5b4 \uc8fc\uc138\uc694. \ub610\ud55c, \uc774 \ubb38\uc11c\ub294 git \uc758 \uc804\ubc18\uc801 \uc0ac\uc6a9\ubc95\uc744 \uc704\ud55c \ud29c\ud1a0\ub9ac\uc5bc\uc774 \uc544\ub2d9\ub2c8\ub2e4. \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc2dc\uba74 \ub2e4\ub978 \uac00\uc774\ub4dc\ub97c \ucc38\uace0\ud558\uc5ec \uc8fc\uc138\uc694. \ud3ec\ud0b9 \uc77c\ub2e8, \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac \ub97c \u201c\ud3ec\ud06c\u201d\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uc624\ub978\ucabd \uc704\uc758 \u201cFork\u201d \ub97c \ud074\ub9ad\ud558\uc5ec\uc11c \ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. GitHub Organization \uc5d0 \ucd94\uac00\ud558\uc2dc\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub97c \ud3ec\ud06c\ud560 \uacc4\uc815\uc744 \uc120\ud0dd\ud574\uc8fc\uc138\uc694. \ubaa8\ub4e0 GitHub \uc0ac\uc6a9\uc790\uac00 \ubaa8\ub4e0 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \uc4f0\uae30 \uad8c\ud55c\uc774 \uc788\ub294 \uac83\uc774 \uc544\ub2c8\uae30\uc5d0 \uba3c\uc800 \ud3ec\ud0b9\uc744 \ud558\ub294 \uac83\uc740 \ud544\uc218\uc801\uc785\ub2c8\ub2e4. \ud3ec\ud0b9\uc740 \uc6d0\ubcf8 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc758 \ub2f9\uc2e0\ub9cc\uc758 \ubcf5\uc0ac\ubcf8\uc744 \ub9cc\ub4e4\uc5b4 \uc790\uc720\ub86d\uac8c \uc791\uc5c5\ud558\uc2e4 \uc218 \uc788\ub3c4\ub85d \ud558\uace0, \uc791\uc5c5\ud558\uc2e0 \ub0b4\uc6a9\uc740 \ub098\uc911\uc5d0 Pull Request \ub97c \ud1b5\ud574 \uc6d0\ubcf8 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \uc81c\ucd9c\ud569\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud574\uc120 \ub098\uc911\uc5d0 \ub354 \ub2e4\ub8f0 \uac83\uc785\ub2c8\ub2e4. \ud074\ub860 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub97c \ud3ec\ud0b9\ud558\uc168\ub2e4\uba74 \uc774\uc81c \ucef4\ud4e8\ud130\uc5d0 \ub0b4\ub824\ubc1b\uc544 \uc9c1\uc811 \uc791\uc5c5\ud558\uc2e4 \ub54c\uac00 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774 \ub0b4\ub824\ubc1b\ub294 \uc791\uc5c5\uc744 \ud074\ub860\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. \ub2f9\uc2e0\uc774 \uc560\uc6a9\ud558\uc2dc\ub294 git \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc774\uc6a9\ud574 \uc6d0\ud558\uc2dc\ub294 \uacf3\uc5d0 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub97c \ud074\ub860\ud574\uc8fc\uc138\uc694. \ub300\uac1c \uc544\ub798\ucc98\ub7fc \uba85\ub839\uc5b4\ub97c \uc774\uc6a9\ud574 \ud604\uc7ac \ub514\ub809\ud130\ub9ac\uc5d0\uc11c \u201cMinecraftForge\u201d \ub77c\ub294 \ud3f4\ub354\uc5d0 \ub0b4\ub824\ubc1b\uc2b5\ub2c8\ub2e4. \uc544\ub798 <User> \ub97c \ub2f9\uc2e0\uc758 \ub2c9\ub124\uc784\uc73c\ub85c \ubcc0\uacbd\ud558\uc2dc\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694! git clone https://github.com/<User>/MinecraftForge \uc791\uc5c5\uc6a9 \ube0c\ub79c\uce58 \uccb4\ud06c\uc544\uc6c3 \ud558\uae30 \ud3ec\uc9c0 \uac1c\ubc1c \ud658\uacbd \uc124\uc815\uc744 \uc704\ud574\uc120 \uc624\uc9c1 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub97c \ud3ec\ud0b9\ud558\uace0 \ud074\ub860\ud558\ub294 \uac83\ub9cc \ud558\uc154\ub3c4 \ub418\uc9c0\ub9cc, Pull Request \uc81c\ucd9c\uc744 \uc218\uc6d4\ud558\uac8c \ud558\ub824\uba74 \uc704\ud574 \uc0c8\ub85c\uc6b4 \ube0c\ub79c\uce58\ub97c \ub9cc\ub4dc\uc2dc\ub294 \uac83\uc744 \ucd94\ucc9c\ud569\ub2c8\ub2e4. \uc0c8\ub85c\uc6b4 PR \uc744 \uc81c\ucd9c\ud558\uc2e4 \ub54c\ub9c8\ub2e4 \uc0c8\ub85c\uc6b4 \ube0c\ub79c\uce58\ub97c \ub9cc\ub4dc\uc2dc\uba74 \ub2e4\ub978 \uc0ac\ub78c\uc758 \uc791\uc5c5\ubb3c\uc744 \ubc14\ub85c \ub0b4\ub824\ubc1b\uc73c\uba74\uc11c\ub3c4 \uc774\uc804 \ucf54\ub4dc\ubca0\uc774\uc2a4\ub97c \uc720\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uac1c\ubc1c \ud658\uacbd\uc744 \uc124\uc815\ud558\uace0 \uc2e4\ud589\ud558\uc2e4 \uc900\ube44\uac00 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uac1c\ubc1c \ud658\uacbd \uc124\uc815\ud558\uae30 \uc0ac\uc6a9\ud558\uc2dc\ub294 IDE \uc5d0 \ub530\ub77c \uc801\uc808\ud55c \uac1c\ubc1c \ud658\uacbd \uc124\uc815 \ubc29\ubc95\uc774 \uc870\uae08\uc529 \ub2e4\ub985\ub2c8\ub2e4. Eclipse Eclipse \uc758 \uc791\uc5c5\uacf5\uac04 \ub355\ubd84\uc5d0, ForgeGradle \uc774 \ub300\ubd80\ubd84\uc758 \uac1c\ubc1c \ud658\uacbd \uc124\uc815\uc744 \ub300\uc2e0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud130\ubbf8\ub110/\uba85\ub839 \ud504\ub86c\ud504\ud2b8\ub97c \uc5f4\uc5b4 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub97c \ud074\ub860\ud55c \uacf3\uc73c\ub85c \uc774\ub3d9\ud574 \uc8fc\uc138\uc694. ./gradlew setup \uc744 \uc801\uc73c\uc2dc\uace0 \uc5d4\ud130\ub97c \ub204\ub974\uc2e0 \uc774\ud6c4, ForgeGradle \uc774 \uc791\uc5c5\uc744 \uc644\ub8cc\ud558\uae30\uae4c\uc9c0 \uae30\ub2e4\ub824 \uc8fc\uc138\uc694. ./gradlew genEclipseRuns \ub97c \uc801\uc73c\uc2dc\uace0 \uc5d4\ud130\ub97c \ub204\ub974\uc2e0 \uc774\ud6c4, ForgeGradle \uc774 \uc791\uc5c5\uc744 \uc644\ub8cc\ud558\uae30\uae4c\uc9c0 \uae30\ub2e4\ub824 \uc8fc\uc138\uc694. \uc774\ud074\ub9bd\uc2a4 \uc791\uc5c5 \uacf5\uac04\uc744 \uc5ec\uc2e0 \uc774\ud6c4 File -> Import -> General -> Existing Gradle Project \ub97c \ub20c\ub7ec\uc8fc\uc138\uc694. \ud074\ub860\ud55c \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub85c \uc774\ub3d9\ud558\uc2e0 \ub2e4\uc74c \u201cProject root directory\u201d \uc635\uc158\uc744 \uccb4\ud06c\ud574 \uc8fc\uc138\uc694. \u201cFinish\u201d \ub97c \ub20c\ub7ec \ud504\ub85c\uc81d\ud2b8\ub97c \uc5f4\uc5b4\uc8fc\uc138\uc694. \uc774\uac8c \ub05d\uc785\ub2c8\ub2e4. \ud14c\uc2a4\ud2b8 \ubaa8\ub4dc\ub97c \uc2e4\ud589\ud558\uae30 \uc704\ud55c \ucd94\uac00\uc801\uc778 \uc124\uc815\ub3c4 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \u201cRun\u201d \uc744 \ud074\ub9ad\ud558\uc2e0 \ub2e4\uc74c \uc801\uc808\ud55c \uc2e4\ud589 \uad6c\uc131\uc744 \uc120\ud0dd\ud558\uc5ec \uc8fc\uc138\uc694. IntelliJ IDEA Jetbrains \uc758 IDE \ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud3ec\uc9c0\uac00 \uc774\uc6a9\ud558\ub294 \ube4c\ub4dc \uc2dc\uc2a4\ud15c\uc778 Gradle \uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubaa8\ub4dc \uac1c\ubc1c\uc758 \ud2b9\uc774\uc131 \ub54c\ubb38\uc5d0 \uc124\uc815 \uacfc\uc815\uc774 \uc870\uae08 \ubcf5\uc7a1\ud569\ub2c8\ub2e4. IDEA 2021 \uc774\ud6c4 IntelliJ IDEA \ub97c \uc2e4\ud589\ud574 \uc8fc\uc138\uc694. - \uc774\ubbf8 \ub2e4\ub978 \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uc791\uc5c5 \uc911\uc774\uc2dc\ub77c\uba74 \ud30c\uc77c -> \ud504\ub85c\uc81d\ud2b8 \ub2eb\uae30 \ub97c \ub20c\ub7ec \uae30\uc874 \ud504\ub85c\uc81d\ud2b8\ub97c \ub2eb\uc544\uc8fc\uc138\uc694. \u201cIntelliJ IDEA\uc5d0 \uc624\uc2e0 \uac83\uc744 \ud658\uc601\ud569\ub2c8\ub2e4\u201d \ucc3d\uc5d0\uc11c, \uc624\ub978\ucabd \uc704 \u201c\uc5f4\uae30\u201d \ubc84\ud2bc\uc744 \ub204\ub974\uace0 \uc774\uc804\uc5d0 \ub0b4\ub824\ubc1b\uc740 \ud3ec\uc9c0 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub97c \uc5f4\uc5b4\uc8fc\uc138\uc694. \ub9cc\uc57d \ud504\ub85c\uc81d\ud2b8\ub97c \uc2e0\ub8b0\ud560 \uac83\uc778\uc9c0 \ubb3c\uc5b4\ubcf8\ub2e4\uba74 \u201c\ud504\ub85c\uc81d\ud2b8 \uc2e0\ub8b0\u201d \ub97c \ub20c\ub7ec\uc8fc\uc138\uc694. IDEA \uac00 \ud504\ub85c\uc81d\ud2b8\ub97c \ubd88\ub7ec\uc624\uace0 \uc0c9\uc778 \uc0dd\uc131\uc744 \ub2e4 \ub9c8\ucce4\ub2e4\uba74 Gradle \uc758 setup \uc791\uc5c5\uc744 \ub2e4\uc74c\uacfc \uac19\uc774 \uc2e4\ud589\ud574\uc57c \ud569\ub2c8\ub2e4: - \ud654\uba74 \uc624\ub978\ucabd\uc758 Gradle \ud0ed\uc744 \uc5f0 \ub2e4\uc74c, \ud3ec\uc9c0 \ud504\ub85c\uc81d\ud2b8 \ud2b8\ub9ac\uc5d0\uc11c Tasks -> other -> setup ( MinecraftForge[Setup] \uc774\ub77c\uace0 \ud45c\uc2dc\ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4) \uc744 \ub354\ube14 \ud074\ub9ad\ud574\uc11c \uc2e4\ud589\ud574 \uc8fc\uc138\uc694. \uc2e4\ud589 \uad6c\uc131 \uc0dd\uc131\ud558\uae30: - \ud654\uba74 \uc624\ub978\ucabd\uc758 Gradle \ud0ed\uc744 \uc5f0 \ub2e4\uc74c, \ud3ec\uc9c0 \ud504\ub85c\uc81d\ud2b8 \ud2b8\ub9ac\uc5d0\uc11c Tasks -> forgegradle runs -> genIntellijRuns ( MinecraftForge[genIntellijRuns] \uc774\ub77c\uace0 \ud45c\uc2dc\ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4) \ub97c \ub354\ube14 \ud074\ub9ad\ud574\uc11c \uc2e4\ud589\ud574 \uc8fc\uc138\uc694. - \ub9cc\uc57d \uc544\uc9c1 \uc791\uc5c5\ud55c \uac83\uc774 \uc5c6\ub294\ub370\ub3c4 \ub77c\uc774\uc120\uc2a4 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud55c\ub2e4\uba74 Tasks -> other -> updateLicenses \ub97c \uc2e4\ud589\ud558\uba74 \ud574\uacb0\ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. IDEA 2019-2020 \uc774 \uc124\uc815 \uacfc\uc815\uc740 IDEA 2021\uacfc \ud06c\uac8c \ub2e4\ub974\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\uc758 build.gradle \ud30c\uc77c\uc744 IDEA \ud504\ub85c\uc81d\ud2b8\ub85c \uc5f4\uc5b4\uc8fc\uc138\uc694. \u201cWelcome to Intellij IDEA\u201d \ucc3d\uc5d0\uc11c \u201cImport Project\u201d \ub97c \ub204\ub974\uc2dc\uace0, \ub0b4\ub824\ubc1b\uc740 \ud3ec\uc9c0 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc758 build.gradle \ud30c\uc77c\uc744 \uc5f4\uc5b4\uc8fc\uc138\uc694. IDEA \uac00 \ud504\ub85c\uc81d\ud2b8\ub97c \ubd88\ub7ec\uc624\uace0 \uc0c9\uc778 \uc0dd\uc131\uc744 \ub2e4 \ub9c8\ucce4\ub2e4\uba74 Gradle \uc758 setup \uc791\uc5c5\uc744 \ub458 \uc911 \ud558\ub098\uc758 \ubc29\ubc95\uc73c\ub85c \uc2e4\ud589\ud574\uc57c \ud569\ub2c8\ub2e4: \ud654\uba74 \uc624\ub978\ucabd\uc758 Gradle \ud0ed\uc744 \uc5f0 \ub2e4\uc74c, \ud3ec\uc9c0 \ud504\ub85c\uc81d\ud2b8 \ud2b8\ub9ac\uc5d0\uc11c Tasks -> other -> setup ( MinecraftForge[Setup] \uc774\ub77c\uace0 \ud45c\uc2dc\ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4) \uc744 \ub354\ube14 \ud074\ub9ad\ud574\uc11c \uc2e4\ud589\ud574 \uc8fc\uc138\uc694. CTRL \ud0a4\ub97c \ub450\ubc88 \ub204\ub974\uc2e0 \ub2e4\uc74c Run \uba85\ub839 \ucc3d\uc5d0 gradle setup \ub97c \uc801\uace0 \uc5d4\ud130\ub97c \ub204\ub974\uc138\uc694. \uc774\uc81c forge_client Gradle \uc791\uc5c5\uc73c\ub85c \ud3ec\uc9c0\ub97c \uc2e4\ud589\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4 ( Tasks -> fg_runs -> forge_client ): \ud574\ub2f9 \uc791\uc5c5\uc744 \uc6b0\ud074\ub9ad \ud55c \uc774\ud6c4 \uc2e4\ud589 \ub610\ub294 \ub514\ubc84\uadf8\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4. \uad6c\ubc84\uc804 IDEA 2016\ubcf4\ub2e4 \uc624\ub798\ub41c IDEA \ubc84\uc804\ub4e4\uc740 \ud3ec\uc9c0 \uac1c\ubc1c \ud658\uacbd\uc5d0 \ud544\uc694\ud55c \uba40\ud2f0 \ud504\ub85c\uc81d\ud2b8 \ubc0f Gradle \uc9c0\uc6d0\uc774 \uc5c6\uc5b4\uc11c \uc774\uc6a9\ud558\uc2e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4, IDEA 2016 - 2018 \ub294 \uc124\uc815 \uacfc\uc815\uc774 \ub354 \ubcf5\uc7a1\ud558\uc9c0\ub9cc \uadf8\ub798\ub3c4 \uc0ac\uc6a9\ud558\uc2e4 \uc21c \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub798\ub3c4 IDEA 2019 \ub610\ub294 \uc774\ud6c4 \ubc84\uc804\uc744 \uc774\uc6a9\ud558\uc2dc\ub294 \uac83\uc744 \uac15\ub825\ud788 \uad8c\uc7a5\ub4dc\ub9bd\ub2c8\ub2e4. cpw \uc528\uaed8\uc11c \uc62c\ub824\uc8fc\uc2e0 \ube44\ub514\uc624 \ub97c \ub530\ub77c IDEA 2016.1 \ub97c \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IDEA \ub97c \uc774\uc6a9\ud558\uc5ec \uac1c\ubc1c \ud658\uacbd\uc744 \uad6c\uc131\ud558\ub294 \uac83\uc740 \uc774\uac8c \ub2e4\uc785\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ubc14\ub85c \ud3ec\uc9c0\uc5d0 \ub3d9\ubd09\ub41c \ud14c\uc2a4\ud2b8 \ubc0f \ub514\ubc84\uadf8 \ubaa8\ub4dc\ub4e4\uc744 \ubc14\ub85c \uc2e4\ud589\ud558\uc2e4 \uc21c \uc5c6\uc744 \uac83\uc785\ub2c8\ub2e4. \ucf54\ub4dc \uc218\uc815 \ubc0f Pull Request \uc81c\ucd9c\ud558\uae30 \uac1c\ubc1c \ud658\uacbd \uc124\uc815\uc744 \ub05d\ub9c8\uce58\uc168\ub2e4\uba74 \uc774\uc820 \ud3ec\uc9c0\uc758 \ucf54\ub4dc\ubca0\uc774\uc2a4\ub97c \uc218\uc815\ud558\uc2e4 \ucc28\ub840\uc785\ub2c8\ub2e4. \uadf8\ub807\uc9c0\ub9cc, \ud504\ub85c\uc81d\ud2b8 \ucf54\ub4dc\ub97c \uc218\uc815\ud558\uba70 \uc78a\uc9c0 \ub9d0\uc544\uc57c \ud560 \uac83\uc740 \uc624\uc9c1 \u201cForge\u201d \uc11c\ube0c \ud504\ub85c\uc81d\ud2b8\uc758 \ucf54\ub4dc\ub9cc \uc218\uc815\ud558\uc154\uc57c \ud55c\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \u201cClean\u201d \ud504\ub85c\uc81d\ud2b8\ub97c \uc218\uc815\ud558\uc2dc\uac8c \ub418\uba74 ForgeGradle \uc774 \ub098\uc911\uc5d0 \ud328\uce58\ub97c \uc0dd\uc131\ud560 \ub54c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc798\ubabb\ud558\uba74 \uac1c\ubc1c \ud658\uacbd \uc124\uc815\uc744 \ucc98\uc74c\ubd80\ud130 \ub2e4\uc2dc \ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud328\uce58 \uc0dd\uc131\ud558\uae30 \uc774\uc81c \ucf54\ub4dc \ubca0\uc774\uc2a4\ub97c \uc218\uc815\ud558\uc168\uace0 \ud14c\uc2a4\ud2b8\ub3c4 \ub05d\ub9c8\uce58\uc168\ub2e4\uba74, \ud328\uce58\ub97c \uc0dd\uc131\ud558\uc154\ub3c4 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ucf54\ub4dc\ub97c \uc218\uc815\ud558\uc600\uc744 \ub54c\ub9cc \ud544\uc694\ud569\ub2c8\ub2e4. \ud3ec\uc9c0\ub294 \ud328\uce58\ub97c \uc774\uc6a9\ud558\uc5ec \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc5d0 \ub2e4\ub978 \ucf54\ub4dc\ub97c \uc8fc\uc785\ud558\uae30 \ub54c\ubb38\uc5d0 \ud328\uce58\uac00 \uc788\uc5b4\uc57c \ubcc0\uacbd \uc0ac\ud56d\uc744 \uc8fc\uc785\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ForgeGradle \uc740 \uc774\ub97c \uc704\ud574 \uc790\ub3d9\uc73c\ub85c \ud328\uce58\ub97c \uc0dd\uc131\ud574 \uc90d\ub2c8\ub2e4. \ud328\uce58 \uc0dd\uc131\uc744 \uc2dc\uc791\ud558\uae30 \uc704\ud574\uc120 genPatches Gradle \uc791\uc5c5\uc744 IDE \ub610\ub294 \uba85\ub839\uc904\uc744 \uc774\uc6a9\ud574 \uc2e4\ud589\ud574 \uc8fc\uc138\uc694. \uc791\uc5c5\uc774 \ub05d\ub09c \uc774\ud6c4 \ubaa8\ub4e0 \uc791\uc5c5 \ub0b4\uc6a9\uc744 \ucee4\ubc0b\ud558\uace0(\ud544\uc694 \uc5c6\ub294 \uac83\ub4e4\uc740 \ub2f9\uc5f0\ud788 \ube7c\uc8fc\uc138\uc694!) Pull Request \ub97c \uc81c\ucd9c\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4! Pull Requests \ud3ec\uc9c0\uc5d0 \uae30\uc5ec\ud558\uae30 \uc704\ud55c \ub9c8\uc9c0\ub9c9 \ub2e8\uacc4\ub294 Pull Request(\uc904\uc5ec\uc11c PR) \uc81c\ucd9c\uc785\ub2c8\ub2e4. PR \uc740 \ub2f9\uc2e0\uc758 \uc791\uc5c5 \ub0b4\uc6a9\uc744 \uc801\uc6a9\ud574\ub2ec\ub77c\ub294 \uc694\uccad\uc785\ub2c8\ub2e4. PR \uc744 \uc81c\ucd9c\ud558\ub294 \uac83 \ub610\ud55c \uac04\ub2e8\ud569\ub2c8\ub2e4, \uc774 \ud398\uc774\uc9c0 \ub97c \ubc29\ubb38\ud558\uc2e0 \ub2e4\uc74c \uc81c\uc2dc\ub41c \ub2e8\uacc4\ub4e4\uc744 \ub530\ub77c \ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4. \uc774\ub54c \uc774\uc804\uc5d0 \ub9d0\uc500\ub4dc\ub9b0 \ub300\ub85c \uc0c8 PR \uc744 \ub9cc\ub4e4 \ub54c \ub9c8\ub2e4 \uc0c8\ub85c\uc6b4 \ube0c\ub79c\uce58\ub97c \ub9cc\ub4dc\ub294 \uac83\uc774 \uc88b\uc740 \uc774\uc720\ub97c \ubcf4\uc2e4 \uc218 \uc788\ub294\ub370, \ubb34\uc5c7\uc744 \uc81c\ucd9c\ud560\uc9c0 \uacb0\uc815\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. Note Pull Request \ub294 \uc815\ud574\uc9c4 \uaddc\uce59\uc5d0 \ub530\ub77c \ucc98\ub9ac\ub429\ub2c8\ub2e4; \ubaa8\ub4e0 PR \uc774 \ubc1b\uc544\ub4e4\uc5ec\uc9c0\uc9c4 \uc54a\uc2b5\ub2c8\ub2e4. \uc774 \ubb38\uc11c \ub97c \ucc38\uace0\ud558\uc5ec PR \uc744 \ub354 \uac1c\uc120\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubcf4\uc138\uc694! PR \uc744 \ub354 \uc798 \ubc1b\uc544\ub4e4\uc5ec\uc9c0\ub3c4\ub85d \ud558\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74 \uc774 \uac00\uc774\ub4dc\ub77c\uc778 \uc744 \ub530\ub77c\uc8fc\uc138\uc694!","title":"\uc18c\uac1c"},{"location":"forgedev/#_1","text":"\ud3ec\uc9c0\uc5d0 \uae30\uc5ec\ud558\uc2dc\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74 \uac1c\ubc1c \ud658\uacbd \uc124\uc815\uc744 \uc704\ud574 \uac70\uccd0\uc57c \ud560 \ub2e8\uacc4\ub4e4\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\uc800 \ub2e8\uc21c\ud55c \ubaa8\ub4dc \uac1c\ubc1c \ud658\uacbd\uc740 \ud3ec\uc9c0 \ucf54\ub4dc\ubca0\uc774\uc2a4 \uc218\uc815\uc744 \uc9c0\uc6d0\ud558\uc9c0 \ubabb\ud569\ub2c8\ub2e4. \uadf8 \ub300\uc2e0, \uc544\ub798 \uc548\ub0b4\ub97c \ucc38\uace0\ud558\uc5ec \ud3ec\uc9c0 \uac1c\uc120\uc744 \uc704\ud55c \uac1c\ubc1c \ud658\uacbd\uc744 \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4!","title":"\uc2dc\uc791\ud558\uae30\uc5d0 \uc55e\uc11c"},{"location":"forgedev/#_2","text":"\ud3ec\uc9c0 \ub610\ud55c \uc5ec\ub7ec \uc624\ud508 \uc18c\uc2a4 \ud504\ub85c\uc81d\ud2b8\ub4e4\ucc98\ub7fc GitHub \uc5d0 \ud638\uc2a4\ud305 \ub429\ub2c8\ub2e4. \ub9cc\uc57d \uc774\uc804\uc5d0\ub3c4 \ub2e4\ub978 \uc624\ud508 \uc18c\uc2a4 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\uc5ec\ud558\uc2e0 \uc801\uc774 \uc788\uc73c\uc2dc\ub2e4\uba74 \uc774 \ub2e8\uacc4\ub294 \uc774\ubbf8 \ucda9\ubd84\ud788 \uc798 \uc544\uc2e4 \ud14c\ub2c8 \uac74\ub108\ub6f0\uc154\ub3c4 \ub429\ub2c8\ub2e4. Git \uc744 \uc774\uc6a9\ud55c \ud611\uc5c5\uc774 \ucc98\uc74c\uc774\uc2dc\ub77c\uba74 \uc544\ub798 \ub2e8\uacc4\ub4e4\uc744 \ub530\ub77c\uc8fc\uc138\uc694. Note \uc774 \ubb38\uc11c\ub294 \uc774\ubbf8 \ub2f9\uc2e0\uc5d0\uac8c GitHub \uacc4\uc815\uc774 \uc788\ub2e4\uace0 \uac00\uc815\ud558\uace0 \uc791\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uacc4\uc815\uc774 \uc5c6\uc73c\uc2dc\ub2e4\uba74 \uac00\uc785 \ud398\uc774\uc9c0 \ub97c \ubc29\ubb38\ud558\uc5ec \uacc4\uc815\uc744 \ub9cc\ub4e4\uc5b4 \uc8fc\uc138\uc694. \ub610\ud55c, \uc774 \ubb38\uc11c\ub294 git \uc758 \uc804\ubc18\uc801 \uc0ac\uc6a9\ubc95\uc744 \uc704\ud55c \ud29c\ud1a0\ub9ac\uc5bc\uc774 \uc544\ub2d9\ub2c8\ub2e4. \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc2dc\uba74 \ub2e4\ub978 \uac00\uc774\ub4dc\ub97c \ucc38\uace0\ud558\uc5ec \uc8fc\uc138\uc694.","title":"\ub9ac\ud3ec\uc9c0\ud1a0\ub9ac \ud3ec\ud0b9 \ubc0f \ud074\ub860"},{"location":"forgedev/#_3","text":"\uc77c\ub2e8, \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3ec\uc9c0 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac \ub97c \u201c\ud3ec\ud06c\u201d\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uc624\ub978\ucabd \uc704\uc758 \u201cFork\u201d \ub97c \ud074\ub9ad\ud558\uc5ec\uc11c \ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. GitHub Organization \uc5d0 \ucd94\uac00\ud558\uc2dc\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub97c \ud3ec\ud06c\ud560 \uacc4\uc815\uc744 \uc120\ud0dd\ud574\uc8fc\uc138\uc694. \ubaa8\ub4e0 GitHub \uc0ac\uc6a9\uc790\uac00 \ubaa8\ub4e0 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \uc4f0\uae30 \uad8c\ud55c\uc774 \uc788\ub294 \uac83\uc774 \uc544\ub2c8\uae30\uc5d0 \uba3c\uc800 \ud3ec\ud0b9\uc744 \ud558\ub294 \uac83\uc740 \ud544\uc218\uc801\uc785\ub2c8\ub2e4. \ud3ec\ud0b9\uc740 \uc6d0\ubcf8 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc758 \ub2f9\uc2e0\ub9cc\uc758 \ubcf5\uc0ac\ubcf8\uc744 \ub9cc\ub4e4\uc5b4 \uc790\uc720\ub86d\uac8c \uc791\uc5c5\ud558\uc2e4 \uc218 \uc788\ub3c4\ub85d \ud558\uace0, \uc791\uc5c5\ud558\uc2e0 \ub0b4\uc6a9\uc740 \ub098\uc911\uc5d0 Pull Request \ub97c \ud1b5\ud574 \uc6d0\ubcf8 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \uc81c\ucd9c\ud569\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud574\uc120 \ub098\uc911\uc5d0 \ub354 \ub2e4\ub8f0 \uac83\uc785\ub2c8\ub2e4.","title":"\ud3ec\ud0b9"},{"location":"forgedev/#_4","text":"\ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub97c \ud3ec\ud0b9\ud558\uc168\ub2e4\uba74 \uc774\uc81c \ucef4\ud4e8\ud130\uc5d0 \ub0b4\ub824\ubc1b\uc544 \uc9c1\uc811 \uc791\uc5c5\ud558\uc2e4 \ub54c\uac00 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774 \ub0b4\ub824\ubc1b\ub294 \uc791\uc5c5\uc744 \ud074\ub860\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. \ub2f9\uc2e0\uc774 \uc560\uc6a9\ud558\uc2dc\ub294 git \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc774\uc6a9\ud574 \uc6d0\ud558\uc2dc\ub294 \uacf3\uc5d0 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub97c \ud074\ub860\ud574\uc8fc\uc138\uc694. \ub300\uac1c \uc544\ub798\ucc98\ub7fc \uba85\ub839\uc5b4\ub97c \uc774\uc6a9\ud574 \ud604\uc7ac \ub514\ub809\ud130\ub9ac\uc5d0\uc11c \u201cMinecraftForge\u201d \ub77c\ub294 \ud3f4\ub354\uc5d0 \ub0b4\ub824\ubc1b\uc2b5\ub2c8\ub2e4. \uc544\ub798 <User> \ub97c \ub2f9\uc2e0\uc758 \ub2c9\ub124\uc784\uc73c\ub85c \ubcc0\uacbd\ud558\uc2dc\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694! git clone https://github.com/<User>/MinecraftForge","title":"\ud074\ub860"},{"location":"forgedev/#_5","text":"\ud3ec\uc9c0 \uac1c\ubc1c \ud658\uacbd \uc124\uc815\uc744 \uc704\ud574\uc120 \uc624\uc9c1 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub97c \ud3ec\ud0b9\ud558\uace0 \ud074\ub860\ud558\ub294 \uac83\ub9cc \ud558\uc154\ub3c4 \ub418\uc9c0\ub9cc, Pull Request \uc81c\ucd9c\uc744 \uc218\uc6d4\ud558\uac8c \ud558\ub824\uba74 \uc704\ud574 \uc0c8\ub85c\uc6b4 \ube0c\ub79c\uce58\ub97c \ub9cc\ub4dc\uc2dc\ub294 \uac83\uc744 \ucd94\ucc9c\ud569\ub2c8\ub2e4. \uc0c8\ub85c\uc6b4 PR \uc744 \uc81c\ucd9c\ud558\uc2e4 \ub54c\ub9c8\ub2e4 \uc0c8\ub85c\uc6b4 \ube0c\ub79c\uce58\ub97c \ub9cc\ub4dc\uc2dc\uba74 \ub2e4\ub978 \uc0ac\ub78c\uc758 \uc791\uc5c5\ubb3c\uc744 \ubc14\ub85c \ub0b4\ub824\ubc1b\uc73c\uba74\uc11c\ub3c4 \uc774\uc804 \ucf54\ub4dc\ubca0\uc774\uc2a4\ub97c \uc720\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uac1c\ubc1c \ud658\uacbd\uc744 \uc124\uc815\ud558\uace0 \uc2e4\ud589\ud558\uc2e4 \uc900\ube44\uac00 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4.","title":"\uc791\uc5c5\uc6a9 \ube0c\ub79c\uce58 \uccb4\ud06c\uc544\uc6c3 \ud558\uae30"},{"location":"forgedev/#_6","text":"\uc0ac\uc6a9\ud558\uc2dc\ub294 IDE \uc5d0 \ub530\ub77c \uc801\uc808\ud55c \uac1c\ubc1c \ud658\uacbd \uc124\uc815 \ubc29\ubc95\uc774 \uc870\uae08\uc529 \ub2e4\ub985\ub2c8\ub2e4.","title":"\uac1c\ubc1c \ud658\uacbd \uc124\uc815\ud558\uae30"},{"location":"forgedev/#eclipse","text":"Eclipse \uc758 \uc791\uc5c5\uacf5\uac04 \ub355\ubd84\uc5d0, ForgeGradle \uc774 \ub300\ubd80\ubd84\uc758 \uac1c\ubc1c \ud658\uacbd \uc124\uc815\uc744 \ub300\uc2e0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud130\ubbf8\ub110/\uba85\ub839 \ud504\ub86c\ud504\ud2b8\ub97c \uc5f4\uc5b4 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub97c \ud074\ub860\ud55c \uacf3\uc73c\ub85c \uc774\ub3d9\ud574 \uc8fc\uc138\uc694. ./gradlew setup \uc744 \uc801\uc73c\uc2dc\uace0 \uc5d4\ud130\ub97c \ub204\ub974\uc2e0 \uc774\ud6c4, ForgeGradle \uc774 \uc791\uc5c5\uc744 \uc644\ub8cc\ud558\uae30\uae4c\uc9c0 \uae30\ub2e4\ub824 \uc8fc\uc138\uc694. ./gradlew genEclipseRuns \ub97c \uc801\uc73c\uc2dc\uace0 \uc5d4\ud130\ub97c \ub204\ub974\uc2e0 \uc774\ud6c4, ForgeGradle \uc774 \uc791\uc5c5\uc744 \uc644\ub8cc\ud558\uae30\uae4c\uc9c0 \uae30\ub2e4\ub824 \uc8fc\uc138\uc694. \uc774\ud074\ub9bd\uc2a4 \uc791\uc5c5 \uacf5\uac04\uc744 \uc5ec\uc2e0 \uc774\ud6c4 File -> Import -> General -> Existing Gradle Project \ub97c \ub20c\ub7ec\uc8fc\uc138\uc694. \ud074\ub860\ud55c \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub85c \uc774\ub3d9\ud558\uc2e0 \ub2e4\uc74c \u201cProject root directory\u201d \uc635\uc158\uc744 \uccb4\ud06c\ud574 \uc8fc\uc138\uc694. \u201cFinish\u201d \ub97c \ub20c\ub7ec \ud504\ub85c\uc81d\ud2b8\ub97c \uc5f4\uc5b4\uc8fc\uc138\uc694. \uc774\uac8c \ub05d\uc785\ub2c8\ub2e4. \ud14c\uc2a4\ud2b8 \ubaa8\ub4dc\ub97c \uc2e4\ud589\ud558\uae30 \uc704\ud55c \ucd94\uac00\uc801\uc778 \uc124\uc815\ub3c4 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \u201cRun\u201d \uc744 \ud074\ub9ad\ud558\uc2e0 \ub2e4\uc74c \uc801\uc808\ud55c \uc2e4\ud589 \uad6c\uc131\uc744 \uc120\ud0dd\ud558\uc5ec \uc8fc\uc138\uc694.","title":"Eclipse"},{"location":"forgedev/#intellij-idea","text":"Jetbrains \uc758 IDE \ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud3ec\uc9c0\uac00 \uc774\uc6a9\ud558\ub294 \ube4c\ub4dc \uc2dc\uc2a4\ud15c\uc778 Gradle \uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubaa8\ub4dc \uac1c\ubc1c\uc758 \ud2b9\uc774\uc131 \ub54c\ubb38\uc5d0 \uc124\uc815 \uacfc\uc815\uc774 \uc870\uae08 \ubcf5\uc7a1\ud569\ub2c8\ub2e4.","title":"IntelliJ IDEA"},{"location":"forgedev/#idea-2021","text":"IntelliJ IDEA \ub97c \uc2e4\ud589\ud574 \uc8fc\uc138\uc694. - \uc774\ubbf8 \ub2e4\ub978 \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uc791\uc5c5 \uc911\uc774\uc2dc\ub77c\uba74 \ud30c\uc77c -> \ud504\ub85c\uc81d\ud2b8 \ub2eb\uae30 \ub97c \ub20c\ub7ec \uae30\uc874 \ud504\ub85c\uc81d\ud2b8\ub97c \ub2eb\uc544\uc8fc\uc138\uc694. \u201cIntelliJ IDEA\uc5d0 \uc624\uc2e0 \uac83\uc744 \ud658\uc601\ud569\ub2c8\ub2e4\u201d \ucc3d\uc5d0\uc11c, \uc624\ub978\ucabd \uc704 \u201c\uc5f4\uae30\u201d \ubc84\ud2bc\uc744 \ub204\ub974\uace0 \uc774\uc804\uc5d0 \ub0b4\ub824\ubc1b\uc740 \ud3ec\uc9c0 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub97c \uc5f4\uc5b4\uc8fc\uc138\uc694. \ub9cc\uc57d \ud504\ub85c\uc81d\ud2b8\ub97c \uc2e0\ub8b0\ud560 \uac83\uc778\uc9c0 \ubb3c\uc5b4\ubcf8\ub2e4\uba74 \u201c\ud504\ub85c\uc81d\ud2b8 \uc2e0\ub8b0\u201d \ub97c \ub20c\ub7ec\uc8fc\uc138\uc694. IDEA \uac00 \ud504\ub85c\uc81d\ud2b8\ub97c \ubd88\ub7ec\uc624\uace0 \uc0c9\uc778 \uc0dd\uc131\uc744 \ub2e4 \ub9c8\ucce4\ub2e4\uba74 Gradle \uc758 setup \uc791\uc5c5\uc744 \ub2e4\uc74c\uacfc \uac19\uc774 \uc2e4\ud589\ud574\uc57c \ud569\ub2c8\ub2e4: - \ud654\uba74 \uc624\ub978\ucabd\uc758 Gradle \ud0ed\uc744 \uc5f0 \ub2e4\uc74c, \ud3ec\uc9c0 \ud504\ub85c\uc81d\ud2b8 \ud2b8\ub9ac\uc5d0\uc11c Tasks -> other -> setup ( MinecraftForge[Setup] \uc774\ub77c\uace0 \ud45c\uc2dc\ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4) \uc744 \ub354\ube14 \ud074\ub9ad\ud574\uc11c \uc2e4\ud589\ud574 \uc8fc\uc138\uc694. \uc2e4\ud589 \uad6c\uc131 \uc0dd\uc131\ud558\uae30: - \ud654\uba74 \uc624\ub978\ucabd\uc758 Gradle \ud0ed\uc744 \uc5f0 \ub2e4\uc74c, \ud3ec\uc9c0 \ud504\ub85c\uc81d\ud2b8 \ud2b8\ub9ac\uc5d0\uc11c Tasks -> forgegradle runs -> genIntellijRuns ( MinecraftForge[genIntellijRuns] \uc774\ub77c\uace0 \ud45c\uc2dc\ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4) \ub97c \ub354\ube14 \ud074\ub9ad\ud574\uc11c \uc2e4\ud589\ud574 \uc8fc\uc138\uc694. - \ub9cc\uc57d \uc544\uc9c1 \uc791\uc5c5\ud55c \uac83\uc774 \uc5c6\ub294\ub370\ub3c4 \ub77c\uc774\uc120\uc2a4 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud55c\ub2e4\uba74 Tasks -> other -> updateLicenses \ub97c \uc2e4\ud589\ud558\uba74 \ud574\uacb0\ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"IDEA 2021 \uc774\ud6c4"},{"location":"forgedev/#idea-2019-2020","text":"\uc774 \uc124\uc815 \uacfc\uc815\uc740 IDEA 2021\uacfc \ud06c\uac8c \ub2e4\ub974\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\uc758 build.gradle \ud30c\uc77c\uc744 IDEA \ud504\ub85c\uc81d\ud2b8\ub85c \uc5f4\uc5b4\uc8fc\uc138\uc694. \u201cWelcome to Intellij IDEA\u201d \ucc3d\uc5d0\uc11c \u201cImport Project\u201d \ub97c \ub204\ub974\uc2dc\uace0, \ub0b4\ub824\ubc1b\uc740 \ud3ec\uc9c0 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc758 build.gradle \ud30c\uc77c\uc744 \uc5f4\uc5b4\uc8fc\uc138\uc694. IDEA \uac00 \ud504\ub85c\uc81d\ud2b8\ub97c \ubd88\ub7ec\uc624\uace0 \uc0c9\uc778 \uc0dd\uc131\uc744 \ub2e4 \ub9c8\ucce4\ub2e4\uba74 Gradle \uc758 setup \uc791\uc5c5\uc744 \ub458 \uc911 \ud558\ub098\uc758 \ubc29\ubc95\uc73c\ub85c \uc2e4\ud589\ud574\uc57c \ud569\ub2c8\ub2e4: \ud654\uba74 \uc624\ub978\ucabd\uc758 Gradle \ud0ed\uc744 \uc5f0 \ub2e4\uc74c, \ud3ec\uc9c0 \ud504\ub85c\uc81d\ud2b8 \ud2b8\ub9ac\uc5d0\uc11c Tasks -> other -> setup ( MinecraftForge[Setup] \uc774\ub77c\uace0 \ud45c\uc2dc\ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4) \uc744 \ub354\ube14 \ud074\ub9ad\ud574\uc11c \uc2e4\ud589\ud574 \uc8fc\uc138\uc694. CTRL \ud0a4\ub97c \ub450\ubc88 \ub204\ub974\uc2e0 \ub2e4\uc74c Run \uba85\ub839 \ucc3d\uc5d0 gradle setup \ub97c \uc801\uace0 \uc5d4\ud130\ub97c \ub204\ub974\uc138\uc694. \uc774\uc81c forge_client Gradle \uc791\uc5c5\uc73c\ub85c \ud3ec\uc9c0\ub97c \uc2e4\ud589\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4 ( Tasks -> fg_runs -> forge_client ): \ud574\ub2f9 \uc791\uc5c5\uc744 \uc6b0\ud074\ub9ad \ud55c \uc774\ud6c4 \uc2e4\ud589 \ub610\ub294 \ub514\ubc84\uadf8\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4.","title":"IDEA 2019-2020"},{"location":"forgedev/#idea","text":"2016\ubcf4\ub2e4 \uc624\ub798\ub41c IDEA \ubc84\uc804\ub4e4\uc740 \ud3ec\uc9c0 \uac1c\ubc1c \ud658\uacbd\uc5d0 \ud544\uc694\ud55c \uba40\ud2f0 \ud504\ub85c\uc81d\ud2b8 \ubc0f Gradle \uc9c0\uc6d0\uc774 \uc5c6\uc5b4\uc11c \uc774\uc6a9\ud558\uc2e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4, IDEA 2016 - 2018 \ub294 \uc124\uc815 \uacfc\uc815\uc774 \ub354 \ubcf5\uc7a1\ud558\uc9c0\ub9cc \uadf8\ub798\ub3c4 \uc0ac\uc6a9\ud558\uc2e4 \uc21c \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub798\ub3c4 IDEA 2019 \ub610\ub294 \uc774\ud6c4 \ubc84\uc804\uc744 \uc774\uc6a9\ud558\uc2dc\ub294 \uac83\uc744 \uac15\ub825\ud788 \uad8c\uc7a5\ub4dc\ub9bd\ub2c8\ub2e4. cpw \uc528\uaed8\uc11c \uc62c\ub824\uc8fc\uc2e0 \ube44\ub514\uc624 \ub97c \ub530\ub77c IDEA 2016.1 \ub97c \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IDEA \ub97c \uc774\uc6a9\ud558\uc5ec \uac1c\ubc1c \ud658\uacbd\uc744 \uad6c\uc131\ud558\ub294 \uac83\uc740 \uc774\uac8c \ub2e4\uc785\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ubc14\ub85c \ud3ec\uc9c0\uc5d0 \ub3d9\ubd09\ub41c \ud14c\uc2a4\ud2b8 \ubc0f \ub514\ubc84\uadf8 \ubaa8\ub4dc\ub4e4\uc744 \ubc14\ub85c \uc2e4\ud589\ud558\uc2e4 \uc21c \uc5c6\uc744 \uac83\uc785\ub2c8\ub2e4. \ucf54\ub4dc \uc218\uc815 \ubc0f Pull Request \uc81c\ucd9c\ud558\uae30 \uac1c\ubc1c \ud658\uacbd \uc124\uc815\uc744 \ub05d\ub9c8\uce58\uc168\ub2e4\uba74 \uc774\uc820 \ud3ec\uc9c0\uc758 \ucf54\ub4dc\ubca0\uc774\uc2a4\ub97c \uc218\uc815\ud558\uc2e4 \ucc28\ub840\uc785\ub2c8\ub2e4. \uadf8\ub807\uc9c0\ub9cc, \ud504\ub85c\uc81d\ud2b8 \ucf54\ub4dc\ub97c \uc218\uc815\ud558\uba70 \uc78a\uc9c0 \ub9d0\uc544\uc57c \ud560 \uac83\uc740 \uc624\uc9c1 \u201cForge\u201d \uc11c\ube0c \ud504\ub85c\uc81d\ud2b8\uc758 \ucf54\ub4dc\ub9cc \uc218\uc815\ud558\uc154\uc57c \ud55c\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \u201cClean\u201d \ud504\ub85c\uc81d\ud2b8\ub97c \uc218\uc815\ud558\uc2dc\uac8c \ub418\uba74 ForgeGradle \uc774 \ub098\uc911\uc5d0 \ud328\uce58\ub97c \uc0dd\uc131\ud560 \ub54c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc798\ubabb\ud558\uba74 \uac1c\ubc1c \ud658\uacbd \uc124\uc815\uc744 \ucc98\uc74c\ubd80\ud130 \ub2e4\uc2dc \ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uad6c\ubc84\uc804 IDEA"},{"location":"forgedev/#_7","text":"\uc774\uc81c \ucf54\ub4dc \ubca0\uc774\uc2a4\ub97c \uc218\uc815\ud558\uc168\uace0 \ud14c\uc2a4\ud2b8\ub3c4 \ub05d\ub9c8\uce58\uc168\ub2e4\uba74, \ud328\uce58\ub97c \uc0dd\uc131\ud558\uc154\ub3c4 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ucf54\ub4dc\ub97c \uc218\uc815\ud558\uc600\uc744 \ub54c\ub9cc \ud544\uc694\ud569\ub2c8\ub2e4. \ud3ec\uc9c0\ub294 \ud328\uce58\ub97c \uc774\uc6a9\ud558\uc5ec \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc5d0 \ub2e4\ub978 \ucf54\ub4dc\ub97c \uc8fc\uc785\ud558\uae30 \ub54c\ubb38\uc5d0 \ud328\uce58\uac00 \uc788\uc5b4\uc57c \ubcc0\uacbd \uc0ac\ud56d\uc744 \uc8fc\uc785\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ForgeGradle \uc740 \uc774\ub97c \uc704\ud574 \uc790\ub3d9\uc73c\ub85c \ud328\uce58\ub97c \uc0dd\uc131\ud574 \uc90d\ub2c8\ub2e4. \ud328\uce58 \uc0dd\uc131\uc744 \uc2dc\uc791\ud558\uae30 \uc704\ud574\uc120 genPatches Gradle \uc791\uc5c5\uc744 IDE \ub610\ub294 \uba85\ub839\uc904\uc744 \uc774\uc6a9\ud574 \uc2e4\ud589\ud574 \uc8fc\uc138\uc694. \uc791\uc5c5\uc774 \ub05d\ub09c \uc774\ud6c4 \ubaa8\ub4e0 \uc791\uc5c5 \ub0b4\uc6a9\uc744 \ucee4\ubc0b\ud558\uace0(\ud544\uc694 \uc5c6\ub294 \uac83\ub4e4\uc740 \ub2f9\uc5f0\ud788 \ube7c\uc8fc\uc138\uc694!) Pull Request \ub97c \uc81c\ucd9c\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4!","title":"\ud328\uce58 \uc0dd\uc131\ud558\uae30"},{"location":"forgedev/#pull-requests","text":"\ud3ec\uc9c0\uc5d0 \uae30\uc5ec\ud558\uae30 \uc704\ud55c \ub9c8\uc9c0\ub9c9 \ub2e8\uacc4\ub294 Pull Request(\uc904\uc5ec\uc11c PR) \uc81c\ucd9c\uc785\ub2c8\ub2e4. PR \uc740 \ub2f9\uc2e0\uc758 \uc791\uc5c5 \ub0b4\uc6a9\uc744 \uc801\uc6a9\ud574\ub2ec\ub77c\ub294 \uc694\uccad\uc785\ub2c8\ub2e4. PR \uc744 \uc81c\ucd9c\ud558\ub294 \uac83 \ub610\ud55c \uac04\ub2e8\ud569\ub2c8\ub2e4, \uc774 \ud398\uc774\uc9c0 \ub97c \ubc29\ubb38\ud558\uc2e0 \ub2e4\uc74c \uc81c\uc2dc\ub41c \ub2e8\uacc4\ub4e4\uc744 \ub530\ub77c \ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4. \uc774\ub54c \uc774\uc804\uc5d0 \ub9d0\uc500\ub4dc\ub9b0 \ub300\ub85c \uc0c8 PR \uc744 \ub9cc\ub4e4 \ub54c \ub9c8\ub2e4 \uc0c8\ub85c\uc6b4 \ube0c\ub79c\uce58\ub97c \ub9cc\ub4dc\ub294 \uac83\uc774 \uc88b\uc740 \uc774\uc720\ub97c \ubcf4\uc2e4 \uc218 \uc788\ub294\ub370, \ubb34\uc5c7\uc744 \uc81c\ucd9c\ud560\uc9c0 \uacb0\uc815\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. Note Pull Request \ub294 \uc815\ud574\uc9c4 \uaddc\uce59\uc5d0 \ub530\ub77c \ucc98\ub9ac\ub429\ub2c8\ub2e4; \ubaa8\ub4e0 PR \uc774 \ubc1b\uc544\ub4e4\uc5ec\uc9c0\uc9c4 \uc54a\uc2b5\ub2c8\ub2e4. \uc774 \ubb38\uc11c \ub97c \ucc38\uace0\ud558\uc5ec PR \uc744 \ub354 \uac1c\uc120\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubcf4\uc138\uc694! PR \uc744 \ub354 \uc798 \ubc1b\uc544\ub4e4\uc5ec\uc9c0\ub3c4\ub85d \ud558\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74 \uc774 \uac00\uc774\ub4dc\ub77c\uc778 \uc744 \ub530\ub77c\uc8fc\uc138\uc694!","title":"Pull Requests"},{"location":"forgedev/prguidelines/","text":"Pull Request \uac00\uc774\ub4dc\ub77c\uc778 \uc5ec\ub7ec \ubaa8\ub4dc\ub4e4\uc774 \ud3ec\uc9c0\ub97c \uae30\ubc18\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc9c0\uc9c0\ub9cc, \ud3ec\uc9c0\uac00 \ud2b9\uc815 \uae30\ub2a5\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc544 \ubaa8\ub4dc \uac1c\ubc1c\uc5d0 \uc81c\uc57d\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7f4\ub54c\ub294 \uc9c1\uc811 \ud3ec\uc9c0\uc5d0 \uae30\ub2a5\uc744 \ucd94\uac00\ud558\uace0 \ud3ec\uc9c0 GitHub \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \uc5d0 Pull Request \ub97c \uc81c\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ub85c\uc758 \uc2dc\uac04\uc744 \uc544\ub07c\uae30 \uc704\ud574 Pull Request \ub97c \uc81c\ucd9c\ud560 \ub550 \uc544\ub798 \uac00\uc774\ub4dc \ub77c\uc778\uc744 \ub530\ub974\ub294 \uac83\uc744 \uad8c\uc7a5\ub4dc\ub9bd\ub2c8\ub2e4. \uc544\ub798 \uc0ac\ud56d\uc740 \uc88b\uc740 Pull Request \ub97c \ub9cc\ub4e4\uae30 \uc704\ud574 \uae30\uc5b5\ud574\ub450\uc154\uc57c \ud560 \uc911\uc694\ud55c \uc0ac\ud56d\ub4e4\uc785\ub2c8\ub2e4. \ud3ec\uc9c0\uac00 \uc815\ud655\ud788 \ubb34\uc5c7\uc778\uac00\uc694? \uac04\ub2e8\ud558\uac8c \ub9d0\ud574\uc11c, \ud3ec\uc9c0\ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc704\uc5d0 \ucd94\uac00\ub418\ub294 \ubaa8\ub4dc \ud638\ud658\uc131 \ub808\uc774\uc5b4\uc785\ub2c8\ub2e4. \uc61b\ub0a0\uc5d0 \ub9cc\ub4e4\uc5b4\uc9c4 \ubaa8\ub4dc\ub4e4\uc740 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \ucf54\ub4dc\ub97c (\ub9c8\uce58 coremod \ub4e4 \ucc98\ub7fc) \uc9c1\uc811 \uc218\uc815\ud558\uc600\uc9c0\ub9cc, (\ub9c8\uce58 coremod \ub4e4 \ucc98\ub7fc) \uac19\uc740 \ucf54\ub4dc\ub97c \uc218\uc815\ud558\ub824\uace0 \ud560 \ub54c\ub9c8\ub2e4 \uc11c\ub85c \ucda9\ub3cc\ud558\uc600\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\uc640 \uac19\uc740 \ud638\ud658\uc131 \ub808\uc774\uc5b4\ub97c \uc774\uc6a9\ud568\uc73c\ub85c\uc368, \ucf54\ub4dc \uc218\uc815\uc744 \uc911\uc559\ud654\ud558\uace0 \ucda9\ub3cc\uc744 \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \ud3ec\uc9c0\ub294 \ubaa8\ub4dc\ub4e4\uc5d0\uc11c \uc790\uc8fc \uc774\uc6a9\ub418\ub294 \uae30\ub2a5\uc778 \ub808\uc9c0\uc2a4\ud2b8\ub9ac, \uce90\ud328\ube4c\ub9ac\ud2f0\ub4f1 \ubaa8\ub4dc\ub07c\ub9ac \ud638\ud658\uc131\uc744 \uac1c\uc120\ud558\uae30 \uc704\ud55c \uae30\ub2a5\ub4e4 \ub610\ud55c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc88b\uc740 Pull Request \ub97c \ub9cc\ub4e4\uae30 \uc704\ud574\uc120 \ud3ec\uc9c0\uac00 \uc800\uc218\uc900\uc5d0\uc11c \uc5b4\ub5bb\uac8c \ub3d9\uc791\ud558\ub294\uc9c0 \uc544\uc154\uc57c \ud569\ub2c8\ub2e4. \ud3ec\uc9c0\ub294 \ud06c\uac8c 2\uac00\uc9c0 \ucf54\ub4dc\ub85c \uad6c\uc131\ub418\ub294\ub370: \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud328\uce58, \uadf8\ub9ac\uace0 \ud3ec\uc9c0 \ucf54\ub4dc \uc785\ub2c8\ub2e4. \ud328\uce58 \ud328\uce58\ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc18c\uc2a4 \ucf54\ub4dc\uc5d0 \uc9c1\uc811 \uc801\uc6a9\ub418\ub294 \uc218\uc815 \ubaa9\ub85d\uc785\ub2c8\ub2e4. \ucd5c\uc18c\ud55c\uc73c\ub85c \uc0ac\uc6a9\ud558\uc2dc\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ucf54\ub4dc\uac00 \ubc14\ub014 \ub54c\ub9c8\ub2e4 \ubaa8\ub4e0 \ud3ec\uc9c0 \ud328\uce58\ub4e4\uc740 \uc0c8 \ucf54\ub4dc\uc5d0\uc11c \uc791\ub3d9\ud558\ub3c4\ub85d \uc870\uc2ec\uc2a4\ub7ec\uc6b4 \uc810\uac80 \uacfc\uc815\uc744 \uac70\uccd0\uc57c\ub9cc \ud569\ub2c8\ub2e4. \ub2e4\uc2dc \ub9d0\ud574\uc11c \uae30\uc874 \ucf54\ub4dc\ub97c \ub9ce\uc774 \ubcc0\uacbd\ud558\ub294 \ud070 \ud328\uce58\ub4e4\uc740 \uc720\uc9c0\ubcf4\uc218\uac00 \ud798\ub4e4\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4, \uadf8\ub798\uc11c \ud3ec\uc9c0\ub294 \ud328\uce58\ub97c \ucd5c\uc18c\ud55c\uc73c\ub85c \uc0ac\uc6a9\ud558\ub824\uace0 \ud569\ub2c8\ub2e4. \uadf8\ub798\uc11c \ub9ac\ubdf0\ub97c \uc9c4\ud589\ud560 \ub54c\ub294 \ucd94\uac00\ub418\ub294 \uae30\ub2a5\uc774 \uc758\ub3c4\ub300\ub85c \uc791\ub3d9\ud558\ub294 \uac83 \ubfd0 \uc544\ub2c8\ub77c \ud328\uce58\uc758 \ud06c\uae30\ub610\ud55c \uc911\uc694\ud558\uac8c \ubd05\ub2c8\ub2e4. \ud328\uce58\ub97c \ucd5c\uc18c\ud654\ud558\ub294\ub370\uc5d0\ub294 \ub9ce\uc740 \ubc29\ubc95\uc774 \uc788\uc73c\uba70 \ub9ac\ubdf0 \uacfc\uc815\uc744 \uac70\uce58\uba70 \ub354 \uac1c\uc120\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0 \ud328\uce58\ub4e4\uc740 \ub300\uac1c \ud6c4\ud0b9\uc774\ub098 \uc774\ubca4\ud2b8 \ubc29\uc1a1\uc744 \uc704\ud55c \ud55c\uc904\uc9dc\ub9ac \ud328\uce58\ub4e4\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4, \uadf8\ub9ac\uace0 \uc774\ubca4\ud2b8\uc758 \uacb0\uacfc\ub294 \uc774\ud6c4\uc5d0 \ub530\ub77c\ubd99\ub294 \ucf54\ub4dc\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ub300\ub2e4\uc218\uc758 \ucf54\ub4dc\uac00 \ud328\uce58 \ubc16\uc5d0 \uc874\uc7ac\ud558\ub3c4\ub85d \ud558\uc5ec \ud328\uce58\uac00 \ub354 \uc791\uc544\uc9c0\uace0 \ub2e8\uc21c\ud574\uc9c8 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \ud328\uce58\ub97c \ub9cc\ub4dc\ub294 \uac83\uc5d0 \ub300\ud574 \ub354 \uc790\uc138\ud788 \uc54c\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74 \uc601\ubb38 \uc704\ud0a4\ub97c \ucc38\uace0\ud558\uc138\uc694 . \ud3ec\uc9c0 \ucf54\ub4dc \ud3ec\uc9c0 \ucf54\ub4dc\ub294 Java \ub85c \uc791\uc131\ub41c \ud3c9\ubc94\ud55c \ucf54\ub4dc\uc785\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ucf54\ub4dc, \ud638\ud658\uc131 \uae30\ub2a5\uacfc \uac19\uc774 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ucf54\ub4dc\ub97c \uc9c1\uc811\uc801\uc73c\ub85c \uc218\uc815\ud558\uc9c0 \uc54a\ub294 \ubaa8\ub4e0 \uac83\uc774 \ud574\ub2f9\ub429\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uac00 \uc5c5\ub370\uc774\ud2b8\ub420 \ub54c \ud3ec\uc9c0 \ucf54\ub4dc \ub610\ud55c \uc5c5\ub370\uc774\ud2b8\uac00 \ub418\uc5b4\uc57c \ud558\uc9c0\ub9cc, \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc640 \uc9c1\uc811\uc801\uc73c\ub85c \uc5f0\uad00\ub418\uc5b4\uc788\uc9c0 \uc54a\uc544 \uc720\uc9c0\ubcf4\uc218\ud558\uae30\uac00 \ub354 \uc27d\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0 \ucf54\ub4dc\ub294 \ud328\uce58\uc640 \ub2e4\ub974\uac8c \uc790\uccb4\uc801\uc73c\ub85c \uc874\uc7ac\ud558\uae30\uc5d0 \ud06c\uae30 \uc81c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \uadf8\ub798\uc11c \ub9ac\ubdf0\ub97c \uc9c4\ud589\ud560 \ub54c\ub294 \ucd94\uac00\ub418\ub294 \uae30\ub2a5\uc774 \uc758\ub3c4\ub300\ub85c \uc791\ub3d9\ud558\ub294 \uac83 \ubfd0 \uc544\ub2c8\ub77c \ud3ec\ub9e4\ud305\uacfc Javadoc \uacfc \uac19\uc740 \uac00\ub3c5\uc131\ub610\ud55c \uc911\uc694\ud558\uac8c \ubd05\ub2c8\ub2e4. \uc801\uc808\ud55c \uc124\uba85\uc774 \ud544\uc694\ud569\ub2c8\ub2e4 \ubaa8\ub4e0 Pull Request \ub4e4\uc740 \uc774\uac83\uc774 \uc65c \ud544\uc694\ud55c\uc9c0 \uc815\ub2f9\ud55c \uc0ac\uc720\uac00 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ud3ec\uc9c0\uc5d0 \ucd94\uac00\ub418\ub294 \ubaa8\ub4e0 \ucf54\ub4dc\ub4e4\uc740 \uc720\uc9c0\ubcf4\uc218\uac00 \ub418\uc5b4\uc57c \ud558\uace0, \ucf54\ub4dc\uac00 \ub9ce\uc744 \uc218\ub85d \uc7a0\uc7ac\uc801 \ubc84\uadf8\ub610\ud55c \ub9ce\uc544\uc9c0\uae30\uc5d0 \ucf54\ub4dc \ucd94\uac00\uc5d0\ub294 \ub298 \uc815\ub2f9\ud55c \uc0ac\uc720\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. Pull Request \ub97c \uc791\uc131\ud558\uba70 \uc790\uc8fc \ud558\ub294 \uc2e4\uc218\uc911 \ud558\ub098\ub294 \uc124\uba85\uc774 \ubd80\uc871\ud558\uac70\ub098 \ud65c\uc6a9 \uc608\uc81c\uac00 \ucda9\ubd84\ud788 \uba85\ud655\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uc785\ub2c8\ub2e4. \uc774\ub294 \ub9ac\ubdf0 \uc9c4\ud589 \uc18d\ub3c4\ub97c \ub2a6\ucd9c \ubfd0\uc785\ub2c8\ub2e4. Pull Request \ub97c \uba85\ud655\ud788 \uc124\uba85\ud558\ub294 \uac83\ub3c4 \uc88b\uc9c0\ub9cc, \ud574\ub2f9 \uae30\ub2a5\uc744 \uc5b4\ub5bb\uac8c \uc0ac\uc6a9\ud560 \uac83\uc778\uc9c0\ub3c4 \ubc1d\ud600\uc8fc\uc138\uc694. \uac00\ub054 \ub354 \ub098\uc740 \ub2e4\ub978 \ubc29\ubc95\uc774 \uc788\uac70\ub098, Pull Request \uc5c6\uc774\ub3c4 \ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7f0 \uac00\ub2a5\uc131\ub4e4\uc744 \ubc30\uc81c\ud558\uae30 \uc804\uae4c\uc9c4 Pull Request \uac00 \ubc1b\uc544\ub4e4\uc5ec\uc9c0\uc9c0 \uc54a\uc744 \uac83\uc785\ub2c8\ub2e4. \uc5b4\ub5bb\uac8c \ub3d9\uc791\ud558\ub294\uc9c0 \ubcf4\uc5ec\uc8fc\uc138\uc694 \uc81c\ucd9c\ub418\ub294 Pull Request \uc758 \ucf54\ub4dc\ub294 \uc815\uc0c1\uc801\uc73c\ub85c \uc791\ub3d9\ud574\uc57c \ud558\uba70, \ub9ac\ubdf0\uc5b4\ub4e4\uc5d0\uac8c \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud55c\ub2e4\uace0 \uc124\ub4dd\ud558\ub294 \uac83\uc740 \ub2f9\uc2e0 \ubaab\uc785\ub2c8\ub2e4. \uac00\uc7a5 \ud6a8\uacfc\uc801\uc73c\ub85c \uc774\ub97c \ubcf4\uc5ec\uc8fc\ub294 \ubc29\ubc95\uc740 \uc608\uc81c \ubaa8\ub4dc \ub610\ub294 JUnit \ud14c\uc2a4\ud2b8\ub97c \ucd94\uac00\ud558\uc5ec \uc758\ub3c4\ud55c\ub300\ub85c \ub3d9\uc791\ud568\uc744 \uc99d\uba85\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ud3ec\uc9c0 \uac1c\ubc1c \ud658\uacbd\uc744 \uc124\uc815\ud558\uace0 \uc608\uc81c \ubaa8\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ubc29\ubc95\uc740 \uc774 \uac00\uc774\ub4dc \ub97c \ucc38\uace0\ud558\uc5ec \uc8fc\uc138\uc694. \ud3ec\uc9c0\uc640 Breaking Changes \ud3ec\uc9c0\ub294 \ub2e4\ub978 \ubaa8\ub4dc\ub4e4\uac04\uc758 \ud638\ud658\uc131\uc744 \uae68\ud2b8\ub9ac\ub294 \uc5c5\ub370\uc774\ud2b8\ub97c \ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \ub9d0\ud574\uc11c, \uc81c\ucd9c\ub418\ub294 \ubaa8\ub4e0 Pull Request \ub4e4\uc740 \uc774\uc804 \ud3ec\uc9c0 \ubc84\uc804\ub4e4\uacfc \ud638\ud658\ub418\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4. \uc774\uc804 \ud3ec\uc9c0 \ubc84\uc804\ub4e4\uacfc\uc758 \ud638\ud658\uc131\uc744 \uae68\ud2b8\ub9ac\ub294 \uc5c5\ub370\uc774\ud2b8\ub97c Breaking Change \ub77c\uace0 \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc5c5\ub370\uc774\ud2b8\ub97c \ud558\ub294 \uc608\uc678 \uc0c1\ud669\ub4e4\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: \uc0c8\ub85c\uc6b4 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8 \ud560 \ub54c, \uc5b4\ucc28\ud53c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uac00 \uc5c5\ub370\uc774\ud2b8\ub418\uba70 \uc774\uc804 \ubc84\uc804\uacfc \ud638\ud658\uc774 \ub418\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uae34\uae09 \uc0c1\ud669\uc774\ub77c\uc11c \uc5b4\uca54 \uc218 \uc5c6\uc744 \ub54c, \ud558\uc9c0\ub9cc \uc774\ub7f0 \uc77c\uc740 \ub9e4\uc6b0 \ub4dc\ubb3c\uac8c \uc77c\uc5b4\ub098\uba70 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubaa8\ub4dc \ucee4\ubba4\ub2c8\ud2f0\uc5d0\uac8c \uc885\uc18d\uc131 \ubb38\uc81c\ub97c \ub5a0\uc549\uae30\uac8c \ub429\ub2c8\ub2e4. \uc774\ub7f0 \uc608\uc678 \uc0c1\ud669\ub4e4 \ub9d0\uace0\ub294 Breaking Change \ub97c \ub2f4\uace0 \uc788\ub294 Pull Request \ub294 \ubc1b\uc544\ub4e4\uc5ec\uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ubb34\uc870\uac74 \ud638\ud658\uc131\uc744 \uc720\uc9c0\ud558\uac70\ub098, \ub2e4\uc74c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc5c5\ub370\uc774\ud2b8\uae4c\uc9c0 \uae30\ub2e4\ub824\uc57c \ud569\ub2c8\ub2e4. \uc778\ub0b4\uc2ec\uc744 \uac00\uc9c0\uace0 \uce5c\uc808\ud558\uac8c \ub300\ud574\uc8fc\uc138\uc694 Pull Request \ub97c \uc81c\ucd9c\ud560 \ub550 \ub9ac\ubdf0 \uacfc\uc815\uc744 \uac70\uce58\uba70 \uc5ec\ub7ec\ubc88 \uc218\uc815\uc774 \uc77c\uc5b4\ub098\uac8c \ub429\ub2c8\ub2e4. \ub9ac\ubdf0 \uacfc\uc815\uc740 \ub2f9\uc2e0\uc5d0 \ub300\ud55c \uc2ec\ud310\uc774 \uc544\ub2c8\uba70, \uc2e4\uc218\ub294 \ub204\uad6c\ub098 \ud569\ub2c8\ub2e4. \uadf8\ub798\uc11c \ud611\uc5c5\uc744 \ud558\ub294 \uac83\uc774\uc9c0\uc694. \ubd80\uc815\uc801\uc778 \uc751\ub2f5\uc740 \ub204\uad6c\uc5d0\uac8c\ub3c4 \ub3c4\uc6c0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Pull Request \ub9ac\ubdf0 \uacfc\uc815\uc744 \uc911\ub2e8\ud558\uace0 coremod \ub97c \ub300\uc2e0 \uc791\uc131\ud558\uaca0\ub2e4\uace0 \ud558\ub294 \uac83\uc740 \uc5f0\ub958\ub41c \uc774\ub4e4\uc758 \ub9c8\uc74c\uc744 \uc0c1\ud558\uac8c \ud560 \ubfd0 \uc544\ub2c8\ub77c \ubaa8\ub4dc \uac1c\ubc1c \uc0dd\ud0dc\uacc4\ub97c \uc545\ud654\uc2dc\ud0b5\ub2c8\ub2e4. \ub9ac\ubdf0\uc5b4\ub4e4\uc774 \uc88b\uc740 \uc758\ub3c4\ub85c \ucc38\uc5ec\ud558\uace0 \uc788\uc74c\uc744 \ubbff\uace0 \uac1c\uc778\uc801\uc73c\ub85c \ubc1b\uc544\ub4e4\uc774\uc9c0 \uc54a\ub294 \uac83\uc774 \uc911\uc694\ud568\uc744 \uc219\uc9c0\ud574 \uc8fc\uc138\uc694. \ub9ac\ubdf0 \uc800\ud76c\uc758 \ub290\ub9ac\uace0 \uae50\uae50\ud55c \ub9ac\ubdf0 \uacfc\uc815\uc744 \uc218\uc6a9\ud558\uc2e0\ub2e4\uba74 \uc800\ud76c\ub610\ud55c \ub2f9\uc2e0\uc758 \uad00\uc810\uc5d0\uc11c \ubb38\uc81c\ub97c \ubc14\ub77c\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. \ub9ac\ubdf0 \uacfc\uc815\uc18d\uc5d0\uc11c \ubaa8\ub450\uc758 \uc190\uc744 \uac70\uce5c Pull Request \ub294 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ucd94\uac00\ub420\uc9c0 \uc548\ub420\uc9c0\ub97c \ucd5c\uc885\uc801\uc73c\ub85c \uacb0\uc815\ud558\uc2dc\ub294 Lex \uc528\uc5d0 \uc758\ud55c \ucd5c\uc885 \ub9ac\ubdf0\ub97c \uac70\uce58\uac8c \ub429\ub2c8\ub2e4.","title":"PR \uac00\uc774\ub4dc\ub77c\uc778"},{"location":"forgedev/prguidelines/#pull-request","text":"\uc5ec\ub7ec \ubaa8\ub4dc\ub4e4\uc774 \ud3ec\uc9c0\ub97c \uae30\ubc18\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc9c0\uc9c0\ub9cc, \ud3ec\uc9c0\uac00 \ud2b9\uc815 \uae30\ub2a5\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc544 \ubaa8\ub4dc \uac1c\ubc1c\uc5d0 \uc81c\uc57d\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7f4\ub54c\ub294 \uc9c1\uc811 \ud3ec\uc9c0\uc5d0 \uae30\ub2a5\uc744 \ucd94\uac00\ud558\uace0 \ud3ec\uc9c0 GitHub \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \uc5d0 Pull Request \ub97c \uc81c\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ub85c\uc758 \uc2dc\uac04\uc744 \uc544\ub07c\uae30 \uc704\ud574 Pull Request \ub97c \uc81c\ucd9c\ud560 \ub550 \uc544\ub798 \uac00\uc774\ub4dc \ub77c\uc778\uc744 \ub530\ub974\ub294 \uac83\uc744 \uad8c\uc7a5\ub4dc\ub9bd\ub2c8\ub2e4. \uc544\ub798 \uc0ac\ud56d\uc740 \uc88b\uc740 Pull Request \ub97c \ub9cc\ub4e4\uae30 \uc704\ud574 \uae30\uc5b5\ud574\ub450\uc154\uc57c \ud560 \uc911\uc694\ud55c \uc0ac\ud56d\ub4e4\uc785\ub2c8\ub2e4.","title":"Pull Request \uac00\uc774\ub4dc\ub77c\uc778"},{"location":"forgedev/prguidelines/#_1","text":"\uac04\ub2e8\ud558\uac8c \ub9d0\ud574\uc11c, \ud3ec\uc9c0\ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc704\uc5d0 \ucd94\uac00\ub418\ub294 \ubaa8\ub4dc \ud638\ud658\uc131 \ub808\uc774\uc5b4\uc785\ub2c8\ub2e4. \uc61b\ub0a0\uc5d0 \ub9cc\ub4e4\uc5b4\uc9c4 \ubaa8\ub4dc\ub4e4\uc740 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \ucf54\ub4dc\ub97c (\ub9c8\uce58 coremod \ub4e4 \ucc98\ub7fc) \uc9c1\uc811 \uc218\uc815\ud558\uc600\uc9c0\ub9cc, (\ub9c8\uce58 coremod \ub4e4 \ucc98\ub7fc) \uac19\uc740 \ucf54\ub4dc\ub97c \uc218\uc815\ud558\ub824\uace0 \ud560 \ub54c\ub9c8\ub2e4 \uc11c\ub85c \ucda9\ub3cc\ud558\uc600\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\uc640 \uac19\uc740 \ud638\ud658\uc131 \ub808\uc774\uc5b4\ub97c \uc774\uc6a9\ud568\uc73c\ub85c\uc368, \ucf54\ub4dc \uc218\uc815\uc744 \uc911\uc559\ud654\ud558\uace0 \ucda9\ub3cc\uc744 \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \ud3ec\uc9c0\ub294 \ubaa8\ub4dc\ub4e4\uc5d0\uc11c \uc790\uc8fc \uc774\uc6a9\ub418\ub294 \uae30\ub2a5\uc778 \ub808\uc9c0\uc2a4\ud2b8\ub9ac, \uce90\ud328\ube4c\ub9ac\ud2f0\ub4f1 \ubaa8\ub4dc\ub07c\ub9ac \ud638\ud658\uc131\uc744 \uac1c\uc120\ud558\uae30 \uc704\ud55c \uae30\ub2a5\ub4e4 \ub610\ud55c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc88b\uc740 Pull Request \ub97c \ub9cc\ub4e4\uae30 \uc704\ud574\uc120 \ud3ec\uc9c0\uac00 \uc800\uc218\uc900\uc5d0\uc11c \uc5b4\ub5bb\uac8c \ub3d9\uc791\ud558\ub294\uc9c0 \uc544\uc154\uc57c \ud569\ub2c8\ub2e4. \ud3ec\uc9c0\ub294 \ud06c\uac8c 2\uac00\uc9c0 \ucf54\ub4dc\ub85c \uad6c\uc131\ub418\ub294\ub370: \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud328\uce58, \uadf8\ub9ac\uace0 \ud3ec\uc9c0 \ucf54\ub4dc \uc785\ub2c8\ub2e4.","title":"\ud3ec\uc9c0\uac00 \uc815\ud655\ud788 \ubb34\uc5c7\uc778\uac00\uc694?"},{"location":"forgedev/prguidelines/#_2","text":"\ud328\uce58\ub294 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc18c\uc2a4 \ucf54\ub4dc\uc5d0 \uc9c1\uc811 \uc801\uc6a9\ub418\ub294 \uc218\uc815 \ubaa9\ub85d\uc785\ub2c8\ub2e4. \ucd5c\uc18c\ud55c\uc73c\ub85c \uc0ac\uc6a9\ud558\uc2dc\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ucf54\ub4dc\uac00 \ubc14\ub014 \ub54c\ub9c8\ub2e4 \ubaa8\ub4e0 \ud3ec\uc9c0 \ud328\uce58\ub4e4\uc740 \uc0c8 \ucf54\ub4dc\uc5d0\uc11c \uc791\ub3d9\ud558\ub3c4\ub85d \uc870\uc2ec\uc2a4\ub7ec\uc6b4 \uc810\uac80 \uacfc\uc815\uc744 \uac70\uccd0\uc57c\ub9cc \ud569\ub2c8\ub2e4. \ub2e4\uc2dc \ub9d0\ud574\uc11c \uae30\uc874 \ucf54\ub4dc\ub97c \ub9ce\uc774 \ubcc0\uacbd\ud558\ub294 \ud070 \ud328\uce58\ub4e4\uc740 \uc720\uc9c0\ubcf4\uc218\uac00 \ud798\ub4e4\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4, \uadf8\ub798\uc11c \ud3ec\uc9c0\ub294 \ud328\uce58\ub97c \ucd5c\uc18c\ud55c\uc73c\ub85c \uc0ac\uc6a9\ud558\ub824\uace0 \ud569\ub2c8\ub2e4. \uadf8\ub798\uc11c \ub9ac\ubdf0\ub97c \uc9c4\ud589\ud560 \ub54c\ub294 \ucd94\uac00\ub418\ub294 \uae30\ub2a5\uc774 \uc758\ub3c4\ub300\ub85c \uc791\ub3d9\ud558\ub294 \uac83 \ubfd0 \uc544\ub2c8\ub77c \ud328\uce58\uc758 \ud06c\uae30\ub610\ud55c \uc911\uc694\ud558\uac8c \ubd05\ub2c8\ub2e4. \ud328\uce58\ub97c \ucd5c\uc18c\ud654\ud558\ub294\ub370\uc5d0\ub294 \ub9ce\uc740 \ubc29\ubc95\uc774 \uc788\uc73c\uba70 \ub9ac\ubdf0 \uacfc\uc815\uc744 \uac70\uce58\uba70 \ub354 \uac1c\uc120\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0 \ud328\uce58\ub4e4\uc740 \ub300\uac1c \ud6c4\ud0b9\uc774\ub098 \uc774\ubca4\ud2b8 \ubc29\uc1a1\uc744 \uc704\ud55c \ud55c\uc904\uc9dc\ub9ac \ud328\uce58\ub4e4\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4, \uadf8\ub9ac\uace0 \uc774\ubca4\ud2b8\uc758 \uacb0\uacfc\ub294 \uc774\ud6c4\uc5d0 \ub530\ub77c\ubd99\ub294 \ucf54\ub4dc\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ub300\ub2e4\uc218\uc758 \ucf54\ub4dc\uac00 \ud328\uce58 \ubc16\uc5d0 \uc874\uc7ac\ud558\ub3c4\ub85d \ud558\uc5ec \ud328\uce58\uac00 \ub354 \uc791\uc544\uc9c0\uace0 \ub2e8\uc21c\ud574\uc9c8 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \ud328\uce58\ub97c \ub9cc\ub4dc\ub294 \uac83\uc5d0 \ub300\ud574 \ub354 \uc790\uc138\ud788 \uc54c\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74 \uc601\ubb38 \uc704\ud0a4\ub97c \ucc38\uace0\ud558\uc138\uc694 .","title":"\ud328\uce58"},{"location":"forgedev/prguidelines/#_3","text":"\ud3ec\uc9c0 \ucf54\ub4dc\ub294 Java \ub85c \uc791\uc131\ub41c \ud3c9\ubc94\ud55c \ucf54\ub4dc\uc785\ub2c8\ub2e4. \uc774\ubca4\ud2b8 \ucf54\ub4dc, \ud638\ud658\uc131 \uae30\ub2a5\uacfc \uac19\uc774 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ucf54\ub4dc\ub97c \uc9c1\uc811\uc801\uc73c\ub85c \uc218\uc815\ud558\uc9c0 \uc54a\ub294 \ubaa8\ub4e0 \uac83\uc774 \ud574\ub2f9\ub429\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uac00 \uc5c5\ub370\uc774\ud2b8\ub420 \ub54c \ud3ec\uc9c0 \ucf54\ub4dc \ub610\ud55c \uc5c5\ub370\uc774\ud2b8\uac00 \ub418\uc5b4\uc57c \ud558\uc9c0\ub9cc, \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc640 \uc9c1\uc811\uc801\uc73c\ub85c \uc5f0\uad00\ub418\uc5b4\uc788\uc9c0 \uc54a\uc544 \uc720\uc9c0\ubcf4\uc218\ud558\uae30\uac00 \ub354 \uc27d\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0 \ucf54\ub4dc\ub294 \ud328\uce58\uc640 \ub2e4\ub974\uac8c \uc790\uccb4\uc801\uc73c\ub85c \uc874\uc7ac\ud558\uae30\uc5d0 \ud06c\uae30 \uc81c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \uadf8\ub798\uc11c \ub9ac\ubdf0\ub97c \uc9c4\ud589\ud560 \ub54c\ub294 \ucd94\uac00\ub418\ub294 \uae30\ub2a5\uc774 \uc758\ub3c4\ub300\ub85c \uc791\ub3d9\ud558\ub294 \uac83 \ubfd0 \uc544\ub2c8\ub77c \ud3ec\ub9e4\ud305\uacfc Javadoc \uacfc \uac19\uc740 \uac00\ub3c5\uc131\ub610\ud55c \uc911\uc694\ud558\uac8c \ubd05\ub2c8\ub2e4.","title":"\ud3ec\uc9c0 \ucf54\ub4dc"},{"location":"forgedev/prguidelines/#_4","text":"\ubaa8\ub4e0 Pull Request \ub4e4\uc740 \uc774\uac83\uc774 \uc65c \ud544\uc694\ud55c\uc9c0 \uc815\ub2f9\ud55c \uc0ac\uc720\uac00 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ud3ec\uc9c0\uc5d0 \ucd94\uac00\ub418\ub294 \ubaa8\ub4e0 \ucf54\ub4dc\ub4e4\uc740 \uc720\uc9c0\ubcf4\uc218\uac00 \ub418\uc5b4\uc57c \ud558\uace0, \ucf54\ub4dc\uac00 \ub9ce\uc744 \uc218\ub85d \uc7a0\uc7ac\uc801 \ubc84\uadf8\ub610\ud55c \ub9ce\uc544\uc9c0\uae30\uc5d0 \ucf54\ub4dc \ucd94\uac00\uc5d0\ub294 \ub298 \uc815\ub2f9\ud55c \uc0ac\uc720\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. Pull Request \ub97c \uc791\uc131\ud558\uba70 \uc790\uc8fc \ud558\ub294 \uc2e4\uc218\uc911 \ud558\ub098\ub294 \uc124\uba85\uc774 \ubd80\uc871\ud558\uac70\ub098 \ud65c\uc6a9 \uc608\uc81c\uac00 \ucda9\ubd84\ud788 \uba85\ud655\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uc785\ub2c8\ub2e4. \uc774\ub294 \ub9ac\ubdf0 \uc9c4\ud589 \uc18d\ub3c4\ub97c \ub2a6\ucd9c \ubfd0\uc785\ub2c8\ub2e4. Pull Request \ub97c \uba85\ud655\ud788 \uc124\uba85\ud558\ub294 \uac83\ub3c4 \uc88b\uc9c0\ub9cc, \ud574\ub2f9 \uae30\ub2a5\uc744 \uc5b4\ub5bb\uac8c \uc0ac\uc6a9\ud560 \uac83\uc778\uc9c0\ub3c4 \ubc1d\ud600\uc8fc\uc138\uc694. \uac00\ub054 \ub354 \ub098\uc740 \ub2e4\ub978 \ubc29\ubc95\uc774 \uc788\uac70\ub098, Pull Request \uc5c6\uc774\ub3c4 \ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7f0 \uac00\ub2a5\uc131\ub4e4\uc744 \ubc30\uc81c\ud558\uae30 \uc804\uae4c\uc9c4 Pull Request \uac00 \ubc1b\uc544\ub4e4\uc5ec\uc9c0\uc9c0 \uc54a\uc744 \uac83\uc785\ub2c8\ub2e4.","title":"\uc801\uc808\ud55c \uc124\uba85\uc774 \ud544\uc694\ud569\ub2c8\ub2e4"},{"location":"forgedev/prguidelines/#_5","text":"\uc81c\ucd9c\ub418\ub294 Pull Request \uc758 \ucf54\ub4dc\ub294 \uc815\uc0c1\uc801\uc73c\ub85c \uc791\ub3d9\ud574\uc57c \ud558\uba70, \ub9ac\ubdf0\uc5b4\ub4e4\uc5d0\uac8c \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud55c\ub2e4\uace0 \uc124\ub4dd\ud558\ub294 \uac83\uc740 \ub2f9\uc2e0 \ubaab\uc785\ub2c8\ub2e4. \uac00\uc7a5 \ud6a8\uacfc\uc801\uc73c\ub85c \uc774\ub97c \ubcf4\uc5ec\uc8fc\ub294 \ubc29\ubc95\uc740 \uc608\uc81c \ubaa8\ub4dc \ub610\ub294 JUnit \ud14c\uc2a4\ud2b8\ub97c \ucd94\uac00\ud558\uc5ec \uc758\ub3c4\ud55c\ub300\ub85c \ub3d9\uc791\ud568\uc744 \uc99d\uba85\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ud3ec\uc9c0 \uac1c\ubc1c \ud658\uacbd\uc744 \uc124\uc815\ud558\uace0 \uc608\uc81c \ubaa8\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ubc29\ubc95\uc740 \uc774 \uac00\uc774\ub4dc \ub97c \ucc38\uace0\ud558\uc5ec \uc8fc\uc138\uc694.","title":"\uc5b4\ub5bb\uac8c \ub3d9\uc791\ud558\ub294\uc9c0 \ubcf4\uc5ec\uc8fc\uc138\uc694"},{"location":"forgedev/prguidelines/#breaking-changes","text":"\ud3ec\uc9c0\ub294 \ub2e4\ub978 \ubaa8\ub4dc\ub4e4\uac04\uc758 \ud638\ud658\uc131\uc744 \uae68\ud2b8\ub9ac\ub294 \uc5c5\ub370\uc774\ud2b8\ub97c \ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \ub9d0\ud574\uc11c, \uc81c\ucd9c\ub418\ub294 \ubaa8\ub4e0 Pull Request \ub4e4\uc740 \uc774\uc804 \ud3ec\uc9c0 \ubc84\uc804\ub4e4\uacfc \ud638\ud658\ub418\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4. \uc774\uc804 \ud3ec\uc9c0 \ubc84\uc804\ub4e4\uacfc\uc758 \ud638\ud658\uc131\uc744 \uae68\ud2b8\ub9ac\ub294 \uc5c5\ub370\uc774\ud2b8\ub97c Breaking Change \ub77c\uace0 \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc5c5\ub370\uc774\ud2b8\ub97c \ud558\ub294 \uc608\uc678 \uc0c1\ud669\ub4e4\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: \uc0c8\ub85c\uc6b4 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8 \ud560 \ub54c, \uc5b4\ucc28\ud53c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uac00 \uc5c5\ub370\uc774\ud2b8\ub418\uba70 \uc774\uc804 \ubc84\uc804\uacfc \ud638\ud658\uc774 \ub418\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uae34\uae09 \uc0c1\ud669\uc774\ub77c\uc11c \uc5b4\uca54 \uc218 \uc5c6\uc744 \ub54c, \ud558\uc9c0\ub9cc \uc774\ub7f0 \uc77c\uc740 \ub9e4\uc6b0 \ub4dc\ubb3c\uac8c \uc77c\uc5b4\ub098\uba70 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubaa8\ub4dc \ucee4\ubba4\ub2c8\ud2f0\uc5d0\uac8c \uc885\uc18d\uc131 \ubb38\uc81c\ub97c \ub5a0\uc549\uae30\uac8c \ub429\ub2c8\ub2e4. \uc774\ub7f0 \uc608\uc678 \uc0c1\ud669\ub4e4 \ub9d0\uace0\ub294 Breaking Change \ub97c \ub2f4\uace0 \uc788\ub294 Pull Request \ub294 \ubc1b\uc544\ub4e4\uc5ec\uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ubb34\uc870\uac74 \ud638\ud658\uc131\uc744 \uc720\uc9c0\ud558\uac70\ub098, \ub2e4\uc74c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc5c5\ub370\uc774\ud2b8\uae4c\uc9c0 \uae30\ub2e4\ub824\uc57c \ud569\ub2c8\ub2e4.","title":"\ud3ec\uc9c0\uc640 Breaking Changes"},{"location":"forgedev/prguidelines/#_6","text":"Pull Request \ub97c \uc81c\ucd9c\ud560 \ub550 \ub9ac\ubdf0 \uacfc\uc815\uc744 \uac70\uce58\uba70 \uc5ec\ub7ec\ubc88 \uc218\uc815\uc774 \uc77c\uc5b4\ub098\uac8c \ub429\ub2c8\ub2e4. \ub9ac\ubdf0 \uacfc\uc815\uc740 \ub2f9\uc2e0\uc5d0 \ub300\ud55c \uc2ec\ud310\uc774 \uc544\ub2c8\uba70, \uc2e4\uc218\ub294 \ub204\uad6c\ub098 \ud569\ub2c8\ub2e4. \uadf8\ub798\uc11c \ud611\uc5c5\uc744 \ud558\ub294 \uac83\uc774\uc9c0\uc694. \ubd80\uc815\uc801\uc778 \uc751\ub2f5\uc740 \ub204\uad6c\uc5d0\uac8c\ub3c4 \ub3c4\uc6c0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Pull Request \ub9ac\ubdf0 \uacfc\uc815\uc744 \uc911\ub2e8\ud558\uace0 coremod \ub97c \ub300\uc2e0 \uc791\uc131\ud558\uaca0\ub2e4\uace0 \ud558\ub294 \uac83\uc740 \uc5f0\ub958\ub41c \uc774\ub4e4\uc758 \ub9c8\uc74c\uc744 \uc0c1\ud558\uac8c \ud560 \ubfd0 \uc544\ub2c8\ub77c \ubaa8\ub4dc \uac1c\ubc1c \uc0dd\ud0dc\uacc4\ub97c \uc545\ud654\uc2dc\ud0b5\ub2c8\ub2e4. \ub9ac\ubdf0\uc5b4\ub4e4\uc774 \uc88b\uc740 \uc758\ub3c4\ub85c \ucc38\uc5ec\ud558\uace0 \uc788\uc74c\uc744 \ubbff\uace0 \uac1c\uc778\uc801\uc73c\ub85c \ubc1b\uc544\ub4e4\uc774\uc9c0 \uc54a\ub294 \uac83\uc774 \uc911\uc694\ud568\uc744 \uc219\uc9c0\ud574 \uc8fc\uc138\uc694.","title":"\uc778\ub0b4\uc2ec\uc744 \uac00\uc9c0\uace0 \uce5c\uc808\ud558\uac8c \ub300\ud574\uc8fc\uc138\uc694"},{"location":"forgedev/prguidelines/#_7","text":"\uc800\ud76c\uc758 \ub290\ub9ac\uace0 \uae50\uae50\ud55c \ub9ac\ubdf0 \uacfc\uc815\uc744 \uc218\uc6a9\ud558\uc2e0\ub2e4\uba74 \uc800\ud76c\ub610\ud55c \ub2f9\uc2e0\uc758 \uad00\uc810\uc5d0\uc11c \ubb38\uc81c\ub97c \ubc14\ub77c\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. \ub9ac\ubdf0 \uacfc\uc815\uc18d\uc5d0\uc11c \ubaa8\ub450\uc758 \uc190\uc744 \uac70\uce5c Pull Request \ub294 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ucd94\uac00\ub420\uc9c0 \uc548\ub420\uc9c0\ub97c \ucd5c\uc885\uc801\uc73c\ub85c \uacb0\uc815\ud558\uc2dc\ub294 Lex \uc528\uc5d0 \uc758\ud55c \ucd5c\uc885 \ub9ac\ubdf0\ub97c \uac70\uce58\uac8c \ub429\ub2c8\ub2e4.","title":"\ub9ac\ubdf0"},{"location":"gameeffects/particles/","text":"\ud30c\ud2f0\ud074 \ud30c\ud2f0\ud074\uc740 \uac8c\uc784\uc758 \uc2dc\uac01\uc801 \ud6a8\uacfc \uc911 \ud558\ub098\ub85c \ubab0\uc785\uac10\uc744 \uc99d\uc9c4\ud558\ub294 \ub370 \uc774\uc6a9\ub429\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ud30c\ud2f0\ud074\uc740 \uc720\uc6a9\ud55c \ub9cc\ud07c \uc0ac\uc6a9\ud558\uc2e4 \ub54c \uc8fc\uc758\ub97c \uae30\uc6b8\uc774\uc154\uc57c \ud569\ub2c8\ub2e4. \ud30c\ud2f0\ud074 \ub9cc\ub4e4\uae30 \ud30c\ud2f0\ud074\uc740 \uc720\uc800\uc5d0\uac8c \ubcf4\uc5ec\uc8fc\uae30 \uc704\ud55c \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ucf54\ub4dc\uc640 \uc11c\ubc84\uc5d0\uc11c \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654 \ubc0f \uc870\ud68c\ud558\uae30 \uc704\ud55c \uacf5\uc6a9 \ucf54\ub4dc\ub85c \ub098\ub204\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub798\uc2a4 \uc0ac\uc774\ub4dc \uc124\uba85 ParticleType \uc591\ucabd \uc591\uce21\uc5d0\uc11c \ud30c\ud2f0\ud074\uc758 \uc815\uc758\ub97c \ucc38\uc870\ud560 \ub54c \uc0ac\uc6a9\ub418\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uac1d\uccb4 ParticleOptions \uc591\ucabd \ud30c\ud2f0\ud074\uc758 \uc815\ubcf4\ub97c \ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uacfc \ub3d9\uae30\ud654\ud560 \ub54c \uc0ac\uc6a9\ub418\ub294 \ub370\uc774\ud130 \uafb8\ub7ec\ubbf8 ParticleProvider \ud074\ub77c\uc774\uc5b8\ud2b8 ParticleType \uc5d0\uc11c \ub4f1\ub85d\ud55c ParticleOptions \ub85c Particle \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4e4\uc5b4\uc8fc\ub294 \ud329\ud1a0\ub9ac. Particle \ud074\ub77c\uc774\uc5b8\ud2b8 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc720\uc800\uc5d0\uac8c \ud30c\ud2f0\ud074\uc744 \ubcf4\uc5ec\uc8fc\uae30 \uc704\ud55c \ub80c\ub354\ub9c1 \ucf54\ub4dc. ParticleType ParticleType \uc740 \ud30c\ud2f0\ud074\uc758 \uc885\ub958\ub97c \uc815\uc758\ud558\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uac1d\uccb4\ub85c, \uc591\uce21 \uc0ac\uc774\ub4dc\uc5d0 \ud30c\ud2f0\ud074\uc758 \uc815\uc758\uc5d0 \ub300\ud55c \ucc38\uc870\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uac01 ParticleType \uc740 \ub450 \uac1c\uc758 \ud30c\ub77c\ubbf8\ud130\uac00 \uc788\ub294\ub370, \ud30c\ud2f0\ud074\uc744 \uac70\ub9ac\uc5d0 \uc0c1\uad00\uc5c6\uc774 \ub80c\ub354\ub9c1\ud558\ub3c4\ub85d \ud558\ub294 overrideLimiter , \uadf8\ub9ac\uace0 \uc11c\ubc84\uc5d0\uc11c \ubcf4\ub0b8 ParticleOptions \ub97c \uc77d\ub294 ParticleOptions$Deserializer \uac00 \uc788\uc2b5\ub2c8\ub2e4. ParticleType \uc740 \ucd94\uc0c1 \ud074\ub798\uc2a4\uc774\uace0, #codec \ud568\uc218\ub97c \uc815\uc758\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 \ud30c\ud2f0\ud074\uc758 ParticleOptions \ub97c \uc778\ucf54\ub529\ud558\uace0 \ub514\ucf54\ub529\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Note ParticleType#codec \uc740 \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \ubc14\uc774\uc634\uc758 codec \uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc778 \uc0c1\ud669\uc5d0\uc120 \ud30c\ud2f0\ud074\ub9cc\uc758 \ub370\uc774\ud130\ub97c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc804\uc1a1\ud560 \ud544\uc694\uac00 \uc5c6\uc744 \uac81\ub2c8\ub2e4. \uc774\ub7f4 \ub550 \ub300\uc2e0 SimpleParticleType \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4dc\uc2dc\ub294 \uac83\uc744 \ucd94\ucc9c\ub4dc\ub9bd\ub2c8\ub2e4: ParticleType \uacfc ParticleOptions \uc758 \uad6c\ud604 \uc911 \ud558\ub098\ub85c \ud30c\ud2f0\ud074 \uc885\ub958 \uc815\ubcf4 \uc774\uc678\uc758 \ub370\uc774\ud130\ub97c \uc804\uc1a1\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \ud30c\ud2f0\ud074\ub4e4\uc740 \ub808\ub4dc\uc2a4\ud1a4 \uac00\ub8e8 \ub4f1\uc744 \uc81c\uc678\ud558\uace4 SimpleParticleType \uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. Important \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \ucc38\uc870\ud560 \ud30c\ud2f0\ud074\uc740 ParticleType \uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 \uad6c\ud604\ud560 \uc218 \uc788\uc9c0\ub9cc, \uc774\ub7f0 \uacbd\uc6b0 \uc9c1\uc811 ParticleEngine \uc744 \uc751\uc6a9\ud558\uc5ec \uc9c1\uc811 \ub80c\ub354\ub9c1\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. ParticleOptions ParticleOptions \ub294 \uac01 \ud30c\ud2f0\ud074\uc5d0 \ub4e4\uc5b4\uac00\ub294 \ub370\uc774\ud130\ub97c \ub2f4\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc11c\ubc84\uc5d0\uc11c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ud30c\ud2f0\ud074\uc758 \uc815\ubcf4\ub97c \ubcf4\ub0bc \ub54c\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ud30c\ud2f0\ud074\uc744 \uc0dd\uc131\ud558\ub294 \ubaa8\ub4e0 \uba54\uc11c\ub4dc\ub4e4\uc740 ParticleOptions \ub97c \uc778\uc790\ub85c \ubc1b\uc544 \uc0dd\uc131\ud560 \ud30c\ud2f0\ud074\uc758 \uc885\ub958\uc640 \ub370\uc774\ud130\ub97c \ubc1b\uc544\uc635\ub2c8\ub2e4. ParticleOptions \ub294 \uba54\uc11c\ub4dc \uc138 \uac1c\ub85c \ubd84\uc11d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: \uba54\uc11c\ub4dc \uc124\uba85 getType \ud30c\ud2f0\ud074\uc758 \uc885\ub958( ParticleType )\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. writeToNetwork \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc804\uc1a1\ud560 \ud30c\ud2f0\ud074 \ub370\uc774\ud130\ub97c \ubc84\ud37c\uc5d0 \uc791\uc131\ud569\ub2c8\ub2e4. writeToString String \uc5d0 \ud30c\ud2f0\ud074 \ub370\uc774\ud130\ub97c \uc791\uc131\ud569\ub2c8\ub2e4. ParticleOptions \uc758 \uc778\uc2a4\ud134\uc2a4\ub294 \ub294 \ud544\uc694\ud560 \ub54c \ub9c8\ub2e4 \uc0dd\uc131\ud558\uc154\ub3c4 \ub418\uace0, \uc544\ub2c8\uba74 SimpleParticleType \ucc98\ub7fc singleton \ud328\ud134\uc744 \ub530\ub974\uc154\ub3c4 \ub429\ub2c8\ub2e4. ParticleOptions$Deserializer \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c ParticleOptions \ub97c \ud574\uc11d\ud558\uac70\ub098, \uc791\uc131 \uc911\uc778 \ucee4\ub9e8\ub4dc\uc758 \ud30c\ud2f0\ud074\uc758 \ub370\uc774\ud130\ub97c \ucc38\uc870\ud558\uae30 \uc704\ud574\uc120 \ud30c\ud2f0\ud074\uc758 \ub370\uc774\ud130\ub97c \ubb34\uc870\uac74 ParticleOptions$Deserializer \ub97c \uc774\uc6a9\ud574 \ud574\uc11d\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. ParticleOptions$Deserializer \uc5d0 \uc815\uc758\ub41c \uac01 \uba54\uc11c\ub4dc\ub4e4\uc740 ParticleOptions \uc758 \uc778\ucf54\ub529 \uba54\uc11c\ub4dc\ub4e4\uacfc \uc9dd\uc744 \uc774\ub8f9\ub2c8\ub2e4: \uba54\uc11c\ub4dc ParticleOptions \uc758 \uc778\ucf54\ub354 \uc124\uba85 fromCommand writeToString \ubb38\uc790\uc5f4\uc5d0 \uc791\uc131\ub41c \ud30c\ud2f0\ud074 \ub370\uc774\ud130\ub97c \ud574\ub3c5\ud569\ub2c8\ub2e4, \uc77c\ubc18\uc801\uc73c\ub85c \uba85\ub839\uc5b4\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. fromNetwork writeToNetwork \ubc84\ud37c\uc5d0 \uc791\uc131\ub41c \ud30c\ud2f0\ud074 \ub370\uc774\ud130\ub97c \ud574\ub3c5\ud569\ub2c8\ub2e4. Deserializer \ub294 ParticleType \uc758 \uc0dd\uc131\uc790\uc758 \uc778\uc790\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Particle Particle \uc740 \uc804\uc1a1\ub41c \ub370\uc774\ud130\ub97c \ud65c\uc6a9\ud574 \ud30c\ud2f0\ud074\uc744 \ud654\uba74\uc5d0 \uadf8\ub9ac\ub294\ub370 \ud544\uc694\ud55c \ub80c\ub354\ub9c1 \ucf54\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc0c8 Particle \uc744 \uc815\uc758\ud558\uae30 \uc704\ud574\uc120 \uc544\ub798 \ub450 \uba54\uc11c\ub4dc\ub4e4\uc744 \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4: \uba54\uc11c\ub4dc \uc124\uba85 render \ud30c\ud2f0\ud074\uc744 \ud654\uba74\uc5d0 \uadf8\ub9bd\ub2c8\ub2e4. getRenderType \ud30c\ud2f0\ud074\uc744 \uadf8\ub9b4 \ub54c \uc0ac\uc6a9\ud560 RenderType \uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uadf8\uc800 \ud30c\ud2f0\ud074\uc758 \ud14d\uc2a4\uccd0\ub97c \uadf8\ub9ac\uae30\ub9cc \ud558\uba74 \ub418\ub294 Particle \ub4e4\uc740 TextureSheetParticle \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. #getRenderType \uc740 \uc5ec\uc804\ud788 \uc7ac\uc815\uc758\ud574\uc57c \ud558\uc9c0\ub9cc, #render \ub294 \uc9c0\uc815\ub41c \ud14d\uc2a4\uccd0 \uc2a4\ud504\ub77c\uc774\ud2b8\ub97c \uc54c\ub9de\uc740 \uc704\uce58\uc5d0 \uadf8\ub9ac\ub3c4\ub85d \ubbf8\ub9ac \uad6c\ud604\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. ParticleRenderType ParticleRenderType \uc740 RenderType \uacfc \uc720\uc0ac\ud558\uac8c, \uc874\uc7ac\ud558\ub294 \ubaa8\ub4e0 \ud30c\ud2f0\ud074\uc758 \ub80c\ub354\ub9c1 \uc0ac\uc804 \uc124\uc815\uacfc \uc815\ub9ac\ub97c \ub2f4\ub2f9\ud569\ub2c8\ub2e4. \uc774\ud6c4 Tesselator \ub97c \uac70\uccd0 \ud654\uba74\uc5d0 \ud55c \ubc88\uc5d0 \uc804\uc1a1\ud569\ub2c8\ub2e4. \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \uc544\ub798 \uc5ec\uc12f \uac1c\uc758 ParticleRenderType \uc744 \uc815\uc758\ud569\ub2c8\ub2e4: Render Type \uc124\uba85 TERRAIN_SHEET \ud14d\uc2a4\uccd0\uac00 \ube14\ub85d\uc778 \ud30c\ud2f0\ud074\uc744 \ub80c\ub354\ub9c1\ud560 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. PARTICLE_SHEET_OPAQUE \ud14d\uc2a4\uccd0\uac00 \ubd88\ud22c\uba85\ud55c \ud30c\ud2f0\ud074\uc744 \uadf8\ub9b4 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. PARTICLE_SHEET_TRANSLUCENT \ud22c\uba85\ub3c4\uac00 \uc788\ub294 \ud14d\uc2a4\uccd0\ub97c \uc0ac\uc6a9\ud558\ub294 \ud30c\ud2f0\ud074\uc744 \uadf8\ub9b4 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. PARTICLE_SHEET_LIT PARTICLE_SHEET_OPAQUE \uc640 \ub3d9\uc77c\ud558\uc9c0\ub9cc \ud30c\ud2f0\ud074 \uc804\uc6a9 \uc250\uc774\ub354\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. CUSTOM \ube14\ub80c\ub529\uacfc \uae4a\uc774 \ub9c8\uc2a4\ud06c\ub294 \uc0ac\uc804 \uc124\uc815\ud574 \uc8fc\uc9c0\ub9cc \uadf8 \uc678\uc5d0\ub294 Particle#render \ub97c \ud1b5\ud574 \uad6c\ud604\ud574 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. NO_RENDER \uc544\uc608 \ub80c\ub354\ub9c1\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc0c8\ub85c\uc6b4 \uc885\ub958\uc758 ParticleRenderType \uc744 \uad6c\ud604\ud558\ub294 \uac83\uc740 \uc5ec\ub7ec\ubd84\ub4e4\uc758 \uacfc\uc81c\ub85c \ub0a8\uaca8\ub4dc\ub9ac\uc8e0. ;) ParticleProvider Particle \uc758 \uc778\uc2a4\ud134\uc2a4\ub294 \uc77c\ubc18\uc801\uc73c\ub85c ParticleProvider \ub97c \ud1b5\ud574 \uc0dd\uc131\ub429\ub2c8\ub2e4. \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub294 \uba54\uc11c\ub4dc #createParticle \uc744 \uc815\uc758\ud558\uc5ec ParticleOptions , \ub808\ubca8, \uc704\uce58, \uadf8\ub9ac\uace0 \uc18d\ub3c4\ub97c \uc774\uc6a9\ud574 Particle \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4ed\ub2c8\ub2e4. Particle \uc740 \ud2b9\uc815 \ud30c\ud2f0\ud074\uc758 \uc885\ub958\uc5d0 \uc885\uc18d\ub41c \uac83\uc774 \uc544\ub2c8\uae30 \ub54c\ubb38\uc5d0 \uc6d0\ud558\uc2e0\ub2e4\uba74 \uc7ac\uc0ac\uc6a9\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. ParticleProvider \ub294 \ubb34\uc870\uac74 \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub418\ub294 ParticleFactoryRegisterEvent \uac00 \ubc29\uc1a1\ub420 \ub54c ParticleEngine#register(ParticleType, ParticleProvider) \ub97c \ud638\ucd9c\ud558\uc5ec \ub4f1\ub85d\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. Important ParticleFactoryRegisterEvent \ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ucf54\ub4dc\uc785\ub2c8\ub2e4! \uadf8\ub807\uae30\uc5d0 DistExecutor \ub610\ub294 @EventBusSubscriber \ub97c \ud1b5\ud574 \ub4f1\ub85d\ud558\uc138\uc694! Important ParticleProvider \ub97c ParticleEngine#register(ParticleType, ParticleProvider) \ub97c \ud638\ucd9c\ud558\uc5ec \uc9c1\uc811 \ub4f1\ub85d\ud558\uc2dc\ub294 \uac83\uc740 \ud14d\uc2a4\uccd0\ub97c \ucd94\uac00\ud558\uc9c0 \uc54a\uc744 \ub54c \uc774\uc6a9\ud569\ub2c8\ub2e4. \ud14d\uc2a4\uccd0\ub97c \ucd94\uac00\ud558\uc2e0\ub2e4\uba74 \uc544\ub798 \uc139\uc158\uc744 \ucda9\ubd84\ud788 \uc219\uc9c0\ud558\uc2e0 \ud6c4 ParticleEngine#register(ParticleType, SpriteParticleRegistration) \uc744 \ub300\uc2e0 \ud638\ucd9c\ud558\uc138\uc694! ParticleDescription, SpriteSet, SpriteParticleRegistration PARTICLE_SHEET_OPAQUE , PARTICLE_SHEET_TRANSLUCENT , \uadf8\ub9ac\uace0 PARTICLE_SHEET_LIT \uc740 \uc704\uc5d0\uc11c \uae30\uc220\ud55c \ubc29\ubc95\uc73c\ub85c \ub4f1\ub85d\ud55c ParticleProvider \uc5d0\uc11c \uc4f0\ub294 \ud14d\uc2a4\uccd0\ub97c \uc774\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4, \uc65c\ub0d0\ud558\uba74 \uc14b \ubaa8\ub450 ParticleEngine \uc774 \ubd88\ub7ec\uc624\ub294 \uc2a4\ud504\ub77c\uc774\ud2b8\ub4e4\uc744 \ubc14\ub85c \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \uc0ac\uc6a9\ud558\uc2e4 \ud14d\uc2a4\uccd0\ub97c \ub530\ub85c \ub4f1\ub85d\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc5d0\uc11c\ub294 \uc624\uc9c1 TextureSheetParticle \ub9cc\uc774 \ud30c\ud2f0\ud074\uc6a9 \ud14d\uc2a4\uccd0\ub97c \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 \ub2f9\uc2e0\uaed8\uc11c \ub9cc\ub4dc\uc2dc\ub294 \ud30c\ud2f0\ud074\uc774 TextureSheetParticle \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\ub77c\uace0 \uac00\uc815\ud558\uaca0\uc2b5\ub2c8\ub2e4. \ud30c\ud2f0\ud074\uc5d0 \ud14d\uc2a4\uccd0\ub97c \ucd94\uac00\ud558\uae30 \uc704\ud574\uc120 assets/<modid>/particles \uc5d0 \uc0c8 JSON \ud30c\uc77c\uc744 \ucd94\uac00\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc740 ParticleDescription \uc73c\ub85c \ube44\uc9c1\ub82c\ud654 \ub429\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc758 \uc774\ub984\uc740 ParticleType \uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uacfc \ub3d9\uc77c\ud574\uc57c \ud569\ub2c8\ub2e4. \uac01 JSON \ud30c\uc77c\uc740 ResourceLocation \ub4e4\uc744 \ub2f4\uace0 \uc788\ub294 textures \ub77c\ub294 \uc774\ub984\uc758 \ubc30\uc5f4\uc744 \uc800\uc7a5\ud569\ub2c8\ub2e4. \uc774\ub54c, \uac01 ResourceLocation \ub4e4\uc740 \ud14d\uc2a4\uccd0 \uc774\ubbf8\uc9c0 \ud30c\uc77c assets/<modid>/textures/particle/<path>.png \ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4. { \"textures\": [ // \uac00\ub9ac\ud0a4\ub294 \ub300\uc0c1: // assets/mymod/textures/particle/particle_texture.png \"mymod:particle_texture\", // \uc5ec\uae30\uc11c \uc815\uc758\ud558\ub294 \ud14d\uc2a4\uccd0\ub4e4\uc740 \uadf8\ub9ac\ub294 \uc21c\uc11c\uc5d0 \ub530\ub77c \uc791\uc131\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. // particle_texture \ub97c \uba3c\uc800 \uadf8\ub9ac\uace0, \uadf8\ub2e4\uc74c particle_texture2, \uc774\ub7f0 \uc2dd\uc73c\ub85c\uc694 \"mymod:particle_texture2\" ] } TextureSheetParticle \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\uc5d0\uc11c \ud30c\ud2f0\ud074\uc758 \ud14d\uc2a4\uccd0\ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc120 SpriteSet , \ub610\ub294 SpriteSet \uc5d0\uc11c \uc5bb\uc740 TextureAtlasSprite \uc758 \ucc38\uc870\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. SpriteSet \uc740 \uac01 ParticleDescription \uc5d0\uc11c \ub4f1\ub85d\ud55c \ud14d\uc2a4\uccd0\ub4e4\uc758 \ub9ac\uc2a4\ud2b8\ub97c \ubcf4\uc720\ud569\ub2c8\ub2e4. SpriteSet \uc740 TextureAtlasSprite \ub97c \ubc18\ud658\ud558\ub294 \uba54\uc11c\ub4dc 2\uac1c\ub97c \uc815\uc758\ud558\ub294\ub370, \uccab \ubc88\uc9f8 \uba54\uc11c\ub4dc\ub294 \ub450 \uac1c\uc758 \uc815\uc218\ub97c \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ud14d\uc2a4\uccd0\uac00 \uc2dc\uac04\uc5d0 \ub530\ub77c \ubcc0\ud654\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uae30 \uc704\ud568\uc785\ub2c8\ub2e4. \ub450 \ubc88\uc9f8 \uba54\uc11c\ub4dc\ub294 \ubb34\uc791\uc704 \ud14d\uc2a4\uccd0\ub97c \ubc18\ud55c\ud558\ub294 \uac83\uc73c\ub85c, Random \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4. TextureSheetParticle \uc740 \uc778\uc790\ub85c \uc804\ub2ec\ub41c SpriteSet \uc5d0\uc11c \ubb34\uc791\uc704 \ud14d\uc2a4\uccd0\ub97c \uac00\uc838\uc640 \ubc18\ud658\ud558\ub294 #pickSprite \uc640, Particle \uc758 \ub098\uc774\uc640 \uc218\uba85\uc73c\ub85c \ud14d\uc2a4\uccd0\ub97c \uac00\uc838\uc640 \ubc18\ud658\ud558\ub294 #setSpriteFromAge \ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ud30c\ud2f0\ud074\uc758 \ud14d\uc2a4\uccd0\ub4e4\uc744 \ub4f1\ub85d\ud558\uae30 \uc704\ud574\uc120, SpriteParticleRegistration \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c ParticleEngine#register(ParticleType, SpriteParticleRegistration) \uc5d0 \uc804\ub2ec\ud558\uc5ec \ud638\ucd9c\ud574 \uc8fc\uc138\uc694. SpriteParticleRegistration \uc740 SpriteSet \uc744 \ubc1b\uc544 ParticleProvider \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4dc\ub294 \uba54\uc11c\ub4dc #create \ub97c \uc815\uc758\ud558\ub294 \ud568\uc218\ud615 \uc778\ud130\ud398\uc774\uc2a4 \uc785\ub2c8\ub2e4. \uc774\ub54c ParticleProvider \uc758 \ud558\uc704 \ud074\ub798\uc2a4\uc758 \uc0dd\uc131\uc790\uac00 SpriteSet \uc744 \uc778\uc790\ub85c \ubc1b\ub3c4\ub85d \ud55c \ub2e4\uc74c, #create \uba54\uc11c\ub4dc\uc5d0\uc11c \uc774\ub97c \uc804\ub2ec\ud558\uc5ec ParticleProvider \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4e4\uace0 \ubc18\ud658\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uac04\ub2e8\ud569\ub2c8\ub2e4. \ud30c\ud2f0\ud074 \uc18c\ud658\ud558\uae30 \ud30c\ud2f0\ud074\uc740 \uc0ac\uc774\ub4dc\uc5d0 \ub530\ub77c \uc18c\ud658\ud558\ub294 \ubc29\ubc95\uc5d0 \ucc28\uc774\uac00 \uc788\uc2b5\ub2c8\ub2e4. ClientLevel \uc740 #addParticle \ub610\ub294 (\uc5c4\uccad \uba40\ub9ac \ub098\uac00\ub3c4 \ubcf4\uc774\ub3c4\ub85d) #addAlwaysVisibleParticle \uc744, ServerLevel \uc740 #sendParticles \uc744 \ud638\ucd9c\ud558\uc5ec \ud30c\ud2f0\ud074\uc744 \uc18c\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ClientLevel \uc6a9 \uba54\uc11c\ub4dc\ub97c \uc11c\ubc84\uc5d0\uc11c \ud638\ucd9c\ud558\uba74 \uc544\ubb34\ub7f0 \uc77c\ub3c4 \uc77c\uc5b4\ub098\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"\ud30c\ud2f0\ud074"},{"location":"gameeffects/particles/#_1","text":"\ud30c\ud2f0\ud074\uc740 \uac8c\uc784\uc758 \uc2dc\uac01\uc801 \ud6a8\uacfc \uc911 \ud558\ub098\ub85c \ubab0\uc785\uac10\uc744 \uc99d\uc9c4\ud558\ub294 \ub370 \uc774\uc6a9\ub429\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ud30c\ud2f0\ud074\uc740 \uc720\uc6a9\ud55c \ub9cc\ud07c \uc0ac\uc6a9\ud558\uc2e4 \ub54c \uc8fc\uc758\ub97c \uae30\uc6b8\uc774\uc154\uc57c \ud569\ub2c8\ub2e4.","title":"\ud30c\ud2f0\ud074"},{"location":"gameeffects/particles/#_2","text":"\ud30c\ud2f0\ud074\uc740 \uc720\uc800\uc5d0\uac8c \ubcf4\uc5ec\uc8fc\uae30 \uc704\ud55c \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ucf54\ub4dc\uc640 \uc11c\ubc84\uc5d0\uc11c \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654 \ubc0f \uc870\ud68c\ud558\uae30 \uc704\ud55c \uacf5\uc6a9 \ucf54\ub4dc\ub85c \ub098\ub204\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub798\uc2a4 \uc0ac\uc774\ub4dc \uc124\uba85 ParticleType \uc591\ucabd \uc591\uce21\uc5d0\uc11c \ud30c\ud2f0\ud074\uc758 \uc815\uc758\ub97c \ucc38\uc870\ud560 \ub54c \uc0ac\uc6a9\ub418\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uac1d\uccb4 ParticleOptions \uc591\ucabd \ud30c\ud2f0\ud074\uc758 \uc815\ubcf4\ub97c \ud074\ub77c\uc774\uc5b8\ud2b8\ub4e4\uacfc \ub3d9\uae30\ud654\ud560 \ub54c \uc0ac\uc6a9\ub418\ub294 \ub370\uc774\ud130 \uafb8\ub7ec\ubbf8 ParticleProvider \ud074\ub77c\uc774\uc5b8\ud2b8 ParticleType \uc5d0\uc11c \ub4f1\ub85d\ud55c ParticleOptions \ub85c Particle \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4e4\uc5b4\uc8fc\ub294 \ud329\ud1a0\ub9ac. Particle \ud074\ub77c\uc774\uc5b8\ud2b8 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc720\uc800\uc5d0\uac8c \ud30c\ud2f0\ud074\uc744 \ubcf4\uc5ec\uc8fc\uae30 \uc704\ud55c \ub80c\ub354\ub9c1 \ucf54\ub4dc.","title":"\ud30c\ud2f0\ud074 \ub9cc\ub4e4\uae30"},{"location":"gameeffects/particles/#particletype","text":"ParticleType \uc740 \ud30c\ud2f0\ud074\uc758 \uc885\ub958\ub97c \uc815\uc758\ud558\ub294 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uac1d\uccb4\ub85c, \uc591\uce21 \uc0ac\uc774\ub4dc\uc5d0 \ud30c\ud2f0\ud074\uc758 \uc815\uc758\uc5d0 \ub300\ud55c \ucc38\uc870\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uac01 ParticleType \uc740 \ub450 \uac1c\uc758 \ud30c\ub77c\ubbf8\ud130\uac00 \uc788\ub294\ub370, \ud30c\ud2f0\ud074\uc744 \uac70\ub9ac\uc5d0 \uc0c1\uad00\uc5c6\uc774 \ub80c\ub354\ub9c1\ud558\ub3c4\ub85d \ud558\ub294 overrideLimiter , \uadf8\ub9ac\uace0 \uc11c\ubc84\uc5d0\uc11c \ubcf4\ub0b8 ParticleOptions \ub97c \uc77d\ub294 ParticleOptions$Deserializer \uac00 \uc788\uc2b5\ub2c8\ub2e4. ParticleType \uc740 \ucd94\uc0c1 \ud074\ub798\uc2a4\uc774\uace0, #codec \ud568\uc218\ub97c \uc815\uc758\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 \ud30c\ud2f0\ud074\uc758 ParticleOptions \ub97c \uc778\ucf54\ub529\ud558\uace0 \ub514\ucf54\ub529\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Note ParticleType#codec \uc740 \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \ubc14\uc774\uc634\uc758 codec \uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc778 \uc0c1\ud669\uc5d0\uc120 \ud30c\ud2f0\ud074\ub9cc\uc758 \ub370\uc774\ud130\ub97c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc804\uc1a1\ud560 \ud544\uc694\uac00 \uc5c6\uc744 \uac81\ub2c8\ub2e4. \uc774\ub7f4 \ub550 \ub300\uc2e0 SimpleParticleType \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4dc\uc2dc\ub294 \uac83\uc744 \ucd94\ucc9c\ub4dc\ub9bd\ub2c8\ub2e4: ParticleType \uacfc ParticleOptions \uc758 \uad6c\ud604 \uc911 \ud558\ub098\ub85c \ud30c\ud2f0\ud074 \uc885\ub958 \uc815\ubcf4 \uc774\uc678\uc758 \ub370\uc774\ud130\ub97c \uc804\uc1a1\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \ud30c\ud2f0\ud074\ub4e4\uc740 \ub808\ub4dc\uc2a4\ud1a4 \uac00\ub8e8 \ub4f1\uc744 \uc81c\uc678\ud558\uace4 SimpleParticleType \uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. Important \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \ucc38\uc870\ud560 \ud30c\ud2f0\ud074\uc740 ParticleType \uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 \uad6c\ud604\ud560 \uc218 \uc788\uc9c0\ub9cc, \uc774\ub7f0 \uacbd\uc6b0 \uc9c1\uc811 ParticleEngine \uc744 \uc751\uc6a9\ud558\uc5ec \uc9c1\uc811 \ub80c\ub354\ub9c1\ud558\uc154\uc57c \ud569\ub2c8\ub2e4.","title":"ParticleType"},{"location":"gameeffects/particles/#particleoptions","text":"ParticleOptions \ub294 \uac01 \ud30c\ud2f0\ud074\uc5d0 \ub4e4\uc5b4\uac00\ub294 \ub370\uc774\ud130\ub97c \ub2f4\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc11c\ubc84\uc5d0\uc11c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ud30c\ud2f0\ud074\uc758 \uc815\ubcf4\ub97c \ubcf4\ub0bc \ub54c\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ud30c\ud2f0\ud074\uc744 \uc0dd\uc131\ud558\ub294 \ubaa8\ub4e0 \uba54\uc11c\ub4dc\ub4e4\uc740 ParticleOptions \ub97c \uc778\uc790\ub85c \ubc1b\uc544 \uc0dd\uc131\ud560 \ud30c\ud2f0\ud074\uc758 \uc885\ub958\uc640 \ub370\uc774\ud130\ub97c \ubc1b\uc544\uc635\ub2c8\ub2e4. ParticleOptions \ub294 \uba54\uc11c\ub4dc \uc138 \uac1c\ub85c \ubd84\uc11d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: \uba54\uc11c\ub4dc \uc124\uba85 getType \ud30c\ud2f0\ud074\uc758 \uc885\ub958( ParticleType )\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. writeToNetwork \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc804\uc1a1\ud560 \ud30c\ud2f0\ud074 \ub370\uc774\ud130\ub97c \ubc84\ud37c\uc5d0 \uc791\uc131\ud569\ub2c8\ub2e4. writeToString String \uc5d0 \ud30c\ud2f0\ud074 \ub370\uc774\ud130\ub97c \uc791\uc131\ud569\ub2c8\ub2e4. ParticleOptions \uc758 \uc778\uc2a4\ud134\uc2a4\ub294 \ub294 \ud544\uc694\ud560 \ub54c \ub9c8\ub2e4 \uc0dd\uc131\ud558\uc154\ub3c4 \ub418\uace0, \uc544\ub2c8\uba74 SimpleParticleType \ucc98\ub7fc singleton \ud328\ud134\uc744 \ub530\ub974\uc154\ub3c4 \ub429\ub2c8\ub2e4.","title":"ParticleOptions"},{"location":"gameeffects/particles/#particleoptionsdeserializer","text":"\ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c ParticleOptions \ub97c \ud574\uc11d\ud558\uac70\ub098, \uc791\uc131 \uc911\uc778 \ucee4\ub9e8\ub4dc\uc758 \ud30c\ud2f0\ud074\uc758 \ub370\uc774\ud130\ub97c \ucc38\uc870\ud558\uae30 \uc704\ud574\uc120 \ud30c\ud2f0\ud074\uc758 \ub370\uc774\ud130\ub97c \ubb34\uc870\uac74 ParticleOptions$Deserializer \ub97c \uc774\uc6a9\ud574 \ud574\uc11d\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. ParticleOptions$Deserializer \uc5d0 \uc815\uc758\ub41c \uac01 \uba54\uc11c\ub4dc\ub4e4\uc740 ParticleOptions \uc758 \uc778\ucf54\ub529 \uba54\uc11c\ub4dc\ub4e4\uacfc \uc9dd\uc744 \uc774\ub8f9\ub2c8\ub2e4: \uba54\uc11c\ub4dc ParticleOptions \uc758 \uc778\ucf54\ub354 \uc124\uba85 fromCommand writeToString \ubb38\uc790\uc5f4\uc5d0 \uc791\uc131\ub41c \ud30c\ud2f0\ud074 \ub370\uc774\ud130\ub97c \ud574\ub3c5\ud569\ub2c8\ub2e4, \uc77c\ubc18\uc801\uc73c\ub85c \uba85\ub839\uc5b4\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. fromNetwork writeToNetwork \ubc84\ud37c\uc5d0 \uc791\uc131\ub41c \ud30c\ud2f0\ud074 \ub370\uc774\ud130\ub97c \ud574\ub3c5\ud569\ub2c8\ub2e4. Deserializer \ub294 ParticleType \uc758 \uc0dd\uc131\uc790\uc758 \uc778\uc790\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4.","title":"ParticleOptions$Deserializer"},{"location":"gameeffects/particles/#particle","text":"Particle \uc740 \uc804\uc1a1\ub41c \ub370\uc774\ud130\ub97c \ud65c\uc6a9\ud574 \ud30c\ud2f0\ud074\uc744 \ud654\uba74\uc5d0 \uadf8\ub9ac\ub294\ub370 \ud544\uc694\ud55c \ub80c\ub354\ub9c1 \ucf54\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc0c8 Particle \uc744 \uc815\uc758\ud558\uae30 \uc704\ud574\uc120 \uc544\ub798 \ub450 \uba54\uc11c\ub4dc\ub4e4\uc744 \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4: \uba54\uc11c\ub4dc \uc124\uba85 render \ud30c\ud2f0\ud074\uc744 \ud654\uba74\uc5d0 \uadf8\ub9bd\ub2c8\ub2e4. getRenderType \ud30c\ud2f0\ud074\uc744 \uadf8\ub9b4 \ub54c \uc0ac\uc6a9\ud560 RenderType \uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. \uadf8\uc800 \ud30c\ud2f0\ud074\uc758 \ud14d\uc2a4\uccd0\ub97c \uadf8\ub9ac\uae30\ub9cc \ud558\uba74 \ub418\ub294 Particle \ub4e4\uc740 TextureSheetParticle \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. #getRenderType \uc740 \uc5ec\uc804\ud788 \uc7ac\uc815\uc758\ud574\uc57c \ud558\uc9c0\ub9cc, #render \ub294 \uc9c0\uc815\ub41c \ud14d\uc2a4\uccd0 \uc2a4\ud504\ub77c\uc774\ud2b8\ub97c \uc54c\ub9de\uc740 \uc704\uce58\uc5d0 \uadf8\ub9ac\ub3c4\ub85d \ubbf8\ub9ac \uad6c\ud604\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.","title":"Particle"},{"location":"gameeffects/particles/#particlerendertype","text":"ParticleRenderType \uc740 RenderType \uacfc \uc720\uc0ac\ud558\uac8c, \uc874\uc7ac\ud558\ub294 \ubaa8\ub4e0 \ud30c\ud2f0\ud074\uc758 \ub80c\ub354\ub9c1 \uc0ac\uc804 \uc124\uc815\uacfc \uc815\ub9ac\ub97c \ub2f4\ub2f9\ud569\ub2c8\ub2e4. \uc774\ud6c4 Tesselator \ub97c \uac70\uccd0 \ud654\uba74\uc5d0 \ud55c \ubc88\uc5d0 \uc804\uc1a1\ud569\ub2c8\ub2e4. \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \uc544\ub798 \uc5ec\uc12f \uac1c\uc758 ParticleRenderType \uc744 \uc815\uc758\ud569\ub2c8\ub2e4: Render Type \uc124\uba85 TERRAIN_SHEET \ud14d\uc2a4\uccd0\uac00 \ube14\ub85d\uc778 \ud30c\ud2f0\ud074\uc744 \ub80c\ub354\ub9c1\ud560 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. PARTICLE_SHEET_OPAQUE \ud14d\uc2a4\uccd0\uac00 \ubd88\ud22c\uba85\ud55c \ud30c\ud2f0\ud074\uc744 \uadf8\ub9b4 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. PARTICLE_SHEET_TRANSLUCENT \ud22c\uba85\ub3c4\uac00 \uc788\ub294 \ud14d\uc2a4\uccd0\ub97c \uc0ac\uc6a9\ud558\ub294 \ud30c\ud2f0\ud074\uc744 \uadf8\ub9b4 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. PARTICLE_SHEET_LIT PARTICLE_SHEET_OPAQUE \uc640 \ub3d9\uc77c\ud558\uc9c0\ub9cc \ud30c\ud2f0\ud074 \uc804\uc6a9 \uc250\uc774\ub354\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. CUSTOM \ube14\ub80c\ub529\uacfc \uae4a\uc774 \ub9c8\uc2a4\ud06c\ub294 \uc0ac\uc804 \uc124\uc815\ud574 \uc8fc\uc9c0\ub9cc \uadf8 \uc678\uc5d0\ub294 Particle#render \ub97c \ud1b5\ud574 \uad6c\ud604\ud574 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. NO_RENDER \uc544\uc608 \ub80c\ub354\ub9c1\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc0c8\ub85c\uc6b4 \uc885\ub958\uc758 ParticleRenderType \uc744 \uad6c\ud604\ud558\ub294 \uac83\uc740 \uc5ec\ub7ec\ubd84\ub4e4\uc758 \uacfc\uc81c\ub85c \ub0a8\uaca8\ub4dc\ub9ac\uc8e0. ;)","title":"ParticleRenderType"},{"location":"gameeffects/particles/#particleprovider","text":"Particle \uc758 \uc778\uc2a4\ud134\uc2a4\ub294 \uc77c\ubc18\uc801\uc73c\ub85c ParticleProvider \ub97c \ud1b5\ud574 \uc0dd\uc131\ub429\ub2c8\ub2e4. \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub294 \uba54\uc11c\ub4dc #createParticle \uc744 \uc815\uc758\ud558\uc5ec ParticleOptions , \ub808\ubca8, \uc704\uce58, \uadf8\ub9ac\uace0 \uc18d\ub3c4\ub97c \uc774\uc6a9\ud574 Particle \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4ed\ub2c8\ub2e4. Particle \uc740 \ud2b9\uc815 \ud30c\ud2f0\ud074\uc758 \uc885\ub958\uc5d0 \uc885\uc18d\ub41c \uac83\uc774 \uc544\ub2c8\uae30 \ub54c\ubb38\uc5d0 \uc6d0\ud558\uc2e0\ub2e4\uba74 \uc7ac\uc0ac\uc6a9\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. ParticleProvider \ub294 \ubb34\uc870\uac74 \ubaa8\ub4dc \ubc84\uc2a4\uc5d0\uc11c \ubc29\uc1a1\ub418\ub294 ParticleFactoryRegisterEvent \uac00 \ubc29\uc1a1\ub420 \ub54c ParticleEngine#register(ParticleType, ParticleProvider) \ub97c \ud638\ucd9c\ud558\uc5ec \ub4f1\ub85d\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. Important ParticleFactoryRegisterEvent \ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc804\uc6a9 \ucf54\ub4dc\uc785\ub2c8\ub2e4! \uadf8\ub807\uae30\uc5d0 DistExecutor \ub610\ub294 @EventBusSubscriber \ub97c \ud1b5\ud574 \ub4f1\ub85d\ud558\uc138\uc694! Important ParticleProvider \ub97c ParticleEngine#register(ParticleType, ParticleProvider) \ub97c \ud638\ucd9c\ud558\uc5ec \uc9c1\uc811 \ub4f1\ub85d\ud558\uc2dc\ub294 \uac83\uc740 \ud14d\uc2a4\uccd0\ub97c \ucd94\uac00\ud558\uc9c0 \uc54a\uc744 \ub54c \uc774\uc6a9\ud569\ub2c8\ub2e4. \ud14d\uc2a4\uccd0\ub97c \ucd94\uac00\ud558\uc2e0\ub2e4\uba74 \uc544\ub798 \uc139\uc158\uc744 \ucda9\ubd84\ud788 \uc219\uc9c0\ud558\uc2e0 \ud6c4 ParticleEngine#register(ParticleType, SpriteParticleRegistration) \uc744 \ub300\uc2e0 \ud638\ucd9c\ud558\uc138\uc694!","title":"ParticleProvider"},{"location":"gameeffects/particles/#particledescription-spriteset-spriteparticleregistration","text":"PARTICLE_SHEET_OPAQUE , PARTICLE_SHEET_TRANSLUCENT , \uadf8\ub9ac\uace0 PARTICLE_SHEET_LIT \uc740 \uc704\uc5d0\uc11c \uae30\uc220\ud55c \ubc29\ubc95\uc73c\ub85c \ub4f1\ub85d\ud55c ParticleProvider \uc5d0\uc11c \uc4f0\ub294 \ud14d\uc2a4\uccd0\ub97c \uc774\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4, \uc65c\ub0d0\ud558\uba74 \uc14b \ubaa8\ub450 ParticleEngine \uc774 \ubd88\ub7ec\uc624\ub294 \uc2a4\ud504\ub77c\uc774\ud2b8\ub4e4\uc744 \ubc14\ub85c \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \uc0ac\uc6a9\ud558\uc2e4 \ud14d\uc2a4\uccd0\ub97c \ub530\ub85c \ub4f1\ub85d\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc5d0\uc11c\ub294 \uc624\uc9c1 TextureSheetParticle \ub9cc\uc774 \ud30c\ud2f0\ud074\uc6a9 \ud14d\uc2a4\uccd0\ub97c \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 \ub2f9\uc2e0\uaed8\uc11c \ub9cc\ub4dc\uc2dc\ub294 \ud30c\ud2f0\ud074\uc774 TextureSheetParticle \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\ub77c\uace0 \uac00\uc815\ud558\uaca0\uc2b5\ub2c8\ub2e4. \ud30c\ud2f0\ud074\uc5d0 \ud14d\uc2a4\uccd0\ub97c \ucd94\uac00\ud558\uae30 \uc704\ud574\uc120 assets/<modid>/particles \uc5d0 \uc0c8 JSON \ud30c\uc77c\uc744 \ucd94\uac00\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc740 ParticleDescription \uc73c\ub85c \ube44\uc9c1\ub82c\ud654 \ub429\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc758 \uc774\ub984\uc740 ParticleType \uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc774\ub984\uacfc \ub3d9\uc77c\ud574\uc57c \ud569\ub2c8\ub2e4. \uac01 JSON \ud30c\uc77c\uc740 ResourceLocation \ub4e4\uc744 \ub2f4\uace0 \uc788\ub294 textures \ub77c\ub294 \uc774\ub984\uc758 \ubc30\uc5f4\uc744 \uc800\uc7a5\ud569\ub2c8\ub2e4. \uc774\ub54c, \uac01 ResourceLocation \ub4e4\uc740 \ud14d\uc2a4\uccd0 \uc774\ubbf8\uc9c0 \ud30c\uc77c assets/<modid>/textures/particle/<path>.png \ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4. { \"textures\": [ // \uac00\ub9ac\ud0a4\ub294 \ub300\uc0c1: // assets/mymod/textures/particle/particle_texture.png \"mymod:particle_texture\", // \uc5ec\uae30\uc11c \uc815\uc758\ud558\ub294 \ud14d\uc2a4\uccd0\ub4e4\uc740 \uadf8\ub9ac\ub294 \uc21c\uc11c\uc5d0 \ub530\ub77c \uc791\uc131\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. // particle_texture \ub97c \uba3c\uc800 \uadf8\ub9ac\uace0, \uadf8\ub2e4\uc74c particle_texture2, \uc774\ub7f0 \uc2dd\uc73c\ub85c\uc694 \"mymod:particle_texture2\" ] } TextureSheetParticle \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\uc5d0\uc11c \ud30c\ud2f0\ud074\uc758 \ud14d\uc2a4\uccd0\ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc120 SpriteSet , \ub610\ub294 SpriteSet \uc5d0\uc11c \uc5bb\uc740 TextureAtlasSprite \uc758 \ucc38\uc870\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. SpriteSet \uc740 \uac01 ParticleDescription \uc5d0\uc11c \ub4f1\ub85d\ud55c \ud14d\uc2a4\uccd0\ub4e4\uc758 \ub9ac\uc2a4\ud2b8\ub97c \ubcf4\uc720\ud569\ub2c8\ub2e4. SpriteSet \uc740 TextureAtlasSprite \ub97c \ubc18\ud658\ud558\ub294 \uba54\uc11c\ub4dc 2\uac1c\ub97c \uc815\uc758\ud558\ub294\ub370, \uccab \ubc88\uc9f8 \uba54\uc11c\ub4dc\ub294 \ub450 \uac1c\uc758 \uc815\uc218\ub97c \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ud14d\uc2a4\uccd0\uac00 \uc2dc\uac04\uc5d0 \ub530\ub77c \ubcc0\ud654\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uae30 \uc704\ud568\uc785\ub2c8\ub2e4. \ub450 \ubc88\uc9f8 \uba54\uc11c\ub4dc\ub294 \ubb34\uc791\uc704 \ud14d\uc2a4\uccd0\ub97c \ubc18\ud55c\ud558\ub294 \uac83\uc73c\ub85c, Random \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4. TextureSheetParticle \uc740 \uc778\uc790\ub85c \uc804\ub2ec\ub41c SpriteSet \uc5d0\uc11c \ubb34\uc791\uc704 \ud14d\uc2a4\uccd0\ub97c \uac00\uc838\uc640 \ubc18\ud658\ud558\ub294 #pickSprite \uc640, Particle \uc758 \ub098\uc774\uc640 \uc218\uba85\uc73c\ub85c \ud14d\uc2a4\uccd0\ub97c \uac00\uc838\uc640 \ubc18\ud658\ud558\ub294 #setSpriteFromAge \ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ud30c\ud2f0\ud074\uc758 \ud14d\uc2a4\uccd0\ub4e4\uc744 \ub4f1\ub85d\ud558\uae30 \uc704\ud574\uc120, SpriteParticleRegistration \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c ParticleEngine#register(ParticleType, SpriteParticleRegistration) \uc5d0 \uc804\ub2ec\ud558\uc5ec \ud638\ucd9c\ud574 \uc8fc\uc138\uc694. SpriteParticleRegistration \uc740 SpriteSet \uc744 \ubc1b\uc544 ParticleProvider \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4dc\ub294 \uba54\uc11c\ub4dc #create \ub97c \uc815\uc758\ud558\ub294 \ud568\uc218\ud615 \uc778\ud130\ud398\uc774\uc2a4 \uc785\ub2c8\ub2e4. \uc774\ub54c ParticleProvider \uc758 \ud558\uc704 \ud074\ub798\uc2a4\uc758 \uc0dd\uc131\uc790\uac00 SpriteSet \uc744 \uc778\uc790\ub85c \ubc1b\ub3c4\ub85d \ud55c \ub2e4\uc74c, #create \uba54\uc11c\ub4dc\uc5d0\uc11c \uc774\ub97c \uc804\ub2ec\ud558\uc5ec ParticleProvider \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4e4\uace0 \ubc18\ud658\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uac04\ub2e8\ud569\ub2c8\ub2e4.","title":"ParticleDescription, SpriteSet, SpriteParticleRegistration"},{"location":"gameeffects/particles/#_3","text":"\ud30c\ud2f0\ud074\uc740 \uc0ac\uc774\ub4dc\uc5d0 \ub530\ub77c \uc18c\ud658\ud558\ub294 \ubc29\ubc95\uc5d0 \ucc28\uc774\uac00 \uc788\uc2b5\ub2c8\ub2e4. ClientLevel \uc740 #addParticle \ub610\ub294 (\uc5c4\uccad \uba40\ub9ac \ub098\uac00\ub3c4 \ubcf4\uc774\ub3c4\ub85d) #addAlwaysVisibleParticle \uc744, ServerLevel \uc740 #sendParticles \uc744 \ud638\ucd9c\ud558\uc5ec \ud30c\ud2f0\ud074\uc744 \uc18c\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ClientLevel \uc6a9 \uba54\uc11c\ub4dc\ub97c \uc11c\ubc84\uc5d0\uc11c \ud638\ucd9c\ud558\uba74 \uc544\ubb34\ub7f0 \uc77c\ub3c4 \uc77c\uc5b4\ub098\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"\ud30c\ud2f0\ud074 \uc18c\ud658\ud558\uae30"},{"location":"gameeffects/sounds/","text":"Sounds Terminology Term Description Sound Events Something that triggers a sound effect. Examples include minecraft:block.anvil.hit or botania:spreader_fire . Sound Category The category of the sound, for example player , block or simply master . The sliders in the sound settings GUI represent these categories. Sound File The literal file on disk that is played: an .ogg file. sounds.json This JSON defines sound events, and defines which sound files they play, the subtitle, etc. Sound events are identified with ResourceLocation s. sounds.json should be located at the root of a resource namespace ( assets/<namespace>/sounds.json ), and it defines sound events in that namespace ( assets/<namespace>/sounds.json defines sound events in the namespace namespace .). A full specification is available on the vanilla wiki , but this example highlights the important parts: { \"open_chest\": { \"subtitle\": \"mymod.subtitle.open_chest\", \"sounds\": [ \"mymod:open_chest_sound_file\" ] }, \"epic_music\": { \"sounds\": [ { \"name\": \"mymod:music/epic_music\", \"stream\": true } ] } } Underneath the top-level object, each key corresponds to a sound event. Note that the namespace is not given, as it is taken from the namespace of the JSON itself. Each event specifies a localization key to be shown when subtitles are enabled. Finally, the actual sound files to be played are specified. Note that the value is an array; if multiple sound files are specified, the game will randomly choose one to play whenever the sound event is triggered. The two examples represent two different ways to specify a sound file. The wiki has precise details, but generally, long sound files such as background music or music discs should use the second form, because the \u201cstream\u201d argument tells Minecraft to not load the entire sound file into memory but to stream it from disk. The second form can also specify the volume, pitch, and weight of a sound file. In all cases, the path to a sound file for namespace namespace and path path is assets/<namespace>/sounds/<path>.ogg . Therefore mymod:open_chest_sound_file points to assets/mymod/sounds/open_chest_sound_file.ogg , and mymod:music/epic_music points to assets/mymod/sounds/music/epic_music.ogg . A sounds.json can be data generated . Creating Sound Events In order to reference sounds on the server, a SoundEvent holding a corresponding entry in sounds.json must be created. This SoundEvent must then be registered . Normally, the location used to create a sound event should be set as it\u2019s registry name. The SoundEvent acts as a reference to the sound and is passed around to play them. If a mod has an API, it should expose its SoundEvent s in the API. Note As long as a sound is registered within the sounds.json , it can still be referenced on the logical client regardless of whether there is a referencing SoundEvent . Playing Sounds Vanilla has lots of methods for playing sounds, and it is unclear which to use at times. Note that each takes a SoundEvent , the ones registered above. Additionally, the terms \u201cServer Behavior\u201d and \u201cClient Behavior\u201d refer to the respective logical side . Level playSound(Player, BlockPos, SoundEvent, SoundCategory, volume, pitch) Simply forwards to overload (2) , adding 0.5 to each coordinate of the BlockPos given. playSound(Player, double x, double y, double z, SoundEvent, SoundCategory, volume, pitch) Client Behavior : If the passed in player is the client player, plays the sound event to the client player. Server Behavior : Plays the sound event to everyone nearby except the passed in player. Player can be null . Usage : The correspondence between the behaviors implies that these two methods are to be called from some player-initiated code that will be run on both logical sides at the same time: the logical client handles playing it to the user, and the logical server handles everyone else hearing it without re-playing it to the original user. They can also be used to play any sound in general at any position server-side by calling it on the logical server and passing in a null player, thus letting everyone hear it. playLocalSound(double x, double y, double z, SoundEvent, SoundCategory, volume, pitch, distanceDelay) Client Behavior : Just plays the sound event in the client level. If distanceDelay is true , then delays the sound based on how far it is from the player. Server Behavior : Does nothing. Usage : This method only works client-side, and thus is useful for sounds sent in custom packets, or other client-only effect-type sounds. Used for thunder. ClientLevel playLocalSound(BlockPos, SoundEvent, SoundCategory, volume, pitch, distanceDelay) - Simply forwards to Level \u2018s overload (3) , adding 0.5 to each coordinate of the BlockPos given. Entity playSound(SoundEvent, volume, pitch) - Forwards to Level \u2018s overload (2) , passing in null as the player. - Client Behavior : Does nothing. - Server Behavior : Plays the sound event to everyone at this entity\u2019s position. - Usage : Emitting any sound from any non-player entity server-side. Player playSound(SoundEvent, volume, pitch) (overriding the one in Entity ) - Forwards to Level \u2018s overload (2) , passing in this as the player. - Client Behavior : Does nothing, see override in LocalPlayer . - Server Behavior : Plays the sound to everyone nearby except this player. - Usage : See LocalPlayer . LocalPlayer playSound(SoundEvent, volume, pitch) (overriding the one in Player ) - Forwards to Level \u2018s overload (2) , passing in this as the player. - Client Behavior : Just plays the Sound Event. - Server Behavior : Method is client-only. - Usage : Just like the ones in Level , these two overrides in the player classes seem to be for code that runs together on both sides. The client handles playing the sound to the user, while the server handles everyone else hearing it without re-playing to the original user.","title":"\ud6a8\uacfc\uc74c"},{"location":"gameeffects/sounds/#sounds","text":"","title":"Sounds"},{"location":"gameeffects/sounds/#terminology","text":"Term Description Sound Events Something that triggers a sound effect. Examples include minecraft:block.anvil.hit or botania:spreader_fire . Sound Category The category of the sound, for example player , block or simply master . The sliders in the sound settings GUI represent these categories. Sound File The literal file on disk that is played: an .ogg file.","title":"Terminology"},{"location":"gameeffects/sounds/#soundsjson","text":"This JSON defines sound events, and defines which sound files they play, the subtitle, etc. Sound events are identified with ResourceLocation s. sounds.json should be located at the root of a resource namespace ( assets/<namespace>/sounds.json ), and it defines sound events in that namespace ( assets/<namespace>/sounds.json defines sound events in the namespace namespace .). A full specification is available on the vanilla wiki , but this example highlights the important parts: { \"open_chest\": { \"subtitle\": \"mymod.subtitle.open_chest\", \"sounds\": [ \"mymod:open_chest_sound_file\" ] }, \"epic_music\": { \"sounds\": [ { \"name\": \"mymod:music/epic_music\", \"stream\": true } ] } } Underneath the top-level object, each key corresponds to a sound event. Note that the namespace is not given, as it is taken from the namespace of the JSON itself. Each event specifies a localization key to be shown when subtitles are enabled. Finally, the actual sound files to be played are specified. Note that the value is an array; if multiple sound files are specified, the game will randomly choose one to play whenever the sound event is triggered. The two examples represent two different ways to specify a sound file. The wiki has precise details, but generally, long sound files such as background music or music discs should use the second form, because the \u201cstream\u201d argument tells Minecraft to not load the entire sound file into memory but to stream it from disk. The second form can also specify the volume, pitch, and weight of a sound file. In all cases, the path to a sound file for namespace namespace and path path is assets/<namespace>/sounds/<path>.ogg . Therefore mymod:open_chest_sound_file points to assets/mymod/sounds/open_chest_sound_file.ogg , and mymod:music/epic_music points to assets/mymod/sounds/music/epic_music.ogg . A sounds.json can be data generated .","title":"sounds.json"},{"location":"gameeffects/sounds/#creating-sound-events","text":"In order to reference sounds on the server, a SoundEvent holding a corresponding entry in sounds.json must be created. This SoundEvent must then be registered . Normally, the location used to create a sound event should be set as it\u2019s registry name. The SoundEvent acts as a reference to the sound and is passed around to play them. If a mod has an API, it should expose its SoundEvent s in the API. Note As long as a sound is registered within the sounds.json , it can still be referenced on the logical client regardless of whether there is a referencing SoundEvent .","title":"Creating Sound Events"},{"location":"gameeffects/sounds/#playing-sounds","text":"Vanilla has lots of methods for playing sounds, and it is unclear which to use at times. Note that each takes a SoundEvent , the ones registered above. Additionally, the terms \u201cServer Behavior\u201d and \u201cClient Behavior\u201d refer to the respective logical side .","title":"Playing Sounds"},{"location":"gameeffects/sounds/#level","text":"playSound(Player, BlockPos, SoundEvent, SoundCategory, volume, pitch) Simply forwards to overload (2) , adding 0.5 to each coordinate of the BlockPos given. playSound(Player, double x, double y, double z, SoundEvent, SoundCategory, volume, pitch) Client Behavior : If the passed in player is the client player, plays the sound event to the client player. Server Behavior : Plays the sound event to everyone nearby except the passed in player. Player can be null . Usage : The correspondence between the behaviors implies that these two methods are to be called from some player-initiated code that will be run on both logical sides at the same time: the logical client handles playing it to the user, and the logical server handles everyone else hearing it without re-playing it to the original user. They can also be used to play any sound in general at any position server-side by calling it on the logical server and passing in a null player, thus letting everyone hear it. playLocalSound(double x, double y, double z, SoundEvent, SoundCategory, volume, pitch, distanceDelay) Client Behavior : Just plays the sound event in the client level. If distanceDelay is true , then delays the sound based on how far it is from the player. Server Behavior : Does nothing. Usage : This method only works client-side, and thus is useful for sounds sent in custom packets, or other client-only effect-type sounds. Used for thunder.","title":"Level"},{"location":"gameeffects/sounds/#clientlevel","text":"playLocalSound(BlockPos, SoundEvent, SoundCategory, volume, pitch, distanceDelay) - Simply forwards to Level \u2018s overload (3) , adding 0.5 to each coordinate of the BlockPos given.","title":"ClientLevel"},{"location":"gameeffects/sounds/#entity","text":"playSound(SoundEvent, volume, pitch) - Forwards to Level \u2018s overload (2) , passing in null as the player. - Client Behavior : Does nothing. - Server Behavior : Plays the sound event to everyone at this entity\u2019s position. - Usage : Emitting any sound from any non-player entity server-side.","title":"Entity"},{"location":"gameeffects/sounds/#player","text":"playSound(SoundEvent, volume, pitch) (overriding the one in Entity ) - Forwards to Level \u2018s overload (2) , passing in this as the player. - Client Behavior : Does nothing, see override in LocalPlayer . - Server Behavior : Plays the sound to everyone nearby except this player. - Usage : See LocalPlayer .","title":"Player"},{"location":"gameeffects/sounds/#localplayer","text":"playSound(SoundEvent, volume, pitch) (overriding the one in Player ) - Forwards to Level \u2018s overload (2) , passing in this as the player. - Client Behavior : Just plays the Sound Event. - Server Behavior : Method is client-only. - Usage : Just like the ones in Level , these two overrides in the player classes seem to be for code that runs together on both sides. The client handles playing the sound to the user, while the server handles everyone else hearing it without re-playing to the original user.","title":"LocalPlayer"},{"location":"gettingstarted/","text":"\ud3ec\uc9c0 \ubaa8\ub4dc \uac1c\ubc1c \uc2dc\uc791\ud558\uae30 \uc774 \ud398\uc774\uc9c0\ub294 \uac04\ub2e8\ud55c \ubaa8\ub4dc\ub97c \ub9cc\ub4e4 \uc218 \uc788\ub3c4\ub85d \ud574\uc8fc\ub294 \uac00\uc774\ub4dc \uc785\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \uc774 \ubb38\uc11c\uc758 \ub2e4\ub978 \ud398\uc774\uc9c0\ub4e4\uc744 \ubcf4\uc2dc\uae30 \uc804\uc5d0 \uc774 \ud398\uc774\uc9c0\ub97c \uba3c\uc800 \uc77d\ub294 \uac83\uc744 \uad8c\uc7a5\ub4dc\ub9bd\ub2c8\ub2e4. \uccab \ubaa8\ub4dc \uac1c\ubc1c \ud574\ubcf4\uae30 \uba3c\uc800, Java 17 \uac1c\ubc1c \ud0a4\ud2b8(JDK)\uc640 64\ube44\ud2b8 Java \uac00\uc0c1 \uba38\uc2e0(JVM)\uc744 \ub2e4\uc6b4\ubc1b\uc73c\uc138\uc694. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc640 \ud3ec\uc9c0\ub294 \ub458\ub2e4 Java 17\ub85c \ucef4\ud30c\uc77c\uc774 \uac00\ub2a5\ud558\uae30\uc5d0 \uc774\ub97c \uc0ac\uc6a9\ud558\uc2dc\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. 32\ube44\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc2dc\uba74 \uc544\ub798 \uba85\uc2dc\ub41c Gradle \uc791\uc5c5 \uc218\ud589\ub3c4\uc911 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AdoptOpenJDK \uc5d0\uc11c \ub2e4\uc6b4\ubc1b\uc73c\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0 \uc0ac\uc774\ud2b8 \uc5d0\uc11c \ubaa8\ub4dc \uac1c\ubc1c \ud0a4\ud2b8(MDK)\ub97c \ub2e4\uc6b4\ubc1b\uc73c\uc138\uc694. \ub2e4\uc6b4\ubc1b\uc740 MDK \uc758 \uc555\ucd95\uc744 \ub97c \ube44\uc5b4\uc788\ub294 \ud3f4\ub354\uc5d0 \ud574\uc81c\ud558\ub3c4\ub85d \ud558\uc138\uc694. \uadf8\ub7ec\uba74 \uc5ec\ub7ec \ud30c\uc77c\ub4e4\uacfc src/main/java \uc5d0 \uc788\ub294 \uc608\uc81c \ubaa8\ub4dc\uac00 \ubcf4\uc774\uc2e4\ud150\ub370, \ubaa8\ub4dc \uac1c\ubc1c\ud560\ub54c, \uc544\ub798 \uba85\uc2dc\ub41c \ud30c\uc77c\ub4e4\uc740 \uac74\ub4dc\uc2e4 \ud544\uc694\uac00 \uc788\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc9c0 \uc54a\uc73c\uba70 \uc5ec\ub7ec \ubaa8\ub4dc \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uc7ac\uc0ac\uc6a9\ud558\uc154\ub3c4 \uad28\ucc2e\uc2b5\ub2c8\ub2e4: * build.gradle * gradlew.bat * gradlew * gradle \ud3f4\ub354 \uc704 \ud30c\uc77c\ub4e4\uc744 \uc0c8\ub85c\uc6b4 \ud3f4\ub354\ub85c \uc62e\uae30\uc138\uc694. \uadf8 \uc0c8 \ud3f4\ub354\ub294 \ubaa8\ub4dc \ud504\ub85c\uc81d\ud2b8 \ud3f4\ub354\uac00 \ub420 \uac83\uc785\ub2c8\ub2e4. IDE \ub97c \uace0\ub974\uc138\uc694: * \ud3ec\uc9c0\uc5d0\uc11c \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc6d0\ub418\ub294 IDE \ub294 Eclipse \uac00 \uc720\uc77c\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 Intellij IDEA \ub098 Visual Studio Code \uc5d0\uc11c \uac1c\ubc1c\ud558\uae30 \uc704\ud574 \ucd94\uac00\uc801\uc778 run \uc791\uc5c5\ub4e4 \ub610\ud55c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc0ac\uc2e4 \uc5b4\ub5a4 IDE \ub4e0 \ubaa8\ub4dc \uac1c\ubc1c\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ub9cc\ub4e4 \uc218 \uc788\uae34 \ud569\ub2c8\ub2e4. * Eclipse \uc640 Intellij IDEA \ub294 Gradle \uc744 \uad00\ub9ac\ud574 \uc8fc\uae30 \ub54c\ubb38\uc5d0 \ucd08\uae30 \uac1c\ubc1c \ud658\uacbd \uc124\uc815\uc744 \uac04\ub2e8\ud558\uac8c \ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \ucd08\uae30 \uac1c\ubc1c\ud658\uacbd \uc124\uc815\uc5d0\ub294, \ubaa8\uc7a5 \ub610\ub294 \ud3ec\uc9c0\uc640 \uac19\uc740 \uc5ec\ub7ec \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uacf5\uc720 \uc0ac\uc774\ud2b8\uc5d0\uc11c \ud328\ud0a4\uc9c0\ub97c \ubc1b\ub294 \uac83\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. VSCode \ub294 Gradle Tasks \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud574 \ucd08\uae30 \uac1c\ubc1c \ud658\uacbd \uc124\uc815\uc744 \uad00\ub9ac\ud558\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. * \ub300\ubd80\ubd84, \ub610\ub294 \ubaa8\ub4e0 \uc0c1\ud669\uc5d0\uc120, build.gradle \uc744 \uc218\uc815\ud558\uace0 \uc774\ub97c \uc801\uc6a9\ud558\uae30 \uc704\ud574\uc11c\ub294 Gradle \uc744 \ud638\ucd9c\ud558\uc5ec \ud504\ub85c\uc81d\ud2b8\ub97c \ub2e4\uc2dc \ucc98\ub9ac\ud558\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4. \uc704\uc5d0\uc11c \uc5b8\uae09\ud55c \ub450 IDE \ub294 Gradle \ud328\ub110\uc758 \uc0c8\ub85c\uace0\uce68 \ubc84\ud2bc\uc73c\ub85c \ud504\ub85c\uc81d\ud2b8\ub97c \ub2e4\uc2dc \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IDE \uc2e4\ud589 \uad6c\uc131 \uc0dd\uc131: * \uc774\ud074\ub9bd\uc2a4: runEclipseRuns \ub97c \uc2e4\ud589\ud558\uc138\uc694( gradlew genEclipseRuns ). \uc774\ub294 \uac8c\uc784 \uc2e4\ud589 \uad6c\uc131\uc744 \uc0dd\uc131\ud558\uace0 \uac8c\uc784\uc5d0 \ud544\uc694\ud55c \uc5d0\uc14b\ub4e4\uc744 \ub2e4\uc6b4\ubc1b\uc2b5\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc774 \ub05d\ub09c \uc774\ud6c4 \ud504\ub85c\uc81d\ud2b8\ub97c \uc0c8\ub85c\uace0\uce58\uc138\uc694. * Intellij: genIntellijRuns \ub97c \uc2e4\ud589\ud558\uc138\uc694( gradlew genIntellijRuns ). \uc774\ub294 \uac8c\uc784 \uc2e4\ud589 \uad6c\uc131\uc744 \uc0dd\uc131\ud558\uace0 \uac8c\uc784\uc5d0 \ud544\uc694\ud55c \uc5d0\uc14b\ub4e4\uc744 \ub2e4\uc6b4\ubc1b\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \u201cmodule not specified\u201d \uc640 \uac19\uc740 \uc624\ub958\uac00 \ub09c\ub2e4\uba74 \uc124\uc815\uc744 \uc218\uc815\ud558\uc5ec \u201cmain\u201d \ubaa8\ub4c8\uc744 \uc120\ud0dd\ud558\uc2dc\uac70\ub098 ideaModule \uc18d\uc131\uc744 \uc0ac\uc6a9\ud574 \ubaa8\ub4c8\uc744 \uc120\ud0dd\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. * VSCode: genVSCodeRuns \ub97c \uc2e4\ud589\ud558\uc138\uc694( gradlew genVSCodeRuns ). \uc774\ub294 \uac8c\uc784 \uc2e4\ud589 \uad6c\uc131\uc744 \uc0dd\uc131\ud558\uace0 \uac8c\uc784\uc5d0 \ud544\uc694\ud55c \uc5d0\uc14b\ub4e4\uc744 \ub2e4\uc6b4\ubc1b\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc \uc815\ubcf4 \uc218\uc815\ud558\uae30 build.gradle \ud30c\uc77c\uc744 \uc218\uc815\ud574 \ubaa8\ub4dc\uac00 \uc5b4\ub5bb\uac8c \ube4c\ub4dc\ub418\uc5b4\uc57c \ud560\uc9c0 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(\ubaa8\ub4dc \ud30c\uc77c \uc774\ub984, \ubc84\uc804, \ub4f1). Important buildscript {} \ubd80\ubd84\uc744 \uc808\ub54c \uc218\uc815\ud558\uc9c0 \ub9c8\uc138\uc694. \uae30\ubcf8\uc801\uc73c\ub85c \uc801\ud600\uc788\ub294 \ub0b4\uc6a9\uc740 ForgeGradle \uc774 \ub3d9\uc791\ud558\uae30 \uc704\ud574 \ud544\uc694\ud569\ub2c8\ub2e4. // Only edit below this line, the above code adds and enables the necessary things for Forge to be setup. \uc544\ub798 \uc788\ub294 \ub0b4\uc6a9\ub4e4\uc740 \uac70\uc758 \uc218\uc815\ud558\uc154\ub3c4 \uad1c\ucc2e\uc740 \uac83\ub4e4\uc785\ub2c8\ub2e4. \uac04\ub2e8\ud55c build.gradle \uc124\uc815 \uc774 \uc124\uc815\ub4e4\uc740 \ubaa8\ub4e0 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \ube4c\ub4dc\ub418\ub294 \ud30c\uc77c\uc758 \uc774\ub984\uc744 \ubcc0\uacbd\ud558\uc2dc\ub824\uba74 - archivesBaseName \uc758 \uac12\uc744 \uc218\uc815\ud558\uc138\uc694. \u201cmaven \ucf54\ub514\ub124\uc774\ud2b8\u201d\ub97c \ubcc0\uacbd\ud558\uc2dc\ub824\uba74 - group \uc758 \uac12\uc744 \uc218\uc815\ud558\uc138\uc694. \ubaa8\ub4dc\uc758 \ubc84\uc804\uc744 \ubcc0\uacbd\ud558\uc2dc\ub824\uba74 - version \uc758 \uac12\uc744 \uc218\uc815\ud558\uc138\uc694. \uc2e4\ud589 \uad6c\uc131\uc5d0\uc11c mod id\ub97c \ubc14\uafb8\uc2dc\ub824\uba74 - examplemod \ub97c \uc804\ubd80 \ubaa8\ub4dc\uc758 id \ub85c \ubcc0\uacbd\ud558\uc138\uc694. \ubaa8\uc7a5 \uacf5\uc2dd \ub9e4\ud551\uc73c\ub85c \ubcc0\uacbd\ud558\uae30. Forge \ub294 \ubaa8\uc7a5\uc758 \uacf5\uc2dd \ub9e4\ud551(MojMaps)\uc744 \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4. \uc544\uc9c1 Javadoc \uc774\ub791 \ud568\uc218 \uc778\uc790 \uc774\ub984\uc740 \ud574\ub2f9 \ub9e4\ud551\uc5d0 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud604\uc7ac\ub85c\uc36c \uc774 \ub9e4\ud551\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \ubc95\uc801\uc73c\ub85c \uc644\uc804\ud788 \uc548\uc804\ud55c\uc9c0 \ud655\uc2e4\ud558\uc9c4 \uc54a\uc73c\ub098 \ubaa8\uc7a5\uce21\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30\ub97c \ubc14\ub77c\ub2c8 \ud3ec\uc9c0\uc5d0\uc11c\ub294 \uc774\ub97c \uc0ac\uc6a9\ud558\uae30\ub85c \uacb0\uc84d\ud558\uc600\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\ud300\uc758 \uc785\uc7a5\uc740 \uc774\uacf3 \uc5d0\uc11c \ub354 \uc54c\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc \ube4c\ub4dc \ubc0f \ud14c\uc2a4\ud2b8 \ubaa8\ub4dc\ub97c \ube4c\ub4dc\ud558\uae30 \uc704\ud574\uc11c\ub294 gradlew build \ub97c \uc2e4\ud589\ud558\uc138\uc694. \uc774\ub294 build/libs \uc5d0 \ube4c\ub4dc\ub41c Jar \ud30c\uc77c\uc744 \uc774\ub984 [archivesBaseName]-[version],jar \ub85c \ucd9c\ub825\ud560 \uac83\uc785\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc740 \ud3ec\uc9c0\uac00 \uc124\uce58\ub41c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3f4\ub354\uc758 mods \uc5d0 \ub123\uc5b4 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\ub97c \ud14c\uc2a4\ud2b8\ud560\ub54c \uac00\uc7a5 \uc26c\uc6b4 \ubc29\ubc95\uc740, \ud504\ub85c\uc81d\ud2b8\ub97c \uc124\uc815\ud560\ub54c \uc0dd\uc131\ub41c \uc2e4\ud589 \uad6c\uc131 \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec \uac8c\uc784\uc744 \uc2e4\ud589\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ub54c \uac8c\uc784\uc740 <runDir> \uc5d0 \uc2e4\ud589\ub418\uba70, \uc774\ub54c \uc2e4\ud589 \uad6c\uc131\uc5d0 \uc815\uc758\ub41c \ubaa8\ub4dc \uc18c\uc2a4 \ucf54\ub4dc\ub4e4\uacfc \ud568\uaed8 \uc2e4\ud589\ub429\ub2c8\ub2e4. MDK \ub294 \uae30\ubcf8\uc73c\ub85c main \uc18c\uc2a4\uc14b\uc744 \ud3ec\ud568\ud558\ub2c8, src/main/java \uc5d0 \uc791\uc131\ud558\uc2e0 \ucf54\ub4dc\ub4e4\uc740 \uac8c\uc784 \uc2e4\ud589\uc2dc \uc0ac\uc6a9\ud560 \ucf54\ub4dc\uc5d0 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ub610\ud55c gradlew runServer \ub97c \ud1b5\ud574 \uc804\uc6a9 \uc11c\ubc84\ub97c \uc2e4\ud589\ud558\uc2e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc804\uc6a9 \uc11c\ubc84\ub97c \uc774\ub807\uac8c \uc2e4\ud589\ud558\uc2dc\uba74 GUI \uc640 \ud568\uaed8 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc11c\ubc84\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. \ucd5c\ucd08 \uc2e4\ud589\uc2dc EULA \ub3d9\uc758\ub97c \uc704\ud574 \uc11c\ubc84\uac00 \ubc14\ub85c \uaebc\uc9c0\ub294\ub370, run/eula.txt \uc5d0 \ub3d9\uc758\ud558\uc2e0 \uc774\ud6c4\uc5d0\ub294 \uc11c\ubc84\uac00 \uc815\uc0c1\uc801\uc73c\ub85c \uc2e4\ud589\ub420 \uac83\uc785\ub2c8\ub2e4. \uc774\ud6c4 \uc8fc\uc18c localhost \ub97c \ud1b5\ud574 \uc811\uc18d\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note \ub9cc\uc57d \ubaa8\ub4dc\uac00 \uc804\uc6a9 \uc11c\ubc84\uc5d0\uc11c\ub3c4 \uc0ac\uc6a9\ub418\uc5b4\uc57c \ud55c\ub2e4\uba74, \uc804\uc6a9 \uc11c\ubc84\uc5d0\uc11c\ub3c4 \ubaa8\ub4dc\ub97c \ud14c\uc2a4\ud2b8\ud574\ubcf4\ub294 \uac83\uc774 \ub298 \uad8c\uc7a5\ub429\ub2c8\ub2e4.","title":"\uc18c\uac1c"},{"location":"gettingstarted/#_1","text":"\uc774 \ud398\uc774\uc9c0\ub294 \uac04\ub2e8\ud55c \ubaa8\ub4dc\ub97c \ub9cc\ub4e4 \uc218 \uc788\ub3c4\ub85d \ud574\uc8fc\ub294 \uac00\uc774\ub4dc \uc785\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \uc774 \ubb38\uc11c\uc758 \ub2e4\ub978 \ud398\uc774\uc9c0\ub4e4\uc744 \ubcf4\uc2dc\uae30 \uc804\uc5d0 \uc774 \ud398\uc774\uc9c0\ub97c \uba3c\uc800 \uc77d\ub294 \uac83\uc744 \uad8c\uc7a5\ub4dc\ub9bd\ub2c8\ub2e4.","title":"\ud3ec\uc9c0 \ubaa8\ub4dc \uac1c\ubc1c \uc2dc\uc791\ud558\uae30"},{"location":"gettingstarted/#_2","text":"\uba3c\uc800, Java 17 \uac1c\ubc1c \ud0a4\ud2b8(JDK)\uc640 64\ube44\ud2b8 Java \uac00\uc0c1 \uba38\uc2e0(JVM)\uc744 \ub2e4\uc6b4\ubc1b\uc73c\uc138\uc694. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc640 \ud3ec\uc9c0\ub294 \ub458\ub2e4 Java 17\ub85c \ucef4\ud30c\uc77c\uc774 \uac00\ub2a5\ud558\uae30\uc5d0 \uc774\ub97c \uc0ac\uc6a9\ud558\uc2dc\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. 32\ube44\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc2dc\uba74 \uc544\ub798 \uba85\uc2dc\ub41c Gradle \uc791\uc5c5 \uc218\ud589\ub3c4\uc911 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AdoptOpenJDK \uc5d0\uc11c \ub2e4\uc6b4\ubc1b\uc73c\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0 \uc0ac\uc774\ud2b8 \uc5d0\uc11c \ubaa8\ub4dc \uac1c\ubc1c \ud0a4\ud2b8(MDK)\ub97c \ub2e4\uc6b4\ubc1b\uc73c\uc138\uc694. \ub2e4\uc6b4\ubc1b\uc740 MDK \uc758 \uc555\ucd95\uc744 \ub97c \ube44\uc5b4\uc788\ub294 \ud3f4\ub354\uc5d0 \ud574\uc81c\ud558\ub3c4\ub85d \ud558\uc138\uc694. \uadf8\ub7ec\uba74 \uc5ec\ub7ec \ud30c\uc77c\ub4e4\uacfc src/main/java \uc5d0 \uc788\ub294 \uc608\uc81c \ubaa8\ub4dc\uac00 \ubcf4\uc774\uc2e4\ud150\ub370, \ubaa8\ub4dc \uac1c\ubc1c\ud560\ub54c, \uc544\ub798 \uba85\uc2dc\ub41c \ud30c\uc77c\ub4e4\uc740 \uac74\ub4dc\uc2e4 \ud544\uc694\uac00 \uc788\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc9c0 \uc54a\uc73c\uba70 \uc5ec\ub7ec \ubaa8\ub4dc \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uc7ac\uc0ac\uc6a9\ud558\uc154\ub3c4 \uad28\ucc2e\uc2b5\ub2c8\ub2e4: * build.gradle * gradlew.bat * gradlew * gradle \ud3f4\ub354 \uc704 \ud30c\uc77c\ub4e4\uc744 \uc0c8\ub85c\uc6b4 \ud3f4\ub354\ub85c \uc62e\uae30\uc138\uc694. \uadf8 \uc0c8 \ud3f4\ub354\ub294 \ubaa8\ub4dc \ud504\ub85c\uc81d\ud2b8 \ud3f4\ub354\uac00 \ub420 \uac83\uc785\ub2c8\ub2e4. IDE \ub97c \uace0\ub974\uc138\uc694: * \ud3ec\uc9c0\uc5d0\uc11c \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc6d0\ub418\ub294 IDE \ub294 Eclipse \uac00 \uc720\uc77c\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 Intellij IDEA \ub098 Visual Studio Code \uc5d0\uc11c \uac1c\ubc1c\ud558\uae30 \uc704\ud574 \ucd94\uac00\uc801\uc778 run \uc791\uc5c5\ub4e4 \ub610\ud55c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc0ac\uc2e4 \uc5b4\ub5a4 IDE \ub4e0 \ubaa8\ub4dc \uac1c\ubc1c\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ub9cc\ub4e4 \uc218 \uc788\uae34 \ud569\ub2c8\ub2e4. * Eclipse \uc640 Intellij IDEA \ub294 Gradle \uc744 \uad00\ub9ac\ud574 \uc8fc\uae30 \ub54c\ubb38\uc5d0 \ucd08\uae30 \uac1c\ubc1c \ud658\uacbd \uc124\uc815\uc744 \uac04\ub2e8\ud558\uac8c \ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \ucd08\uae30 \uac1c\ubc1c\ud658\uacbd \uc124\uc815\uc5d0\ub294, \ubaa8\uc7a5 \ub610\ub294 \ud3ec\uc9c0\uc640 \uac19\uc740 \uc5ec\ub7ec \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uacf5\uc720 \uc0ac\uc774\ud2b8\uc5d0\uc11c \ud328\ud0a4\uc9c0\ub97c \ubc1b\ub294 \uac83\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. VSCode \ub294 Gradle Tasks \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud574 \ucd08\uae30 \uac1c\ubc1c \ud658\uacbd \uc124\uc815\uc744 \uad00\ub9ac\ud558\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. * \ub300\ubd80\ubd84, \ub610\ub294 \ubaa8\ub4e0 \uc0c1\ud669\uc5d0\uc120, build.gradle \uc744 \uc218\uc815\ud558\uace0 \uc774\ub97c \uc801\uc6a9\ud558\uae30 \uc704\ud574\uc11c\ub294 Gradle \uc744 \ud638\ucd9c\ud558\uc5ec \ud504\ub85c\uc81d\ud2b8\ub97c \ub2e4\uc2dc \ucc98\ub9ac\ud558\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4. \uc704\uc5d0\uc11c \uc5b8\uae09\ud55c \ub450 IDE \ub294 Gradle \ud328\ub110\uc758 \uc0c8\ub85c\uace0\uce68 \ubc84\ud2bc\uc73c\ub85c \ud504\ub85c\uc81d\ud2b8\ub97c \ub2e4\uc2dc \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IDE \uc2e4\ud589 \uad6c\uc131 \uc0dd\uc131: * \uc774\ud074\ub9bd\uc2a4: runEclipseRuns \ub97c \uc2e4\ud589\ud558\uc138\uc694( gradlew genEclipseRuns ). \uc774\ub294 \uac8c\uc784 \uc2e4\ud589 \uad6c\uc131\uc744 \uc0dd\uc131\ud558\uace0 \uac8c\uc784\uc5d0 \ud544\uc694\ud55c \uc5d0\uc14b\ub4e4\uc744 \ub2e4\uc6b4\ubc1b\uc2b5\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc774 \ub05d\ub09c \uc774\ud6c4 \ud504\ub85c\uc81d\ud2b8\ub97c \uc0c8\ub85c\uace0\uce58\uc138\uc694. * Intellij: genIntellijRuns \ub97c \uc2e4\ud589\ud558\uc138\uc694( gradlew genIntellijRuns ). \uc774\ub294 \uac8c\uc784 \uc2e4\ud589 \uad6c\uc131\uc744 \uc0dd\uc131\ud558\uace0 \uac8c\uc784\uc5d0 \ud544\uc694\ud55c \uc5d0\uc14b\ub4e4\uc744 \ub2e4\uc6b4\ubc1b\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \u201cmodule not specified\u201d \uc640 \uac19\uc740 \uc624\ub958\uac00 \ub09c\ub2e4\uba74 \uc124\uc815\uc744 \uc218\uc815\ud558\uc5ec \u201cmain\u201d \ubaa8\ub4c8\uc744 \uc120\ud0dd\ud558\uc2dc\uac70\ub098 ideaModule \uc18d\uc131\uc744 \uc0ac\uc6a9\ud574 \ubaa8\ub4c8\uc744 \uc120\ud0dd\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. * VSCode: genVSCodeRuns \ub97c \uc2e4\ud589\ud558\uc138\uc694( gradlew genVSCodeRuns ). \uc774\ub294 \uac8c\uc784 \uc2e4\ud589 \uad6c\uc131\uc744 \uc0dd\uc131\ud558\uace0 \uac8c\uc784\uc5d0 \ud544\uc694\ud55c \uc5d0\uc14b\ub4e4\uc744 \ub2e4\uc6b4\ubc1b\uc2b5\ub2c8\ub2e4.","title":"\uccab \ubaa8\ub4dc \uac1c\ubc1c \ud574\ubcf4\uae30"},{"location":"gettingstarted/#_3","text":"build.gradle \ud30c\uc77c\uc744 \uc218\uc815\ud574 \ubaa8\ub4dc\uac00 \uc5b4\ub5bb\uac8c \ube4c\ub4dc\ub418\uc5b4\uc57c \ud560\uc9c0 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(\ubaa8\ub4dc \ud30c\uc77c \uc774\ub984, \ubc84\uc804, \ub4f1). Important buildscript {} \ubd80\ubd84\uc744 \uc808\ub54c \uc218\uc815\ud558\uc9c0 \ub9c8\uc138\uc694. \uae30\ubcf8\uc801\uc73c\ub85c \uc801\ud600\uc788\ub294 \ub0b4\uc6a9\uc740 ForgeGradle \uc774 \ub3d9\uc791\ud558\uae30 \uc704\ud574 \ud544\uc694\ud569\ub2c8\ub2e4. // Only edit below this line, the above code adds and enables the necessary things for Forge to be setup. \uc544\ub798 \uc788\ub294 \ub0b4\uc6a9\ub4e4\uc740 \uac70\uc758 \uc218\uc815\ud558\uc154\ub3c4 \uad1c\ucc2e\uc740 \uac83\ub4e4\uc785\ub2c8\ub2e4.","title":"\ubaa8\ub4dc \uc815\ubcf4 \uc218\uc815\ud558\uae30"},{"location":"gettingstarted/#buildgradle","text":"\uc774 \uc124\uc815\ub4e4\uc740 \ubaa8\ub4e0 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \ube4c\ub4dc\ub418\ub294 \ud30c\uc77c\uc758 \uc774\ub984\uc744 \ubcc0\uacbd\ud558\uc2dc\ub824\uba74 - archivesBaseName \uc758 \uac12\uc744 \uc218\uc815\ud558\uc138\uc694. \u201cmaven \ucf54\ub514\ub124\uc774\ud2b8\u201d\ub97c \ubcc0\uacbd\ud558\uc2dc\ub824\uba74 - group \uc758 \uac12\uc744 \uc218\uc815\ud558\uc138\uc694. \ubaa8\ub4dc\uc758 \ubc84\uc804\uc744 \ubcc0\uacbd\ud558\uc2dc\ub824\uba74 - version \uc758 \uac12\uc744 \uc218\uc815\ud558\uc138\uc694. \uc2e4\ud589 \uad6c\uc131\uc5d0\uc11c mod id\ub97c \ubc14\uafb8\uc2dc\ub824\uba74 - examplemod \ub97c \uc804\ubd80 \ubaa8\ub4dc\uc758 id \ub85c \ubcc0\uacbd\ud558\uc138\uc694.","title":"\uac04\ub2e8\ud55c build.gradle \uc124\uc815"},{"location":"gettingstarted/#_4","text":"Forge \ub294 \ubaa8\uc7a5\uc758 \uacf5\uc2dd \ub9e4\ud551(MojMaps)\uc744 \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4. \uc544\uc9c1 Javadoc \uc774\ub791 \ud568\uc218 \uc778\uc790 \uc774\ub984\uc740 \ud574\ub2f9 \ub9e4\ud551\uc5d0 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud604\uc7ac\ub85c\uc36c \uc774 \ub9e4\ud551\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \ubc95\uc801\uc73c\ub85c \uc644\uc804\ud788 \uc548\uc804\ud55c\uc9c0 \ud655\uc2e4\ud558\uc9c4 \uc54a\uc73c\ub098 \ubaa8\uc7a5\uce21\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30\ub97c \ubc14\ub77c\ub2c8 \ud3ec\uc9c0\uc5d0\uc11c\ub294 \uc774\ub97c \uc0ac\uc6a9\ud558\uae30\ub85c \uacb0\uc84d\ud558\uc600\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\ud300\uc758 \uc785\uc7a5\uc740 \uc774\uacf3 \uc5d0\uc11c \ub354 \uc54c\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubaa8\uc7a5 \uacf5\uc2dd \ub9e4\ud551\uc73c\ub85c \ubcc0\uacbd\ud558\uae30."},{"location":"gettingstarted/#_5","text":"\ubaa8\ub4dc\ub97c \ube4c\ub4dc\ud558\uae30 \uc704\ud574\uc11c\ub294 gradlew build \ub97c \uc2e4\ud589\ud558\uc138\uc694. \uc774\ub294 build/libs \uc5d0 \ube4c\ub4dc\ub41c Jar \ud30c\uc77c\uc744 \uc774\ub984 [archivesBaseName]-[version],jar \ub85c \ucd9c\ub825\ud560 \uac83\uc785\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc740 \ud3ec\uc9c0\uac00 \uc124\uce58\ub41c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ud3f4\ub354\uc758 mods \uc5d0 \ub123\uc5b4 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\ub97c \ud14c\uc2a4\ud2b8\ud560\ub54c \uac00\uc7a5 \uc26c\uc6b4 \ubc29\ubc95\uc740, \ud504\ub85c\uc81d\ud2b8\ub97c \uc124\uc815\ud560\ub54c \uc0dd\uc131\ub41c \uc2e4\ud589 \uad6c\uc131 \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec \uac8c\uc784\uc744 \uc2e4\ud589\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ub54c \uac8c\uc784\uc740 <runDir> \uc5d0 \uc2e4\ud589\ub418\uba70, \uc774\ub54c \uc2e4\ud589 \uad6c\uc131\uc5d0 \uc815\uc758\ub41c \ubaa8\ub4dc \uc18c\uc2a4 \ucf54\ub4dc\ub4e4\uacfc \ud568\uaed8 \uc2e4\ud589\ub429\ub2c8\ub2e4. MDK \ub294 \uae30\ubcf8\uc73c\ub85c main \uc18c\uc2a4\uc14b\uc744 \ud3ec\ud568\ud558\ub2c8, src/main/java \uc5d0 \uc791\uc131\ud558\uc2e0 \ucf54\ub4dc\ub4e4\uc740 \uac8c\uc784 \uc2e4\ud589\uc2dc \uc0ac\uc6a9\ud560 \ucf54\ub4dc\uc5d0 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ub610\ud55c gradlew runServer \ub97c \ud1b5\ud574 \uc804\uc6a9 \uc11c\ubc84\ub97c \uc2e4\ud589\ud558\uc2e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc804\uc6a9 \uc11c\ubc84\ub97c \uc774\ub807\uac8c \uc2e4\ud589\ud558\uc2dc\uba74 GUI \uc640 \ud568\uaed8 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uc11c\ubc84\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. \ucd5c\ucd08 \uc2e4\ud589\uc2dc EULA \ub3d9\uc758\ub97c \uc704\ud574 \uc11c\ubc84\uac00 \ubc14\ub85c \uaebc\uc9c0\ub294\ub370, run/eula.txt \uc5d0 \ub3d9\uc758\ud558\uc2e0 \uc774\ud6c4\uc5d0\ub294 \uc11c\ubc84\uac00 \uc815\uc0c1\uc801\uc73c\ub85c \uc2e4\ud589\ub420 \uac83\uc785\ub2c8\ub2e4. \uc774\ud6c4 \uc8fc\uc18c localhost \ub97c \ud1b5\ud574 \uc811\uc18d\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note \ub9cc\uc57d \ubaa8\ub4dc\uac00 \uc804\uc6a9 \uc11c\ubc84\uc5d0\uc11c\ub3c4 \uc0ac\uc6a9\ub418\uc5b4\uc57c \ud55c\ub2e4\uba74, \uc804\uc6a9 \uc11c\ubc84\uc5d0\uc11c\ub3c4 \ubaa8\ub4dc\ub97c \ud14c\uc2a4\ud2b8\ud574\ubcf4\ub294 \uac83\uc774 \ub298 \uad8c\uc7a5\ub429\ub2c8\ub2e4.","title":"\ubaa8\ub4dc \ube4c\ub4dc \ubc0f \ud14c\uc2a4\ud2b8"},{"location":"gettingstarted/structuring/","text":"\ubaa8\ub4dc \uad6c\uc870 \uc9dc\uae30 \ud55c\ubc88 \ubaa8\ub4dc \ud30c\uc77c\ub4e4\uc744 \uc5b4\ub5bb\uac8c \ub098\ub204\uace0 \uc815\ub9ac\ud558\ub294\uc9c0, \uadf8\ub9ac\uace0 \uc5b4\ub5a4 \ud30c\uc77c\uc774 \ubb34\uc2a8 \uc5ed\ud560\uc744 \ud558\ub294\uc9c0 \uc0b4\ud3b4\ubcf4\ub3c4\ub85d \ud558\uc8e0. \ud328\uce90\uc9c0 \uc774\ub984 \uc4f0\uae30 \ud328\ud0a4\uc9c0 \uc774\ub984\uc73c\ub85c\ub294 \uace0\uc720\ud55c \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc138\uc694, \ub9cc\uc57d \ud504\ub85c\uc81d\ud2b8\uc640 \uc5f0\uad00\ub41c URL \uc774 \uc788\ub2e4\uba74 \ucd5c\uc0c1\uc704 \ud328\ud0a4\uc9c0\ub85c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \u201cexample.com\u201d \uc744 \uc18c\uc720\ud558\uace0 \uacc4\uc2e0\ub2e4\uba74 com.example \uc744 \ucd5c\uc0c1\uc704 \ud328\ud0a4\uc9c0\ub85c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd5c\uc0c1\uc704 \ud328\uce90\uc9c0\ub97c \ub9cc\ub4dc\ub294 \uac83\uc740 \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. Important \uc18c\uc720\ud558\uace0 \uacc4\uc2dc\uc9c0 \uc54a\uc740 \ub3c4\uba54\uc778\uc744 \ucd5c\uc0c1\uc704 \ud328\uce90\uc9c0\ub85c \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc138\uc694. \uace0\uc720\ud558\uae30\ub9cc \ud558\ub2e4\uba74 \ub3c4\uba54\uc778 \ub9d0\uace0\ub3c4 \uc774\uba54\uc77c\uc774\ub098, \uc774\ub984 \ub610\ub294 \ub2c9\ub124\uc784\uc744 \uc0ac\uc6a9\ud558\uc2e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \ub2e4\uc74c\uc73c\ub860, \ubaa8\ub4dc\ub9cc\uc758 \uace0\uc720\ud55c \uc774\ub984\uc744 \ub4a4\uc5d0 \ubd99\uc785\ub2c8\ub2e4, \uc608\ub97c \ub4e4\uc5b4 \uace0\uc720\ud55c \uc774\ub984\uc774 examplemod \ub77c\uba74 \ucd5c\uc885\uc801\uc73c\ub85c \ud328\uce90\uc9c0\ub294 com.example.examplemod \uac00 \ub420 \uac83\uc785\ub2c8\ub2e4. mods.toml \ud30c\uc77c Important mods.toml \uc740 \ubb34\uc870\uac74 \ub77c\uc774\uc120\uc2a4\ub97c \uc9c0\uc815\ud574\uc57c\ub9cc \ud569\ub2c8\ub2e4. \ub77c\uc774\uc120\uc2a4\uac00 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc73c\uba74 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774\uacf3\uc744 \ucc38\uc870\ud558\uc5ec \ub77c\uc774\uc13c\uc2a4\ub97c \uc120\ud0dd\ud558\uc138\uc694.: https://choosealicense.com, \ubaa8\ub4e0 \ub77c\uc774\uc13c\uc2a4 \ub9ac\uc2a4\ud2b8\ub294 \uc774\uacf3\uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4: https://www.olis.or.kr/license/compareGuide.do \uc774 \ud30c\uc77c\uc740 \ubaa8\ub4dc\uc758 \uba54\ud0c0\ub370\uc774\ud130\ub97c \uc815\uc758\ud569\ub2c8\ub2e4. \uc774 \uba54\ud0c0\ub370\uc774\ud130\uc758 \uc77c\ubd80\ub294 \uba54\uc778 \ud654\uba74\uc758 \u2018Mods\u2019 \ud0ed\uc5d0 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \ub610\ud55c \ud30c\uc77c \ud558\ub098\ub85c \ubaa8\ub4dc \uc5ec\ub7ec\uac1c\ub97c \uae30\uc220\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. mods.toml \ud30c\uc77c\uc740 TOML \ud615\uc2dd\uc73c\ub85c \uc791\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4, MDK \uc5d0 \ub4e4\uc5b4\uc788\ub294 \uc608\uc81c mods.toml \ud30c\uc77c\uc740 \ud30c\uc77c\uc758 \ub0b4\uc6a9\uc744 \uae30\uc220\ud558\ub294\uc5ec\ub7ec \uc8fc\uc11d\ub4e4\uc774 \uc791\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc740 src/main/resources/META-INF/mods.toml \uc5d0 \uc704\uce58\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc 1\uac1c\ub97c \uae30\uc220\ud558\ub294 \uac04\ub2e8\ud55c mods.toml \uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \uc791\uc131\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4: # \uc0ac\uc6a9\ud560 \ubaa8\ub4dc\ub85c\ub354\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. - \ub300\ub2e4\uc218\uc758 \ud3ec\uc9c0 @Mod \ubaa8\ub4dc\ub4e4\uc740 javafml \uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. modLoader=\"javafml\" # \uc0ac\uc6a9\ud560 \ubaa8\ub4dc \ub85c\ub354\uc758 \ubc84\uc804 \ubc94\uc704\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4 - \ub300\ub2e4\uc218\uc758 \ud3ec\uc9c0 @Mod \ubaa8\ub4dc\ub4e4\uc740 \ud3ec\uc9c0 \ubc84\uc804\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. # 1.19 \ud3ec\uc9c0 \ubc84\uc804\uc740 41 \uc785\ub2c8\ub2e4. loaderVersion=\"[41,)\" # \ubaa8\ub4dc\uc758 \ub77c\uc774\uc13c\uc2a4\uc785\ub2c8\ub2e4. \ub77c\uc774\uc120\uc2a4 \uc124\uc815\uc740 \ud544\uc218\uc801\uc774\uba70, \uc7ac\ubc30\ud3ec \uc18d\uc131\uacfc \uad00\ub828 \uad8c\ub9ac\ub97c \uc81c 3\uc790\uac00 \uc27d\uac8c \uc774\ud574\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. # \ub77c\uc774\uc120\uc2a4 \uc120\ud0dd\uc740 \uc774\uacf3\uc744 \ucc38\uace0\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4: https://choosealicense.com/ \uc800\uc791\uad8c\uc740 \uae30\ubcf8\uc73c\ub85c \uc800\uc791\uc790\uac00 \ubaa8\ub4e0 \uad8c\ub9ac\ub97c \ubcf4\uc720\ud569\ub2c8\ub2e4(All rights reserved), \uadf8\ub807\uae30\uc5d0 \ud3ec\uc9c0\uc5d0\uc11c\ub3c4 \uc774\ub97c \uae30\ubcf8\uac12\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. license=\"All Rights Reserved\" # \ubaa8\ub4dc\uc5d0 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc2dc \ubb38\uc81c \uc81c\uae30\ub97c \ud560 URL \uc785\ub2c8\ub2e4. issueTrackerURL=\"github.com/MinecraftForge/MinecraftForge/issues\" # \uc774 \ud30c\uc77c\uc5d0 \uc815\uc758\ub41c \ubaa8\ub4dc\ub4e4\uc774 \ubcc4\ub3c4\uc758 \ub9ac\uc18c\uc2a4\ud329\uc73c\ub85c \ud45c\uc2dc\ub418\uc5b4\uc57c \ud560\uc9c0\ub97c \uc815\uc758\ud569\ub2c8\ub2e4. showAsResourcePack=false [[mods]] modId=\"examplemod\" version=\"1.0.0.0\" displayName=\"\uc608\uc81c \ubaa8\ub4dc\" updateJSONURL=\"minecraftforge.net/versions.json\" displayURL=\"minecraftforge.net\" logoFile=\"logo.png\" credits=\"\uc800\ud76c \ubd80\ubaa8\ub2d8\uc5d0\uac8c \uac10\uc0ac\ub4dc\ub9ac\uace0 \uc2f6\uc2b5\ub2c8\ub2e4..\" authors=\"Author\" description=''' \ud759\uc744 \ub2e4\uc774\uc544\ubaac\ub4dc\ub85c \uc870\ud569\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc774 \uc608\uc81c\ubaa8\ub4dc\ub294 \uc601\uac81\uc758 \uc2dc\uac04\ub3d9\uc548 \uc774\uc5b4\uc838 \ub0b4\ub824\uc628 \uace0\ub300\uc758 \uc804\ud1b5\uc785\ub2c8\ub2e4. \uc2e0\uc131\ud55c \ub178\uce58\uaed8\uc11c \uc2dc\uc791\ud558\uc168\uace0 \uc82d\uc774 \ud658\uc131\uc801\uc778 \ubb34\uc9c0\uac1c\ub97c \ub2ec\uc558\uc73c\uba70, \ub514\ub108\ubcf8\uc774 \ub4a4\uc9d1\uc5c8\uace0...(\uc0dd\ub7b5) ''' displayTest=\"MATCH_VERSION\" [[dependencies.examplemod]] modId=\"forge\" mandatory=true versionRange=\"[41,)\" ordering=\"NONE\" side=\"BOTH\" [[dependencies.examplemod]] modId=\"minecraft\" mandatory=true versionRange=\"[1.19,1.20)\" ordering=\"NONE\" side=\"BOTH\" \ub9cc\uc57d \ubb38\uc790\uc5f4\uc774 ${file.jarVersion} \ucc98\ub7fc \uc791\uc131\ub418\uc5c8\ub2e4\uba74 \ud3ec\uc9c0\ub294 \ub7f0\ud0c0\uc784 \ub3c4\uc911 \uc774 \ubb38\uc790\uc5f4\uc744 manifest \uc758 Implementation Version \uc73c\ub85c \ub300\uccb4\ud569\ub2c8\ub2e4. \ubaa8\ub4dc \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c\ub294 manifest \ub97c \uc77d\uc5b4\ub4e4\uc77c \ubaa8\ub4dc jar \uac00 \uc5c6\uae30 \ub54c\ubb38\uc5d0 NONE \uc774 \ub300\uc2e0 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \uc774 \ud544\ub4dc\ub294 \uadf8\ub300\ub85c \ub0c5\ub450\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \uc544\ub798 \ud45c\uc5d0\ub294 \ubaa8\ub4dc\uac00 \uac00\uc9c8 \uc218 \uc788\ub294 \uc18d\uc131\ub4e4\uc774 \ud45c\uc2dc\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4, \ud544\uc218 \ub85c \ud45c\uc2dc\ub418\uc5b4 \uc788\ub294 \uc18d\uc131\uc740 \uae30\ubcf8\uac12\uc774 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \ubb34\uc870\uac74 \uc815\uc758\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc624\ub958\uac00 \ub0a0 \uac83\uc785\ub2c8\ub2e4. \uc18d\uc131 \ud0c0\uc785 \uae30\ubcf8\uac12 \uc124\uba85 modid string \ud544\uc218 \uc774 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514. version string \ud544\uc218 \ubaa8\ub4dc\uc758 \ubc84\uc804, \uc5ec\ub7ec \uc22b\uc790\uac00 \ub9c8\uce68\ud45c\ub85c \ubd84\ub9ac\ub41c \ud615\ud0dc\uc5ec\uc57c \ud569\ub2c8\ub2e4, \ubc84\uc804 \uba85\uba85 \uaddc\uce59\uc744 \ub530\ub978\ub2e4\uba74 \ub354 \uc88b\uc2b5\ub2c8\ub2e4. displayName string \ud544\uc218 \uc77d\uae30 \uc26c\uc6b4 \ubaa8\ub4dc \uc774\ub984. updateJSONURL string \"\" \ubc84\uc804 JSON URL. displayURL string \"\" \ubaa8\ub4dc\uc758 \ud648\ud398\uc774\uc9c0 URL. logoFile string \"\" \ubaa8\ub4dc\uc758 \ub85c\uace0 \ud30c\uc77c \uc774\ub984. \ub85c\uace0 \uc774\ubbf8\uc9c0 \ud30c\uc77c\uc740 \ub9ac\uc18c\uc2a4 \ud3f4\ub354 \ucd5c\uc0c1\uc704\uc5d0 \uc874\uc7ac\ud558\uc5ec\uc57c \ud558\uba70, \uadf8 \ud558\uc704 \ud3f4\ub354\uc5d0 \uc874\uc7ac\ud558\uba74 \uc548\ub429\ub2c8\ub2e4. credits string \"\" \uc5b8\uae09\ud558\uace0 \uc2f6\uc740 \ud569\uc758\uc0ac\ud56d \ub610\ub294 \uacf5\ub85c. authors string \"\" \ubaa8\ub4dc\uc758 \uc800\uc790. description string \ud544\uc218 \ubaa8\ub4dc \uc124\uba85. dependencies [list] [] \ubaa8\ub4dc\uc758 \uc885\uc18d\uc131 \ubaa9\ub85d. * \ubaa8\ub4e0 \ubc84\uc804 \ubc94\uc704\ub294 Maven \ubc84\uc804 \ubc94\uc704 \uaddc\uc545 \uc744 \ub530\ub985\ub2c8\ub2e4. \ubaa8\ub4dc \ud30c\uc77c \uc77c\ubc18\uc801\uc73c\ub85c \ud328\ud0a4\uc9c0 \uc548\uc5d0 \uc774\ub984\uc774 \ubaa8\ub4dc \uc774\ub984\uc778 \ud30c\uc77c\uc744 \ub9cc\ub4e4\uace0 \uac70\uae30\uc11c\ubd80\ud130 \uc2dc\uc791\ud569\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc740 \ubaa8\ub4dc\uc758 \uc2dc\uc791 \uc9c0\uc810 \uc774\uba70, \ub530\ub85c \ud2b9\uc218\ud558\uac8c \ud45c\uc2dc\ub97c \ud574 \ub450\uc5b4 \uc774\ub97c \uc54c\ub9bd\ub2c8\ub2e4. @Mod \ub294 \ubb34\uc5c7\uc778\uac00\uc694? \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc740 \ud3ec\uc9c0 \ubaa8\ub4dc \ub85c\ub354\uc5d0\uac8c \ud074\ub798\uc2a4\uac00 \ubaa8\ub4dc\uc758 \uc2dc\uc791 \uc9c0\uc810\uc784\uc744 \ub098\ud0c0\ub0b4\uae30 \uc704\ud574 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \ub294 src/main/resources/META-INF/mods.toml \uc5d0 \uc815\uc758\ub41c mod id \uc640 \ub3d9\uc77c\ud574\uc57c \ud569\ub2c8\ub2e4. \ud558\uc704 \ud328\uce90\uc9c0\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucf54\ub4dc \ub9d0\ub054\ud558\uac8c \uc815\ub9ac\ud558\uae30 \ubaa8\ub4e0\uac78 \ud328\ud0a4\uc9c0 \ud558\ub098\uc5d0, \ud074\ub798\uc2a4 \ud558\ub098\uc5d0 \ub2e4 \ubc00\uc5b4\ub123\ub294 \uac83 \ubcf4\ub2e4 \ud558\uc704 \ud328\uce90\uc9c0\ub97c \ub9cc\ub4e4\uc5b4 \ubd84\ub9ac\ud558\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c, common \uacfc client \ud558\uc704 \ud328\uce90\uc9c0\ub97c \ub9cc\ub4e4\uc5b4 \ucf54\ub4dc\ub97c \ubd84\ub9ac\ud569\ub2c8\ub2e4, \uc774\ub54c common \uc740 \uc11c\ubc84/\ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc2e4\ud589\ub420 \ucf54\ub4dc, client \ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub420 \ucf54\ub4dc\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. common \ud328\uce90\uc9c0\uc5d0\ub294 \uc544\uc774\ud15c, \ube14\ub85d, \ube14\ub85d \uc5d4\ud2f0\ud2f0 \uc785\ub2c8\ub2e4(\uac01\uac01 \ubcc4\ub3c4\uc758 \ud328\uce90\uc9c0\uc5d0 \ub4e4\uc5b4\uac08 \uc218\ub3c4 \uc788\uc74c). \ub80c\ub354\ub7ec\ub098 UI \ub4e4\uc740 client \ud328\uce90\uc9c0\uc5d0 \ub4e4\uc5b4\uac08 \uac83\uc785\ub2c8\ub2e4. Note \ud328\uce90\uc9c0\ub97c \uc774\ub807\uac8c \ub098\ub204\ub294 \uac83\uc774 \uc77c\ubc18\uc801\uc774\ub098 \uc644\uc804\ud788 \uc120\ud0dd\uc0ac\ud56d \uc785\ub2c8\ub2e4, \ud328\uce90\uc9c0\ub294 \ub9c8\uc74c\ub300\ub85c \ub098\ub204\uc154\ub3c4 \ub429\ub2c8\ub2e4. \ud558\uc704 \ud328\uce90\uc9c0\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucf54\ub4dc\ub97c \ub098\ub214\uc73c\ub85c\uc368 \ubaa8\ub4dc\ub97c \uc870\uae08\ub354 \uc815\ub3c8\ud558\uace0 \uc870\uc9c1\ud654\ud558\uc5ec \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub798\uc2a4 \uc774\ub984 \uaddc\uce59 \ud074\ub798\uc2a4 \uc774\ub984 \uaddc\uce59\uc740 \ud074\ub798\uc2a4\uac00 \uc5b4\ub514 \uc0ac\uc6a9\ub418\ub294\uc9c0 \ud574\uc11d\ud558\uae30 \uc27d\ub3c4\ub85d \ub9cc\ub4e4\uc5b4 \uc8fc\uba70, \ubb50\uac00 \uc5b4\ub514\uc788\ub294\uc9c0 \ucc3e\uae30 \uc27d\ub3c4\ub85d\ub3c4 \ud574\uc90d\ub2c8\ub2e4. \uc5d0\ub97c \ub4e4\uc5b4: PowerRing \uc774\ub780 Item \uc740 item \ud328\uce90\uc9c0\uc5d0 PowerRingItem \uc774\ub780 \uc774\ub984\uc73c\ub85c \uc788\uc744 \uac83\uc785\ub2c8\ub2e4. NotDirt \ub77c\ub294 Block \uc740 block \ud328\uce90\uc9c0\uc5d0 NotDirtBlock \uc774\ub780 \uc774\ub984\uc73c\ub85c \uc788\uc744 \uac83\uc785\ub2c8\ub2e4. SuperChewer \ub77c\ub294 BlockEntity \ub294 block.entity \ub610\ub294 blockentity \ub77c\ub294 \ud328\uce90\uc9c0\uc5d0 SuperChewerBlockEntity \uc774\ub77c\ub294 \uc774\ub984\uc73c\ub85c \uc788\uc744 \uac83\uc785\ub2c8\ub2e4. \ud074\ub798\uc2a4 \uc774\ub984 \ub4a4\uc5d0 \ud074\ub798\uc2a4\uc758 \uc885\ub958 \ub97c \uc368\ub193\uc73c\uc2dc\uba74 \ub098\uc911\uc5d0 \ubb34\uc2a8 \ud074\ub798\uc2a4\uc778\uc9c0 \uc2dd\ubcc4\ud558\uae30 \uc27d\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4.","title":"\ubaa8\ub4dc \uae30\ubcf8 \uad6c\uc870 \uc791\uc131\ud558\uae30"},{"location":"gettingstarted/structuring/#_1","text":"\ud55c\ubc88 \ubaa8\ub4dc \ud30c\uc77c\ub4e4\uc744 \uc5b4\ub5bb\uac8c \ub098\ub204\uace0 \uc815\ub9ac\ud558\ub294\uc9c0, \uadf8\ub9ac\uace0 \uc5b4\ub5a4 \ud30c\uc77c\uc774 \ubb34\uc2a8 \uc5ed\ud560\uc744 \ud558\ub294\uc9c0 \uc0b4\ud3b4\ubcf4\ub3c4\ub85d \ud558\uc8e0.","title":"\ubaa8\ub4dc \uad6c\uc870 \uc9dc\uae30"},{"location":"gettingstarted/structuring/#_2","text":"\ud328\ud0a4\uc9c0 \uc774\ub984\uc73c\ub85c\ub294 \uace0\uc720\ud55c \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc138\uc694, \ub9cc\uc57d \ud504\ub85c\uc81d\ud2b8\uc640 \uc5f0\uad00\ub41c URL \uc774 \uc788\ub2e4\uba74 \ucd5c\uc0c1\uc704 \ud328\ud0a4\uc9c0\ub85c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \u201cexample.com\u201d \uc744 \uc18c\uc720\ud558\uace0 \uacc4\uc2e0\ub2e4\uba74 com.example \uc744 \ucd5c\uc0c1\uc704 \ud328\ud0a4\uc9c0\ub85c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd5c\uc0c1\uc704 \ud328\uce90\uc9c0\ub97c \ub9cc\ub4dc\ub294 \uac83\uc740 \uc120\ud0dd\uc0ac\ud56d\uc785\ub2c8\ub2e4. Important \uc18c\uc720\ud558\uace0 \uacc4\uc2dc\uc9c0 \uc54a\uc740 \ub3c4\uba54\uc778\uc744 \ucd5c\uc0c1\uc704 \ud328\uce90\uc9c0\ub85c \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc138\uc694. \uace0\uc720\ud558\uae30\ub9cc \ud558\ub2e4\uba74 \ub3c4\uba54\uc778 \ub9d0\uace0\ub3c4 \uc774\uba54\uc77c\uc774\ub098, \uc774\ub984 \ub610\ub294 \ub2c9\ub124\uc784\uc744 \uc0ac\uc6a9\ud558\uc2e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \ub2e4\uc74c\uc73c\ub860, \ubaa8\ub4dc\ub9cc\uc758 \uace0\uc720\ud55c \uc774\ub984\uc744 \ub4a4\uc5d0 \ubd99\uc785\ub2c8\ub2e4, \uc608\ub97c \ub4e4\uc5b4 \uace0\uc720\ud55c \uc774\ub984\uc774 examplemod \ub77c\uba74 \ucd5c\uc885\uc801\uc73c\ub85c \ud328\uce90\uc9c0\ub294 com.example.examplemod \uac00 \ub420 \uac83\uc785\ub2c8\ub2e4.","title":"\ud328\uce90\uc9c0 \uc774\ub984 \uc4f0\uae30"},{"location":"gettingstarted/structuring/#modstoml","text":"Important mods.toml \uc740 \ubb34\uc870\uac74 \ub77c\uc774\uc120\uc2a4\ub97c \uc9c0\uc815\ud574\uc57c\ub9cc \ud569\ub2c8\ub2e4. \ub77c\uc774\uc120\uc2a4\uac00 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc73c\uba74 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774\uacf3\uc744 \ucc38\uc870\ud558\uc5ec \ub77c\uc774\uc13c\uc2a4\ub97c \uc120\ud0dd\ud558\uc138\uc694.: https://choosealicense.com, \ubaa8\ub4e0 \ub77c\uc774\uc13c\uc2a4 \ub9ac\uc2a4\ud2b8\ub294 \uc774\uacf3\uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4: https://www.olis.or.kr/license/compareGuide.do \uc774 \ud30c\uc77c\uc740 \ubaa8\ub4dc\uc758 \uba54\ud0c0\ub370\uc774\ud130\ub97c \uc815\uc758\ud569\ub2c8\ub2e4. \uc774 \uba54\ud0c0\ub370\uc774\ud130\uc758 \uc77c\ubd80\ub294 \uba54\uc778 \ud654\uba74\uc758 \u2018Mods\u2019 \ud0ed\uc5d0 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \ub610\ud55c \ud30c\uc77c \ud558\ub098\ub85c \ubaa8\ub4dc \uc5ec\ub7ec\uac1c\ub97c \uae30\uc220\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. mods.toml \ud30c\uc77c\uc740 TOML \ud615\uc2dd\uc73c\ub85c \uc791\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4, MDK \uc5d0 \ub4e4\uc5b4\uc788\ub294 \uc608\uc81c mods.toml \ud30c\uc77c\uc740 \ud30c\uc77c\uc758 \ub0b4\uc6a9\uc744 \uae30\uc220\ud558\ub294\uc5ec\ub7ec \uc8fc\uc11d\ub4e4\uc774 \uc791\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc740 src/main/resources/META-INF/mods.toml \uc5d0 \uc704\uce58\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc 1\uac1c\ub97c \uae30\uc220\ud558\ub294 \uac04\ub2e8\ud55c mods.toml \uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \uc791\uc131\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4: # \uc0ac\uc6a9\ud560 \ubaa8\ub4dc\ub85c\ub354\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. - \ub300\ub2e4\uc218\uc758 \ud3ec\uc9c0 @Mod \ubaa8\ub4dc\ub4e4\uc740 javafml \uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. modLoader=\"javafml\" # \uc0ac\uc6a9\ud560 \ubaa8\ub4dc \ub85c\ub354\uc758 \ubc84\uc804 \ubc94\uc704\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4 - \ub300\ub2e4\uc218\uc758 \ud3ec\uc9c0 @Mod \ubaa8\ub4dc\ub4e4\uc740 \ud3ec\uc9c0 \ubc84\uc804\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. # 1.19 \ud3ec\uc9c0 \ubc84\uc804\uc740 41 \uc785\ub2c8\ub2e4. loaderVersion=\"[41,)\" # \ubaa8\ub4dc\uc758 \ub77c\uc774\uc13c\uc2a4\uc785\ub2c8\ub2e4. \ub77c\uc774\uc120\uc2a4 \uc124\uc815\uc740 \ud544\uc218\uc801\uc774\uba70, \uc7ac\ubc30\ud3ec \uc18d\uc131\uacfc \uad00\ub828 \uad8c\ub9ac\ub97c \uc81c 3\uc790\uac00 \uc27d\uac8c \uc774\ud574\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. # \ub77c\uc774\uc120\uc2a4 \uc120\ud0dd\uc740 \uc774\uacf3\uc744 \ucc38\uace0\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4: https://choosealicense.com/ \uc800\uc791\uad8c\uc740 \uae30\ubcf8\uc73c\ub85c \uc800\uc791\uc790\uac00 \ubaa8\ub4e0 \uad8c\ub9ac\ub97c \ubcf4\uc720\ud569\ub2c8\ub2e4(All rights reserved), \uadf8\ub807\uae30\uc5d0 \ud3ec\uc9c0\uc5d0\uc11c\ub3c4 \uc774\ub97c \uae30\ubcf8\uac12\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. license=\"All Rights Reserved\" # \ubaa8\ub4dc\uc5d0 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc2dc \ubb38\uc81c \uc81c\uae30\ub97c \ud560 URL \uc785\ub2c8\ub2e4. issueTrackerURL=\"github.com/MinecraftForge/MinecraftForge/issues\" # \uc774 \ud30c\uc77c\uc5d0 \uc815\uc758\ub41c \ubaa8\ub4dc\ub4e4\uc774 \ubcc4\ub3c4\uc758 \ub9ac\uc18c\uc2a4\ud329\uc73c\ub85c \ud45c\uc2dc\ub418\uc5b4\uc57c \ud560\uc9c0\ub97c \uc815\uc758\ud569\ub2c8\ub2e4. showAsResourcePack=false [[mods]] modId=\"examplemod\" version=\"1.0.0.0\" displayName=\"\uc608\uc81c \ubaa8\ub4dc\" updateJSONURL=\"minecraftforge.net/versions.json\" displayURL=\"minecraftforge.net\" logoFile=\"logo.png\" credits=\"\uc800\ud76c \ubd80\ubaa8\ub2d8\uc5d0\uac8c \uac10\uc0ac\ub4dc\ub9ac\uace0 \uc2f6\uc2b5\ub2c8\ub2e4..\" authors=\"Author\" description=''' \ud759\uc744 \ub2e4\uc774\uc544\ubaac\ub4dc\ub85c \uc870\ud569\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \uc774 \uc608\uc81c\ubaa8\ub4dc\ub294 \uc601\uac81\uc758 \uc2dc\uac04\ub3d9\uc548 \uc774\uc5b4\uc838 \ub0b4\ub824\uc628 \uace0\ub300\uc758 \uc804\ud1b5\uc785\ub2c8\ub2e4. \uc2e0\uc131\ud55c \ub178\uce58\uaed8\uc11c \uc2dc\uc791\ud558\uc168\uace0 \uc82d\uc774 \ud658\uc131\uc801\uc778 \ubb34\uc9c0\uac1c\ub97c \ub2ec\uc558\uc73c\uba70, \ub514\ub108\ubcf8\uc774 \ub4a4\uc9d1\uc5c8\uace0...(\uc0dd\ub7b5) ''' displayTest=\"MATCH_VERSION\" [[dependencies.examplemod]] modId=\"forge\" mandatory=true versionRange=\"[41,)\" ordering=\"NONE\" side=\"BOTH\" [[dependencies.examplemod]] modId=\"minecraft\" mandatory=true versionRange=\"[1.19,1.20)\" ordering=\"NONE\" side=\"BOTH\" \ub9cc\uc57d \ubb38\uc790\uc5f4\uc774 ${file.jarVersion} \ucc98\ub7fc \uc791\uc131\ub418\uc5c8\ub2e4\uba74 \ud3ec\uc9c0\ub294 \ub7f0\ud0c0\uc784 \ub3c4\uc911 \uc774 \ubb38\uc790\uc5f4\uc744 manifest \uc758 Implementation Version \uc73c\ub85c \ub300\uccb4\ud569\ub2c8\ub2e4. \ubaa8\ub4dc \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c\ub294 manifest \ub97c \uc77d\uc5b4\ub4e4\uc77c \ubaa8\ub4dc jar \uac00 \uc5c6\uae30 \ub54c\ubb38\uc5d0 NONE \uc774 \ub300\uc2e0 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \uc774 \ud544\ub4dc\ub294 \uadf8\ub300\ub85c \ub0c5\ub450\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \uc544\ub798 \ud45c\uc5d0\ub294 \ubaa8\ub4dc\uac00 \uac00\uc9c8 \uc218 \uc788\ub294 \uc18d\uc131\ub4e4\uc774 \ud45c\uc2dc\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4, \ud544\uc218 \ub85c \ud45c\uc2dc\ub418\uc5b4 \uc788\ub294 \uc18d\uc131\uc740 \uae30\ubcf8\uac12\uc774 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \ubb34\uc870\uac74 \uc815\uc758\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc624\ub958\uac00 \ub0a0 \uac83\uc785\ub2c8\ub2e4. \uc18d\uc131 \ud0c0\uc785 \uae30\ubcf8\uac12 \uc124\uba85 modid string \ud544\uc218 \uc774 \ubaa8\ub4dc\uc758 \uc544\uc774\ub514. version string \ud544\uc218 \ubaa8\ub4dc\uc758 \ubc84\uc804, \uc5ec\ub7ec \uc22b\uc790\uac00 \ub9c8\uce68\ud45c\ub85c \ubd84\ub9ac\ub41c \ud615\ud0dc\uc5ec\uc57c \ud569\ub2c8\ub2e4, \ubc84\uc804 \uba85\uba85 \uaddc\uce59\uc744 \ub530\ub978\ub2e4\uba74 \ub354 \uc88b\uc2b5\ub2c8\ub2e4. displayName string \ud544\uc218 \uc77d\uae30 \uc26c\uc6b4 \ubaa8\ub4dc \uc774\ub984. updateJSONURL string \"\" \ubc84\uc804 JSON URL. displayURL string \"\" \ubaa8\ub4dc\uc758 \ud648\ud398\uc774\uc9c0 URL. logoFile string \"\" \ubaa8\ub4dc\uc758 \ub85c\uace0 \ud30c\uc77c \uc774\ub984. \ub85c\uace0 \uc774\ubbf8\uc9c0 \ud30c\uc77c\uc740 \ub9ac\uc18c\uc2a4 \ud3f4\ub354 \ucd5c\uc0c1\uc704\uc5d0 \uc874\uc7ac\ud558\uc5ec\uc57c \ud558\uba70, \uadf8 \ud558\uc704 \ud3f4\ub354\uc5d0 \uc874\uc7ac\ud558\uba74 \uc548\ub429\ub2c8\ub2e4. credits string \"\" \uc5b8\uae09\ud558\uace0 \uc2f6\uc740 \ud569\uc758\uc0ac\ud56d \ub610\ub294 \uacf5\ub85c. authors string \"\" \ubaa8\ub4dc\uc758 \uc800\uc790. description string \ud544\uc218 \ubaa8\ub4dc \uc124\uba85. dependencies [list] [] \ubaa8\ub4dc\uc758 \uc885\uc18d\uc131 \ubaa9\ub85d. * \ubaa8\ub4e0 \ubc84\uc804 \ubc94\uc704\ub294 Maven \ubc84\uc804 \ubc94\uc704 \uaddc\uc545 \uc744 \ub530\ub985\ub2c8\ub2e4.","title":"mods.toml \ud30c\uc77c"},{"location":"gettingstarted/structuring/#_3","text":"\uc77c\ubc18\uc801\uc73c\ub85c \ud328\ud0a4\uc9c0 \uc548\uc5d0 \uc774\ub984\uc774 \ubaa8\ub4dc \uc774\ub984\uc778 \ud30c\uc77c\uc744 \ub9cc\ub4e4\uace0 \uac70\uae30\uc11c\ubd80\ud130 \uc2dc\uc791\ud569\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc740 \ubaa8\ub4dc\uc758 \uc2dc\uc791 \uc9c0\uc810 \uc774\uba70, \ub530\ub85c \ud2b9\uc218\ud558\uac8c \ud45c\uc2dc\ub97c \ud574 \ub450\uc5b4 \uc774\ub97c \uc54c\ub9bd\ub2c8\ub2e4.","title":"\ubaa8\ub4dc \ud30c\uc77c"},{"location":"gettingstarted/structuring/#mod","text":"\uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc740 \ud3ec\uc9c0 \ubaa8\ub4dc \ub85c\ub354\uc5d0\uac8c \ud074\ub798\uc2a4\uac00 \ubaa8\ub4dc\uc758 \uc2dc\uc791 \uc9c0\uc810\uc784\uc744 \ub098\ud0c0\ub0b4\uae30 \uc704\ud574 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uc5b4\ub178\ud14c\uc774\uc158\uc758 value \ub294 src/main/resources/META-INF/mods.toml \uc5d0 \uc815\uc758\ub41c mod id \uc640 \ub3d9\uc77c\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"@Mod \ub294 \ubb34\uc5c7\uc778\uac00\uc694?"},{"location":"gettingstarted/structuring/#_4","text":"\ubaa8\ub4e0\uac78 \ud328\ud0a4\uc9c0 \ud558\ub098\uc5d0, \ud074\ub798\uc2a4 \ud558\ub098\uc5d0 \ub2e4 \ubc00\uc5b4\ub123\ub294 \uac83 \ubcf4\ub2e4 \ud558\uc704 \ud328\uce90\uc9c0\ub97c \ub9cc\ub4e4\uc5b4 \ubd84\ub9ac\ud558\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c, common \uacfc client \ud558\uc704 \ud328\uce90\uc9c0\ub97c \ub9cc\ub4e4\uc5b4 \ucf54\ub4dc\ub97c \ubd84\ub9ac\ud569\ub2c8\ub2e4, \uc774\ub54c common \uc740 \uc11c\ubc84/\ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc2e4\ud589\ub420 \ucf54\ub4dc, client \ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub420 \ucf54\ub4dc\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. common \ud328\uce90\uc9c0\uc5d0\ub294 \uc544\uc774\ud15c, \ube14\ub85d, \ube14\ub85d \uc5d4\ud2f0\ud2f0 \uc785\ub2c8\ub2e4(\uac01\uac01 \ubcc4\ub3c4\uc758 \ud328\uce90\uc9c0\uc5d0 \ub4e4\uc5b4\uac08 \uc218\ub3c4 \uc788\uc74c). \ub80c\ub354\ub7ec\ub098 UI \ub4e4\uc740 client \ud328\uce90\uc9c0\uc5d0 \ub4e4\uc5b4\uac08 \uac83\uc785\ub2c8\ub2e4. Note \ud328\uce90\uc9c0\ub97c \uc774\ub807\uac8c \ub098\ub204\ub294 \uac83\uc774 \uc77c\ubc18\uc801\uc774\ub098 \uc644\uc804\ud788 \uc120\ud0dd\uc0ac\ud56d \uc785\ub2c8\ub2e4, \ud328\uce90\uc9c0\ub294 \ub9c8\uc74c\ub300\ub85c \ub098\ub204\uc154\ub3c4 \ub429\ub2c8\ub2e4. \ud558\uc704 \ud328\uce90\uc9c0\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucf54\ub4dc\ub97c \ub098\ub214\uc73c\ub85c\uc368 \ubaa8\ub4dc\ub97c \uc870\uae08\ub354 \uc815\ub3c8\ud558\uace0 \uc870\uc9c1\ud654\ud558\uc5ec \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud558\uc704 \ud328\uce90\uc9c0\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucf54\ub4dc \ub9d0\ub054\ud558\uac8c \uc815\ub9ac\ud558\uae30"},{"location":"gettingstarted/structuring/#_5","text":"\ud074\ub798\uc2a4 \uc774\ub984 \uaddc\uce59\uc740 \ud074\ub798\uc2a4\uac00 \uc5b4\ub514 \uc0ac\uc6a9\ub418\ub294\uc9c0 \ud574\uc11d\ud558\uae30 \uc27d\ub3c4\ub85d \ub9cc\ub4e4\uc5b4 \uc8fc\uba70, \ubb50\uac00 \uc5b4\ub514\uc788\ub294\uc9c0 \ucc3e\uae30 \uc27d\ub3c4\ub85d\ub3c4 \ud574\uc90d\ub2c8\ub2e4. \uc5d0\ub97c \ub4e4\uc5b4: PowerRing \uc774\ub780 Item \uc740 item \ud328\uce90\uc9c0\uc5d0 PowerRingItem \uc774\ub780 \uc774\ub984\uc73c\ub85c \uc788\uc744 \uac83\uc785\ub2c8\ub2e4. NotDirt \ub77c\ub294 Block \uc740 block \ud328\uce90\uc9c0\uc5d0 NotDirtBlock \uc774\ub780 \uc774\ub984\uc73c\ub85c \uc788\uc744 \uac83\uc785\ub2c8\ub2e4. SuperChewer \ub77c\ub294 BlockEntity \ub294 block.entity \ub610\ub294 blockentity \ub77c\ub294 \ud328\uce90\uc9c0\uc5d0 SuperChewerBlockEntity \uc774\ub77c\ub294 \uc774\ub984\uc73c\ub85c \uc788\uc744 \uac83\uc785\ub2c8\ub2e4. \ud074\ub798\uc2a4 \uc774\ub984 \ub4a4\uc5d0 \ud074\ub798\uc2a4\uc758 \uc885\ub958 \ub97c \uc368\ub193\uc73c\uc2dc\uba74 \ub098\uc911\uc5d0 \ubb34\uc2a8 \ud074\ub798\uc2a4\uc778\uc9c0 \uc2dd\ubcc4\ud558\uae30 \uc27d\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4.","title":"\ud074\ub798\uc2a4 \uc774\ub984 \uaddc\uce59"},{"location":"gettingstarted/versioning/","text":"\ubc84\uc804 \uad6c\uc870 \uc77c\ubc18\uc801\uc73c\ub85c \ud504\ub85c\uc81d\ud2b8\ub4e4\uc740 \uc720\uc758\uc801 \ubc84\uc804 \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4(\uc774\ub294 MAJOR.MINOR.PATH \ud3ec\ub9f7\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4). \uadf8\ub7ec\ub098 \ubaa8\ub4dc \uac1c\ubc1c\uc5d0 \uc788\uc5b4\uc11c\ub294 MCVERSION-MAJORMOD.MAJORAPI.MINOR.PATH \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6d4\ub4dc\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uac70\ub098 API \uc640 \ub354\uc774\uc0c1 \ud638\ud658\ub418\uc9c0 \uc54a\ub294 \ubcc0\uacbd\uc810\uc744 \uad6c\ubd84\ud558\ub294 \uac83\uc774 \ub354 \ub098\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\uc2dc \ub2e4\uc74c \uc0c1\ud669\ub4e4\uc740 \uc704\uc5d0\uc11c \ub9d0\ud55c \ud3ec\ub9f7\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ubcc0\uc218\ub4e4\uc758 \uac12\uc774 \uc99d\uac00\ud560 \ub54c \uc785\ub2c8\ub2e4: MCVERSION \ubaa8\ub4dc\uac00 \ub9cc\ub4e4\uc5b4\uc9c4 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uacfc \ub3d9\uc77c\ud574\uc57c \ud569\ub2c8\ub2e4. MAJORMOD \uc544\uc774\ud15c, \ube14\ub85d \ub610\ub294 \ube14\ub85d \uc5d4\ud2f0\ud2f0 \uc0ad\uc81c. \uae30\uc874\uc5d0 \uc788\ub358 \uba54\uce74\ub2c9 \ubcc0\uacbd \ub610\ub294 \uc0ad\uc81c. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 \uc5c5\ub370\uc774\ud2b8. MAJORAPI \uc5f4\uac70\ud615\uc758 \ubcc0\uc218 \ub610\ub294 \uc21c\uc11c \ubcc0\uacbd. \uba54\uc11c\ub4dc \ubc18\ud658 \ud0c0\uc785 \ubcc0\uacbd. public \uba54\uc11c\ub4dc \uc0ad\uc81c. MINOR \uc0c8\ub85c\uc6b4 \uc544\uc774\ud15c, \ube14\ub85d, \ube14\ub85d \uc5d4\ud2f0\ud2f0 \ub4f1 \ucd94\uac00. \uc0c8\ub85c\uc6b4 \uba54\uce74\ub2c9 \ucd94\uac00. public \uba54\uc11c\ub4dc\uc5d0 @Deprecated \uc5b4\ub178\ud14c\uc774\uc158 \ucd94\uac00. ( MAJORAPI \uac00 \uc544\ub2cc \uc774\uc720\ub294 \ud638\ud658\uc131\uc774 \uc720\uc9c0\ub418\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.) PATCH \ubc84\uadf8 \ud328\uce58. \uc717 \ubcc0\uc218\uc911 \ud558\ub098\ub77c\ub3c4 \uac12\uc774 \uc99d\uac00\ud558\uba74 \uadf8 \ub4a4\uc5d0 \ub530\ub77c\uc624\ub294 \ubcc0\uc218\ub4e4\uc758 \uac12\uc740 0 \uc73c\ub85c \ubcc0\uacbd\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, MINOR \uac12\uc774 \uc99d\uac00\ud560 \uc2dc PATCh \ub294 0 \uc774 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub9cc\uc57d MAJORMOD \uac12\uc774 \uc99d\uac00\ud558\uba74 \uadf8 \ub4a4\uc5d0 \ub530\ub77c\uc624\ub294 \ubaa8\ub4e0 \ubcc0\uc218\ub4e4\uc740 0 \uc774 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc791\uc5c5\uc911\uc778 \ubaa8\ub4dc \ubaa8\ub4dc \uac1c\ubc1c \ucd08\uae30\uc5d0\ub294 \ub298 MAJORMOD \uc640 MAJORAPI \uac00 0 \uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. MINOR \uc640 PATCH \ub9cc \ube4c\ub4dc\ub9c8\ub2e4 \uc99d\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. \uc5ec\ub7ec \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 \ub9cc\uc57d \ubaa8\ub4dc\uac00 \uc0c8\ub85c\uc6b4 \ubc84\uc804\uc758 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ub418\uace0, \uc774\uc804 \ubc84\uc804\uc740 \ubc84\uadf8 \ud328\uce58\ub9cc \uc774\ub8e8\uc5b4 \uc9c4\ub2e4\uace0 \ud560 \ub54c, PATCH \ub294 \uc5c5\uadf8\ub808\uc774\ub4dc \uc774\uc804 \ubc84\uc804 \uac12\uc5d0\uc11c \uc2dc\uc791\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ubaa8\ub4dc\uac00 \uc774\uc804 \ubc84\uc804\uacfc \uc0c8 \ubc84\uc804 \ub458\ub2e4 \uc9c0\uc6d0\ud558\uba70 \uc801\uadf9\uc801\uc778 \uac1c\ubc1c\uc774 \uc774\ub8e8\uc5b4 \uc9c4\ub2e4\uba74 \ubaa8\ub4dc \ubc84\uc804 \uc55e\uc5d0 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc744 \ucd94\uac00\ud558\uc2dc\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ubc84\uc804 3.0.0.0 \uc778 \ubaa8\ub4dc\uac00 \uc0c8\ub85c\uc6b4 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc \ud55c\ub2e4\uba74, \uc774\uc804 \ubc84\uc804\uc758 \ubaa8\ub4dc \ub610\ud55c \ubc84\uc804 3.0.0.0 \uc73c\ub85c \ub2e4\uc74c \uc608\uc2dc\uc640 \uac19\uc774 \uc5c5\ub370\uc774\ud2b8 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4: 1.7.10-3.0.0.0 , \uadf8\ub9ac\uace0 \uc0c8\ub85c\uc6b4 \ubc84\uc804\uc740 \ub2e4\uc74c \uc608\uc2dc\uc640 \uac19\uc2b5\ub2c8\ub2e4: 1.8-3.0.0.0 . \ub9cc\uc57d \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 \uc5c5\ub370\uc774\ud2b8 \ub9d0\uace0 \ucd94\uac00\uc801\uc778 \ubcc0\uacbd \uc0ac\ud56d\uc774 \uc5c6\ub2e4\uba74 \uc55e\uc758 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc744 \uc81c\uc678\ud558\uace0\ub294 \ubc84\uc804\uc774 \ub3d9\uc77c\ud574\uc57c \ud569\ub2c8\ub2e4. \ucd5c\uc885 \ub9b4\ub9ac\uc988 \ud2b9\uc815 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 \uc9c0\uc6d0\uc744 \uc911\ub2e8\ud560 \ub54c\ub294 \uadf8 \ub9c8\uc9c0\ub9c9 \ube4c\ub4dc\uc5d0 -final \uc811\ubbf8\uc0ac\ub97c \ubd99\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 \uc774 \ubaa8\ub4dc\uac00 \ub354 \uc774\uc0c1 \uc9c0\uc6d0\uc744 \ubc1b\uc9c0 \uc54a\uc744 \uac83\uc774\uba70 \uc5c5\ub370\uc774\ud2b8\uc640 \ubc84\uadf8 \ud328\uce58\ub97c \ubc1b\uae30 \uc704\ud574\uc11c\ub294 \uc0c8\ub85c\uc6b4 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc \ud558\uc5ec\uc57c \ud568\uc744 \ub73b\ud569\ub2c8\ub2e4. \uc2dc\ud5d8 \ub9b4\ub9ac\uc988 \uc544\uc9c1 \uac1c\ubc1c\uc911\uc778 \uae30\ub2a5\uc744 \uc2dc\ud5d8\ud310\ucc98\ub7fc \ubc30\ud3ec\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4, \uc774\ub294 \ud558\ub098\uc758 \u201c\ubca0\ud0c0\u201d \ud14c\uc2a4\ud2b8 \ucc98\ub7fc \ubcfc \uc218 \uc788\uc73c\uba70 \ubc84\uc804\uc5d0 -betaX \uc811\ubbf8\uc0ac\ub97c \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4, \uc774\ub54c X \ub294 \ucd9c\uc2dc\ub41c \uc2dc\ud5d8\ud310 \uac2f\uc218 \uc785\ub2c8\ub2e4.(\uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294 \ud604\uc7ac\ub85c\uc36c -pre \ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4, \uc774\ub294 -beta \uc758 \uc774\uba85\uc774 \uc544\ub2d9\ub2c8\ub2e4). \uc774\ubbf8 \ucd9c\uc2dc\ub41c \ubc84\uc804 \ub610\ub294 \ucd08\uae30 \ub9b4\ub9ac\uc988 \uc774\uc804\uc5d0 \uc0ac\uc6a9\ud55c \ubc84\uc804\ub4e4\uc740 \uc2dc\ud5d8\ud310 \ubc84\uc804\uc73c\ub85c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4; \uadf8\ub807\uae30\uc5d0 \ubc84\uc804 \ubcc0\uc218\ub97c \ub97c -beta \uc811\ubbf8\uc0ac\ub97c \ubd99\uc774\uae30 \uc774\uc804\uc5d0 \uc62c\ubc14\ub974\uac8c \ubcc0\uacbd\ud558\uc154\uc57c \ud569\ub2c8\ub2e4(\uc774\ub54c \uc77c\ubc18\uc801\uc73c\ub85c MINOR \ub9cc \ubcc0\uacbd\ud558\uc9c0\ub9cc MAJOR \ub610\ub294 MAJORMOD \ub610\ud55c \ubcc0\uacbd\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4). \ucd08\uae30 \ub9b4\ub9ac\uc988 \uc774\uc804 \ube4c\ub4dc\ub4e4\uc740 \uc791\uc5c5\uc911\uc778 \ube4c\ub4dc\uc785\ub2c8\ub2e4. \ucd9c\uc2dc \ud6c4\ubcf4 \ucd9c\uc2dc \ud6c4\ubcf4\ub294 \uc2e4\uc81c\ub85c \ubc84\uc804\uc744 \ubcc0\uacbd\ud558\uae30 \uc774\uc804\uc5d0 \ucd9c\uc2dc\ud558\ub294 \uc2dc\ud5d8\ud310\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc774 \ubc84\uc804\ub4e4\uc740 -rcX \uc811\ubbf8\uc0ac\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud558\uba70, \uc774\ub54c X \ub294 \ucd9c\uc2dc \ud6c4\ubcf4 \uac2f\uc218\uc785\ub2c8\ub2e4, \uc774 \uac12\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \ubc84\uadf8 \ud328\uce58 \ud560\ub54c\ub9cc \uc99d\uac00\ub429\ub2c8\ub2e4. \uc774\ubbf8 \ucd9c\uc2dc\ub41c \ubc84\uc804\uc740 \ucd9c\uc2dc \ud6c4\ubcf4\ub97c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4; \uadf8\ub807\uae30\uc5d0 \ubc84\uc804 \ubcc0\uc218\ub97c rc \uc811\ubbf8\uc0ac\ub97c \ubd99\uc774\uae30 \uc774\uc804\uc5d0 \uc62c\ubc14\ub974\uac8c \ubcc0\uacbd\ud558\uc154\uc57c \ud569\ub2c8\ub2e4(\uc774\ub54c \uc77c\ubc18\uc801\uc73c\ub85c MINOR \ub9cc \ubcc0\uacbd\ud558\uc9c0\ub9cc MAJOR \ub610\ub294 MAJORMOD \ub610\ud55c \ubcc0\uacbd\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4). \ucd9c\uc2dc \ud6c4\ubcf4\ub97c \uc548\uc815 \ube4c\ub4dc\ub85c \ub9b4\ub9ac\uc988 \ud560\ub54c \ub9c8\uc9c0\ub9c9 \ucd9c\uc2dc \ud6c4\ubcf4\uc640 \uc644\uc804\ud788 \ub611\uac19\uac70\ub098 \uba87\uba87 \ubc84\uadf8 \ud328\uce58\ub97c \ud3ec\ud568\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubc84\uc804 \uad6c\uc870"},{"location":"gettingstarted/versioning/#_1","text":"\uc77c\ubc18\uc801\uc73c\ub85c \ud504\ub85c\uc81d\ud2b8\ub4e4\uc740 \uc720\uc758\uc801 \ubc84\uc804 \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4(\uc774\ub294 MAJOR.MINOR.PATH \ud3ec\ub9f7\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4). \uadf8\ub7ec\ub098 \ubaa8\ub4dc \uac1c\ubc1c\uc5d0 \uc788\uc5b4\uc11c\ub294 MCVERSION-MAJORMOD.MAJORAPI.MINOR.PATH \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6d4\ub4dc\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uac70\ub098 API \uc640 \ub354\uc774\uc0c1 \ud638\ud658\ub418\uc9c0 \uc54a\ub294 \ubcc0\uacbd\uc810\uc744 \uad6c\ubd84\ud558\ub294 \uac83\uc774 \ub354 \ub098\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubc84\uc804 \uad6c\uc870"},{"location":"gettingstarted/versioning/#_2","text":"\ub2e4\uc74c \uc0c1\ud669\ub4e4\uc740 \uc704\uc5d0\uc11c \ub9d0\ud55c \ud3ec\ub9f7\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ubcc0\uc218\ub4e4\uc758 \uac12\uc774 \uc99d\uac00\ud560 \ub54c \uc785\ub2c8\ub2e4: MCVERSION \ubaa8\ub4dc\uac00 \ub9cc\ub4e4\uc5b4\uc9c4 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uacfc \ub3d9\uc77c\ud574\uc57c \ud569\ub2c8\ub2e4. MAJORMOD \uc544\uc774\ud15c, \ube14\ub85d \ub610\ub294 \ube14\ub85d \uc5d4\ud2f0\ud2f0 \uc0ad\uc81c. \uae30\uc874\uc5d0 \uc788\ub358 \uba54\uce74\ub2c9 \ubcc0\uacbd \ub610\ub294 \uc0ad\uc81c. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 \uc5c5\ub370\uc774\ud2b8. MAJORAPI \uc5f4\uac70\ud615\uc758 \ubcc0\uc218 \ub610\ub294 \uc21c\uc11c \ubcc0\uacbd. \uba54\uc11c\ub4dc \ubc18\ud658 \ud0c0\uc785 \ubcc0\uacbd. public \uba54\uc11c\ub4dc \uc0ad\uc81c. MINOR \uc0c8\ub85c\uc6b4 \uc544\uc774\ud15c, \ube14\ub85d, \ube14\ub85d \uc5d4\ud2f0\ud2f0 \ub4f1 \ucd94\uac00. \uc0c8\ub85c\uc6b4 \uba54\uce74\ub2c9 \ucd94\uac00. public \uba54\uc11c\ub4dc\uc5d0 @Deprecated \uc5b4\ub178\ud14c\uc774\uc158 \ucd94\uac00. ( MAJORAPI \uac00 \uc544\ub2cc \uc774\uc720\ub294 \ud638\ud658\uc131\uc774 \uc720\uc9c0\ub418\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.) PATCH \ubc84\uadf8 \ud328\uce58. \uc717 \ubcc0\uc218\uc911 \ud558\ub098\ub77c\ub3c4 \uac12\uc774 \uc99d\uac00\ud558\uba74 \uadf8 \ub4a4\uc5d0 \ub530\ub77c\uc624\ub294 \ubcc0\uc218\ub4e4\uc758 \uac12\uc740 0 \uc73c\ub85c \ubcc0\uacbd\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, MINOR \uac12\uc774 \uc99d\uac00\ud560 \uc2dc PATCh \ub294 0 \uc774 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub9cc\uc57d MAJORMOD \uac12\uc774 \uc99d\uac00\ud558\uba74 \uadf8 \ub4a4\uc5d0 \ub530\ub77c\uc624\ub294 \ubaa8\ub4e0 \ubcc0\uc218\ub4e4\uc740 0 \uc774 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.","title":"\uc608\uc2dc"},{"location":"gettingstarted/versioning/#_3","text":"\ubaa8\ub4dc \uac1c\ubc1c \ucd08\uae30\uc5d0\ub294 \ub298 MAJORMOD \uc640 MAJORAPI \uac00 0 \uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. MINOR \uc640 PATCH \ub9cc \ube4c\ub4dc\ub9c8\ub2e4 \uc99d\uac00\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uc791\uc5c5\uc911\uc778 \ubaa8\ub4dc"},{"location":"gettingstarted/versioning/#_4","text":"\ub9cc\uc57d \ubaa8\ub4dc\uac00 \uc0c8\ub85c\uc6b4 \ubc84\uc804\uc758 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ub418\uace0, \uc774\uc804 \ubc84\uc804\uc740 \ubc84\uadf8 \ud328\uce58\ub9cc \uc774\ub8e8\uc5b4 \uc9c4\ub2e4\uace0 \ud560 \ub54c, PATCH \ub294 \uc5c5\uadf8\ub808\uc774\ub4dc \uc774\uc804 \ubc84\uc804 \uac12\uc5d0\uc11c \uc2dc\uc791\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ubaa8\ub4dc\uac00 \uc774\uc804 \ubc84\uc804\uacfc \uc0c8 \ubc84\uc804 \ub458\ub2e4 \uc9c0\uc6d0\ud558\uba70 \uc801\uadf9\uc801\uc778 \uac1c\ubc1c\uc774 \uc774\ub8e8\uc5b4 \uc9c4\ub2e4\uba74 \ubaa8\ub4dc \ubc84\uc804 \uc55e\uc5d0 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc744 \ucd94\uac00\ud558\uc2dc\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ubc84\uc804 3.0.0.0 \uc778 \ubaa8\ub4dc\uac00 \uc0c8\ub85c\uc6b4 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc \ud55c\ub2e4\uba74, \uc774\uc804 \ubc84\uc804\uc758 \ubaa8\ub4dc \ub610\ud55c \ubc84\uc804 3.0.0.0 \uc73c\ub85c \ub2e4\uc74c \uc608\uc2dc\uc640 \uac19\uc774 \uc5c5\ub370\uc774\ud2b8 \ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4: 1.7.10-3.0.0.0 , \uadf8\ub9ac\uace0 \uc0c8\ub85c\uc6b4 \ubc84\uc804\uc740 \ub2e4\uc74c \uc608\uc2dc\uc640 \uac19\uc2b5\ub2c8\ub2e4: 1.8-3.0.0.0 . \ub9cc\uc57d \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 \uc5c5\ub370\uc774\ud2b8 \ub9d0\uace0 \ucd94\uac00\uc801\uc778 \ubcc0\uacbd \uc0ac\ud56d\uc774 \uc5c6\ub2e4\uba74 \uc55e\uc758 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc744 \uc81c\uc678\ud558\uace0\ub294 \ubc84\uc804\uc774 \ub3d9\uc77c\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uc5ec\ub7ec \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804"},{"location":"gettingstarted/versioning/#_5","text":"\ud2b9\uc815 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 \uc9c0\uc6d0\uc744 \uc911\ub2e8\ud560 \ub54c\ub294 \uadf8 \ub9c8\uc9c0\ub9c9 \ube4c\ub4dc\uc5d0 -final \uc811\ubbf8\uc0ac\ub97c \ubd99\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 \uc774 \ubaa8\ub4dc\uac00 \ub354 \uc774\uc0c1 \uc9c0\uc6d0\uc744 \ubc1b\uc9c0 \uc54a\uc744 \uac83\uc774\uba70 \uc5c5\ub370\uc774\ud2b8\uc640 \ubc84\uadf8 \ud328\uce58\ub97c \ubc1b\uae30 \uc704\ud574\uc11c\ub294 \uc0c8\ub85c\uc6b4 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc \ud558\uc5ec\uc57c \ud568\uc744 \ub73b\ud569\ub2c8\ub2e4.","title":"\ucd5c\uc885 \ub9b4\ub9ac\uc988"},{"location":"gettingstarted/versioning/#_6","text":"\uc544\uc9c1 \uac1c\ubc1c\uc911\uc778 \uae30\ub2a5\uc744 \uc2dc\ud5d8\ud310\ucc98\ub7fc \ubc30\ud3ec\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4, \uc774\ub294 \ud558\ub098\uc758 \u201c\ubca0\ud0c0\u201d \ud14c\uc2a4\ud2b8 \ucc98\ub7fc \ubcfc \uc218 \uc788\uc73c\uba70 \ubc84\uc804\uc5d0 -betaX \uc811\ubbf8\uc0ac\ub97c \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4, \uc774\ub54c X \ub294 \ucd9c\uc2dc\ub41c \uc2dc\ud5d8\ud310 \uac2f\uc218 \uc785\ub2c8\ub2e4.(\uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294 \ud604\uc7ac\ub85c\uc36c -pre \ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4, \uc774\ub294 -beta \uc758 \uc774\uba85\uc774 \uc544\ub2d9\ub2c8\ub2e4). \uc774\ubbf8 \ucd9c\uc2dc\ub41c \ubc84\uc804 \ub610\ub294 \ucd08\uae30 \ub9b4\ub9ac\uc988 \uc774\uc804\uc5d0 \uc0ac\uc6a9\ud55c \ubc84\uc804\ub4e4\uc740 \uc2dc\ud5d8\ud310 \ubc84\uc804\uc73c\ub85c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4; \uadf8\ub807\uae30\uc5d0 \ubc84\uc804 \ubcc0\uc218\ub97c \ub97c -beta \uc811\ubbf8\uc0ac\ub97c \ubd99\uc774\uae30 \uc774\uc804\uc5d0 \uc62c\ubc14\ub974\uac8c \ubcc0\uacbd\ud558\uc154\uc57c \ud569\ub2c8\ub2e4(\uc774\ub54c \uc77c\ubc18\uc801\uc73c\ub85c MINOR \ub9cc \ubcc0\uacbd\ud558\uc9c0\ub9cc MAJOR \ub610\ub294 MAJORMOD \ub610\ud55c \ubcc0\uacbd\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4). \ucd08\uae30 \ub9b4\ub9ac\uc988 \uc774\uc804 \ube4c\ub4dc\ub4e4\uc740 \uc791\uc5c5\uc911\uc778 \ube4c\ub4dc\uc785\ub2c8\ub2e4.","title":"\uc2dc\ud5d8 \ub9b4\ub9ac\uc988"},{"location":"gettingstarted/versioning/#_7","text":"\ucd9c\uc2dc \ud6c4\ubcf4\ub294 \uc2e4\uc81c\ub85c \ubc84\uc804\uc744 \ubcc0\uacbd\ud558\uae30 \uc774\uc804\uc5d0 \ucd9c\uc2dc\ud558\ub294 \uc2dc\ud5d8\ud310\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc774 \ubc84\uc804\ub4e4\uc740 -rcX \uc811\ubbf8\uc0ac\ub97c \uc0ac\uc6a9\ud558\uc5ec\uc57c \ud558\uba70, \uc774\ub54c X \ub294 \ucd9c\uc2dc \ud6c4\ubcf4 \uac2f\uc218\uc785\ub2c8\ub2e4, \uc774 \uac12\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \ubc84\uadf8 \ud328\uce58 \ud560\ub54c\ub9cc \uc99d\uac00\ub429\ub2c8\ub2e4. \uc774\ubbf8 \ucd9c\uc2dc\ub41c \ubc84\uc804\uc740 \ucd9c\uc2dc \ud6c4\ubcf4\ub97c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4; \uadf8\ub807\uae30\uc5d0 \ubc84\uc804 \ubcc0\uc218\ub97c rc \uc811\ubbf8\uc0ac\ub97c \ubd99\uc774\uae30 \uc774\uc804\uc5d0 \uc62c\ubc14\ub974\uac8c \ubcc0\uacbd\ud558\uc154\uc57c \ud569\ub2c8\ub2e4(\uc774\ub54c \uc77c\ubc18\uc801\uc73c\ub85c MINOR \ub9cc \ubcc0\uacbd\ud558\uc9c0\ub9cc MAJOR \ub610\ub294 MAJORMOD \ub610\ud55c \ubcc0\uacbd\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4). \ucd9c\uc2dc \ud6c4\ubcf4\ub97c \uc548\uc815 \ube4c\ub4dc\ub85c \ub9b4\ub9ac\uc988 \ud560\ub54c \ub9c8\uc9c0\ub9c9 \ucd9c\uc2dc \ud6c4\ubcf4\uc640 \uc644\uc804\ud788 \ub611\uac19\uac70\ub098 \uba87\uba87 \ubc84\uadf8 \ud328\uce58\ub97c \ud3ec\ud568\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ucd9c\uc2dc \ud6c4\ubcf4"},{"location":"items/","text":"\uc544\uc774\ud15c \ube14\ub85d\ub4e4\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc544\uc774\ud15c\uc740 \ub300\ubd80\ubd84\uc758 \ubaa8\ub4dc\uc758 \ud575\uc2ec\uc774 \ub418\ub294 \uc694\uc18c\uc785\ub2c8\ub2e4. \ube14\ub85d\uc774 \ud50c\ub808\uc774\uc5b4 \uc8fc\ubcc0\uc758 \ub808\ubca8\uc744 \uad6c\uc131\ud55c\ub2e4\uba74 \uc544\uc774\ud15c\uc740 \ud50c\ub808\uc774\uc5b4\uc758 \uc778\ubca4\ud1a0\ub9ac\ub97c \uad6c\uc131\ud569\ub2c8\ub2e4. \uc544\uc774\ud15c \ub9cc\ub4e4\uae30 \uac04\ub2e8\ud55c \uc544\uc774\ud15c \ub530\ub85c \ud2b9\uc218\ud55c \uae30\ub2a5\uc774 \uc5c6\ub294 \uac04\ub2e8\ud55c \uc544\uc774\ud15c\ub4e4(\ub9c9\ub300\uae30\ub098 \uc124\ud0d5)\uc740 \ub530\ub85c \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4, \uadf8\ub0e5 Item \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c Item$Properties \uac1d\uccb4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4e4\uae30\ub9cc \ud558\uc5ec\ub3c4 \ucda9\ubd84\ud569\ub2c8\ub2e4. Item$Properties \uac1d\uccb4\ub294 \uc0dd\uc131\uc790\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4e0 \uc774\ud6c4 \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc544\uc774\ud15c\uc758 \uc18d\uc131\uc744 \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: \uba54\uc11c\ub4dc \uc124\uba85 tab \uc5b4\ub5a4 CreativeModeTab \uc5d0 \uc544\uc774\ud15c\uc744 \ucd94\uac00\ud560 \uac83\uc778\uc9c0\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \uc544\uc774\ud15c\uc744 \ud06c\ub9ac\uc5d0\uc774\ud2f0\ube0c \uba54\ub274\uc5d0 \ud45c\uc2dc\ud558\ub824\uba74 \ubb34\uc870\uac74 \ud638\ucd9c\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uae30\ubcf8 \uc544\uc774\ud15c \uadf8\ub8f9\ub4e4\uc740 CreativeModeTab \ud074\ub798\uc2a4\uc5d0\uc11c \ucc3e\uc73c\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. durability \uc544\uc774\ud15c\uc758 \ucd5c\ub300 damage \uac12\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. \ub9cc\uc57d 0\ubcf4\ub2e4 \ud070 \uac12\uc73c\ub85c \uc124\uc815\ub418\uc5c8\uc744 \uacbd\uc6b0 \u201cdamaged\u201d \uc640 \u201cdamage\u201d \uc18d\uc131\uc774 \uc544\uc774\ud15c\uc5d0 \ucd94\uac00\ub429\ub2c8\ub2e4. stacksTo \uc544\uc774\ud15c\uc774 \uc5bc\ub9c8\ub098 \uacb9\uce60 \uc218 \uc788\ub294\uac00\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \ub0b4\uad6c\ub3c4\uac00 \uc788\uc73c\uba74\uc11c \uacb9\uce60 \uc218 \uc788\ub294 \uc544\uc774\ud15c\uc740 \ub9cc\ub4e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. setNoRepair \uc544\uc774\ud15c\uc744 \u201cdamaged\u201d \uc18d\uc131\uc774 \uc788\uc5b4\ub3c4 \uc218\ub9ac\uac00 \ubd88\uac00\ub2a5\ud558\ub3c4\ub85d \ub9cc\ub4ed\ub2c8\ub2e4. craftRemainder \uc774 \uc544\uc774\ud15c\uc744 \uc870\ud569\uc5d0 \uc0ac\uc6a9\ud55c \uc774\ud6c4 \ub0a8\uc744 \uc544\uc774\ud15c\uc744 \uc124\uc815\ud569\ub2c8\ub2e4, \ub9c8\uce58 \uc6a9\uc554 \uc591\ub3d9\uc774\ub97c \uc870\ud569\uc5d0 \uc0ac\uc6a9\ud558\uba74 \ube48 \uc591\ub3d9\uc774\uac00 \ub0a8\ub294 \uac83 \ucc98\ub7fc \ub9d0\uc785\ub2c8\ub2e4. \uc704 \uba54\uc11c\ub4dc\ub4e4\uc740 \uc5f0\uc18d\uc801\uc73c\ub85c \uc774\uc5b4 \ubd99\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uc989 \uac01 \uba54\uc11c\ub4dc\ub4e4 \ub05d\uc5d0 return this \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub2e4\ub978 \uba54\uc11c\ub4dc\ub97c \ub4a4\uc5d0 \ubc14\ub85c \uc774\uc5b4 \ubd99\uc77c \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \ubcf5\uc7a1\ud55c \uc544\uc774\ud15c \uc544\uc774\ud15c\uc744 \uc704\ucc98\ub7fc \uc989\uc11d\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc11c \uc124\uc815\ud558\ub294 \uac83\uc740 \uac04\ub2e8\ud55c \uc544\uc774\ud15c\uc5d0\ub9cc \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc870\uae08 \ub354 \ubcf5\uc7a1\ud55c \uc544\uc774\ud15c\uc744 \ub9cc\ub4e4\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74 \ub530\ub85c Item \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4\uace0 \ud544\uc694\uc5d0 \ub530\ub77c \uba87\uba87 \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uc544\uc774\ud15c \ub4f1\ub85d\ud558\uae30 \uc544\uc774\u314f\ud15c\uc740 \ubb34\uc870\uac74 \ub4f1\ub85d \ub418\uc5b4\uc57c\ub9cc \uc815\uc0c1\uc801\uc73c\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4.","title":"\uc18c\uac1c"},{"location":"items/#_1","text":"\ube14\ub85d\ub4e4\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc544\uc774\ud15c\uc740 \ub300\ubd80\ubd84\uc758 \ubaa8\ub4dc\uc758 \ud575\uc2ec\uc774 \ub418\ub294 \uc694\uc18c\uc785\ub2c8\ub2e4. \ube14\ub85d\uc774 \ud50c\ub808\uc774\uc5b4 \uc8fc\ubcc0\uc758 \ub808\ubca8\uc744 \uad6c\uc131\ud55c\ub2e4\uba74 \uc544\uc774\ud15c\uc740 \ud50c\ub808\uc774\uc5b4\uc758 \uc778\ubca4\ud1a0\ub9ac\ub97c \uad6c\uc131\ud569\ub2c8\ub2e4.","title":"\uc544\uc774\ud15c"},{"location":"items/#_2","text":"","title":"\uc544\uc774\ud15c \ub9cc\ub4e4\uae30"},{"location":"items/#_3","text":"\ub530\ub85c \ud2b9\uc218\ud55c \uae30\ub2a5\uc774 \uc5c6\ub294 \uac04\ub2e8\ud55c \uc544\uc774\ud15c\ub4e4(\ub9c9\ub300\uae30\ub098 \uc124\ud0d5)\uc740 \ub530\ub85c \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4, \uadf8\ub0e5 Item \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c Item$Properties \uac1d\uccb4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4e4\uae30\ub9cc \ud558\uc5ec\ub3c4 \ucda9\ubd84\ud569\ub2c8\ub2e4. Item$Properties \uac1d\uccb4\ub294 \uc0dd\uc131\uc790\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9cc\ub4e0 \uc774\ud6c4 \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc544\uc774\ud15c\uc758 \uc18d\uc131\uc744 \uc124\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: \uba54\uc11c\ub4dc \uc124\uba85 tab \uc5b4\ub5a4 CreativeModeTab \uc5d0 \uc544\uc774\ud15c\uc744 \ucd94\uac00\ud560 \uac83\uc778\uc9c0\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \uc544\uc774\ud15c\uc744 \ud06c\ub9ac\uc5d0\uc774\ud2f0\ube0c \uba54\ub274\uc5d0 \ud45c\uc2dc\ud558\ub824\uba74 \ubb34\uc870\uac74 \ud638\ucd9c\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \uae30\ubcf8 \uc544\uc774\ud15c \uadf8\ub8f9\ub4e4\uc740 CreativeModeTab \ud074\ub798\uc2a4\uc5d0\uc11c \ucc3e\uc73c\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. durability \uc544\uc774\ud15c\uc758 \ucd5c\ub300 damage \uac12\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. \ub9cc\uc57d 0\ubcf4\ub2e4 \ud070 \uac12\uc73c\ub85c \uc124\uc815\ub418\uc5c8\uc744 \uacbd\uc6b0 \u201cdamaged\u201d \uc640 \u201cdamage\u201d \uc18d\uc131\uc774 \uc544\uc774\ud15c\uc5d0 \ucd94\uac00\ub429\ub2c8\ub2e4. stacksTo \uc544\uc774\ud15c\uc774 \uc5bc\ub9c8\ub098 \uacb9\uce60 \uc218 \uc788\ub294\uac00\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \ub0b4\uad6c\ub3c4\uac00 \uc788\uc73c\uba74\uc11c \uacb9\uce60 \uc218 \uc788\ub294 \uc544\uc774\ud15c\uc740 \ub9cc\ub4e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. setNoRepair \uc544\uc774\ud15c\uc744 \u201cdamaged\u201d \uc18d\uc131\uc774 \uc788\uc5b4\ub3c4 \uc218\ub9ac\uac00 \ubd88\uac00\ub2a5\ud558\ub3c4\ub85d \ub9cc\ub4ed\ub2c8\ub2e4. craftRemainder \uc774 \uc544\uc774\ud15c\uc744 \uc870\ud569\uc5d0 \uc0ac\uc6a9\ud55c \uc774\ud6c4 \ub0a8\uc744 \uc544\uc774\ud15c\uc744 \uc124\uc815\ud569\ub2c8\ub2e4, \ub9c8\uce58 \uc6a9\uc554 \uc591\ub3d9\uc774\ub97c \uc870\ud569\uc5d0 \uc0ac\uc6a9\ud558\uba74 \ube48 \uc591\ub3d9\uc774\uac00 \ub0a8\ub294 \uac83 \ucc98\ub7fc \ub9d0\uc785\ub2c8\ub2e4. \uc704 \uba54\uc11c\ub4dc\ub4e4\uc740 \uc5f0\uc18d\uc801\uc73c\ub85c \uc774\uc5b4 \ubd99\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4, \uc989 \uac01 \uba54\uc11c\ub4dc\ub4e4 \ub05d\uc5d0 return this \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub2e4\ub978 \uba54\uc11c\ub4dc\ub97c \ub4a4\uc5d0 \ubc14\ub85c \uc774\uc5b4 \ubd99\uc77c \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4.","title":"\uac04\ub2e8\ud55c \uc544\uc774\ud15c"},{"location":"items/#_4","text":"\uc544\uc774\ud15c\uc744 \uc704\ucc98\ub7fc \uc989\uc11d\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc11c \uc124\uc815\ud558\ub294 \uac83\uc740 \uac04\ub2e8\ud55c \uc544\uc774\ud15c\uc5d0\ub9cc \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc870\uae08 \ub354 \ubcf5\uc7a1\ud55c \uc544\uc774\ud15c\uc744 \ub9cc\ub4e4\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74 \ub530\ub85c Item \uc758 \uc790\uc2dd \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4\uace0 \ud544\uc694\uc5d0 \ub530\ub77c \uba87\uba87 \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud558\uc154\uc57c \ud569\ub2c8\ub2e4.","title":"\ubcf5\uc7a1\ud55c \uc544\uc774\ud15c"},{"location":"items/#_5","text":"\uc544\uc774\u314f\ud15c\uc740 \ubb34\uc870\uac74 \ub4f1\ub85d \ub418\uc5b4\uc57c\ub9cc \uc815\uc0c1\uc801\uc73c\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4.","title":"\uc544\uc774\ud15c \ub4f1\ub85d\ud558\uae30"},{"location":"items/bewlr/","text":"BlockEntityWithoutLevelRenderer BlockEntityWithoutLevelRenderer \ub294 \uc544\uc774\ud15c\uc744 \ub3d9\uc801\uc73c\ub85c \ub80c\ub354\ub9c1\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc8fc\ub294 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uc774 \uc2dc\uc2a4\ud15c\uc740 \uc774\uc804\uc5d0 ItemStack \uc744 \uae30\ubc18\uc73c\ub85c \ub9cc\ub4e0 \uad6c\uc2dc\uc2a4\ud15c\ubcf4\ub2e4 \uac04\ub2e8\ud55c\ub370, \uadf8\ub54c\ub294 BlockEntity \ub97c \uc0ac\uc6a9\ud588\uc5b4\uc57c\ub9cc \ud588\uc5c8\uace0, ItemStack \uc5d0 \uc811\uadfc\ud558\ub294 \uac83\uc740 \ubd88\uac00\ub2a5\ud588\uc5c8\uc2b5\ub2c8\ub2e4. BlockEntityWithoutLevelRenderer \uc4f0\uae30 BlockEntityWithoutLevelRenderer(\ub610\ub294 BWELR) \ub294 \uc544\uc774\ud15c\uc744 public void renderByItem(ItemStack itemStack, TransformType transformType, PoseStack poseStack, MultiBufferSource bufferSource, int combinedLight, int combinedOverlay) \ub97c \uc0ac\uc6a9\ud574 \ub80c\ub354\ub9c1\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. BEWLR \uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc120, Item \uc758 \ubaa8\ub378\uc774 BakedModel#isCustomRenderer \uc5d0\uc11c true \ub97c \ubc18\ud658\ud558\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4, \uc774\ub97c \uc704\ud55c \ubc29\ubc95\uc740 \uc5ec\ub7ec\uac00\uc9c0\uac00 \uc788\ub294\ub370, \uc544\uc774\ud15c\uc758 \ubaa8\ub378\uc774 JSON \uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\ub2e4\uba74 \ub2e4\uc74c \uc904\uc744 \ucd94\uac00\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4. \"parent\":\"builtin/entity\" \uc5b4\ub5bb\uac8c\ub4e0 \uc704 \uba54\uc11c\ub4dc\uc5d0\uc11c true \ub97c \ubc18\ud658\ud558\ub3c4\ub85d \ub9cc\ub4dc\uc168\ub2e4\uba74, \uac8c\uc784\uc774 \uc544\uc774\ud15c\uc744 \ub80c\ub354\ub9c1\ud560 \ub54c BEWLR \ub97c \uc0ac\uc6a9\ud558\uac8c \ub429\ub2c8\ub2e4. \ub9cc\uc57d \uc544\uc774\ud15c\uc774 \uc0ac\uc6a9\ud560 BEWLR \uc744 \ub530\ub85c \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uc168\ub2e4\uba74, ItemRenderer#getBlockEntityRenderer \ub97c \ub300\uc2e0 \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4. \uc544\uc774\ud15c\uc774 \uc0ac\uc6a9\ud560 BEWLR \uc744 \uc9c0\uc815\ud558\uae30 \uc704\ud574\uc120, IItemRenderProperties \uc758 \uc775\uba85 \uc778\uc2a4\ud134\uc2a4\ub97c Item#initializeClient \uc5d0\uc11c \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uc774\ub54c \uc0ac\uc6a9\ud558\ub294 \uc775\uba85 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c IItemRenderProperties#getItemStackRenderer \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud574\uc11c \ucee4\uc2a4\ud140 BEWLR \uc744 \ubc18\ud658\ud558\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4. // \uc544\uc774\ud15c \ud074\ub798\uc2a4 \ub0b4\ubd80 @Override public void initializeClient(Consumer<IItemRenderProperties> consumer) { consumer.accept(new IItemRenderProperties() { @Override public BlockEntityWithoutLevelRenderer getItemStackRenderer() { return myBEWLRInstance; } }); } Important \uac01 \ubaa8\ub4dc\ub294 \ud558\ub098\uc758 BEWLR \ub9cc \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. BEWLR \uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c \uc774\uac83 \uc774\uc678\uc758 \ucd94\uac00\uc801\uc778 \uc791\uc5c5\uc740 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"BlockEntityWithoutLevelRenderer"},{"location":"items/bewlr/#blockentitywithoutlevelrenderer","text":"BlockEntityWithoutLevelRenderer \ub294 \uc544\uc774\ud15c\uc744 \ub3d9\uc801\uc73c\ub85c \ub80c\ub354\ub9c1\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc8fc\ub294 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uc774 \uc2dc\uc2a4\ud15c\uc740 \uc774\uc804\uc5d0 ItemStack \uc744 \uae30\ubc18\uc73c\ub85c \ub9cc\ub4e0 \uad6c\uc2dc\uc2a4\ud15c\ubcf4\ub2e4 \uac04\ub2e8\ud55c\ub370, \uadf8\ub54c\ub294 BlockEntity \ub97c \uc0ac\uc6a9\ud588\uc5b4\uc57c\ub9cc \ud588\uc5c8\uace0, ItemStack \uc5d0 \uc811\uadfc\ud558\ub294 \uac83\uc740 \ubd88\uac00\ub2a5\ud588\uc5c8\uc2b5\ub2c8\ub2e4.","title":"BlockEntityWithoutLevelRenderer"},{"location":"items/bewlr/#blockentitywithoutlevelrenderer_1","text":"BlockEntityWithoutLevelRenderer(\ub610\ub294 BWELR) \ub294 \uc544\uc774\ud15c\uc744 public void renderByItem(ItemStack itemStack, TransformType transformType, PoseStack poseStack, MultiBufferSource bufferSource, int combinedLight, int combinedOverlay) \ub97c \uc0ac\uc6a9\ud574 \ub80c\ub354\ub9c1\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. BEWLR \uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc120, Item \uc758 \ubaa8\ub378\uc774 BakedModel#isCustomRenderer \uc5d0\uc11c true \ub97c \ubc18\ud658\ud558\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4, \uc774\ub97c \uc704\ud55c \ubc29\ubc95\uc740 \uc5ec\ub7ec\uac00\uc9c0\uac00 \uc788\ub294\ub370, \uc544\uc774\ud15c\uc758 \ubaa8\ub378\uc774 JSON \uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\ub2e4\uba74 \ub2e4\uc74c \uc904\uc744 \ucd94\uac00\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4. \"parent\":\"builtin/entity\" \uc5b4\ub5bb\uac8c\ub4e0 \uc704 \uba54\uc11c\ub4dc\uc5d0\uc11c true \ub97c \ubc18\ud658\ud558\ub3c4\ub85d \ub9cc\ub4dc\uc168\ub2e4\uba74, \uac8c\uc784\uc774 \uc544\uc774\ud15c\uc744 \ub80c\ub354\ub9c1\ud560 \ub54c BEWLR \ub97c \uc0ac\uc6a9\ud558\uac8c \ub429\ub2c8\ub2e4. \ub9cc\uc57d \uc544\uc774\ud15c\uc774 \uc0ac\uc6a9\ud560 BEWLR \uc744 \ub530\ub85c \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uc168\ub2e4\uba74, ItemRenderer#getBlockEntityRenderer \ub97c \ub300\uc2e0 \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4. \uc544\uc774\ud15c\uc774 \uc0ac\uc6a9\ud560 BEWLR \uc744 \uc9c0\uc815\ud558\uae30 \uc704\ud574\uc120, IItemRenderProperties \uc758 \uc775\uba85 \uc778\uc2a4\ud134\uc2a4\ub97c Item#initializeClient \uc5d0\uc11c \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \uc774\ub54c \uc0ac\uc6a9\ud558\ub294 \uc775\uba85 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c IItemRenderProperties#getItemStackRenderer \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud574\uc11c \ucee4\uc2a4\ud140 BEWLR \uc744 \ubc18\ud658\ud558\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4. // \uc544\uc774\ud15c \ud074\ub798\uc2a4 \ub0b4\ubd80 @Override public void initializeClient(Consumer<IItemRenderProperties> consumer) { consumer.accept(new IItemRenderProperties() { @Override public BlockEntityWithoutLevelRenderer getItemStackRenderer() { return myBEWLRInstance; } }); } Important \uac01 \ubaa8\ub4dc\ub294 \ud558\ub098\uc758 BEWLR \ub9cc \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. BEWLR \uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c \uc774\uac83 \uc774\uc678\uc758 \ucd94\uac00\uc801\uc778 \uc791\uc5c5\uc740 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"BlockEntityWithoutLevelRenderer \uc4f0\uae30"},{"location":"legacy/","text":"\uc774\uc804 \ubc84\uc804 \ubb38\uc11c\ub4e4 \ud3ec\uc9c0\uc758 \uc5ed\uc0ac\ub294 \uaf64\ub098 \uae41\ub2c8\ub2e4, \uadf8\ub7ec\uba74\uc11c \uc5ec\ub7ec \ubc84\uc804\uc6a9\uc73c\ub85c \uc791\uc131\ub41c \ubb38\uc11c\ub4e4\uc774 \ub9ce\uc2b5\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 1.1 \uc815\ub3c4\ub85c \uc624\ub798\ub41c \ubb38\uc11c\ub4e4\uae4c\uc9c0 \uc544\uc9c1\ub3c4 \uc77d\uc5b4\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \ubc84\uc804\uc0ac\uc774\uc758 \ucc28\uc774\uc810\uc774 \ud06c\uae30 \ub54c\ubb38\uc5d0 \ub2e4\uc218\uc758 \ubc84\uc804\ub4e4\uc744 \uc9c0\uc6d0\ud558\ub294 \uac83\uc740 \ub9e4\uc6b0 \uc5b4\ub835\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30\ub54c\ubb38\uc5d0 \ud3ec\uc9c0\ub294 \uc7a5\uae30 \uc9c0\uc6d0 \uc815\ucc45, \ub610\ub294 LTS \ub97c \uc0ac\uc6a9\ud558\ub294\ub370, \uac00\uc7a5 \ucd5c\uc2e0 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc758 \uc774\uc804 \ubd80 \ubc84\uc804\uc740 \uc7a5\uae30 \uc9c0\uc6d0 \ubc84\uc804\uc774 \ub429\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0, \uac00\uc7a5 \ucd5c\uc2e0 \ubc84\uc804\uacfc, \uc7a5\uae30 \uc9c0\uc6d0 \ubc84\uc804\uc758 \ubb38\uc11c\ub9cc \uc27d\uac8c \ucc3e\uc544\ubcf4\uc2e4 \uc218 \uc788\ub3c4\ub85d \uc67c\ucabd \ubc14\uc5d0 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \ud604\uc7ac \uc774 \ubc88\uc5ed\ubcf8\uc740 \ubc88\uc5ed\uc774 \uc774\ub8e8\uc5b4\uc9c4 \ubaa8\ub4e0 \ubb38\uc11c\ub4e4\uc744 \uc0ac\uc774\ub4dc\ubc14\uc5d0 \ud3ec\ud568\ud558\uc9c0\ub9cc, \uc6d0\ubcf8 \uc601\ubb38 \ubb38\uc11c\ub294 \uadf8\ub807\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub807\ub2e4\uace0 \ud574\ub3c4, \ud604\uc7ac\ub85c\uc36c \uc9c0\uc6d0\uc774 \uc911\ub2e8\ub41c \ubc84\uc804\ub4e4\uc740 \uc5b8\uc820\uac00 \ud55c\ubc88\uc740 \uc7a5\uae30 \uc9c0\uc6d0 \ubc84\uc804\uc774\uc5c8\uc744 \uac83\uc774\uace0, \uadf8 \uc774\uc804\uc5d0\ub294 \ucd5c\uc2e0 \ubc84\uc804\uc774\uc5c8\uc744 \uac83\uc774\ub2c8, \uadf8 \ubc84\uc804 \uc804\uc6a9 \ubb38\uc11c\ub4e4 \ub610\ud55c \uc791\uc131\ub418\uc5c8\uc5c8\uc2b5\ub2c8\ub2e4. \uadf8 \ubb38\uc11c\ub4e4\ub85c \ud5a5\ud558\ub294 \ub9c1\ud06c\ub4e4\uc740 \uc544\ub798\uc5d0\uc11c \ucc3e\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Important \uc774 \uc624\ub798\ub41c \ubb38\uc11c \uc0ac\uc774\ud2b8\ub4e4\uc740 \uc624\uc9c1 \ucc38\uc870\uc6a9\uc774\uae30 \ub54c\ubb38\uc5d0, \ud3ec\uc9c0 \ud3ec\ub7fc \ub610\ub294 \ud3ec\uc9c0 \uacf5\uc2dd \ub514\uc2a4\ucf54\ub4dc\uc5d0\uc11c \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\ud300\uc740 \uc9c0\uc6d0\uc774 \uc885\ub8cc\ub41c \ubc84\uc804\uc5d0 \ub300\ud55c \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\uc804\uc5d0 \ubb38\uc11c\ud654\uac00 \uc9c4\ud589\ub418\uc5c8\ub358 \ubc84\uc804\ub4e4 \ubaa8\ub4e0 \ubc84\uc804\uc774 \uc624\ub79c \uae30\uac04\ub3d9\uc548 \uc9c0\uc6d0\ub418\ub294 \uac83\uc740 \uc544\ub2c8\uae30 \ub54c\ubb38\uc5d0, \uba87\uba87 \ubc84\uc804\ub4e4\uc740 \ubb38\uc11c\ud654\uac00 \uc644\uc804\ud788 \uc9c4\ud589\ub418\uc9c0 \uc54a\uc558\uc744 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc0c8\ub85c\uc6b4 \ubc84\uc804\uc774 \ucd9c\uc2dc\ub418\uba74 \uc774\uc804 \ubc84\uc804\uc758 \ubb38\uc11c\uac00 \uc0c8\ub85c\uc6b4 \ubc84\uc804\uc73c\ub85c \ubcf5\uc0ac\ub418\uace0, \uac8c\uc784 \uc5c5\ub370\uc774\ud2b8\uc5d0 \ub9de\ucd94\uae30 \ubb38\uc11c\ub610\ud55c \uc5c5\ub370\uc774\ud2b8\ub429\ub2c8\ub2e4. \uadf8\ub7f0\ub370 \ud574\ub2f9 \ubc84\uc804\uc774 \uc624\ub79c \uae30\uac04\ub3d9\uc548 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\ub294\ub2e4\uba74 \ubb38\uc11c \uc5c5\ub370\uc774\ud2b8\ub610\ud55c \ub9ce\uc774 \uc9c4\ud589\ub418\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uc815\ud655\ub3c4 \ud37c\uc13c\ud2b8\ub294 \ubb38\uc11c \uc5c5\ub370\uc774\ud2b8\uac00 \uc5bc\ub9c8\ub098 \uc9c4\ud589\ub418\uc5c8\ub294\uc9c0\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \ubc84\uc804 \uc815\ud655\ub3c4 \ub9c1\ud06c 1.12.x 100% https://mcforge.readthedocs.io/en/1.12.x/ 1.13.x 10% https://mcforge.readthedocs.io/en/1.13.x/ 1.14.x 10% https://mcforge.readthedocs.io/en/1.14.x/ 1.15.x 85% https://mcforge.readthedocs.io/en/1.15.x/ 1.16.x 85% https://mcforge.readthedocs.io/en/1.16.x/ 1.17.x 85% https://mcforge.readthedocs.io/en/1.17.x/ RetroGradle RetroGradle \uc740 ForgeGradle 1.x ~ 2.3 \ubc84\uc804 \uae4c\uc9c0\uc758 \ud234\uccb4\uc778\uacfc \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\ub4e4\uc744 \ubcf4\uc874\ud558\uace0, \uc0c8\ub86d\uac8c \uac1c\uc120\ub41c ForgeGradle 4.x, \ub610\ub294 \uadf8 \uc774\uc0c1\uc758 \ud234\uccb4\uc778\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud558\ub294 \ud504\ub85c\uc81d\ud2b8\uc785\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc81d\ud2b8\uc758 \ubaa9\uc801\uc740 \uc774\uc804 \ubc84\uc804\uc758 \ud3ec\uc9c0\ub97c \ud655\uc2e4\ud558\uac8c \ub3d9\uc791\ud558\uace0 \ub370\uc774\ud130 \uae30\ubc18 \uc2dc\uc2a4\ud15c\uc744 \ud65c\uc6a9\ud558\ub294 \uc0c8\ub85c\uc6b4 \ud234\uccb4\uc778\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud568\uc73c\ub85c\uc368 \ubcf4\uc874\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub9cc\uc57d \uc774 \ubcf4\uc874 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\uc5ec\ud558\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74 \uacf5\uc2dd \ud3ec\uc9c0 \ud504\ub85c\uc81d\ud2b8 \ub514\uc2a4\ucf54\ub4dc \uc11c\ubc84\uc5d0 \uc811\uc18d\ud558\uc5ec \ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\uc5ec\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud55c\uac00\uc9c0 \uc54c\uc544\ub450\uc2e4 \uc810\uc740, \uc774 \ud504\ub85c\uc81d\ud2b8\ub294 \uc624\uc9c1 \ubcf4\uc874\ub9cc\uc744 \ubaa9\uc801\uc73c\ub85c \ud569\ub2c8\ub2e4, \uc774\uc804 \ubc84\uc804\uc744 \uc9c0\uc6d0\ud558\ub294 \uac83\uc740 \uc808\ub54c \uc544\ub2d9\ub2c8\ub2e4. \uc9c0\uc6d0\uc774 \uc911\ub2e8\ub41c \ubc84\uc804\uc5d0\uc11c \ubaa8\ub4dc\ub97c \uac1c\ubc1c\ud558\uc2e0\ub2e4\uba74 \ud3ec\uc9c0\ud300\uc73c\ub85c\ubd80\ud130 \uc5b4\ub5a0\ud55c \uc9c0\uc6d0\ub3c4 \ubc1b\uc9c0 \ubabb\ud569\ub2c8\ub2e4.","title":"\uc18c\uac1c"},{"location":"legacy/#_1","text":"\ud3ec\uc9c0\uc758 \uc5ed\uc0ac\ub294 \uaf64\ub098 \uae41\ub2c8\ub2e4, \uadf8\ub7ec\uba74\uc11c \uc5ec\ub7ec \ubc84\uc804\uc6a9\uc73c\ub85c \uc791\uc131\ub41c \ubb38\uc11c\ub4e4\uc774 \ub9ce\uc2b5\ub2c8\ub2e4. \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 1.1 \uc815\ub3c4\ub85c \uc624\ub798\ub41c \ubb38\uc11c\ub4e4\uae4c\uc9c0 \uc544\uc9c1\ub3c4 \uc77d\uc5b4\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \ubc84\uc804\uc0ac\uc774\uc758 \ucc28\uc774\uc810\uc774 \ud06c\uae30 \ub54c\ubb38\uc5d0 \ub2e4\uc218\uc758 \ubc84\uc804\ub4e4\uc744 \uc9c0\uc6d0\ud558\ub294 \uac83\uc740 \ub9e4\uc6b0 \uc5b4\ub835\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30\ub54c\ubb38\uc5d0 \ud3ec\uc9c0\ub294 \uc7a5\uae30 \uc9c0\uc6d0 \uc815\ucc45, \ub610\ub294 LTS \ub97c \uc0ac\uc6a9\ud558\ub294\ub370, \uac00\uc7a5 \ucd5c\uc2e0 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\uc758 \uc774\uc804 \ubd80 \ubc84\uc804\uc740 \uc7a5\uae30 \uc9c0\uc6d0 \ubc84\uc804\uc774 \ub429\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0, \uac00\uc7a5 \ucd5c\uc2e0 \ubc84\uc804\uacfc, \uc7a5\uae30 \uc9c0\uc6d0 \ubc84\uc804\uc758 \ubb38\uc11c\ub9cc \uc27d\uac8c \ucc3e\uc544\ubcf4\uc2e4 \uc218 \uc788\ub3c4\ub85d \uc67c\ucabd \ubc14\uc5d0 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \ud604\uc7ac \uc774 \ubc88\uc5ed\ubcf8\uc740 \ubc88\uc5ed\uc774 \uc774\ub8e8\uc5b4\uc9c4 \ubaa8\ub4e0 \ubb38\uc11c\ub4e4\uc744 \uc0ac\uc774\ub4dc\ubc14\uc5d0 \ud3ec\ud568\ud558\uc9c0\ub9cc, \uc6d0\ubcf8 \uc601\ubb38 \ubb38\uc11c\ub294 \uadf8\ub807\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub807\ub2e4\uace0 \ud574\ub3c4, \ud604\uc7ac\ub85c\uc36c \uc9c0\uc6d0\uc774 \uc911\ub2e8\ub41c \ubc84\uc804\ub4e4\uc740 \uc5b8\uc820\uac00 \ud55c\ubc88\uc740 \uc7a5\uae30 \uc9c0\uc6d0 \ubc84\uc804\uc774\uc5c8\uc744 \uac83\uc774\uace0, \uadf8 \uc774\uc804\uc5d0\ub294 \ucd5c\uc2e0 \ubc84\uc804\uc774\uc5c8\uc744 \uac83\uc774\ub2c8, \uadf8 \ubc84\uc804 \uc804\uc6a9 \ubb38\uc11c\ub4e4 \ub610\ud55c \uc791\uc131\ub418\uc5c8\uc5c8\uc2b5\ub2c8\ub2e4. \uadf8 \ubb38\uc11c\ub4e4\ub85c \ud5a5\ud558\ub294 \ub9c1\ud06c\ub4e4\uc740 \uc544\ub798\uc5d0\uc11c \ucc3e\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Important \uc774 \uc624\ub798\ub41c \ubb38\uc11c \uc0ac\uc774\ud2b8\ub4e4\uc740 \uc624\uc9c1 \ucc38\uc870\uc6a9\uc774\uae30 \ub54c\ubb38\uc5d0, \ud3ec\uc9c0 \ud3ec\ub7fc \ub610\ub294 \ud3ec\uc9c0 \uacf5\uc2dd \ub514\uc2a4\ucf54\ub4dc\uc5d0\uc11c \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\ud300\uc740 \uc9c0\uc6d0\uc774 \uc885\ub8cc\ub41c \ubc84\uc804\uc5d0 \ub300\ud55c \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"\uc774\uc804 \ubc84\uc804 \ubb38\uc11c\ub4e4"},{"location":"legacy/#_2","text":"\ubaa8\ub4e0 \ubc84\uc804\uc774 \uc624\ub79c \uae30\uac04\ub3d9\uc548 \uc9c0\uc6d0\ub418\ub294 \uac83\uc740 \uc544\ub2c8\uae30 \ub54c\ubb38\uc5d0, \uba87\uba87 \ubc84\uc804\ub4e4\uc740 \ubb38\uc11c\ud654\uac00 \uc644\uc804\ud788 \uc9c4\ud589\ub418\uc9c0 \uc54a\uc558\uc744 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc0c8\ub85c\uc6b4 \ubc84\uc804\uc774 \ucd9c\uc2dc\ub418\uba74 \uc774\uc804 \ubc84\uc804\uc758 \ubb38\uc11c\uac00 \uc0c8\ub85c\uc6b4 \ubc84\uc804\uc73c\ub85c \ubcf5\uc0ac\ub418\uace0, \uac8c\uc784 \uc5c5\ub370\uc774\ud2b8\uc5d0 \ub9de\ucd94\uae30 \ubb38\uc11c\ub610\ud55c \uc5c5\ub370\uc774\ud2b8\ub429\ub2c8\ub2e4. \uadf8\ub7f0\ub370 \ud574\ub2f9 \ubc84\uc804\uc774 \uc624\ub79c \uae30\uac04\ub3d9\uc548 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\ub294\ub2e4\uba74 \ubb38\uc11c \uc5c5\ub370\uc774\ud2b8\ub610\ud55c \ub9ce\uc774 \uc9c4\ud589\ub418\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uc815\ud655\ub3c4 \ud37c\uc13c\ud2b8\ub294 \ubb38\uc11c \uc5c5\ub370\uc774\ud2b8\uac00 \uc5bc\ub9c8\ub098 \uc9c4\ud589\ub418\uc5c8\ub294\uc9c0\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \ubc84\uc804 \uc815\ud655\ub3c4 \ub9c1\ud06c 1.12.x 100% https://mcforge.readthedocs.io/en/1.12.x/ 1.13.x 10% https://mcforge.readthedocs.io/en/1.13.x/ 1.14.x 10% https://mcforge.readthedocs.io/en/1.14.x/ 1.15.x 85% https://mcforge.readthedocs.io/en/1.15.x/ 1.16.x 85% https://mcforge.readthedocs.io/en/1.16.x/ 1.17.x 85% https://mcforge.readthedocs.io/en/1.17.x/","title":"\uc774\uc804\uc5d0 \ubb38\uc11c\ud654\uac00 \uc9c4\ud589\ub418\uc5c8\ub358 \ubc84\uc804\ub4e4"},{"location":"legacy/#retrogradle","text":"RetroGradle \uc740 ForgeGradle 1.x ~ 2.3 \ubc84\uc804 \uae4c\uc9c0\uc758 \ud234\uccb4\uc778\uacfc \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804\ub4e4\uc744 \ubcf4\uc874\ud558\uace0, \uc0c8\ub86d\uac8c \uac1c\uc120\ub41c ForgeGradle 4.x, \ub610\ub294 \uadf8 \uc774\uc0c1\uc758 \ud234\uccb4\uc778\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud558\ub294 \ud504\ub85c\uc81d\ud2b8\uc785\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc81d\ud2b8\uc758 \ubaa9\uc801\uc740 \uc774\uc804 \ubc84\uc804\uc758 \ud3ec\uc9c0\ub97c \ud655\uc2e4\ud558\uac8c \ub3d9\uc791\ud558\uace0 \ub370\uc774\ud130 \uae30\ubc18 \uc2dc\uc2a4\ud15c\uc744 \ud65c\uc6a9\ud558\ub294 \uc0c8\ub85c\uc6b4 \ud234\uccb4\uc778\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud568\uc73c\ub85c\uc368 \ubcf4\uc874\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub9cc\uc57d \uc774 \ubcf4\uc874 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\uc5ec\ud558\uace0 \uc2f6\uc73c\uc2dc\ub2e4\uba74 \uacf5\uc2dd \ud3ec\uc9c0 \ud504\ub85c\uc81d\ud2b8 \ub514\uc2a4\ucf54\ub4dc \uc11c\ubc84\uc5d0 \uc811\uc18d\ud558\uc5ec \ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\uc5ec\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud55c\uac00\uc9c0 \uc54c\uc544\ub450\uc2e4 \uc810\uc740, \uc774 \ud504\ub85c\uc81d\ud2b8\ub294 \uc624\uc9c1 \ubcf4\uc874\ub9cc\uc744 \ubaa9\uc801\uc73c\ub85c \ud569\ub2c8\ub2e4, \uc774\uc804 \ubc84\uc804\uc744 \uc9c0\uc6d0\ud558\ub294 \uac83\uc740 \uc808\ub54c \uc544\ub2d9\ub2c8\ub2e4. \uc9c0\uc6d0\uc774 \uc911\ub2e8\ub41c \ubc84\uc804\uc5d0\uc11c \ubaa8\ub4dc\ub97c \uac1c\ubc1c\ud558\uc2e0\ub2e4\uba74 \ud3ec\uc9c0\ud300\uc73c\ub85c\ubd80\ud130 \uc5b4\ub5a0\ud55c \uc9c0\uc6d0\ub3c4 \ubc1b\uc9c0 \ubabb\ud569\ub2c8\ub2e4.","title":"RetroGradle"},{"location":"legacy/porting/","text":"1.18 \ub85c \ud3ec\ud305\ud558\uae30 \uc774 \ud398\uc774\uc9c0\uc5d0\uc11c \uc624\ub798\ub41c \ubc84\uc804\uc758 \ubaa8\ub4dc\ub97c \ub354 \ucd5c\uadfc\uc758 \ubc84\uc804\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \ubc29\ubc95\ub4e4\uc744 \ucc3e\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. From -> To Primer 1.12 -> 1.13/1.14 Primer by williewillus 1.14 -> 1.15 Primer by williewillus 1.15 -> 1.16 Primer by 50ap5ud5 1.16 -> 1.17 Primer by 50ap5ud5","title":"1.18\ub85c \ubaa8\ub4dc \ud3ec\ud2b8\ud558\uae30"},{"location":"legacy/porting/#118","text":"\uc774 \ud398\uc774\uc9c0\uc5d0\uc11c \uc624\ub798\ub41c \ubc84\uc804\uc758 \ubaa8\ub4dc\ub97c \ub354 \ucd5c\uadfc\uc758 \ubc84\uc804\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \ubc29\ubc95\ub4e4\uc744 \ucc3e\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. From -> To Primer 1.12 -> 1.13/1.14 Primer by williewillus 1.14 -> 1.15 Primer by williewillus 1.15 -> 1.16 Primer by 50ap5ud5 1.16 -> 1.17 Primer by 50ap5ud5","title":"1.18 \ub85c \ud3ec\ud305\ud558\uae30"},{"location":"misc/config/","text":"Configuration Configurations define settings and consumer preferences that can be applied to a mod instance. Forge uses a configuration system using TOML files and read with NightConfig . Creating a Configuration A configuration can be created using a subtype of IConfigSpec . Forge implements the type via ForgeConfigSpec and enables its construction through ForgeConfigSpec$Builder . The builder can separate the config values into sections via Builder#push to create a section and Builder#pop to leave a section. Afterwards, the configuration can be built using one of two methods: Method Description build Creates the ForgeConfigSpec . configure Creates a pair of the class holding the config values and the ForgeConfigSpec . Note ForgeConfigSpec$Builder#configure is typically used with a static block and a class that takes in ForgeConfigSpec$Builder as part of its constructor to attach and hold the values: // In some config class ExampleConfig(ForgeConfigSpec.Builder builder) { // Define values here in final fields } // Somewhere the constructor is accessible static { Pair<ExampleConfig, ForgeConfigSpec> pair = new ForgeConfigSpec.Builder() .configure(ExampleConfig::new); // Store pair values in some constant field } Each config value can be supplied with additional context to provide additional behavior. Contexts must be defined before the config value is fully built: Method Description comment Provides a description of what the config value does. Can provide multiple strings for a multiline comment. translation Provides a translation key for the name of the config value. worldRestart The world must be restarted before the config value can be changed. ConfigValue Config values can be built with the provided contexts (if defined) using any of the #define methods. All config value methods take in at least two components: A path representing the name of the variable: a . separated string representing the sections the config value is in The default value when no valid configuration is present The ConfigValue specific methods take in two additional components: A validator to make sure the deserialized object is valid A class representing the data type of the config value // For some ForgeConfigSpec$Builder builder ConfigValue<T> value = builder.comment(\"Comment\") .define(\"config_value_name\", defaultValue); The values themselves can be obtained using ConfigValue#get . The values are additionally cached to prevent multiple readings from files. Additional Config Value Types Range Values Description: Value must be between the defined bounds Class Type: Comparable<T> Method Name: #defineInRange Additional Components: The minimum and maximum the config value may be A class representing the data type of the config value Note DoubleValue s, IntValue s, and LongValue s are range values which specify the class as Double , Integer , and Long respectively. Whitelisted Values Description: Value must be in supplied collection Class Type: T Method Name: #defineInList Additional Components: A collection of the allowed values the configuration can be List Values Description: Value is a list of entries Class Type: List<T> Method Name: #defineList , #defineListAllowEmpty if list can be empty Additional Components: A validator to make sure a deserialized element from the list is valid Enum Values Description: An enum value in the supplied collection Class Type: Enum<T> Method Name: #defineEnum Additional Components: A getter to convert a string or integer into an enum A collection of the allowed values the configuration can be Boolean Values Description: A boolean value Class Type: Boolean Method Name: #define Registering a Configuration Once a ForgeConfigSpec has been built, it must be registered to allow Forge to load, track, and sync the configuration settings as required. Configurations should be registered in the mod constructor via ModLoadingContext#registerConfig . A configuration can be registered with a given type representing the side the config belongs to, the ForgeConfigSpec , and optionally a specific file name for the configuration. // In the mod constructor with a ForgeConfigSpec CONFIG ModLoadingContext.get().registerConfig(Type.COMMON, CONFIG); Here is a list of the available configuration types: Type Loaded Synced to Client Client Location Server Location Default File Suffix CLIENT Client Side Only No .minecraft/config N/A -client COMMON On Both Sides No .minecraft/config <server_folder>/config -common SERVER Server Side Only Yes .minecraft/saves/<level_name>/serverconfig <server_folder>/world/serverconfig -server Tip Forge documents the config types within their codebase. Configuration Events Operations that occur whenever a config is loaded or reloaded can be done using the ModConfigEvent$Loading and ModConfigEvent$Reloading events. The events must be registered to the mod event bus. Warning These events are called for all configurations for the mod; the ModConfig object provided should be used to denote which configuration is being loaded or reloaded.","title":"\ubaa8\ub4dc \uc124\uc815 \ud30c\uc77c"},{"location":"misc/config/#configuration","text":"Configurations define settings and consumer preferences that can be applied to a mod instance. Forge uses a configuration system using TOML files and read with NightConfig .","title":"Configuration"},{"location":"misc/config/#creating-a-configuration","text":"A configuration can be created using a subtype of IConfigSpec . Forge implements the type via ForgeConfigSpec and enables its construction through ForgeConfigSpec$Builder . The builder can separate the config values into sections via Builder#push to create a section and Builder#pop to leave a section. Afterwards, the configuration can be built using one of two methods: Method Description build Creates the ForgeConfigSpec . configure Creates a pair of the class holding the config values and the ForgeConfigSpec . Note ForgeConfigSpec$Builder#configure is typically used with a static block and a class that takes in ForgeConfigSpec$Builder as part of its constructor to attach and hold the values: // In some config class ExampleConfig(ForgeConfigSpec.Builder builder) { // Define values here in final fields } // Somewhere the constructor is accessible static { Pair<ExampleConfig, ForgeConfigSpec> pair = new ForgeConfigSpec.Builder() .configure(ExampleConfig::new); // Store pair values in some constant field } Each config value can be supplied with additional context to provide additional behavior. Contexts must be defined before the config value is fully built: Method Description comment Provides a description of what the config value does. Can provide multiple strings for a multiline comment. translation Provides a translation key for the name of the config value. worldRestart The world must be restarted before the config value can be changed.","title":"Creating a Configuration"},{"location":"misc/config/#configvalue","text":"Config values can be built with the provided contexts (if defined) using any of the #define methods. All config value methods take in at least two components: A path representing the name of the variable: a . separated string representing the sections the config value is in The default value when no valid configuration is present The ConfigValue specific methods take in two additional components: A validator to make sure the deserialized object is valid A class representing the data type of the config value // For some ForgeConfigSpec$Builder builder ConfigValue<T> value = builder.comment(\"Comment\") .define(\"config_value_name\", defaultValue); The values themselves can be obtained using ConfigValue#get . The values are additionally cached to prevent multiple readings from files.","title":"ConfigValue"},{"location":"misc/config/#additional-config-value-types","text":"Range Values Description: Value must be between the defined bounds Class Type: Comparable<T> Method Name: #defineInRange Additional Components: The minimum and maximum the config value may be A class representing the data type of the config value Note DoubleValue s, IntValue s, and LongValue s are range values which specify the class as Double , Integer , and Long respectively. Whitelisted Values Description: Value must be in supplied collection Class Type: T Method Name: #defineInList Additional Components: A collection of the allowed values the configuration can be List Values Description: Value is a list of entries Class Type: List<T> Method Name: #defineList , #defineListAllowEmpty if list can be empty Additional Components: A validator to make sure a deserialized element from the list is valid Enum Values Description: An enum value in the supplied collection Class Type: Enum<T> Method Name: #defineEnum Additional Components: A getter to convert a string or integer into an enum A collection of the allowed values the configuration can be Boolean Values Description: A boolean value Class Type: Boolean Method Name: #define","title":"Additional Config Value Types"},{"location":"misc/config/#registering-a-configuration","text":"Once a ForgeConfigSpec has been built, it must be registered to allow Forge to load, track, and sync the configuration settings as required. Configurations should be registered in the mod constructor via ModLoadingContext#registerConfig . A configuration can be registered with a given type representing the side the config belongs to, the ForgeConfigSpec , and optionally a specific file name for the configuration. // In the mod constructor with a ForgeConfigSpec CONFIG ModLoadingContext.get().registerConfig(Type.COMMON, CONFIG); Here is a list of the available configuration types: Type Loaded Synced to Client Client Location Server Location Default File Suffix CLIENT Client Side Only No .minecraft/config N/A -client COMMON On Both Sides No .minecraft/config <server_folder>/config -common SERVER Server Side Only Yes .minecraft/saves/<level_name>/serverconfig <server_folder>/world/serverconfig -server Tip Forge documents the config types within their codebase.","title":"Registering a Configuration"},{"location":"misc/config/#configuration-events","text":"Operations that occur whenever a config is loaded or reloaded can be done using the ModConfigEvent$Loading and ModConfigEvent$Reloading events. The events must be registered to the mod event bus. Warning These events are called for all configurations for the mod; the ModConfig object provided should be used to denote which configuration is being loaded or reloaded.","title":"Configuration Events"},{"location":"misc/debugprofiler/","text":"\ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2dc\uc2a4\ud15c \ub370\uc774\ud130, \ud604\uc7ac \uac8c\uc784 \uc124\uc815, JVM \ub370\uc774\ud130, \ub808\ubca8 \ub370\uc774\ud130, \uc0ac\uc774\ub4dc \ud2f1 \uc815\ubcf4 \ub4f1\uc744 \ud65c\uc6a9\ud574 \ud2b9\uc815 \ucf54\ub4dc\uac00 \uc5bc\ub9c8\ub098 \uc2dc\uac04\uc744 \uc18c\uc694\ud558\ub294\uc9c0 \uce21\uc815\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. TickEvent \ub098 \ube14\ub85d \uc5d4\ud2f0\ud2f0 tick \ucc98\ub9ac \ub4f1\uc5d0\uc11c \uc774\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc720\uc6a9\ud560 \uc218 \uc788\ub294\ub370, \ubaa8\ub4dc \uac1c\ubc1c\uc790 \ub610\ub294 \uc11c\ubc84 \uc5b4\ub4dc\ubbfc\uc774 \ub799\uc758 \uc6d0\uc778\uc744 \uc27d\uac8c \ud30c\uc545\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4. \ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec \uc0ac\uc6a9\ud558\uae30 \ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec\ub294 \uc4f0\uae30 \uac04\ub2e8\ud569\ub2c8\ub2e4. F3 + L \uc744 \ub20c\ub7ec \ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \uc2dc\uc791\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub85c\ud30c\uc77c\ub9c1\uc740 10\ucd08 \uc774\ud6c4 \uc790\ub3d9\uc73c\ub85c \uc885\ub8cc\ub418\uc9c0\ub9cc, \ud0a4\ubc14\uc778\ub4dc\ub97c \ub2e4\uc2dc \ub204\ub974\ub294 \uac83\uc73c\ub85c \ub354 \ube68\ub9ac \uc911\ub2e8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note \ub2f9\uc5f0\ud558\uac8c\ub3c4, \ud504\ub85c\ud30c\uc77c\ub9c1\uc744 \uc9c4\ud589\ud560 \ucf54\ub4dc\ub97c \uc2e4\ud589\ud574\uc57c \uc801\uc808\ud55c \ub370\uc774\ud130\ub97c \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5d4\ud2f0\ud2f0\ub098 \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0 \ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \uc0ac\uc6a9\ud558\uc2e4\ub824\uba74 \ub808\ubca8\uc5d0 \uba3c\uc800 \uc0dd\uc131\ud558\ub3c4\ub85d \ud558\uc138\uc694. \ud504\ub85c\ud30c\uc77c\ub7ec\uac00 \uc885\ub8cc\ub418\uba74 \uac8c\uc784\uc744 \uc2e4\ud589\ud55c \ub514\ub809\ud1a0\ub9ac \uc544\ub798 debug/profiling \ud3f4\ub354\uc5d0 \uc0c8\ub85c\uc6b4 zip \ud30c\uc77c\uc774 \uc0dd\uc131\ub429\ub2c8\ub2e4. \ud30c\uc77c\uc758 \uc774\ub984\uc740 \ud604\uc7ac \uc2dc\uac04\uc73c\ub85c \ub2e4\uc74c\uacfc \uac19\uc774 \ud3ec\ub9e4\ud305 \ub429\ub2c8\ub2e4: yyyy-mm-dd_hh_mi_ss-\uc6d4\ub4dc\uc774\ub984-\uac8c\uc784\ubc84\uc804.zip \ud504\ub85c\ud30c\uc77c\ub7ec \uacb0\uacfc \ubcf4\uae30 \uac01 \uc0ac\uc774\ub4dc\ub97c \ub300\ud45c\ud558\ub294 \ud3f4\ub354( client \ub791 server )\uc5d0\ub294 profiling.txt \ub77c\ub294 \ud30c\uc77c\uc774 \uc788\uc744\ud150\ub370, \uc774 \ud30c\uc77c\uc740 \ud504\ub85c\ud30c\uc77c\ub9c1 \uacb0\uacfc\ub97c \ub2f4\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud30c\uc77c \ub9e8 \uc704\uc5d0\ub294 \uac8c\uc784 \ubc84\uc804\uacfc \ud504\ub85c\ud30c\uc77c\ub9c1\uc774 \uc9c4\ud589\ub41c \uc2dc\uac04\uc774 \ubc00\ub9ac\uc138\ucee8\ub4dc\ub85c \ud45c\uc2dc\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \uc544\ub798\ub294 \ud558\uc704\uc640 \ube44\uc2b7\ud55c \ud615\uc2dd\uc73c\ub85c \ud504\ub85c\ud30c\uc77c\ub9c1 \uacb0\uacfc\uac00 \ud45c\uc2dc\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. [00] levels - 96.70%/96.70% [01] | Level Name - 99.76%/96.47% [02] | | tick - 99.31%/95.81% [03] | | | entities - 47.72%/45.72% [04] | | | | regular - 98.32%/44.95% [04] | | | | blockEntities - 0.90%/0.41% [05] | | | | | unspecified - 64.26%/0.26% [05] | | | | | minecraft:furnace - 33.35%/0.14% [05] | | | | | minecraft:chest - 2.39%/0.01% \uac01 \ubd80\ubd84\uc774 \ubb34\uc2a8 \ub73b\uc744 \uac00\uc9c0\ub294\uc9c0 \uac04\ub7b5\ud558\uac8c \uc124\uba85\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: [02] tick 99.31% 95.81% \ubd80\ubd84\uc758 \uae4a\uc774 \ubd80\ubd84\uc758 \uc774\ub984 \ubd80\ubaa8 \uae30\uc900\uc73c\ub85c \ubd80\ubd84\uc774 \uc18c\uc694\ud55c \uc2dc\uac04\uc758 \ubc31\ubd84\uc728. \uae4a\uc774 0\uc740 \ud2f1 \uc804\uccb4\uc5d0\uc11c \uc18c\uc694\ud55c \uc2dc\uac04\uc758 \ubc31\ubd84\uc728. \uae4a\uc774 1\uc740 \uadf8 \ubd80\ubaa8(\uae4a\uc774 0)\uc5d0\uc11c \uc18c\uc694\ub41c \uc2dc\uac04\uc911 \uc18c\uc694\ud55c \uc2dc\uac04\uc758 \ubc31\ubd84\uc728 \ud2f1 \uc804\uccb4\uc5d0\uc11c \uc18c\uc694\ud55c \uc2dc\uac04\uc758 \ubc31\ubd84\uc728. \uc9c1\uc811 \uc9e0 \ucf54\ub4dc \ud504\ub85c\ud30c\uc77c\ub9c1 \ud558\uae30 \ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec\ub294 Entity \uc640 BlockEntity \ub294 \ud504\ub85c\ud30c\uc77c\ub9c1\uc744 \uc790\ub3d9\uc73c\ub85c \ud574\uc8fc\uc9c0\ub9cc \uadf8\uac83 \uc774\uc678\uc5d0 \ub2e4\ub978 \uac83\uc5d0 \ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \uc4f0\uace0 \uc2f6\ub2e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \ubd80\ubd84\uc744 \uc9c1\uc811 \ub9cc\ub4dc\uc154\uc57c \ud569\ub2c8\ub2e4: ProfilerFiller#push(\uc139\uc158 \uc774\ub984 : String); // \ud504\ub85c\ud30c\uc77c\ub9c1\ud560 \ucf54\ub4dc ProfilerFiller#pop(); ProfilerFiller \uc778\uc2a4\ud134\uc2a4\ub294 Level , MinecraftServer \ub610\ub294 Minecraft \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc811\uadfc\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc0ac\uc6a9\ud558\uc2e0 \ubd80\ubd84 \uc774\ub984\uc744 \ud504\ub85c\ud30c\uc77c\ub9c1 \uacb0\uacfc\uc5d0\uc11c \ucc3e\uc544\ubcf4\uc2dc\uba74 \ub429\ub2c8\ub2e4.","title":"\ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec"},{"location":"misc/debugprofiler/#_1","text":"\ub9c8\uc778\ud06c\ub798\ud504\ud2b8\ub294 \ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2dc\uc2a4\ud15c \ub370\uc774\ud130, \ud604\uc7ac \uac8c\uc784 \uc124\uc815, JVM \ub370\uc774\ud130, \ub808\ubca8 \ub370\uc774\ud130, \uc0ac\uc774\ub4dc \ud2f1 \uc815\ubcf4 \ub4f1\uc744 \ud65c\uc6a9\ud574 \ud2b9\uc815 \ucf54\ub4dc\uac00 \uc5bc\ub9c8\ub098 \uc2dc\uac04\uc744 \uc18c\uc694\ud558\ub294\uc9c0 \uce21\uc815\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. TickEvent \ub098 \ube14\ub85d \uc5d4\ud2f0\ud2f0 tick \ucc98\ub9ac \ub4f1\uc5d0\uc11c \uc774\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc720\uc6a9\ud560 \uc218 \uc788\ub294\ub370, \ubaa8\ub4dc \uac1c\ubc1c\uc790 \ub610\ub294 \uc11c\ubc84 \uc5b4\ub4dc\ubbfc\uc774 \ub799\uc758 \uc6d0\uc778\uc744 \uc27d\uac8c \ud30c\uc545\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc90d\ub2c8\ub2e4.","title":"\ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec"},{"location":"misc/debugprofiler/#_2","text":"\ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec\ub294 \uc4f0\uae30 \uac04\ub2e8\ud569\ub2c8\ub2e4. F3 + L \uc744 \ub20c\ub7ec \ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \uc2dc\uc791\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub85c\ud30c\uc77c\ub9c1\uc740 10\ucd08 \uc774\ud6c4 \uc790\ub3d9\uc73c\ub85c \uc885\ub8cc\ub418\uc9c0\ub9cc, \ud0a4\ubc14\uc778\ub4dc\ub97c \ub2e4\uc2dc \ub204\ub974\ub294 \uac83\uc73c\ub85c \ub354 \ube68\ub9ac \uc911\ub2e8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note \ub2f9\uc5f0\ud558\uac8c\ub3c4, \ud504\ub85c\ud30c\uc77c\ub9c1\uc744 \uc9c4\ud589\ud560 \ucf54\ub4dc\ub97c \uc2e4\ud589\ud574\uc57c \uc801\uc808\ud55c \ub370\uc774\ud130\ub97c \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5d4\ud2f0\ud2f0\ub098 \ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0 \ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \uc0ac\uc6a9\ud558\uc2e4\ub824\uba74 \ub808\ubca8\uc5d0 \uba3c\uc800 \uc0dd\uc131\ud558\ub3c4\ub85d \ud558\uc138\uc694. \ud504\ub85c\ud30c\uc77c\ub7ec\uac00 \uc885\ub8cc\ub418\uba74 \uac8c\uc784\uc744 \uc2e4\ud589\ud55c \ub514\ub809\ud1a0\ub9ac \uc544\ub798 debug/profiling \ud3f4\ub354\uc5d0 \uc0c8\ub85c\uc6b4 zip \ud30c\uc77c\uc774 \uc0dd\uc131\ub429\ub2c8\ub2e4. \ud30c\uc77c\uc758 \uc774\ub984\uc740 \ud604\uc7ac \uc2dc\uac04\uc73c\ub85c \ub2e4\uc74c\uacfc \uac19\uc774 \ud3ec\ub9e4\ud305 \ub429\ub2c8\ub2e4: yyyy-mm-dd_hh_mi_ss-\uc6d4\ub4dc\uc774\ub984-\uac8c\uc784\ubc84\uc804.zip","title":"\ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec \uc0ac\uc6a9\ud558\uae30"},{"location":"misc/debugprofiler/#_3","text":"\uac01 \uc0ac\uc774\ub4dc\ub97c \ub300\ud45c\ud558\ub294 \ud3f4\ub354( client \ub791 server )\uc5d0\ub294 profiling.txt \ub77c\ub294 \ud30c\uc77c\uc774 \uc788\uc744\ud150\ub370, \uc774 \ud30c\uc77c\uc740 \ud504\ub85c\ud30c\uc77c\ub9c1 \uacb0\uacfc\ub97c \ub2f4\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud30c\uc77c \ub9e8 \uc704\uc5d0\ub294 \uac8c\uc784 \ubc84\uc804\uacfc \ud504\ub85c\ud30c\uc77c\ub9c1\uc774 \uc9c4\ud589\ub41c \uc2dc\uac04\uc774 \ubc00\ub9ac\uc138\ucee8\ub4dc\ub85c \ud45c\uc2dc\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \uc544\ub798\ub294 \ud558\uc704\uc640 \ube44\uc2b7\ud55c \ud615\uc2dd\uc73c\ub85c \ud504\ub85c\ud30c\uc77c\ub9c1 \uacb0\uacfc\uac00 \ud45c\uc2dc\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. [00] levels - 96.70%/96.70% [01] | Level Name - 99.76%/96.47% [02] | | tick - 99.31%/95.81% [03] | | | entities - 47.72%/45.72% [04] | | | | regular - 98.32%/44.95% [04] | | | | blockEntities - 0.90%/0.41% [05] | | | | | unspecified - 64.26%/0.26% [05] | | | | | minecraft:furnace - 33.35%/0.14% [05] | | | | | minecraft:chest - 2.39%/0.01% \uac01 \ubd80\ubd84\uc774 \ubb34\uc2a8 \ub73b\uc744 \uac00\uc9c0\ub294\uc9c0 \uac04\ub7b5\ud558\uac8c \uc124\uba85\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: [02] tick 99.31% 95.81% \ubd80\ubd84\uc758 \uae4a\uc774 \ubd80\ubd84\uc758 \uc774\ub984 \ubd80\ubaa8 \uae30\uc900\uc73c\ub85c \ubd80\ubd84\uc774 \uc18c\uc694\ud55c \uc2dc\uac04\uc758 \ubc31\ubd84\uc728. \uae4a\uc774 0\uc740 \ud2f1 \uc804\uccb4\uc5d0\uc11c \uc18c\uc694\ud55c \uc2dc\uac04\uc758 \ubc31\ubd84\uc728. \uae4a\uc774 1\uc740 \uadf8 \ubd80\ubaa8(\uae4a\uc774 0)\uc5d0\uc11c \uc18c\uc694\ub41c \uc2dc\uac04\uc911 \uc18c\uc694\ud55c \uc2dc\uac04\uc758 \ubc31\ubd84\uc728 \ud2f1 \uc804\uccb4\uc5d0\uc11c \uc18c\uc694\ud55c \uc2dc\uac04\uc758 \ubc31\ubd84\uc728.","title":"\ud504\ub85c\ud30c\uc77c\ub7ec \uacb0\uacfc \ubcf4\uae30"},{"location":"misc/debugprofiler/#_4","text":"\ub514\ubc84\uadf8 \ud504\ub85c\ud30c\uc77c\ub7ec\ub294 Entity \uc640 BlockEntity \ub294 \ud504\ub85c\ud30c\uc77c\ub9c1\uc744 \uc790\ub3d9\uc73c\ub85c \ud574\uc8fc\uc9c0\ub9cc \uadf8\uac83 \uc774\uc678\uc5d0 \ub2e4\ub978 \uac83\uc5d0 \ud504\ub85c\ud30c\uc77c\ub7ec\ub97c \uc4f0\uace0 \uc2f6\ub2e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \ubd80\ubd84\uc744 \uc9c1\uc811 \ub9cc\ub4dc\uc154\uc57c \ud569\ub2c8\ub2e4: ProfilerFiller#push(\uc139\uc158 \uc774\ub984 : String); // \ud504\ub85c\ud30c\uc77c\ub9c1\ud560 \ucf54\ub4dc ProfilerFiller#pop(); ProfilerFiller \uc778\uc2a4\ud134\uc2a4\ub294 Level , MinecraftServer \ub610\ub294 Minecraft \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc811\uadfc\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc0ac\uc6a9\ud558\uc2e0 \ubd80\ubd84 \uc774\ub984\uc744 \ud504\ub85c\ud30c\uc77c\ub9c1 \uacb0\uacfc\uc5d0\uc11c \ucc3e\uc544\ubcf4\uc2dc\uba74 \ub429\ub2c8\ub2e4.","title":"\uc9c1\uc811 \uc9e0 \ucf54\ub4dc \ud504\ub85c\ud30c\uc77c\ub9c1 \ud558\uae30"},{"location":"misc/gametest/","text":"Game Tests Game Tests are a way to run in-game unit tests. The system was designed to be scalable and in parallel to run large numbers of different tests efficiently. Testing object interactions and behaviors are simply a few of the many applications of this framework. Creating a Game Test A standard Game Test follows three basic steps: A structure, or template, is loaded holding the scene on which the interaction or behavior is tested. A method conducts the logic to perform on the scene. The method logic executes. If a successful state is reached, then the test succeeds. Otherwise, the test fails and the result is stored within a lectern adjacent to the scene. As such, to create a Game Test, there must be an existing template holding the initial start state of the scene and a method which provides the logic of execution. The Test Method A Game Test method is a Consumer<GameTestHelper> reference, meaning it takes in a GameTestHelper and returns nothing. For a Game Test method to be recognized, it must have a @GameTest annotation: public class ExampleGameTests { @GameTest public static void exampleTest(GameTestHelper helper) { // Do stuff } } The @GameTest annotation also contains members which configure how the game test should run. // In some class @GameTest( setupTicks = 20L, // The test spends 20 ticks to set up for execution required = false // The failure is logged but does not affect the execution of the batch ) public static void exampleConfiguredTest(GameTestHelper helper) { // Do stuff } Relative Positioning All GameTestHelper methods translate relative coordinates within the structure template scene to its absolute coordinates using the structure block\u2019s current location. To allow for easy conversion between relative and absolute positioning, GameTestHelper#absolutePos and GameTestHelper#relativePos can be used respectively. The relative position of a structure template can be obtained in-game by loading the structure via the test command , placing the player at the wanted location, and finally running the /test pos command. This will grab the coordinates of the player relative to the closest structure within 200 blocks of the player. The command will export the relative position as a copyable text component in the chat to be used as a final local variable. Tip The local variable generated by /test pos can specify its reference name by appending it to the end of the command: /test pos <var> # Exports 'final BlockPos <var> = new BlockPos(...);' Successful Completion A Game Test method is responsible for one thing: marking the test was successful on a valid completion. If no success state was achieved before the timeout is reached (as defined by GameTest#timeoutTicks ), then the test automatically fails. There are many abstracted methods within GameTestHelper which can be used to define a successful state; however, four are extremely important to be aware of. Method Description #succeed The test is marked as successful. #succeedIf The supplied Runnable is tested immediately and succeeds if no GameTestAssertException is thrown. If the test does not succeed on the immediate tick, then it is marked as a failure. #succeedWhen The supplied Runnable is tested every tick until timeout and succeeds if the check on one of the ticks does not throw a GameTestAssertException . #succeedOnTickWhen The supplied Runnable is tested on the specified tick and will succeed if no GameTestAssertException is thrown. If the Runnable succeeds on any other tick, then it is marked as a failure. Important Game Tests are executed every tick until the test is marked as a success. As such, methods which schedule success on a given tick must be careful to always fail on any previous tick. Scheduling Actions Not all actions will occur when a test begins. Actions can be scheduled to occur at specific times or intervals: Method Description #runAtTickTime The action is ran on the specified tick. #runAfterDelay The action is ran x ticks after the current tick. #onEachTick The action is ran every tick. Assertions At any time during a Game Test, an assertion can be made to check if a given condition is true. There are numerous assertion methods within GameTestHelper ; however, it simplifies to throwing a GameTestAssertException whenever the appropriate state is not met. Generated Test Methods If Game Test methods need to be generated dynamically, a test method generator can be created. These methods take in no parameters and return a collection of TestFunction s. For a test method generator to be recognized, it must have a @GameTestGenerator annotation: public class ExampleGameTests { @GameTestGenerator public static Collection<TestFunction> exampleTests() { // Return a collection of TestFunctions } } TestFunction A TestFunction is the boxed information held by the @GameTest annotation and the method running the test. Tip Any methods annotated using @GameTest are translated into a TestFunction using GameTestRegistry#turnMethodIntoTestFunction . That method can be used as a reference for creating TestFunction s without the use of the annotation. Batching Game Tests can be executed in batches instead of registration order. A test can be added to a batch by having the same supplied GameTest#batch string. On its own, batching does not provide anything useful. However, batching can be used to perform setup and teardown states on the current level the tests are running in. This is done by annotating a method with either @BeforeBatch for setup or @AfterBatch for takedown. The #batch methods must match the string supplied to the game test. Batch methods are Consumer<ServerLevel> references, meaning they take in a ServerLevel and return nothing: public class ExampleGameTests { @BeforeBatch(batch = \"firstBatch\") public static void beforeTest(ServerLevel level) { // Perform setup } @GameTest(batch = \"firstBatch\") public static void exampleTest2(GameTestHelper helper) { // Do stuff } } Registering a Game Test A Game Test must be registered to be ran in-game. There are two methods of doing so: via the @GameTestHolder annotation or RegisterGameTestsEvent . Both registration methods still require the test methods to be annotated with either @GameTest , @GameTestGenerator , @BeforeBatch , or @AfterBatch . GameTestHolder The @GameTestHolder annotation registers any test methods within the type (class, interface, enum, or record). @GameTestHolder contains a single method which has multiple uses. In this instance, the supplied #value must be the mod id of the mod; otherwise, the test will not run under default configurations. @GameTestHolder(MODID) public class ExampleGameTests { // ... } RegisterGameTestsEvent RegisterGameTestEvent can also register either classes or methods using #register . The event listener must be added to the mod event bus. Test methods registered this way must supply their mod id to GameTest#templateNamespace on every method annotated with @GameTest . // In some class public void registerTests(RegisterGameTestsEvent event) { event.register(ExampleGameTests.class); } // In ExampleGameTests @GameTest(templateNamespace = MODID) public static void exampleTest3(GameTestHelper helper) { // Perform setup } Note The value supplied to GameTestHolder#value and GameTest#templateNamespace can be different from the current mod id. The configuration within the buildscript would need to be changed. Structure Templates Game Tests are performed within scenes loaded by structures, or templates. All templates define the dimensions of the scene and the initial data (blocks and entities) that will be loaded. The template must be stored as an .nbt file within data/<namespace>/structures . Tip A structure template can be created and saved using a structure block. The location of the template is specified by a few factors: If the namespace of the template is specified. If the class should be prepended to the name of the template. If the name of the template is specified. The namespace of the template is determined by GameTest#templateNamespace , then GameTestHolder#value if not specified, then minecraft if neither is specified. The simple class name is not prepended to the name of the template if the @PrefixGameTestTemplate is applied to a class or method with the test annotations and set to false . Otherwise, the simple class name is made lowercase and prepended and followed by a dot before the template name. The name of the template is determined by GameTest#template . If not specified, then the lowercase name of the method is used instead. // Modid for all structures will be MODID @GameTestHolder(MODID) public class ExampleGameTests { // Class name is prepended, template name is not specified // Template Location at 'modid:examplegametests.exampletest' @GameTest public static void exampleTest(GameTestHelper helper) { /*...*/ } // Class name is not prepended, template name is not specified // Template Location at 'modid:exampletest2' @PrefixGameTestTemplate(false) @GameTest public static void exampleTest2(GameTestHelper helper) { /*...*/ } // Class name is prepended, template name is specified // Template Location at 'modid:examplegametests.test_template' @GameTest(template = \"test_template\") public static void exampleTest3(GameTestHelper helper) { /*...*/ } // Class name is not prepended, template name is specified // Template Location at 'modid:test_template2' @PrefixGameTestTemplate(false) @GameTest(template = \"test_template2\") public static void exampleTest4(GameTestHelper helper) { /*...*/ } } Running Game Tests Game Tests can be run using the /test command. The test command is highly configurable; however, only a few are of importance to running tests: Subcommand Description run Runs the specified test: run <test_name> . runall Runs all available tests. runthis Runs the nearest test to the player within 15 blocks. runthese Runs tests within 200 blocks of the player. runfailed Runs all tests that failed in the previous run. Note Subcommands follow the test command: /test <subcommand> . Buildscript Configurations Game Tests provide additional configuration settings within a buildscript (the build.gradle file) to run and integrate into different settings. Enabling Other Namespaces If the buildscript was setup as recommended , then only Game Tests under the current mod id would be enabled. To enable other namespaces to load Game Tests from, a run configuration must set the property forge.enabledGameTestNamespaces to a string specifying each namespace separated by a comma. If the property is empty or not set, then all namespaces will be loaded. // Inside a run configuration property 'forge.enabledGameTestNamespaces', 'modid1,modid2,modid3' Warning There must be no spaces in-between namespaces; otherwise, the namespace will not be loaded correctly. Game Test Server Run Configuration The Game Test Server is a special configuration which runs a build server. The build server returns an exit code of the number of required, failed Game Tests. All failed tests, whether required or optional, are logged. This server can be run using gradlew runGameTestServer . Enabling Game Tests in Other Run Configurations By default, only the client , server , and gameTestServer run configurations have Game Tests enabled. If another run configuration should run Game Tests, then the forge.enableGameTest property must be set to true . // Inside a run configuration property 'forge.enableGameTest', 'true'","title":"\uc778\uac8c\uc784 \ud14c\uc2a4\ud2b8"},{"location":"misc/gametest/#game-tests","text":"Game Tests are a way to run in-game unit tests. The system was designed to be scalable and in parallel to run large numbers of different tests efficiently. Testing object interactions and behaviors are simply a few of the many applications of this framework.","title":"Game Tests"},{"location":"misc/gametest/#creating-a-game-test","text":"A standard Game Test follows three basic steps: A structure, or template, is loaded holding the scene on which the interaction or behavior is tested. A method conducts the logic to perform on the scene. The method logic executes. If a successful state is reached, then the test succeeds. Otherwise, the test fails and the result is stored within a lectern adjacent to the scene. As such, to create a Game Test, there must be an existing template holding the initial start state of the scene and a method which provides the logic of execution.","title":"Creating a Game Test"},{"location":"misc/gametest/#the-test-method","text":"A Game Test method is a Consumer<GameTestHelper> reference, meaning it takes in a GameTestHelper and returns nothing. For a Game Test method to be recognized, it must have a @GameTest annotation: public class ExampleGameTests { @GameTest public static void exampleTest(GameTestHelper helper) { // Do stuff } } The @GameTest annotation also contains members which configure how the game test should run. // In some class @GameTest( setupTicks = 20L, // The test spends 20 ticks to set up for execution required = false // The failure is logged but does not affect the execution of the batch ) public static void exampleConfiguredTest(GameTestHelper helper) { // Do stuff }","title":"The Test Method"},{"location":"misc/gametest/#relative-positioning","text":"All GameTestHelper methods translate relative coordinates within the structure template scene to its absolute coordinates using the structure block\u2019s current location. To allow for easy conversion between relative and absolute positioning, GameTestHelper#absolutePos and GameTestHelper#relativePos can be used respectively. The relative position of a structure template can be obtained in-game by loading the structure via the test command , placing the player at the wanted location, and finally running the /test pos command. This will grab the coordinates of the player relative to the closest structure within 200 blocks of the player. The command will export the relative position as a copyable text component in the chat to be used as a final local variable. Tip The local variable generated by /test pos can specify its reference name by appending it to the end of the command: /test pos <var> # Exports 'final BlockPos <var> = new BlockPos(...);'","title":"Relative Positioning"},{"location":"misc/gametest/#successful-completion","text":"A Game Test method is responsible for one thing: marking the test was successful on a valid completion. If no success state was achieved before the timeout is reached (as defined by GameTest#timeoutTicks ), then the test automatically fails. There are many abstracted methods within GameTestHelper which can be used to define a successful state; however, four are extremely important to be aware of. Method Description #succeed The test is marked as successful. #succeedIf The supplied Runnable is tested immediately and succeeds if no GameTestAssertException is thrown. If the test does not succeed on the immediate tick, then it is marked as a failure. #succeedWhen The supplied Runnable is tested every tick until timeout and succeeds if the check on one of the ticks does not throw a GameTestAssertException . #succeedOnTickWhen The supplied Runnable is tested on the specified tick and will succeed if no GameTestAssertException is thrown. If the Runnable succeeds on any other tick, then it is marked as a failure. Important Game Tests are executed every tick until the test is marked as a success. As such, methods which schedule success on a given tick must be careful to always fail on any previous tick.","title":"Successful Completion"},{"location":"misc/gametest/#scheduling-actions","text":"Not all actions will occur when a test begins. Actions can be scheduled to occur at specific times or intervals: Method Description #runAtTickTime The action is ran on the specified tick. #runAfterDelay The action is ran x ticks after the current tick. #onEachTick The action is ran every tick.","title":"Scheduling Actions"},{"location":"misc/gametest/#assertions","text":"At any time during a Game Test, an assertion can be made to check if a given condition is true. There are numerous assertion methods within GameTestHelper ; however, it simplifies to throwing a GameTestAssertException whenever the appropriate state is not met.","title":"Assertions"},{"location":"misc/gametest/#generated-test-methods","text":"If Game Test methods need to be generated dynamically, a test method generator can be created. These methods take in no parameters and return a collection of TestFunction s. For a test method generator to be recognized, it must have a @GameTestGenerator annotation: public class ExampleGameTests { @GameTestGenerator public static Collection<TestFunction> exampleTests() { // Return a collection of TestFunctions } }","title":"Generated Test Methods"},{"location":"misc/gametest/#testfunction","text":"A TestFunction is the boxed information held by the @GameTest annotation and the method running the test. Tip Any methods annotated using @GameTest are translated into a TestFunction using GameTestRegistry#turnMethodIntoTestFunction . That method can be used as a reference for creating TestFunction s without the use of the annotation.","title":"TestFunction"},{"location":"misc/gametest/#batching","text":"Game Tests can be executed in batches instead of registration order. A test can be added to a batch by having the same supplied GameTest#batch string. On its own, batching does not provide anything useful. However, batching can be used to perform setup and teardown states on the current level the tests are running in. This is done by annotating a method with either @BeforeBatch for setup or @AfterBatch for takedown. The #batch methods must match the string supplied to the game test. Batch methods are Consumer<ServerLevel> references, meaning they take in a ServerLevel and return nothing: public class ExampleGameTests { @BeforeBatch(batch = \"firstBatch\") public static void beforeTest(ServerLevel level) { // Perform setup } @GameTest(batch = \"firstBatch\") public static void exampleTest2(GameTestHelper helper) { // Do stuff } }","title":"Batching"},{"location":"misc/gametest/#registering-a-game-test","text":"A Game Test must be registered to be ran in-game. There are two methods of doing so: via the @GameTestHolder annotation or RegisterGameTestsEvent . Both registration methods still require the test methods to be annotated with either @GameTest , @GameTestGenerator , @BeforeBatch , or @AfterBatch .","title":"Registering a Game Test"},{"location":"misc/gametest/#gametestholder","text":"The @GameTestHolder annotation registers any test methods within the type (class, interface, enum, or record). @GameTestHolder contains a single method which has multiple uses. In this instance, the supplied #value must be the mod id of the mod; otherwise, the test will not run under default configurations. @GameTestHolder(MODID) public class ExampleGameTests { // ... }","title":"GameTestHolder"},{"location":"misc/gametest/#registergametestsevent","text":"RegisterGameTestEvent can also register either classes or methods using #register . The event listener must be added to the mod event bus. Test methods registered this way must supply their mod id to GameTest#templateNamespace on every method annotated with @GameTest . // In some class public void registerTests(RegisterGameTestsEvent event) { event.register(ExampleGameTests.class); } // In ExampleGameTests @GameTest(templateNamespace = MODID) public static void exampleTest3(GameTestHelper helper) { // Perform setup } Note The value supplied to GameTestHolder#value and GameTest#templateNamespace can be different from the current mod id. The configuration within the buildscript would need to be changed.","title":"RegisterGameTestsEvent"},{"location":"misc/gametest/#structure-templates","text":"Game Tests are performed within scenes loaded by structures, or templates. All templates define the dimensions of the scene and the initial data (blocks and entities) that will be loaded. The template must be stored as an .nbt file within data/<namespace>/structures . Tip A structure template can be created and saved using a structure block. The location of the template is specified by a few factors: If the namespace of the template is specified. If the class should be prepended to the name of the template. If the name of the template is specified. The namespace of the template is determined by GameTest#templateNamespace , then GameTestHolder#value if not specified, then minecraft if neither is specified. The simple class name is not prepended to the name of the template if the @PrefixGameTestTemplate is applied to a class or method with the test annotations and set to false . Otherwise, the simple class name is made lowercase and prepended and followed by a dot before the template name. The name of the template is determined by GameTest#template . If not specified, then the lowercase name of the method is used instead. // Modid for all structures will be MODID @GameTestHolder(MODID) public class ExampleGameTests { // Class name is prepended, template name is not specified // Template Location at 'modid:examplegametests.exampletest' @GameTest public static void exampleTest(GameTestHelper helper) { /*...*/ } // Class name is not prepended, template name is not specified // Template Location at 'modid:exampletest2' @PrefixGameTestTemplate(false) @GameTest public static void exampleTest2(GameTestHelper helper) { /*...*/ } // Class name is prepended, template name is specified // Template Location at 'modid:examplegametests.test_template' @GameTest(template = \"test_template\") public static void exampleTest3(GameTestHelper helper) { /*...*/ } // Class name is not prepended, template name is specified // Template Location at 'modid:test_template2' @PrefixGameTestTemplate(false) @GameTest(template = \"test_template2\") public static void exampleTest4(GameTestHelper helper) { /*...*/ } }","title":"Structure Templates"},{"location":"misc/gametest/#running-game-tests","text":"Game Tests can be run using the /test command. The test command is highly configurable; however, only a few are of importance to running tests: Subcommand Description run Runs the specified test: run <test_name> . runall Runs all available tests. runthis Runs the nearest test to the player within 15 blocks. runthese Runs tests within 200 blocks of the player. runfailed Runs all tests that failed in the previous run. Note Subcommands follow the test command: /test <subcommand> .","title":"Running Game Tests"},{"location":"misc/gametest/#buildscript-configurations","text":"Game Tests provide additional configuration settings within a buildscript (the build.gradle file) to run and integrate into different settings.","title":"Buildscript Configurations"},{"location":"misc/gametest/#enabling-other-namespaces","text":"If the buildscript was setup as recommended , then only Game Tests under the current mod id would be enabled. To enable other namespaces to load Game Tests from, a run configuration must set the property forge.enabledGameTestNamespaces to a string specifying each namespace separated by a comma. If the property is empty or not set, then all namespaces will be loaded. // Inside a run configuration property 'forge.enabledGameTestNamespaces', 'modid1,modid2,modid3' Warning There must be no spaces in-between namespaces; otherwise, the namespace will not be loaded correctly.","title":"Enabling Other Namespaces"},{"location":"misc/gametest/#game-test-server-run-configuration","text":"The Game Test Server is a special configuration which runs a build server. The build server returns an exit code of the number of required, failed Game Tests. All failed tests, whether required or optional, are logged. This server can be run using gradlew runGameTestServer .","title":"Game Test Server Run Configuration"},{"location":"misc/gametest/#enabling-game-tests-in-other-run-configurations","text":"By default, only the client , server , and gameTestServer run configurations have Game Tests enabled. If another run configuration should run Game Tests, then the forge.enableGameTest property must be set to true . // Inside a run configuration property 'forge.enableGameTest', 'true'","title":"Enabling Game Tests in Other Run Configurations"},{"location":"misc/updatechecker/","text":"Forge Update Checker Forge provides a very lightweight, opt-in, update-checking framework. If any mods have an available update, it will show a flashing icon on the \u2018Mods\u2019 button of the main menu and mod list along with the respective changelogs. It does not download updates automatically. Getting Started The first thing you want to do is specify the updateJSONURL parameter in your mods.toml file. The value of this parameter should be a valid URL pointing to an update JSON file. This file can be hosted on your own web server, GitHub, or wherever you want as long as it can be reliably reached by all users of your mod. Update JSON format The JSON itself has a relatively simple format as follows: { \"homepage\": \"<homepage/download page for your mod>\", \"<mcversion>\": { \"<modversion>\": \"<changelog for this version>\", // List all versions of your mod for the given Minecraft version, along with their changelogs // ... }, \"promos\": { \"<mcversion>-latest\": \"<modversion>\", // Declare the latest \"bleeding-edge\" version of your mod for the given Minecraft version \"<mcversion>-recommended\": \"<modversion>\", // Declare the latest \"stable\" version of your mod for the given Minecraft version // ... } } This is fairly self-explanatory, but some notes: The link under homepage is the link the user will be shown when the mod is outdated. Forge uses an internal algorithm to determine whether one version string of your mod is \u201cnewer\u201d than another. Most versioning schemes should be compatible, but see the ComparableVersion class if you are concerned about whether your scheme is supported. Adherence to semantic versioning is highly recommended. The changelog string can be separated into lines using \\n . Some prefer to include a abbreviated changelog, then link to an external site that provides a full listing of changes. Manually inputting data can be chore. You can configure your build.gradle to automatically update this file when building a release as Groovy has native JSON parsing support. Doing this is left as an exercise to the reader. Some examples can be found here for nocubes , Corail Tombstone and Chisels & Bits 2 . Retrieving Update Check Results You can retrieve the results of the Forge Update Checker using VersionChecker#getResult(IModInfo) . You can obtain your IModInfo via ModContainer#getModInfo . You can get your ModContainer using ModLoadingContext.get().getActiveContainer() inside your constructor, ModList.get().getModContainerById(<your modId>) , or ModList.get().getModContainerByObject(<your mod instance>) . You can obtain any other mod\u2019s ModContainer using ModList.get().getModContainerById(<modId>) . The returned object has a field status which indicates the status of the version check. Status Description FAILED The version checker could not connect to the URL provided. UP_TO_DATE The current version is equal to or newer than the latest stable version. OUTDATED There is a new stable version. BETA_OUTDATED There is a new unstable version. BETA The current version is equal to or newer than the latest unstable version. PENDING The result requested has not finished yet, so you should try again in a little bit. The returned object will also have the target version and any changelog lines as specified in update.json .","title":"\uc790\ub3d9 \uc5c5\ub370\uc774\ud2b8 \ud655\uc778"},{"location":"misc/updatechecker/#forge-update-checker","text":"Forge provides a very lightweight, opt-in, update-checking framework. If any mods have an available update, it will show a flashing icon on the \u2018Mods\u2019 button of the main menu and mod list along with the respective changelogs. It does not download updates automatically.","title":"Forge Update Checker"},{"location":"misc/updatechecker/#getting-started","text":"The first thing you want to do is specify the updateJSONURL parameter in your mods.toml file. The value of this parameter should be a valid URL pointing to an update JSON file. This file can be hosted on your own web server, GitHub, or wherever you want as long as it can be reliably reached by all users of your mod.","title":"Getting Started"},{"location":"misc/updatechecker/#update-json-format","text":"The JSON itself has a relatively simple format as follows: { \"homepage\": \"<homepage/download page for your mod>\", \"<mcversion>\": { \"<modversion>\": \"<changelog for this version>\", // List all versions of your mod for the given Minecraft version, along with their changelogs // ... }, \"promos\": { \"<mcversion>-latest\": \"<modversion>\", // Declare the latest \"bleeding-edge\" version of your mod for the given Minecraft version \"<mcversion>-recommended\": \"<modversion>\", // Declare the latest \"stable\" version of your mod for the given Minecraft version // ... } } This is fairly self-explanatory, but some notes: The link under homepage is the link the user will be shown when the mod is outdated. Forge uses an internal algorithm to determine whether one version string of your mod is \u201cnewer\u201d than another. Most versioning schemes should be compatible, but see the ComparableVersion class if you are concerned about whether your scheme is supported. Adherence to semantic versioning is highly recommended. The changelog string can be separated into lines using \\n . Some prefer to include a abbreviated changelog, then link to an external site that provides a full listing of changes. Manually inputting data can be chore. You can configure your build.gradle to automatically update this file when building a release as Groovy has native JSON parsing support. Doing this is left as an exercise to the reader. Some examples can be found here for nocubes , Corail Tombstone and Chisels & Bits 2 .","title":"Update JSON format"},{"location":"misc/updatechecker/#retrieving-update-check-results","text":"You can retrieve the results of the Forge Update Checker using VersionChecker#getResult(IModInfo) . You can obtain your IModInfo via ModContainer#getModInfo . You can get your ModContainer using ModLoadingContext.get().getActiveContainer() inside your constructor, ModList.get().getModContainerById(<your modId>) , or ModList.get().getModContainerByObject(<your mod instance>) . You can obtain any other mod\u2019s ModContainer using ModList.get().getModContainerById(<modId>) . The returned object has a field status which indicates the status of the version check. Status Description FAILED The version checker could not connect to the URL provided. UP_TO_DATE The current version is equal to or newer than the latest stable version. OUTDATED There is a new stable version. BETA_OUTDATED There is a new unstable version. BETA The current version is equal to or newer than the latest unstable version. PENDING The result requested has not finished yet, so you should try again in a little bit. The returned object will also have the target version and any changelog lines as specified in update.json .","title":"Retrieving Update Check Results"},{"location":"networking/","text":"\ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0 \uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\uac04\uc758 \uc18c\ud1b5\uc740 \uc131\uacf5\uc801\uc778 \ubaa8\ub4dc\ub97c \ub9cc\ub4e4\uae30 \uc704\ud574 \ud544\uc218\uc801\uc73c\ub85c \ub4e4\uc5b4\uac00\ub294 \uc694\uc18c\uc911 \ud558\ub098\uc785\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0\uc744 \ud558\ub294\ub370\uc5d0\ub294 \ub450 \uc8fc \ubaa9\uc801\uc774 \uc788\uc2b5\ub2c8\ub2e4: \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ud45c\uc2dc\ub418\ub294 \ub0b4\uc6a9\uc774 \uc11c\ubc84\uc640 \u201c\ub3d9\uae30\ud654\u201d \ub418\ub3c4\ub85d \ud558\ub294 \uac83 - (X, Y, Z) \uc5d0 \ubc29\uae08 \uc790\ub780 \uaf43\uc774 \ubc14\ub85c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ud45c\uc2dc\ub418\ub3c4\ub85d \ud558\ub294 \uac83 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc11c\ubc84\uc5d0\uac8c \ud50c\ub808\uc774\uc5b4\uc758 \uc0c1\ud0dc\uac00 \ubcc0\ud588\ub2e4\uace0 \uc54c\ub824\uc8fc\ub294 \uc218\ub2e8\uc774 \ub418\ub294 \uac83 - \ud50c\ub808\uc774\uc5b4\uac00 \ud0a4\ub97c \ub20c\ub800\uc744 \ub54c \uc11c\ubc84\uc5d0 \uc54c\ub824\uc8fc\ub294 \uac83 \uc774\ub97c \uad6c\ud604\ud558\ub294 \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \ubc29\ubc95\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uc11c\ubc84\uac00 \uc11c\ub85c \uba54\uc138\uc9c0\ub97c \uc8fc\uace0 \ubc1b\ub294 \uac83\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c, \uc774 \uba54\uc138\uc9c0\ub4e4\uc740 \ud1b5\uc2e0 \uacfc\uc815\uc744 \ud3b8\ud558\uac8c \ud558\uae30 \uc704\ud574 \uc5ec\ub7ec \ub370\uc774\ud130\uac00 \uc21c\uc11c\ub300\ub85c \ub4e4\uc5b4\uc788\ub294 \uad6c\uc870\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. Forge \uc5d0\uc11c\ub294 netty \ub97c \uae30\ubc18\uc73c\ub85c \ub9cc\ub4e0 \ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0\uc744 \uc870\uae08 \ub354 \uac04\ud3b8\ud558\uac8c \uc4f8 \uc218 \uc788\ub294 \uc5ec\ub7ec\uac00\uc9c0 \ubc29\ubc95\ub4e4\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uadf8\uc911 \uc2e0\uc0dd \ubaa8\ub4dc\ub97c \uc704\ud55c \uac00\uc7a5 \uac04\ub2e8\ud55c \ubc29\ubc95\uc740 SimpleImpl \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4, netty \uc758 \ubcf5\uc7a1\ud55c \uc2dc\uc2a4\ud15c\uc744 \ucd94\uc0c1\ud654 \ud558\uace0 \uba54\uc138\uc9c0\uc640 \ud578\ub4e4\ub7ec\ub9cc \uc0ac\uc6a9\ud558\uc5ec \ud1b5\uc2e0\uc744 \uad6c\ud604\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4.","title":"\uc18c\uac1c"},{"location":"networking/#_1","text":"\uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\uac04\uc758 \uc18c\ud1b5\uc740 \uc131\uacf5\uc801\uc778 \ubaa8\ub4dc\ub97c \ub9cc\ub4e4\uae30 \uc704\ud574 \ud544\uc218\uc801\uc73c\ub85c \ub4e4\uc5b4\uac00\ub294 \uc694\uc18c\uc911 \ud558\ub098\uc785\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0\uc744 \ud558\ub294\ub370\uc5d0\ub294 \ub450 \uc8fc \ubaa9\uc801\uc774 \uc788\uc2b5\ub2c8\ub2e4: \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ud45c\uc2dc\ub418\ub294 \ub0b4\uc6a9\uc774 \uc11c\ubc84\uc640 \u201c\ub3d9\uae30\ud654\u201d \ub418\ub3c4\ub85d \ud558\ub294 \uac83 - (X, Y, Z) \uc5d0 \ubc29\uae08 \uc790\ub780 \uaf43\uc774 \ubc14\ub85c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ud45c\uc2dc\ub418\ub3c4\ub85d \ud558\ub294 \uac83 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc11c\ubc84\uc5d0\uac8c \ud50c\ub808\uc774\uc5b4\uc758 \uc0c1\ud0dc\uac00 \ubcc0\ud588\ub2e4\uace0 \uc54c\ub824\uc8fc\ub294 \uc218\ub2e8\uc774 \ub418\ub294 \uac83 - \ud50c\ub808\uc774\uc5b4\uac00 \ud0a4\ub97c \ub20c\ub800\uc744 \ub54c \uc11c\ubc84\uc5d0 \uc54c\ub824\uc8fc\ub294 \uac83 \uc774\ub97c \uad6c\ud604\ud558\ub294 \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \ubc29\ubc95\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uc11c\ubc84\uac00 \uc11c\ub85c \uba54\uc138\uc9c0\ub97c \uc8fc\uace0 \ubc1b\ub294 \uac83\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c, \uc774 \uba54\uc138\uc9c0\ub4e4\uc740 \ud1b5\uc2e0 \uacfc\uc815\uc744 \ud3b8\ud558\uac8c \ud558\uae30 \uc704\ud574 \uc5ec\ub7ec \ub370\uc774\ud130\uac00 \uc21c\uc11c\ub300\ub85c \ub4e4\uc5b4\uc788\ub294 \uad6c\uc870\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. Forge \uc5d0\uc11c\ub294 netty \ub97c \uae30\ubc18\uc73c\ub85c \ub9cc\ub4e0 \ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0\uc744 \uc870\uae08 \ub354 \uac04\ud3b8\ud558\uac8c \uc4f8 \uc218 \uc788\ub294 \uc5ec\ub7ec\uac00\uc9c0 \ubc29\ubc95\ub4e4\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uadf8\uc911 \uc2e0\uc0dd \ubaa8\ub4dc\ub97c \uc704\ud55c \uac00\uc7a5 \uac04\ub2e8\ud55c \ubc29\ubc95\uc740 SimpleImpl \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4, netty \uc758 \ubcf5\uc7a1\ud55c \uc2dc\uc2a4\ud15c\uc744 \ucd94\uc0c1\ud654 \ud558\uace0 \uba54\uc138\uc9c0\uc640 \ud578\ub4e4\ub7ec\ub9cc \uc0ac\uc6a9\ud558\uc5ec \ud1b5\uc2e0\uc744 \uad6c\ud604\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4.","title":"\ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0"},{"location":"networking/entities/","text":"\uc5d4\ud2f0\ud2f0 \ud1b5\uc2e0 \ub124\ud2b8\uc6cc\ud06c \uba54\uc138\uc9c0\ub85c \ud1b5\uc2e0\ud558\ub294 \uac83 \ub9d0\uace0\ub3c4 \uc5d4\ud2f0\ud2f0\uc758 \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654\uc2dc\ucf1c\uc8fc\ub294 \uc2dc\uc2a4\ud15c\uc740 \ub2e4\uc591\ud569\ub2c8\ub2e4. \uc2a4\ud3f0 \ub370\uc774\ud130 \uc77c\ubc18\uc801\uc73c\ub85c \ubaa8\ub4dc\uc5d0\uc11c \ucd94\uac00\ud558\ub294 \uc5d4\ud2f0\ud2f0\uc758 \uc2a4\ud3f0\uc740 \ud3ec\uc9c0\uc5d0\uc11c \ub530\ub85c \ucc98\ub9ac\ud569\ub2c8\ub2e4. Note \ub2e4\uc2dc \ub9d0\ud574\uc11c \ubc14\ub2d0\ub77c \uc5d4\ud2f0\ud2f0 \ud074\ub798\uc2a4\ub97c \uadf8\uc800 \uc0c1\uc18d\ud558\ub294 \uac83\ub9cc\uc73c\ub860 \uadf8 \ud074\ub798\uc2a4\uc758 \ubaa8\ub4e0 \ub3d9\uc791\uc744 \uc0c1\uc18d\ubc1b\uc9c0 \ubabb\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba87\uba87 \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \ub3d9\uc791\ub4e4\uc740 \uc9c1\uc811 \uad6c\ud604\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \ud3ec\uc9c0\uac00 \ubcf4\ub0b4\ub294 \uc5d4\ud2f0\ud2f0 \uc2a4\ud3f0 \ud328\ud0b7\uc5d0 \ub2e4\uc74c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucd94\uac00\uc801\uc778 \ub370\uc774\ud130\ub97c \uc2e4\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IEntityAdditionalSpawnData \ub9cc\uc57d \uc5d4\ud2f0\ud2f0\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc81c\ub300\ub85c \ud45c\uc2dc\ub418\uae30 \uc704\ud574 \ud544\uc694\ud55c \ub370\uc774\ud130\uac00 \uc788\uc9c0\ub9cc, \uc2dc\uac04\uc774 \uc9c0\ub098\ub3c4 \uadf8 \ub370\uc774\ud130\uac00 \ubcc0\uacbd\ub418\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2a4\ud3f0 \ud328\ud0b7\uc5d0 \ubcf4\ub0b4\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. #writeSpawnData \uc640 #readSpawnData \ub294 \ub370\uc774\ud130\uac00 \uc5b4\ub5bb\uac8c \ub124\ud2b8\uc6cc\ud06c \ubc84\ud37c\uc5d0 \uc77d\ud788\uace0 \uc4f0\uc774\ub294\uc9c0\ub97c \ud1b5\uc81c\ud569\ub2c8\ub2e4. \ub3d9\uc801\uc778 \ub370\uc774\ud130 \ub370\uc774\ud130 \ud30c\ub77c\ubbf8\ud130 \uc774\ub294 \ubc14\ub2d0\ub77c\uc5d0\uc11c \uc5d4\ud2f0\ud2f0\uc758 \ub370\uc774\ud130\ub97c \uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\ub07c\ub9ac \ub3d9\uae30\ud654 \uc2dc\ud0ac\ub54c \uc8fc\ub85c \uc0ac\uc6a9\ud558\ub294 \uc2dc\uc2a4\ud15c\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub2e4\ubcf4\ub2c8 \ubc14\ub2d0\ub77c\uc5d0\ub294 \uc774\ub97c \ucc38\uace0\ud560 \ub9cc\ud55c \uac83\ub4e4\uc774 \ub9ce\uc2b5\ub2c8\ub2e4. \uc77c\ub2e8, \uc6d0\ud558\ub294 \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654 \uc2dc\ud0ac EntityDataAccessor<T> \uac1d\uccb4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \uc774 \uac1d\uccb4\ub294 \uc5d4\ud2f0\ud2f0\uc758 static final \ud544\ub4dc\uc5d0 \ud560\ub2f9\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774 \uac1d\uccb4\uc758 \ucc38\uc870\ub294 SynchedEntityData#defineId \uc5d0 \uc5d4\ud2f0\ud2f0\uc758 \ud074\ub798\uc2a4\uc640 \ub370\uc774\ud130\ub97c \uc9c1\ub82c\ud654\ud560 serializer \ub97c \uc804\ub2ec\ud558\ub294 \uac83\uc73c\ub85c \uc5bb\uc73c\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c serializer \ub294 EntityDataSerializers \ud074\ub798\uc2a4\uc5d0\uc11c \ucc3e\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Warning \ub370\uc774\ud130 \ud30c\ub77c\ubbf8\ud130\ub294 \ubb34\uc870\uac74 \ub2f9\uc2e0\uc774 \uc9c1\uc811 \ub9cc\ub4dc\uc2dc\ub294 \uc5d4\ud2f0\ud2f0\uc5d0\ub9cc, \uadf8 \uc5d4\ud2f0\ud2f0 \ud074\ub798\uc2a4 \uc548\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \ub2f9\uc2e0\uc774 \ub9cc\ub4dc\ub294 \uc5d4\ud2f0\ud2f0 \uc774\uc678\uc758 \uc5d4\ud2f0\ud2f0\uc5d0 \ud30c\ub77c\ubbf8\ud130\ub97c \ucd94\uac00\ud558\uc2dc\uba74 \uadf8 \ub370\uc774\ud130\ub97c \ubcf4\ub0bc\ub54c \uc0ac\uc6a9\ud558\ub294 ID\uc758 \ub3d9\uae30\ud654\ub97c \uae68\ubc84\ub9b4 \uc218 \uc788\uc73c\uba70 \ub514\ubc84\uadf8\ud558\uae30 \ud798\ub4e0 \ud295\uae30\ub294 \uc624\ub958\ub4e4\uc744 \uc720\ubc1c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \ub2e4\uc74c Entity#defineSynchedData \ub97c \uc7ac\uc815\uc758\ud558\uace0 \uadf8 \uba54\uc11c\ub4dc \uc548\uc5d0\uc11c this.entityData.define(...) \ub97c \uac01\uac01\uc758 \ub370\uc774\ud130 \ud30c\ub77c\ubbf8\ud130\uc640 \uae30\ubcf8\uac12\uc744 \uc804\ub2ec\ud558\uc5ec \ud638\ucd9c\ud558\uc138\uc694. \ub298 super \uba54\uc11c\ub4dc\ub97c \uba3c\uc800 \ud638\ucd9c\ud558\uc2dc\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694! \uadf8\ub2e4\uc74c\uc5d0\ub294 \uc5d4\ud2f0\ud2f0\uc758 entityData \uc778\uc2a4\ud134\uc2a4\ub97c \ud1b5\ud574 \ub370\uc774\ud130 \ud30c\ub77c\ubbf8\ud130\uc758 \uac12\uc744 \ubcc0\uacbd\ud558\uace0 \uc77d\uc73c\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub294 \ubcc0\uacbd\uc0ac\ud56d\uc774 \uc790\ub3d9\uc73c\ub85c \ubcf4\ub0b4\uc9d1\ub2c8\ub2e4.","title":"\uc5d4\ud2f0\ud2f0 \ub3d9\uae30\ud654\ud558\uae30"},{"location":"networking/entities/#_1","text":"\ub124\ud2b8\uc6cc\ud06c \uba54\uc138\uc9c0\ub85c \ud1b5\uc2e0\ud558\ub294 \uac83 \ub9d0\uace0\ub3c4 \uc5d4\ud2f0\ud2f0\uc758 \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654\uc2dc\ucf1c\uc8fc\ub294 \uc2dc\uc2a4\ud15c\uc740 \ub2e4\uc591\ud569\ub2c8\ub2e4.","title":"\uc5d4\ud2f0\ud2f0 \ud1b5\uc2e0"},{"location":"networking/entities/#_2","text":"\uc77c\ubc18\uc801\uc73c\ub85c \ubaa8\ub4dc\uc5d0\uc11c \ucd94\uac00\ud558\ub294 \uc5d4\ud2f0\ud2f0\uc758 \uc2a4\ud3f0\uc740 \ud3ec\uc9c0\uc5d0\uc11c \ub530\ub85c \ucc98\ub9ac\ud569\ub2c8\ub2e4. Note \ub2e4\uc2dc \ub9d0\ud574\uc11c \ubc14\ub2d0\ub77c \uc5d4\ud2f0\ud2f0 \ud074\ub798\uc2a4\ub97c \uadf8\uc800 \uc0c1\uc18d\ud558\ub294 \uac83\ub9cc\uc73c\ub860 \uadf8 \ud074\ub798\uc2a4\uc758 \ubaa8\ub4e0 \ub3d9\uc791\uc744 \uc0c1\uc18d\ubc1b\uc9c0 \ubabb\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba87\uba87 \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \ub3d9\uc791\ub4e4\uc740 \uc9c1\uc811 \uad6c\ud604\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \ud3ec\uc9c0\uac00 \ubcf4\ub0b4\ub294 \uc5d4\ud2f0\ud2f0 \uc2a4\ud3f0 \ud328\ud0b7\uc5d0 \ub2e4\uc74c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucd94\uac00\uc801\uc778 \ub370\uc774\ud130\ub97c \uc2e4\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc2a4\ud3f0 \ub370\uc774\ud130"},{"location":"networking/entities/#ientityadditionalspawndata","text":"\ub9cc\uc57d \uc5d4\ud2f0\ud2f0\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uc81c\ub300\ub85c \ud45c\uc2dc\ub418\uae30 \uc704\ud574 \ud544\uc694\ud55c \ub370\uc774\ud130\uac00 \uc788\uc9c0\ub9cc, \uc2dc\uac04\uc774 \uc9c0\ub098\ub3c4 \uadf8 \ub370\uc774\ud130\uac00 \ubcc0\uacbd\ub418\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2a4\ud3f0 \ud328\ud0b7\uc5d0 \ubcf4\ub0b4\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. #writeSpawnData \uc640 #readSpawnData \ub294 \ub370\uc774\ud130\uac00 \uc5b4\ub5bb\uac8c \ub124\ud2b8\uc6cc\ud06c \ubc84\ud37c\uc5d0 \uc77d\ud788\uace0 \uc4f0\uc774\ub294\uc9c0\ub97c \ud1b5\uc81c\ud569\ub2c8\ub2e4.","title":"IEntityAdditionalSpawnData"},{"location":"networking/entities/#_3","text":"","title":"\ub3d9\uc801\uc778 \ub370\uc774\ud130"},{"location":"networking/entities/#_4","text":"\uc774\ub294 \ubc14\ub2d0\ub77c\uc5d0\uc11c \uc5d4\ud2f0\ud2f0\uc758 \ub370\uc774\ud130\ub97c \uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\ub07c\ub9ac \ub3d9\uae30\ud654 \uc2dc\ud0ac\ub54c \uc8fc\ub85c \uc0ac\uc6a9\ud558\ub294 \uc2dc\uc2a4\ud15c\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub2e4\ubcf4\ub2c8 \ubc14\ub2d0\ub77c\uc5d0\ub294 \uc774\ub97c \ucc38\uace0\ud560 \ub9cc\ud55c \uac83\ub4e4\uc774 \ub9ce\uc2b5\ub2c8\ub2e4. \uc77c\ub2e8, \uc6d0\ud558\ub294 \ub370\uc774\ud130\ub97c \ub3d9\uae30\ud654 \uc2dc\ud0ac EntityDataAccessor<T> \uac1d\uccb4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \uc774 \uac1d\uccb4\ub294 \uc5d4\ud2f0\ud2f0\uc758 static final \ud544\ub4dc\uc5d0 \ud560\ub2f9\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774 \uac1d\uccb4\uc758 \ucc38\uc870\ub294 SynchedEntityData#defineId \uc5d0 \uc5d4\ud2f0\ud2f0\uc758 \ud074\ub798\uc2a4\uc640 \ub370\uc774\ud130\ub97c \uc9c1\ub82c\ud654\ud560 serializer \ub97c \uc804\ub2ec\ud558\ub294 \uac83\uc73c\ub85c \uc5bb\uc73c\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c serializer \ub294 EntityDataSerializers \ud074\ub798\uc2a4\uc5d0\uc11c \ucc3e\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Warning \ub370\uc774\ud130 \ud30c\ub77c\ubbf8\ud130\ub294 \ubb34\uc870\uac74 \ub2f9\uc2e0\uc774 \uc9c1\uc811 \ub9cc\ub4dc\uc2dc\ub294 \uc5d4\ud2f0\ud2f0\uc5d0\ub9cc, \uadf8 \uc5d4\ud2f0\ud2f0 \ud074\ub798\uc2a4 \uc548\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud558\uc154\uc57c \ud569\ub2c8\ub2e4. \ub2f9\uc2e0\uc774 \ub9cc\ub4dc\ub294 \uc5d4\ud2f0\ud2f0 \uc774\uc678\uc758 \uc5d4\ud2f0\ud2f0\uc5d0 \ud30c\ub77c\ubbf8\ud130\ub97c \ucd94\uac00\ud558\uc2dc\uba74 \uadf8 \ub370\uc774\ud130\ub97c \ubcf4\ub0bc\ub54c \uc0ac\uc6a9\ud558\ub294 ID\uc758 \ub3d9\uae30\ud654\ub97c \uae68\ubc84\ub9b4 \uc218 \uc788\uc73c\uba70 \ub514\ubc84\uadf8\ud558\uae30 \ud798\ub4e0 \ud295\uae30\ub294 \uc624\ub958\ub4e4\uc744 \uc720\ubc1c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \ub2e4\uc74c Entity#defineSynchedData \ub97c \uc7ac\uc815\uc758\ud558\uace0 \uadf8 \uba54\uc11c\ub4dc \uc548\uc5d0\uc11c this.entityData.define(...) \ub97c \uac01\uac01\uc758 \ub370\uc774\ud130 \ud30c\ub77c\ubbf8\ud130\uc640 \uae30\ubcf8\uac12\uc744 \uc804\ub2ec\ud558\uc5ec \ud638\ucd9c\ud558\uc138\uc694. \ub298 super \uba54\uc11c\ub4dc\ub97c \uba3c\uc800 \ud638\ucd9c\ud558\uc2dc\ub294 \uac83\uc744 \uc78a\uc9c0 \ub9c8\uc138\uc694! \uadf8\ub2e4\uc74c\uc5d0\ub294 \uc5d4\ud2f0\ud2f0\uc758 entityData \uc778\uc2a4\ud134\uc2a4\ub97c \ud1b5\ud574 \ub370\uc774\ud130 \ud30c\ub77c\ubbf8\ud130\uc758 \uac12\uc744 \ubcc0\uacbd\ud558\uace0 \uc77d\uc73c\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub294 \ubcc0\uacbd\uc0ac\ud56d\uc774 \uc790\ub3d9\uc73c\ub85c \ubcf4\ub0b4\uc9d1\ub2c8\ub2e4.","title":"\ub370\uc774\ud130 \ud30c\ub77c\ubbf8\ud130"},{"location":"networking/simpleimpl/","text":"SimpleImpl SimpleImpl \uc740 SimpleChannel \uc744 \uc0ac\uc6a9\ud558\ub294 \ud328\ud0b7 \ud1b5\uc2e0 \uc2dc\uc2a4\ud15c\uc5d0 \uc8fc\uc5b4\uc9c4 \uc774\ub984\uc785\ub2c8\ub2e4. \uc774 \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uac00\uc7a5 \uc27d\uac8c \uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\uac04 \ud1b5\uc2e0\uc744 \uad6c\ud604\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc2dc\uc791\ud558\uae30 \uac00\uc7a5 \uccab\ubc88\uc9f8\ub85c SimpleChannel \uac1d\uccb4\ub97c \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 ModidPacketHandler \ucc98\ub7fc \ub530\ub85c \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e0 \uc774\ud6c4 \uac70\uae30\uc11c \ud558\uc2dc\ub294 \uac83\uc744 \ucd94\ucc9c\ub4dc\ub9bd\ub2c8\ub2e4. \uc774\ub54c \ub9cc\ub4dc\uc2dc\ub294 SimpleChannel \uac1d\uccb4\ub294 \ub2e4\uc74c\ucc98\ub7fc \uc815\uc801 \ud544\ub4dc\ub85c \ub9cc\ub4dc\uc138\uc694: private static final String PROTOCOL_VERSION = \"1\"; public static final SimpleChannel INSTANCE = NetworkRegistry.newSimpleChannel( new ResourceLocation(\"mymodid\", \"main\"), () -> PROTOCOL_VERSION, PROTOCOL_VERSION::equals, PROTOCOL_VERSION::equals ); \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \ucc44\ub110\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \ub450\ubc88\uc9f8 \uc778\uc790\ub294 \ud604\uc7ac \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc744 \ubc18\ud658\ud558\ub294 Supplier<String> \uc785\ub2c8\ub2e4. \uc138\ubc88\uc9f8 \uc778\uc790\ub294 \uc5f0\uacb0\uc744 \uc2dc\ub3c4\ud558\ub294 \uce21\uc758 \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc774 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ud638\ud658\ub418\ub294\uc9c0 \ud655\uc778\ud558\ub294 Predicate<String> , \ub124\ubc88\uc9f8 \uc778\uc790\ub294 \uc5f0\uacb0\uc744 \uc2dc\ub3c4\ud558\ub294 \uce21\uc758 \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc774 \uc11c\ubc84\uc640 \ud638\ud658\ub418\ub294\uc9c0 \ud655\uc778\ud558\ub294 Predicate<String> \uc785\ub2c8\ub2e4. \uc774 \uc608\uc81c\uc5d0\uc11c\ub294 \ub2e8\uc21c\ud558\uac8c \uc811\uc18d\ud558\ub294 \uce21\uc758 \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc774 PROTOCOL_VERSION \uacfc \ub3d9\uc77c\ud55c\uc9c0 \ubc14\ub85c \ube44\uad50\ud569\ub2c8\ub2e4, \uc989 \uc774 \uacbd\uc6b0\uc5d0\uc11c\ub294 \uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 PROTOCOL_VERSION \uc774 \uc77c\uce58\ud574\uc57c\ub9cc FML \uc774 \ub85c\uadf8\uc778\uc744 \ud5c8\uc6a9\ud574 \uc90d\ub2c8\ub2e4. \ubc84\uc804 \ud655\uc778 \ub9cc\uc57d \ubaa8\ub4dc\uc5d0\uc11c \ub9cc\ub4e0 \ub124\ud2b8\uc6cc\ud06c \ucc44\ub110\uc774 \ubc18\ub300\ucabd\uc5d0 \uc5c6\uc5b4\ub3c4 \ub41c\ub2e4\uba74, \ub610\ub294 \uc544\uc608 \ud3ec\uc9c0\uac00 \uc5c6\uc5b4\ub3c4 \ub41c\ub2e4\uba74 \ubc84\uc804 \ud655\uc778\uc790\ub4e4 ( Predicate<String> \ud30c\ub77c\ubbf8\ud130\ub4e4)\uc744 \uc801\uc808\ud558\uac8c \uc815\uc758\ud558\uc5ec \ucd94\uac00\uc801\uc778 \u201c\uba54\ud0c0-\ubc84\uc804\u201d \ub4e4 \ub610\ud55c \ucc98\ub9ac\ud558\ub3c4\ub85d \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4 (\uba54\ud0c0 \ubc84\uc804\ub4e4\uc740 NetworkRegistry \uc5d0 \uc815\uc758\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4, \uc544\ub798 \ub098\uc640\uc788\ub294 \uac83\uc740 String \uc774 \uc544\ub2c8\uace0 \ud544\ub4dc \uc774\ub984\uc785\ub2c8\ub2e4). \uc774 \ubc84\uc804\ub4e4\uc758 \uc885\ub958\uc640 \uc758\ubbf8\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: ABSENT - \ucc44\ub110\uc774 \ubc18\ub300\ucabd\uc5d0 \uc5c6\ub294 \uacbd\uc6b0, \uc774\ub54c \ubc18\ub300\ucabd\uc740 \ud3ec\uc9c0\uac00 \uc124\uce58\ub418\uc5b4 \uc788\uc73c\uba70 \ub2e4\ub978 \ubaa8\ub4dc\uac00 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ACCEPTVANILLA - \ubc18\ub300\ucabd\uc774 \ubc14\ub2d0\ub77c\uac70\ub098 \ud3ec\uc9c0\uac00 \uc5c6\ub294 \uacbd\uc6b0. \uc704 \ub450 \ud544\ub4dc\ub4e4\uc740 \ubc18\ub300\ucabd\uc5d0 \ucc44\ub110\uc774 \uc544\uc608 \uc5c6\uc5b4 \ubc84\uc804 \ud655\uc778\uc790\uc5d0\uc11c \ube44\uad50\ud560 \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc774 \uc5c6\ub294 \uacbd\uc6b0 \ub300\uc2e0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \ub450 \uacbd\uc6b0\uc5d0 \ub2e4 false \ub97c \ubc18\ud658\ud558\uba74 \ubc18\ub300\ucabd\uc5d0 \ucc44\ub110\uc774 \uc788\ub3c4\ub85d \uac15\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc5d0 \uc608\uc81c \ucf54\ub4dc\ub97c \uadf8\ub300\ub85c \ubcf5\uc0ac\ud574\uc11c \uc4f0\uc2dc\uba74 \ubc18\ub300\ucabd\uc5d0 \ucc44\ub110\uc774 \uc788\ub3c4\ub85d \uac15\uc81c\ud569\ub2c8\ub2e4. \uc774 \ubc84\uc804 \ud655\uc778 \ubc29\uc2dd\uc740 \uc11c\ubc84 \ubaa9\ub85d \ud654\uba74\uc5d0\uc11c \ud638\ud658\uc131 \uccb4\ud06c\ub97c \ud560 \ub54c\uc5d0\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4, \uc774\ub85c \uc778\ud574 \ucd08\ub85d\uc0c9 \uccb4\ud06c \ubaa8\uc591 \ub610\ub294 \ube68\uac04\uc0c9 X\uac00 \uc11c\ubc84 \ubaa9\ub85d\uc5d0 \ud45c\uc2dc\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud328\ud0b7 \ub4f1\ub85d\ud558\uae30 \uadf8 \ub2e4\uc74c\uc73c\ub85c \uc8fc\uace0 \ubc1b\uc744 \uba54\uc138\uc9c0\ub4e4\uc744 \uc815\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 INSTANCE#registerMessage \ub97c \uc774\uc6a9\ud574 \ud560 \uc218 \uc788\ub294\ub370, \uc774 \uba54\uc11c\ub4dc\ub294 5\uac1c\uc758 \uc778\uc790\ub97c \ubc1b\uc2b5\ub2c8\ub2e4: \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \ud328\ud0b7\uc744 \ud310\ubcc4\ud560 \ub54c \uc0ac\uc6a9\ud560 \ud310\ubcc4\uc790 \uc785\ub2c8\ub2e4. ID \ub77c\uace0 \ubd80\ub974\uae30\ub3c4 \ud569\ub2c8\ub2e4. \uc774 \ud310\ubcc4\uc790\ub294 \uac19\uc740 \ucc44\ub110\uc5d0\uc11c\ub294 \uace0\uc720\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4, \ub2e4\ub978 \ucc44\ub110\ub07c\ub9ac\ub294 \ud310\ubcc4\uc790\uac00 \uac19\uc544\ub3c4 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud310\ubcc4\uc790\ub85c\ub294 \uc5b4\ub5a4 \uac12\uc744 \uc0ac\uc6a9\ud558\uc154\ub3c4 \uace0\uc720\ud558\uae30\ub9cc \ud55c\ub2e4\uba74 \uc0c1\uad00 \uc5c6\uc73c\ub2c8 \uc9c0\uc5ed \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uba54\uc138\uc9c0 \ud558\ub098 \ub4f1\ub85d\ud560 \ub54c \ub9c8\ub2e4 id++ \ub97c \ud558\uc5ec \ub298 \uace0\uc720\ud55c \uac12\uc774 \ub098\uc624\ub3c4\ub85d \ud558\uc138\uc694. \ub450\ubc88\uc9f8 \uc778\uc790\ub294 \ud328\ud0b7 \ud074\ub798\uc2a4 MSG \uc785\ub2c8\ub2e4. \uc138\ubc88\uc9f8 \uc778\uc790\ub294 BiConsumer<MSG, FriendlyByteBuf> \uc785\ub2c8\ub2e4, \ud328\ud0b7 \ud074\ub798\uc2a4\ub97c FriendlyByteBuf \uc5d0 \uc791\uc131\ud558\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \ub124\ubc88\uc9f8 \uc778\uc790\ub294 Function<FriendlyByteBuf, MSG> \uc785\ub2c8\ub2e4, FriendlyByteBuf \ub85c \ubd80\ud130 \ud328\ud0b7 \ud074\ub798\uc2a4\ub97c \uc77d\uc5b4\ub4e4\uc774\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9 \uc778\uc790\ub294 BiConsumer<MSG, Supplier<NetworkEvent.Context>> \uc785\ub2c8\ub2e4, \ud328\ud0b7\uc744 \ubc1b\uc744\uc2dc \uc0ac\uc6a9\ud560 \ud578\ub4e4\ub7ec \uc785\ub2c8\ub2e4. \ub4a4 3\uac1c\uc758 \uc778\uc790\ub4e4\uc740 \uc815\uc801 \ub610\ub294 \uc778\uc2a4\ud134\uc2a4 \uba54\uc11c\ub4dc\uc758 \ub808\ud37c\ub7f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec\ub3c4 \ub429\ub2c8\ub2e4. \uae30\uc5b5\ud574\ub450\uc154\uc57c \ud560 \uc810\uc740 MSG#encode(FriendlyByteBuf) \uc778\uc2a4\ud134\uc2a4 \uba54\uc11c\ub4dc\ub294 BiConsumer<MSG, FriendlyByteBuf> \ub85c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4; MSG \uc758 \uc778\uc2a4\ud134\uc2a4\ub294 \uc554\ubb35\uc801\uc73c\ub85c BiConsumer \uc758 \uccab\ubc88\uc9f8 \uc778\uc790\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ud328\ud0b7 \ud578\ub4e4\ub9c1 \ud558\uae30 \ud328\ud0b7 \ud578\ub4e4\ub7ec\uc5d0\ub294 \uba87\uac00\uc9c0 \uac15\uc870\ud560 \uc0ac\ud56d\uc774 \uc788\uc2b5\ub2c8\ub2e4: \ud328\ud0b7 \ud578\ub4e4\ub7ec\ub294 \uba54\uc138\uc9c0 \ud074\ub798\uc2a4 \ubfd0\ub9cc \uc544\ub2c8\ub77c, \ub124\ud2b8\uc6cc\ud06c \ucf58\ud14d\uc2a4\ud2b8\ub3c4 \uac19\uc774 \ubc18\uc2b5\ub2c8\ub2e4. \uc774 \ucf58\ud14d\uc2a4\ud2b8\ub97c \uc0ac\uc6a9\ud574\uc11c, (\uc11c\ubc84\uc5d0\uc11c \ud328\ud0b7\uc744 \ubc1b\uc558\ub2e4\uba74) \ud328\ud0b7\uc744 \ubcf4\ub0b8 \ud50c\ub808\uc774\uc5b4\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uace0 \uc2a4\ub808\ub4dc \uc548\uc804\uc131\uc744 \uc900\uc218\ud574\uc57c\ub9cc \ud558\ub294 \uc791\uc5c5\ub4e4\uc744 \uc694\uccad\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. public static void handle(MyMessage msg, Supplier<NetworkEvent.Context> ctx) { ctx.get().enqueueWork(() -> { // \uc2a4\ub808\ub4dc \uc548\uc804\uc131\uc744 \uc900\uc218\ud574\uc57c \ud558\ub294 \uc791\uc5c5\ub4e4 (\ub300\ubd80\ubd84\uc758 \uc791\uc5c5\ub4e4\uc774 \uc774\uc5d0 \ud3ec\ud568\ub420 \uac83\uc785\ub2c8\ub2e4) ServerPlayerEntity sender = ctx.get().getSender(); // the client that sent this packet // \ubb34\uc5b8\uac00 \uc544\ubb34\uac70\ub098 \ub354 \ud558\uae30 }); ctx.get().setPacketHandled(true); } \uc11c\ubc84\uc5d0\uc11c \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c \ubcf4\ub0b8 \ud328\ud0b7\uc740 \uc544\uc608 \ub2e4\ub978 \ud074\ub798\uc2a4\uc5d0\uc11c \ud578\ub4e4\ub9c1 \ud574\uc57c \ud558\uba70, DistExecutor#unsafeRunWhenOn \uc640 \uac19\uc740 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud574 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub418\ub3c4\ub85d \ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. // In Packet class public static void handle(MyClientMessage msg, Supplier<NetworkEvent.Context> ctx) { ctx.get().enqueueWork(() -> // \ud655\uc2e4\ud558\uac8c \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. DistExecutor.unsafeRunWhenOn(Dist.CLIENT, () -> () -> ClientPacketHandlerClass.handlePacket(msg, ctx)) ); ctx.get().setPacketHandled(true); } // ClientPacketHandlerClass \ub0b4\uc6a9 public static void handlePacket(MyClientMessage msg, Supplier<NetworkEvent.Context> ctx) { // \ubb34\uc5b8\uac00 \ud558\uae30 } #setPacketHandled \ub97c \uc5ec\ub7ec\ubc88 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \ubcf4\uc168\uc744\ud150\ub370, \uc774\ub294 \ub124\ud2b8\uc6cc\ud06c \uc2dc\uc2a4\ud15c\uc5d0\uac8c \ud328\ud0b7\uc774 \uc131\uacf5\uc801\uc73c\ub85c \ucc98\ub9ac\ub418\uc5c8\uc74c\uc744 \uc54c\ub9ac\ub294 \uac83\uc785\ub2c8\ub2e4. Warning \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 1.8 \uc774\ud6c4\ub85c\ub294 \ud328\ud0b7\uc740 \ub124\ud2b8\uc6cc\ud06c \uc2a4\ub808\ub4dc\uc5d0\uc11c \ucc98\ub9ac\ub429\ub2c8\ub2e4. \uc989 \ud328\ud0b7 \ud578\ub4e4\ub7ec\ub294 \uac8c\uc784\uacfc \uc9c1\uc811\uc801\uc73c\ub85c \uc0c1\ud638\uc791\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4 . \ud3ec\uc9c0\uc5d0\uc11c\ub294 NetworkEvent$Context \ub97c \ud1b5\ud574 \uac04\ub2e8\ud558\uac8c \ucf54\ub4dc\ub97c \uba54\uc778 \uc2a4\ub808\ub4dc\uc5d0\uc11c \uc2e4\ud589\ud558\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub294 \ub2e8\uc21c\ud558\uac8c NetworkEvent$Context#enqueueWork(Runnable) \uc744 \ud638\ucd9c\ud558\ub294 \uac83\uc778\ub370, \uba54\uc778 \uc2a4\ub808\ub4dc\ub294 \uc774\ub54c \uc804\ub2ec\ub41c Runnable \uc744 \ube60\ub978 \uc2dc\uc77c\ub0b4\uc5d0 \uc2e4\ud589\ud569\ub2c8\ub2e4. Warning \uc11c\ubc84\uc5d0\uc11c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \ubcf4\ub0b8 \ud328\ud0b7\uc744 \ucc98\ub9ac\ud558\ub294 \ud328\ud0b7 \ud578\ub4e4\ub7ec\ub97c \ub9cc\ub4e4 \ub54c \uc8fc\uc758\ud558\ub3c4\ub85d \ud558\uc138\uc694, \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc11c\ubc84\uc5d0\uc11c \uc608\uae30\uce58 \ubabb\ud55c \ub370\uc774\ud130\ub97c \ubcf4\ub0b4 \ucde8\uc57d\uc810\uc744 \uc545\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac00\uc7a5 \ud754\ud55c \uc0ac\ub840\ub294 \ubb34\uc791\uc704 \uccad\ud06c \uc0dd\uc131 \uc785\ub2c8\ub2e4. \uc11c\ubc84\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \ubcf4\ub0b8 \ube14\ub85d\uc758 \uc704\uce58\ub97c \uadf8\ub300\ub85c \ubbff\uace0 \uc774\ub97c \uc774\uc6a9\ud574 \ube14\ub85d/\ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \ud560 \ub54c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\ub294\ub370, \ub9cc\uc57d \uc544\uc9c1 \uccad\ud06c\uac00 \uba54\ubaa8\ub9ac \uc0c1\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uacf3\uc5d0 \uc788\ub294 \ube14\ub85d/\ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \ud558\uba74 \uc11c\ubc84\uc5d0\uc11c\ub294 \ub514\uc2a4\ud06c\uc5d0\uc11c \ubd88\ub7ec\uc624\uac70\ub098 \uc0c8\ub85c \uccad\ud06c\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\ub294 \uc2ec\uac01\ud55c \ubcf4\uc548 \ucde8\uc57d\uc810\uc911 \ud558\ub098\ub85c, \ud754\uc801\ub3c4 \ub0a8\uae30\uc9c0 \uc54a\uace0 \uc11c\ubc84 \uc131\ub2a5\uacfc \ub514\uc2a4\ud06c \uc6a9\ub7c9\uc5d0 \ub9e4\uc6b0 \ud070 \ud53c\ud574\ub97c \ub07c\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uacf5\uaca9\uc744 \ub9c9\uae30 \uc704\ud574 \uc77c\ubc18\uc801\uc73c\ub85c \ub9ce\uc774 \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc740 Level#hasChunkAt \uc774 \ucc38\uc778 \uacf3\ub9cc\uc758 \ube14\ub85d/\ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0 \uc811\uadfc\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uba54\ubaa8\ub9ac\uc0c1\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uccad\ud06c\uc5d0 \uc811\uadfc\ud558\ub294 \uac83\uc744 \ub9c9\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud328\ud0b7 \ubcf4\ub0b4\uae30 \uc11c\ubc84\uc5d0 \ubcf4\ub0b4\uae30 \uc11c\ubc84\ub85c \ud328\ud0b7\uc744 \ubcf4\ub0b4\ub294 \ubc29\ubc95\uc740 \ud558\ub098\ubc16\uc5d0 \uc5c6\uc2b5\ub2c8\ub2e4. \uc65c\ub0d0\ud558\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \ud55c\ubc88\uc5d0 \ud558\ub098\uc758 \uc11c\ubc84\uc5d0\ub9cc \uc811\uc18d\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ud328\ud0b7\uc744 \ubcf4\ub0b4\uae30 \uc704\ud574\uc11c\ub294 \uc774\uc804\uc5d0 \uc815\uc758\ud55c SimpleChannel \uc744 \ub2e4\uc2dc \uc0ac\uc6a9\ud560 \uac83\uc778\ub370, \ub2e8\uc21c\ud788 INSTANCE.sendToServer(new MyMessage()) \ub97c \ud638\ucd9c\ud558\uc138\uc694. \uc774 \uba54\uc138\uc9c0\ub294 \ud328\ud0b7\uc5d0 \uc54c\ub9de\ub294 \ud578\ub4e4\ub7ec\ub85c (\ub9cc\uc57d \uc788\ub2e4\uba74)\ubcf4\ub0b4\uc9d1\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8(\ub4e4)\uc5d0 \ubcf4\ub0b4\uae30 \ud328\ud0b7\uc744 SimpleChannel \uc744 \uc0ac\uc6a9\ud574 \uc9c1\uc811\uc801\uc73c\ub85c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc804\uc1a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: INSTANCE.sendTo(new MyClientMessage(), serverPlayer.connection.getConnection(), NetworkDirection.PLAY_TO_CLIENT) . \uadf8\ub7ec\ub098 \uc774 \ubc29\uc2dd\uc740 \uc0ac\uc6a9\ud558\uae30 \ubd88\ud3b8\ud560 \uc218 \uc788\ub294\ub370, \ud3ec\uc9c0\uc5d0\uc11c\ub294 \uc870\uae08 \ub354 \uc27d\uac8c \ud328\ud0b7\uc744 \ubcf4\ub0b4\uc8fc\ub294 \ud568\uc218\ub4e4\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4: // \ud50c\ub808\uc774\uc5b4 \ud55c\uba85\uc5d0\uac8c \ubcf4\ub0b4\uae30 INSTANCE.send(PacketDistributor.PLAYER.with(serverPlayer), new MyMessage()); // \uc774 \ub808\ubca8 \uccad\ud06c\ub97c \ucd94\uc801\ud558\uace0 \uc788\ub294 \ubaa8\ub4e0 \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \ubcf4\ub0b4\uae30 INSTANCE.send(PacketDistributor.TRACKING_CHUNK.with(levelChunk), new MyMessage()); // \ubaa8\ub4e0 \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \ubcf4\ub0b4\uae30 INSTANCE.send(PacketDistributor.ALL.noArg(), new MyMessage()); PacketDistributor \ub294 \uc704\uc5d0 \ub098\uc628 \uac83 \ub9d0\uace0\ub3c4 \ub354 \ub9ce\uc740 \uc885\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4; PacketDistributor \ud074\ub798\uc2a4\uc758 \ubb38\uc11c\ub97c \ud1b5\ud574 \ub354 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"SimpleImpl"},{"location":"networking/simpleimpl/#simpleimpl","text":"SimpleImpl \uc740 SimpleChannel \uc744 \uc0ac\uc6a9\ud558\ub294 \ud328\ud0b7 \ud1b5\uc2e0 \uc2dc\uc2a4\ud15c\uc5d0 \uc8fc\uc5b4\uc9c4 \uc774\ub984\uc785\ub2c8\ub2e4. \uc774 \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uac00\uc7a5 \uc27d\uac8c \uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\uac04 \ud1b5\uc2e0\uc744 \uad6c\ud604\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4.","title":"SimpleImpl"},{"location":"networking/simpleimpl/#_1","text":"\uac00\uc7a5 \uccab\ubc88\uc9f8\ub85c SimpleChannel \uac1d\uccb4\ub97c \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 ModidPacketHandler \ucc98\ub7fc \ub530\ub85c \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e0 \uc774\ud6c4 \uac70\uae30\uc11c \ud558\uc2dc\ub294 \uac83\uc744 \ucd94\ucc9c\ub4dc\ub9bd\ub2c8\ub2e4. \uc774\ub54c \ub9cc\ub4dc\uc2dc\ub294 SimpleChannel \uac1d\uccb4\ub294 \ub2e4\uc74c\ucc98\ub7fc \uc815\uc801 \ud544\ub4dc\ub85c \ub9cc\ub4dc\uc138\uc694: private static final String PROTOCOL_VERSION = \"1\"; public static final SimpleChannel INSTANCE = NetworkRegistry.newSimpleChannel( new ResourceLocation(\"mymodid\", \"main\"), () -> PROTOCOL_VERSION, PROTOCOL_VERSION::equals, PROTOCOL_VERSION::equals ); \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \ucc44\ub110\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \ub450\ubc88\uc9f8 \uc778\uc790\ub294 \ud604\uc7ac \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc744 \ubc18\ud658\ud558\ub294 Supplier<String> \uc785\ub2c8\ub2e4. \uc138\ubc88\uc9f8 \uc778\uc790\ub294 \uc5f0\uacb0\uc744 \uc2dc\ub3c4\ud558\ub294 \uce21\uc758 \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc774 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ud638\ud658\ub418\ub294\uc9c0 \ud655\uc778\ud558\ub294 Predicate<String> , \ub124\ubc88\uc9f8 \uc778\uc790\ub294 \uc5f0\uacb0\uc744 \uc2dc\ub3c4\ud558\ub294 \uce21\uc758 \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc774 \uc11c\ubc84\uc640 \ud638\ud658\ub418\ub294\uc9c0 \ud655\uc778\ud558\ub294 Predicate<String> \uc785\ub2c8\ub2e4. \uc774 \uc608\uc81c\uc5d0\uc11c\ub294 \ub2e8\uc21c\ud558\uac8c \uc811\uc18d\ud558\ub294 \uce21\uc758 \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc774 PROTOCOL_VERSION \uacfc \ub3d9\uc77c\ud55c\uc9c0 \ubc14\ub85c \ube44\uad50\ud569\ub2c8\ub2e4, \uc989 \uc774 \uacbd\uc6b0\uc5d0\uc11c\ub294 \uc11c\ubc84\uc640 \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 PROTOCOL_VERSION \uc774 \uc77c\uce58\ud574\uc57c\ub9cc FML \uc774 \ub85c\uadf8\uc778\uc744 \ud5c8\uc6a9\ud574 \uc90d\ub2c8\ub2e4.","title":"\uc2dc\uc791\ud558\uae30"},{"location":"networking/simpleimpl/#_2","text":"\ub9cc\uc57d \ubaa8\ub4dc\uc5d0\uc11c \ub9cc\ub4e0 \ub124\ud2b8\uc6cc\ud06c \ucc44\ub110\uc774 \ubc18\ub300\ucabd\uc5d0 \uc5c6\uc5b4\ub3c4 \ub41c\ub2e4\uba74, \ub610\ub294 \uc544\uc608 \ud3ec\uc9c0\uac00 \uc5c6\uc5b4\ub3c4 \ub41c\ub2e4\uba74 \ubc84\uc804 \ud655\uc778\uc790\ub4e4 ( Predicate<String> \ud30c\ub77c\ubbf8\ud130\ub4e4)\uc744 \uc801\uc808\ud558\uac8c \uc815\uc758\ud558\uc5ec \ucd94\uac00\uc801\uc778 \u201c\uba54\ud0c0-\ubc84\uc804\u201d \ub4e4 \ub610\ud55c \ucc98\ub9ac\ud558\ub3c4\ub85d \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4 (\uba54\ud0c0 \ubc84\uc804\ub4e4\uc740 NetworkRegistry \uc5d0 \uc815\uc758\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4, \uc544\ub798 \ub098\uc640\uc788\ub294 \uac83\uc740 String \uc774 \uc544\ub2c8\uace0 \ud544\ub4dc \uc774\ub984\uc785\ub2c8\ub2e4). \uc774 \ubc84\uc804\ub4e4\uc758 \uc885\ub958\uc640 \uc758\ubbf8\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: ABSENT - \ucc44\ub110\uc774 \ubc18\ub300\ucabd\uc5d0 \uc5c6\ub294 \uacbd\uc6b0, \uc774\ub54c \ubc18\ub300\ucabd\uc740 \ud3ec\uc9c0\uac00 \uc124\uce58\ub418\uc5b4 \uc788\uc73c\uba70 \ub2e4\ub978 \ubaa8\ub4dc\uac00 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ACCEPTVANILLA - \ubc18\ub300\ucabd\uc774 \ubc14\ub2d0\ub77c\uac70\ub098 \ud3ec\uc9c0\uac00 \uc5c6\ub294 \uacbd\uc6b0. \uc704 \ub450 \ud544\ub4dc\ub4e4\uc740 \ubc18\ub300\ucabd\uc5d0 \ucc44\ub110\uc774 \uc544\uc608 \uc5c6\uc5b4 \ubc84\uc804 \ud655\uc778\uc790\uc5d0\uc11c \ube44\uad50\ud560 \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc774 \uc5c6\ub294 \uacbd\uc6b0 \ub300\uc2e0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \ub450 \uacbd\uc6b0\uc5d0 \ub2e4 false \ub97c \ubc18\ud658\ud558\uba74 \ubc18\ub300\ucabd\uc5d0 \ucc44\ub110\uc774 \uc788\ub3c4\ub85d \uac15\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc5d0 \uc608\uc81c \ucf54\ub4dc\ub97c \uadf8\ub300\ub85c \ubcf5\uc0ac\ud574\uc11c \uc4f0\uc2dc\uba74 \ubc18\ub300\ucabd\uc5d0 \ucc44\ub110\uc774 \uc788\ub3c4\ub85d \uac15\uc81c\ud569\ub2c8\ub2e4. \uc774 \ubc84\uc804 \ud655\uc778 \ubc29\uc2dd\uc740 \uc11c\ubc84 \ubaa9\ub85d \ud654\uba74\uc5d0\uc11c \ud638\ud658\uc131 \uccb4\ud06c\ub97c \ud560 \ub54c\uc5d0\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4, \uc774\ub85c \uc778\ud574 \ucd08\ub85d\uc0c9 \uccb4\ud06c \ubaa8\uc591 \ub610\ub294 \ube68\uac04\uc0c9 X\uac00 \uc11c\ubc84 \ubaa9\ub85d\uc5d0 \ud45c\uc2dc\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubc84\uc804 \ud655\uc778"},{"location":"networking/simpleimpl/#_3","text":"\uadf8 \ub2e4\uc74c\uc73c\ub85c \uc8fc\uace0 \ubc1b\uc744 \uba54\uc138\uc9c0\ub4e4\uc744 \uc815\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 INSTANCE#registerMessage \ub97c \uc774\uc6a9\ud574 \ud560 \uc218 \uc788\ub294\ub370, \uc774 \uba54\uc11c\ub4dc\ub294 5\uac1c\uc758 \uc778\uc790\ub97c \ubc1b\uc2b5\ub2c8\ub2e4: \uccab\ubc88\uc9f8 \uc778\uc790\ub294 \ud328\ud0b7\uc744 \ud310\ubcc4\ud560 \ub54c \uc0ac\uc6a9\ud560 \ud310\ubcc4\uc790 \uc785\ub2c8\ub2e4. ID \ub77c\uace0 \ubd80\ub974\uae30\ub3c4 \ud569\ub2c8\ub2e4. \uc774 \ud310\ubcc4\uc790\ub294 \uac19\uc740 \ucc44\ub110\uc5d0\uc11c\ub294 \uace0\uc720\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4, \ub2e4\ub978 \ucc44\ub110\ub07c\ub9ac\ub294 \ud310\ubcc4\uc790\uac00 \uac19\uc544\ub3c4 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud310\ubcc4\uc790\ub85c\ub294 \uc5b4\ub5a4 \uac12\uc744 \uc0ac\uc6a9\ud558\uc154\ub3c4 \uace0\uc720\ud558\uae30\ub9cc \ud55c\ub2e4\uba74 \uc0c1\uad00 \uc5c6\uc73c\ub2c8 \uc9c0\uc5ed \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uba54\uc138\uc9c0 \ud558\ub098 \ub4f1\ub85d\ud560 \ub54c \ub9c8\ub2e4 id++ \ub97c \ud558\uc5ec \ub298 \uace0\uc720\ud55c \uac12\uc774 \ub098\uc624\ub3c4\ub85d \ud558\uc138\uc694. \ub450\ubc88\uc9f8 \uc778\uc790\ub294 \ud328\ud0b7 \ud074\ub798\uc2a4 MSG \uc785\ub2c8\ub2e4. \uc138\ubc88\uc9f8 \uc778\uc790\ub294 BiConsumer<MSG, FriendlyByteBuf> \uc785\ub2c8\ub2e4, \ud328\ud0b7 \ud074\ub798\uc2a4\ub97c FriendlyByteBuf \uc5d0 \uc791\uc131\ud558\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \ub124\ubc88\uc9f8 \uc778\uc790\ub294 Function<FriendlyByteBuf, MSG> \uc785\ub2c8\ub2e4, FriendlyByteBuf \ub85c \ubd80\ud130 \ud328\ud0b7 \ud074\ub798\uc2a4\ub97c \uc77d\uc5b4\ub4e4\uc774\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9 \uc778\uc790\ub294 BiConsumer<MSG, Supplier<NetworkEvent.Context>> \uc785\ub2c8\ub2e4, \ud328\ud0b7\uc744 \ubc1b\uc744\uc2dc \uc0ac\uc6a9\ud560 \ud578\ub4e4\ub7ec \uc785\ub2c8\ub2e4. \ub4a4 3\uac1c\uc758 \uc778\uc790\ub4e4\uc740 \uc815\uc801 \ub610\ub294 \uc778\uc2a4\ud134\uc2a4 \uba54\uc11c\ub4dc\uc758 \ub808\ud37c\ub7f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec\ub3c4 \ub429\ub2c8\ub2e4. \uae30\uc5b5\ud574\ub450\uc154\uc57c \ud560 \uc810\uc740 MSG#encode(FriendlyByteBuf) \uc778\uc2a4\ud134\uc2a4 \uba54\uc11c\ub4dc\ub294 BiConsumer<MSG, FriendlyByteBuf> \ub85c \uc0ac\uc6a9\ud558\uc2e4 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4; MSG \uc758 \uc778\uc2a4\ud134\uc2a4\ub294 \uc554\ubb35\uc801\uc73c\ub85c BiConsumer \uc758 \uccab\ubc88\uc9f8 \uc778\uc790\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4.","title":"\ud328\ud0b7 \ub4f1\ub85d\ud558\uae30"},{"location":"networking/simpleimpl/#_4","text":"\ud328\ud0b7 \ud578\ub4e4\ub7ec\uc5d0\ub294 \uba87\uac00\uc9c0 \uac15\uc870\ud560 \uc0ac\ud56d\uc774 \uc788\uc2b5\ub2c8\ub2e4: \ud328\ud0b7 \ud578\ub4e4\ub7ec\ub294 \uba54\uc138\uc9c0 \ud074\ub798\uc2a4 \ubfd0\ub9cc \uc544\ub2c8\ub77c, \ub124\ud2b8\uc6cc\ud06c \ucf58\ud14d\uc2a4\ud2b8\ub3c4 \uac19\uc774 \ubc18\uc2b5\ub2c8\ub2e4. \uc774 \ucf58\ud14d\uc2a4\ud2b8\ub97c \uc0ac\uc6a9\ud574\uc11c, (\uc11c\ubc84\uc5d0\uc11c \ud328\ud0b7\uc744 \ubc1b\uc558\ub2e4\uba74) \ud328\ud0b7\uc744 \ubcf4\ub0b8 \ud50c\ub808\uc774\uc5b4\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uace0 \uc2a4\ub808\ub4dc \uc548\uc804\uc131\uc744 \uc900\uc218\ud574\uc57c\ub9cc \ud558\ub294 \uc791\uc5c5\ub4e4\uc744 \uc694\uccad\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. public static void handle(MyMessage msg, Supplier<NetworkEvent.Context> ctx) { ctx.get().enqueueWork(() -> { // \uc2a4\ub808\ub4dc \uc548\uc804\uc131\uc744 \uc900\uc218\ud574\uc57c \ud558\ub294 \uc791\uc5c5\ub4e4 (\ub300\ubd80\ubd84\uc758 \uc791\uc5c5\ub4e4\uc774 \uc774\uc5d0 \ud3ec\ud568\ub420 \uac83\uc785\ub2c8\ub2e4) ServerPlayerEntity sender = ctx.get().getSender(); // the client that sent this packet // \ubb34\uc5b8\uac00 \uc544\ubb34\uac70\ub098 \ub354 \ud558\uae30 }); ctx.get().setPacketHandled(true); } \uc11c\ubc84\uc5d0\uc11c \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c \ubcf4\ub0b8 \ud328\ud0b7\uc740 \uc544\uc608 \ub2e4\ub978 \ud074\ub798\uc2a4\uc5d0\uc11c \ud578\ub4e4\ub9c1 \ud574\uc57c \ud558\uba70, DistExecutor#unsafeRunWhenOn \uc640 \uac19\uc740 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud574 \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub418\ub3c4\ub85d \ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4. // In Packet class public static void handle(MyClientMessage msg, Supplier<NetworkEvent.Context> ctx) { ctx.get().enqueueWork(() -> // \ud655\uc2e4\ud558\uac8c \ubb3c\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. DistExecutor.unsafeRunWhenOn(Dist.CLIENT, () -> () -> ClientPacketHandlerClass.handlePacket(msg, ctx)) ); ctx.get().setPacketHandled(true); } // ClientPacketHandlerClass \ub0b4\uc6a9 public static void handlePacket(MyClientMessage msg, Supplier<NetworkEvent.Context> ctx) { // \ubb34\uc5b8\uac00 \ud558\uae30 } #setPacketHandled \ub97c \uc5ec\ub7ec\ubc88 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \ubcf4\uc168\uc744\ud150\ub370, \uc774\ub294 \ub124\ud2b8\uc6cc\ud06c \uc2dc\uc2a4\ud15c\uc5d0\uac8c \ud328\ud0b7\uc774 \uc131\uacf5\uc801\uc73c\ub85c \ucc98\ub9ac\ub418\uc5c8\uc74c\uc744 \uc54c\ub9ac\ub294 \uac83\uc785\ub2c8\ub2e4. Warning \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 1.8 \uc774\ud6c4\ub85c\ub294 \ud328\ud0b7\uc740 \ub124\ud2b8\uc6cc\ud06c \uc2a4\ub808\ub4dc\uc5d0\uc11c \ucc98\ub9ac\ub429\ub2c8\ub2e4. \uc989 \ud328\ud0b7 \ud578\ub4e4\ub7ec\ub294 \uac8c\uc784\uacfc \uc9c1\uc811\uc801\uc73c\ub85c \uc0c1\ud638\uc791\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4 . \ud3ec\uc9c0\uc5d0\uc11c\ub294 NetworkEvent$Context \ub97c \ud1b5\ud574 \uac04\ub2e8\ud558\uac8c \ucf54\ub4dc\ub97c \uba54\uc778 \uc2a4\ub808\ub4dc\uc5d0\uc11c \uc2e4\ud589\ud558\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub294 \ub2e8\uc21c\ud558\uac8c NetworkEvent$Context#enqueueWork(Runnable) \uc744 \ud638\ucd9c\ud558\ub294 \uac83\uc778\ub370, \uba54\uc778 \uc2a4\ub808\ub4dc\ub294 \uc774\ub54c \uc804\ub2ec\ub41c Runnable \uc744 \ube60\ub978 \uc2dc\uc77c\ub0b4\uc5d0 \uc2e4\ud589\ud569\ub2c8\ub2e4. Warning \uc11c\ubc84\uc5d0\uc11c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \ubcf4\ub0b8 \ud328\ud0b7\uc744 \ucc98\ub9ac\ud558\ub294 \ud328\ud0b7 \ud578\ub4e4\ub7ec\ub97c \ub9cc\ub4e4 \ub54c \uc8fc\uc758\ud558\ub3c4\ub85d \ud558\uc138\uc694, \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc11c\ubc84\uc5d0\uc11c \uc608\uae30\uce58 \ubabb\ud55c \ub370\uc774\ud130\ub97c \ubcf4\ub0b4 \ucde8\uc57d\uc810\uc744 \uc545\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac00\uc7a5 \ud754\ud55c \uc0ac\ub840\ub294 \ubb34\uc791\uc704 \uccad\ud06c \uc0dd\uc131 \uc785\ub2c8\ub2e4. \uc11c\ubc84\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \ubcf4\ub0b8 \ube14\ub85d\uc758 \uc704\uce58\ub97c \uadf8\ub300\ub85c \ubbff\uace0 \uc774\ub97c \uc774\uc6a9\ud574 \ube14\ub85d/\ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \ud560 \ub54c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\ub294\ub370, \ub9cc\uc57d \uc544\uc9c1 \uccad\ud06c\uac00 \uba54\ubaa8\ub9ac \uc0c1\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uacf3\uc5d0 \uc788\ub294 \ube14\ub85d/\ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \ud558\uba74 \uc11c\ubc84\uc5d0\uc11c\ub294 \ub514\uc2a4\ud06c\uc5d0\uc11c \ubd88\ub7ec\uc624\uac70\ub098 \uc0c8\ub85c \uccad\ud06c\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\ub294 \uc2ec\uac01\ud55c \ubcf4\uc548 \ucde8\uc57d\uc810\uc911 \ud558\ub098\ub85c, \ud754\uc801\ub3c4 \ub0a8\uae30\uc9c0 \uc54a\uace0 \uc11c\ubc84 \uc131\ub2a5\uacfc \ub514\uc2a4\ud06c \uc6a9\ub7c9\uc5d0 \ub9e4\uc6b0 \ud070 \ud53c\ud574\ub97c \ub07c\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uacf5\uaca9\uc744 \ub9c9\uae30 \uc704\ud574 \uc77c\ubc18\uc801\uc73c\ub85c \ub9ce\uc774 \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc740 Level#hasChunkAt \uc774 \ucc38\uc778 \uacf3\ub9cc\uc758 \ube14\ub85d/\ube14\ub85d \uc5d4\ud2f0\ud2f0\uc5d0 \uc811\uadfc\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uba54\ubaa8\ub9ac\uc0c1\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uccad\ud06c\uc5d0 \uc811\uadfc\ud558\ub294 \uac83\uc744 \ub9c9\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud328\ud0b7 \ud578\ub4e4\ub9c1 \ud558\uae30"},{"location":"networking/simpleimpl/#_5","text":"","title":"\ud328\ud0b7 \ubcf4\ub0b4\uae30"},{"location":"networking/simpleimpl/#_6","text":"\uc11c\ubc84\ub85c \ud328\ud0b7\uc744 \ubcf4\ub0b4\ub294 \ubc29\ubc95\uc740 \ud558\ub098\ubc16\uc5d0 \uc5c6\uc2b5\ub2c8\ub2e4. \uc65c\ub0d0\ud558\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \ud55c\ubc88\uc5d0 \ud558\ub098\uc758 \uc11c\ubc84\uc5d0\ub9cc \uc811\uc18d\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ud328\ud0b7\uc744 \ubcf4\ub0b4\uae30 \uc704\ud574\uc11c\ub294 \uc774\uc804\uc5d0 \uc815\uc758\ud55c SimpleChannel \uc744 \ub2e4\uc2dc \uc0ac\uc6a9\ud560 \uac83\uc778\ub370, \ub2e8\uc21c\ud788 INSTANCE.sendToServer(new MyMessage()) \ub97c \ud638\ucd9c\ud558\uc138\uc694. \uc774 \uba54\uc138\uc9c0\ub294 \ud328\ud0b7\uc5d0 \uc54c\ub9de\ub294 \ud578\ub4e4\ub7ec\ub85c (\ub9cc\uc57d \uc788\ub2e4\uba74)\ubcf4\ub0b4\uc9d1\ub2c8\ub2e4.","title":"\uc11c\ubc84\uc5d0 \ubcf4\ub0b4\uae30"},{"location":"networking/simpleimpl/#_7","text":"\ud328\ud0b7\uc744 SimpleChannel \uc744 \uc0ac\uc6a9\ud574 \uc9c1\uc811\uc801\uc73c\ub85c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc804\uc1a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: INSTANCE.sendTo(new MyClientMessage(), serverPlayer.connection.getConnection(), NetworkDirection.PLAY_TO_CLIENT) . \uadf8\ub7ec\ub098 \uc774 \ubc29\uc2dd\uc740 \uc0ac\uc6a9\ud558\uae30 \ubd88\ud3b8\ud560 \uc218 \uc788\ub294\ub370, \ud3ec\uc9c0\uc5d0\uc11c\ub294 \uc870\uae08 \ub354 \uc27d\uac8c \ud328\ud0b7\uc744 \ubcf4\ub0b4\uc8fc\ub294 \ud568\uc218\ub4e4\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4: // \ud50c\ub808\uc774\uc5b4 \ud55c\uba85\uc5d0\uac8c \ubcf4\ub0b4\uae30 INSTANCE.send(PacketDistributor.PLAYER.with(serverPlayer), new MyMessage()); // \uc774 \ub808\ubca8 \uccad\ud06c\ub97c \ucd94\uc801\ud558\uace0 \uc788\ub294 \ubaa8\ub4e0 \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \ubcf4\ub0b4\uae30 INSTANCE.send(PacketDistributor.TRACKING_CHUNK.with(levelChunk), new MyMessage()); // \ubaa8\ub4e0 \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \ubcf4\ub0b4\uae30 INSTANCE.send(PacketDistributor.ALL.noArg(), new MyMessage()); PacketDistributor \ub294 \uc704\uc5d0 \ub098\uc628 \uac83 \ub9d0\uace0\ub3c4 \ub354 \ub9ce\uc740 \uc885\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4; PacketDistributor \ud074\ub798\uc2a4\uc758 \ubb38\uc11c\ub97c \ud1b5\ud574 \ub354 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud074\ub77c\uc774\uc5b8\ud2b8(\ub4e4)\uc5d0 \ubcf4\ub0b4\uae30"},{"location":"rendering/modelloaders/","text":"Custom Model Loaders A \u201cmodel\u201d is simply a shape. It can be a simple cube, it can be several cubes, it can be a truncated icosidodecahedron, or anything in between. Most models you\u2019ll see will be in the vanilla JSON format. Models in other formats are loaded into IModelGeometry s by an IModelLoader at runtime. Forge provides default implementations for WaveFront OBJ files, buckets, composite models, models in different render layers, and a reimplementation of Vanilla\u2019s builtin/generated item model. Most things do not care about what loaded the model or what format it\u2019s in as they are all eventually represented by an BakedModel in code. WaveFront OBJ Models Forge adds a loader for the .obj file format. To use these models, the JSON must reference the forge:obj loader. This loader accepts any model location that is in a registered namespace and whose path ends in .obj . The .mtl file should be placed in the same location with the same name as the .obj to be used automatically. The .mtl file will probably have to be manually edited to change the paths pointing to textures defined within the JSON. Additionally, the V axis for textures may be flipped depending on the external program that created the model (i.e. V = 0 may be the bottom edge, not the top). This may be rectified in the modelling program itself or done in the model JSON like so: { // Add the following line on the same level as a 'model' declaration \"loader\": \"forge:obj\", \"flip-v\": true, \"model\": \"examplemod:models/block/model.obj\", \"textures\": { // Can refer to in .mtl using #texture0 \"texture0\": \"minecraft:block/dirt\", \"particle\": \"minecraft:block/dirt\" } }","title":"\uc18c\uac1c"},{"location":"rendering/modelloaders/#custom-model-loaders","text":"A \u201cmodel\u201d is simply a shape. It can be a simple cube, it can be several cubes, it can be a truncated icosidodecahedron, or anything in between. Most models you\u2019ll see will be in the vanilla JSON format. Models in other formats are loaded into IModelGeometry s by an IModelLoader at runtime. Forge provides default implementations for WaveFront OBJ files, buckets, composite models, models in different render layers, and a reimplementation of Vanilla\u2019s builtin/generated item model. Most things do not care about what loaded the model or what format it\u2019s in as they are all eventually represented by an BakedModel in code.","title":"Custom Model Loaders"},{"location":"rendering/modelloaders/#wavefront-obj-models","text":"Forge adds a loader for the .obj file format. To use these models, the JSON must reference the forge:obj loader. This loader accepts any model location that is in a registered namespace and whose path ends in .obj . The .mtl file should be placed in the same location with the same name as the .obj to be used automatically. The .mtl file will probably have to be manually edited to change the paths pointing to textures defined within the JSON. Additionally, the V axis for textures may be flipped depending on the external program that created the model (i.e. V = 0 may be the bottom edge, not the top). This may be rectified in the modelling program itself or done in the model JSON like so: { // Add the following line on the same level as a 'model' declaration \"loader\": \"forge:obj\", \"flip-v\": true, \"model\": \"examplemod:models/block/model.obj\", \"textures\": { // Can refer to in .mtl using #texture0 \"texture0\": \"minecraft:block/dirt\", \"particle\": \"minecraft:block/dirt\" } }","title":"WaveFront OBJ Models"},{"location":"rendering/modelloaders/bakedmodel/","text":"BakedModel BakedModel is the result of calling UnbakedModel#bake for the vanilla model loader or IModelGeometry#bake for custom model loaders. Unlike UnbakedModel or IModelGeometry , which purely represents a shape without any concept of items or blocks, BakedModel is not as abstract. It represents geometry that has been optimized and reduced to a form where it is (almost) ready to go to the GPU. It can also process the state of an item or block to change the model. In a majority of cases, it is not really necessary to implement this interface manually. One can instead use one of the existing implementations. getOverrides Returns the ItemOverrides to use for this model. This is only used if this model is being rendered as an item. useAmbientOcclusion If the model is rendered as a block in the level, the block in question does not emit any light, and ambient occlusion is enabled. This causes the model to be rendered with ambient occlusion . isGui3d If the model is rendered as an item in an inventory, on the ground as an entity, on an item frame, etc., this makes the model look \u201cflat.\u201d In GUIs, this also disables the lighting. isCustomRenderer Important Unless you know what you\u2019re doing, just return false from this and continue on. When rendering this as an item, returning true causes the model to not be rendered, instead falling back to BlockEntityWithoutLevelRenderer#renderByItem . For certain vanilla items such as chests and banners, this method is hardcoded to copy data from the item into a BlockEntity , before using a BlockEntityRenderer to render that BE in place of the item. For all other items, it will use the BlockEntityWithoutLevelRenderer instance provided by IItemRenderProperties#getItemStackRenderer . Refer to BlockEntityWithoutLevelRenderer page for more information. getParticleIcon Whatever texture should be used for the particles. For blocks, this shows when an entity falls on it, when it breaks, etc. For items, this shows when it breaks or when it\u2019s eaten. Important The vanilla method with no parameters has been deprecated in favor of #getParticleIcon(IModelData) since model data can have an effect on how a particular model might be rendered. getTransforms Deprecated in favor of implementing #handlePerspective . The default implementation is fine if #handlePerspective is implemented. See Perspective . handlePerspective See Perspective . getQuads This is the main method of BakedModel . It returns a list of BakedQuad s: objects which contain the low-level vertex data that will be used to render the model. If the model is being rendered as a block, then the BlockState passed in is non-null. If the model is being rendered as an item, the ItemOverrides returned from #getOverrides is responsible for handling the state of the item, and the BlockState parameter will be null . The Direction passed in is used for face culling. If the block against the given side of another block being rendered is opaque, then the faces associated with that side are not rendered. If that parameter is null , all faces not associated with a side are returned (that will never be culled). The rand parameter is an instance of Random. It also takes in a non null IModelData instance. This can be used to define extra data when rendering the specific model via ModelProperty s. For example, one such property is CompositeModelData , which is used to store any additional submodel data for a model using the forge:composite model loader. Note that this method is called very often: once for every combination of non-culled face and supported block render layer (anywhere between 0 to 28 times) per block in a level . This method should be as fast as possible, and should probably cache heavily.","title":"\ucd5c\uc801\ud654\ub41c \ubaa8\ub378"},{"location":"rendering/modelloaders/bakedmodel/#bakedmodel","text":"BakedModel is the result of calling UnbakedModel#bake for the vanilla model loader or IModelGeometry#bake for custom model loaders. Unlike UnbakedModel or IModelGeometry , which purely represents a shape without any concept of items or blocks, BakedModel is not as abstract. It represents geometry that has been optimized and reduced to a form where it is (almost) ready to go to the GPU. It can also process the state of an item or block to change the model. In a majority of cases, it is not really necessary to implement this interface manually. One can instead use one of the existing implementations.","title":"BakedModel"},{"location":"rendering/modelloaders/bakedmodel/#getoverrides","text":"Returns the ItemOverrides to use for this model. This is only used if this model is being rendered as an item.","title":"getOverrides"},{"location":"rendering/modelloaders/bakedmodel/#useambientocclusion","text":"If the model is rendered as a block in the level, the block in question does not emit any light, and ambient occlusion is enabled. This causes the model to be rendered with ambient occlusion .","title":"useAmbientOcclusion"},{"location":"rendering/modelloaders/bakedmodel/#isgui3d","text":"If the model is rendered as an item in an inventory, on the ground as an entity, on an item frame, etc., this makes the model look \u201cflat.\u201d In GUIs, this also disables the lighting.","title":"isGui3d"},{"location":"rendering/modelloaders/bakedmodel/#iscustomrenderer","text":"Important Unless you know what you\u2019re doing, just return false from this and continue on. When rendering this as an item, returning true causes the model to not be rendered, instead falling back to BlockEntityWithoutLevelRenderer#renderByItem . For certain vanilla items such as chests and banners, this method is hardcoded to copy data from the item into a BlockEntity , before using a BlockEntityRenderer to render that BE in place of the item. For all other items, it will use the BlockEntityWithoutLevelRenderer instance provided by IItemRenderProperties#getItemStackRenderer . Refer to BlockEntityWithoutLevelRenderer page for more information.","title":"isCustomRenderer"},{"location":"rendering/modelloaders/bakedmodel/#getparticleicon","text":"Whatever texture should be used for the particles. For blocks, this shows when an entity falls on it, when it breaks, etc. For items, this shows when it breaks or when it\u2019s eaten. Important The vanilla method with no parameters has been deprecated in favor of #getParticleIcon(IModelData) since model data can have an effect on how a particular model might be rendered.","title":"getParticleIcon"},{"location":"rendering/modelloaders/bakedmodel/#gettransforms","text":"Deprecated in favor of implementing #handlePerspective . The default implementation is fine if #handlePerspective is implemented. See Perspective .","title":"getTransforms"},{"location":"rendering/modelloaders/bakedmodel/#handleperspective","text":"See Perspective .","title":"handlePerspective"},{"location":"rendering/modelloaders/bakedmodel/#getquads","text":"This is the main method of BakedModel . It returns a list of BakedQuad s: objects which contain the low-level vertex data that will be used to render the model. If the model is being rendered as a block, then the BlockState passed in is non-null. If the model is being rendered as an item, the ItemOverrides returned from #getOverrides is responsible for handling the state of the item, and the BlockState parameter will be null . The Direction passed in is used for face culling. If the block against the given side of another block being rendered is opaque, then the faces associated with that side are not rendered. If that parameter is null , all faces not associated with a side are returned (that will never be culled). The rand parameter is an instance of Random. It also takes in a non null IModelData instance. This can be used to define extra data when rendering the specific model via ModelProperty s. For example, one such property is CompositeModelData , which is used to store any additional submodel data for a model using the forge:composite model loader. Note that this method is called very often: once for every combination of non-culled face and supported block render layer (anywhere between 0 to 28 times) per block in a level . This method should be as fast as possible, and should probably cache heavily.","title":"getQuads"},{"location":"rendering/modelloaders/itemoverrides/","text":"ItemOverrides ItemOverrides provides a way for an BakedModel to process the state of an ItemStack and return a new BakedModel ; thereafter, the returned model replaces the old one. ItemOverrides represents an arbitrary function (BakedModel, ItemStack, ClientLevel, LivingEntity, int) \u2192 BakedModel , making it useful for dynamic models. In vanilla, it is used to implement item property overrides. ItemOverrides() Given a list of ItemOverride s, the constructor copies and bakes the list. The baked overrides may be accessed with #getOverrides . resolve This takes an BakedModel , an ItemStack , a ClientLevel , a LivingEntity , and an int to produce another BakedModel to use for rendering. This is where models can handle the state of their items. This should not mutate the level. getOverrides Returns an immutable list containing all the BakedOverride s used by this ItemOverrides . If none are applicable, this returns the empty list. BakedOverride This class represents a vanilla item override, which holds several ItemOverrides$PropertyMatcher for the properties on an item and a model to use in case those matchers are satisfied. They are the objects in the overrides array of a vanilla item JSON model: { // Inside a vanilla JSON item model \"overrides\": [ { // This is an ItemOverride \"predicate\": { // This is the Map<ResourceLocation, Float>, containing the names of properties and their minimum values \"example1:prop\": 0.5 }, // This is the 'location', or target model, of the override, which is used if the predicate above matches \"model\": \"example1:item/model\" }, { // This is another ItemOverride \"predicate\": { \"example2:prop\": 1 }, \"model\": \"example2:item/model\" } ] }","title":"\uc544\uc774\ud15c \uc18d\uc131\uc5d0 \ub530\ub978 \ub3d9\uc801 \ud14d\uc2a4\uccd0 \ubcc0\uacbd"},{"location":"rendering/modelloaders/itemoverrides/#itemoverrides","text":"ItemOverrides provides a way for an BakedModel to process the state of an ItemStack and return a new BakedModel ; thereafter, the returned model replaces the old one. ItemOverrides represents an arbitrary function (BakedModel, ItemStack, ClientLevel, LivingEntity, int) \u2192 BakedModel , making it useful for dynamic models. In vanilla, it is used to implement item property overrides.","title":"ItemOverrides"},{"location":"rendering/modelloaders/itemoverrides/#itemoverrides_1","text":"Given a list of ItemOverride s, the constructor copies and bakes the list. The baked overrides may be accessed with #getOverrides .","title":"ItemOverrides()"},{"location":"rendering/modelloaders/itemoverrides/#resolve","text":"This takes an BakedModel , an ItemStack , a ClientLevel , a LivingEntity , and an int to produce another BakedModel to use for rendering. This is where models can handle the state of their items. This should not mutate the level.","title":"resolve"},{"location":"rendering/modelloaders/itemoverrides/#getoverrides","text":"Returns an immutable list containing all the BakedOverride s used by this ItemOverrides . If none are applicable, this returns the empty list.","title":"getOverrides"},{"location":"rendering/modelloaders/itemoverrides/#bakedoverride","text":"This class represents a vanilla item override, which holds several ItemOverrides$PropertyMatcher for the properties on an item and a model to use in case those matchers are satisfied. They are the objects in the overrides array of a vanilla item JSON model: { // Inside a vanilla JSON item model \"overrides\": [ { // This is an ItemOverride \"predicate\": { // This is the Map<ResourceLocation, Float>, containing the names of properties and their minimum values \"example1:prop\": 0.5 }, // This is the 'location', or target model, of the override, which is used if the predicate above matches \"model\": \"example1:item/model\" }, { // This is another ItemOverride \"predicate\": { \"example2:prop\": 1 }, \"model\": \"example2:item/model\" } ] }","title":"BakedOverride"},{"location":"rendering/modelloaders/perspective/","text":"Perspective When an BakedModel is being rendered as an item, it can apply special handling depending on which perspective it is being rendered in. \u201cPerspective\u201d means in what context the model is being rendered. The possible perspectives are represented in code by the ItemTransforms$TransformType enum. There are two systems for handling perspective: the deprecated vanilla system, constituted by BakedModel#getTransforms , ItemTransforms , and ItemTransform , and the Forge system, embodied by the method IForgeBakedModel#handlePerspective . The vanilla code is patched to favor using handlePerspective over the vanilla system whenever possible. TransformType NONE - Unused. THIRD_PERSON_LEFT_HAND / THIRD_PERSON_RIGHT_HAND / FIRST_PERSON_LEFT_HAND / FIRST_PERSON_RIGHT_HAND - The first person values represent when the player is holding the item in their own hand. The third person values represent when another player is holding the item and the client is looking at them in the 3rd person. Hands are self-explanatory. HEAD - Represents when any player is wearing the item in the helmet slot (e.g. pumpkins). GUI - Represents when the item is being rendered in a Screen . GROUND - Represents when the item is being rendered in the level as an ItemEntity . FIXED - Used for item frames. The Vanilla Way The vanilla way of handling perspective is through BakedModel#getTransforms . This method returns an ItemTransforms , which is a simple object that contains various ItemTransform s as public final fields. An ItemTransform represents a rotation, a translation, and a scale to be applied to the model. The ItemTransforms is a container for these, holding one for each of the TransformType s except NONE . In the vanilla implementation, calling #getTransform for NONE results in the default transform, ItemTransform#NO_TRANSFORM . The entire vanilla system for handling transforms is deprecated by Forge, and most implementations of BakedModel should simply return ItemTransforms#NO_TRANSFORMS (which is the default implementation) from BakedModel#getTransforms . Instead, they should implement #handlePerspective . The Forge Way The Forge way of handling transforms is #handlePerspective , a method patched into BakedModel . It supersedes the #getTransforms method. Additionally, the class PerspectiveMapWrapper is a simple implementation of an BakedModel with the method; it is a wrapper around other BakedModel s, augmenting them with a Map<TransformType, Transformation> to handle perspective. BakedModel#handlePerspective Given a TransformType and PoseStack , this method produces an BakedModel to be rendered. Because the returned BakedModel can be a totally new model, this method is more flexible than the vanilla method (e.g. a piece of paper that looks flat in hand but crumpled on the ground). PerspectiveMapWrapper A wrapper around other BakedModel s, this class delegates to the wrapped model for all BakedModel methods except #handlePerspective , and utilizes a simple Map<TransformType, Transformation> for #handlePerspective . However, the more interesting parts of this class are the static helper methods. getTransforms and getTransformsWithFallback Given an ItemTransforms or an ModelState , this method will extract an ImmutableMap<TransformType, Transformation> from it. To extract this information from an ModelState , each TransformType is passed to #getPartTransformation . This is how models should support custom perspective transforms through ModelState . UnbakedModel s should pass the ModelState in #bake . Then the BakedModel can use these custom transforms in #handlePerspective , composing them on top of its own. handlePerspective Given either a map of transforms or an ModelState , an BakedModel , a TransformType , and a PoseStack , this finds the BakedModel for the transform from the map or the ModelState , and then pairs it with the given model. To extract the transform from an ModelState , the TransformType is passed to #getPartTransformation . This method is meant to be a simple implementation of BakedModel#handlePerspective .","title":"\uc2dc\uc810"},{"location":"rendering/modelloaders/perspective/#perspective","text":"When an BakedModel is being rendered as an item, it can apply special handling depending on which perspective it is being rendered in. \u201cPerspective\u201d means in what context the model is being rendered. The possible perspectives are represented in code by the ItemTransforms$TransformType enum. There are two systems for handling perspective: the deprecated vanilla system, constituted by BakedModel#getTransforms , ItemTransforms , and ItemTransform , and the Forge system, embodied by the method IForgeBakedModel#handlePerspective . The vanilla code is patched to favor using handlePerspective over the vanilla system whenever possible.","title":"Perspective"},{"location":"rendering/modelloaders/perspective/#transformtype","text":"NONE - Unused. THIRD_PERSON_LEFT_HAND / THIRD_PERSON_RIGHT_HAND / FIRST_PERSON_LEFT_HAND / FIRST_PERSON_RIGHT_HAND - The first person values represent when the player is holding the item in their own hand. The third person values represent when another player is holding the item and the client is looking at them in the 3rd person. Hands are self-explanatory. HEAD - Represents when any player is wearing the item in the helmet slot (e.g. pumpkins). GUI - Represents when the item is being rendered in a Screen . GROUND - Represents when the item is being rendered in the level as an ItemEntity . FIXED - Used for item frames.","title":"TransformType"},{"location":"rendering/modelloaders/perspective/#the-vanilla-way","text":"The vanilla way of handling perspective is through BakedModel#getTransforms . This method returns an ItemTransforms , which is a simple object that contains various ItemTransform s as public final fields. An ItemTransform represents a rotation, a translation, and a scale to be applied to the model. The ItemTransforms is a container for these, holding one for each of the TransformType s except NONE . In the vanilla implementation, calling #getTransform for NONE results in the default transform, ItemTransform#NO_TRANSFORM . The entire vanilla system for handling transforms is deprecated by Forge, and most implementations of BakedModel should simply return ItemTransforms#NO_TRANSFORMS (which is the default implementation) from BakedModel#getTransforms . Instead, they should implement #handlePerspective .","title":"The Vanilla Way"},{"location":"rendering/modelloaders/perspective/#the-forge-way","text":"The Forge way of handling transforms is #handlePerspective , a method patched into BakedModel . It supersedes the #getTransforms method. Additionally, the class PerspectiveMapWrapper is a simple implementation of an BakedModel with the method; it is a wrapper around other BakedModel s, augmenting them with a Map<TransformType, Transformation> to handle perspective.","title":"The Forge Way"},{"location":"rendering/modelloaders/perspective/#bakedmodelhandleperspective","text":"Given a TransformType and PoseStack , this method produces an BakedModel to be rendered. Because the returned BakedModel can be a totally new model, this method is more flexible than the vanilla method (e.g. a piece of paper that looks flat in hand but crumpled on the ground).","title":"BakedModel#handlePerspective"},{"location":"rendering/modelloaders/perspective/#perspectivemapwrapper","text":"A wrapper around other BakedModel s, this class delegates to the wrapped model for all BakedModel methods except #handlePerspective , and utilizes a simple Map<TransformType, Transformation> for #handlePerspective . However, the more interesting parts of this class are the static helper methods.","title":"PerspectiveMapWrapper"},{"location":"rendering/modelloaders/perspective/#gettransforms-and-gettransformswithfallback","text":"Given an ItemTransforms or an ModelState , this method will extract an ImmutableMap<TransformType, Transformation> from it. To extract this information from an ModelState , each TransformType is passed to #getPartTransformation . This is how models should support custom perspective transforms through ModelState . UnbakedModel s should pass the ModelState in #bake . Then the BakedModel can use these custom transforms in #handlePerspective , composing them on top of its own.","title":"getTransforms and getTransformsWithFallback"},{"location":"rendering/modelloaders/perspective/#handleperspective","text":"Given either a map of transforms or an ModelState , an BakedModel , a TransformType , and a PoseStack , this finds the BakedModel for the transform from the map or the ModelState , and then pairs it with the given model. To extract the transform from an ModelState , the TransformType is passed to #getPartTransformation . This method is meant to be a simple implementation of BakedModel#handlePerspective .","title":"handlePerspective"},{"location":"resources/client/","text":"\ub9ac\uc18c\uc2a4 \ud329 \ub9ac\uc18c\uc2a4 \ud329 \uc740 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \uc5d0\uc14b \ub370\uc774\ud130\ub97c assets \ud3f4\ub354\ub97c \ud1b5\ud574 \ub9c8\uc74c\ub300\ub85c \ubcc0\uacbd\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc0c8\ub85c\uc6b4 \ud14d\uc2a4\uccd0, \ubaa8\ub378, \uc18c\ub9ac, \uc5b8\uc5b4 \ud30c\uc77c \ub4f1\uc744 \ucd94\uac00\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\ub791 \ubaa8\ub4dc\ub4e4 \ub610\ud55c \ub9ac\uc18c\uc2a4\ud329\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uace0, \uc774\ub807\uac8c \ucd94\uac00\ub41c \uc5d0\uc14b \ud30c\uc77c\ub4e4 \ub610\ud55c \uc720\uc800\ub4e4\uc774 \ub9ac\uc18c\uc2a4 \ud329\uc744 \ud1b5\ud574 \ub9c8\uc74c\ub300\ub85c \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \ud329 \ub9cc\ub4e4\uae30 \ub9ac\uc2a4\uc18c \ud329\uc740 \ud504\ub85c\uc81d\ud2b8\uc758 resources \ud3f4\ub354\uc5d0 \ub4e4\uc5b4\uc788\uc2b5\ub2c8\ub2e4. assets \ud3f4\ub354\ub294 \ub9ac\uc18c\uc2a4 \ud329\uc758 \ubaa8\ub4e0 \uc5d0\uc14b \ub370\uc774\ud130\ub4e4\uc744 \ub2f4\uace0 \uc788\uc73c\uba70, assets \ud3f4\ub354 \uc606\uc758 pack.mcmeta \uac00 \ub9ac\uc18c\uc2a4 \ud329\uc758 \uba54\ud0c0 \ub370\uc774\ud130\ub4e4\uc744 \uc815\uc758\ud569\ub2c8\ub2e4. \uc6d0\ud558\uc2e0\ub2e4\uba74 assets \ud3f4\ub354\uc5d0 \ub3c4\uba54\uc778 \uc5ec\ub7ec\uac1c\ub97c \ub9cc\ub4dc\uc154\ub3c4 \ub429\ub2c8\ub2e4, \uc774\ub97c \ud1b5\ud574 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8, \ud3ec\uc9c0, \ub610\ub294 \ub2e4\ub978 \ubaa8\ub4dc\uac00 \ucd94\uac00\ud558\ub294 \uc5d0\uc14b \ub370\uc774\ud130\ub97c \uc218\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uacf3 \ub97c \ucc38\uace0\ud558\uc154\uc11c \ub9ac\uc18c\uc2a4 \ud329\uc744 \ub9cc\ub4dc\ub294 \ubc95\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uac00 \uc790\ub8cc: \ub9ac\uc18c\uc2a4 \uc704\uce58\ub780?","title":"\uc18c\uac1c"},{"location":"resources/client/#_1","text":"\ub9ac\uc18c\uc2a4 \ud329 \uc740 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8\uc758 \uc5d0\uc14b \ub370\uc774\ud130\ub97c assets \ud3f4\ub354\ub97c \ud1b5\ud574 \ub9c8\uc74c\ub300\ub85c \ubcc0\uacbd\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc0c8\ub85c\uc6b4 \ud14d\uc2a4\uccd0, \ubaa8\ub378, \uc18c\ub9ac, \uc5b8\uc5b4 \ud30c\uc77c \ub4f1\uc744 \ucd94\uac00\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\uc9c0\ub791 \ubaa8\ub4dc\ub4e4 \ub610\ud55c \ub9ac\uc18c\uc2a4\ud329\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uace0, \uc774\ub807\uac8c \ucd94\uac00\ub41c \uc5d0\uc14b \ud30c\uc77c\ub4e4 \ub610\ud55c \uc720\uc800\ub4e4\uc774 \ub9ac\uc18c\uc2a4 \ud329\uc744 \ud1b5\ud574 \ub9c8\uc74c\ub300\ub85c \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub9ac\uc18c\uc2a4 \ud329"},{"location":"resources/client/#_2","text":"\ub9ac\uc2a4\uc18c \ud329\uc740 \ud504\ub85c\uc81d\ud2b8\uc758 resources \ud3f4\ub354\uc5d0 \ub4e4\uc5b4\uc788\uc2b5\ub2c8\ub2e4. assets \ud3f4\ub354\ub294 \ub9ac\uc18c\uc2a4 \ud329\uc758 \ubaa8\ub4e0 \uc5d0\uc14b \ub370\uc774\ud130\ub4e4\uc744 \ub2f4\uace0 \uc788\uc73c\uba70, assets \ud3f4\ub354 \uc606\uc758 pack.mcmeta \uac00 \ub9ac\uc18c\uc2a4 \ud329\uc758 \uba54\ud0c0 \ub370\uc774\ud130\ub4e4\uc744 \uc815\uc758\ud569\ub2c8\ub2e4. \uc6d0\ud558\uc2e0\ub2e4\uba74 assets \ud3f4\ub354\uc5d0 \ub3c4\uba54\uc778 \uc5ec\ub7ec\uac1c\ub97c \ub9cc\ub4dc\uc154\ub3c4 \ub429\ub2c8\ub2e4, \uc774\ub97c \ud1b5\ud574 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8, \ud3ec\uc9c0, \ub610\ub294 \ub2e4\ub978 \ubaa8\ub4dc\uac00 \ucd94\uac00\ud558\ub294 \uc5d0\uc14b \ub370\uc774\ud130\ub97c \uc218\uc815\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uacf3 \ub97c \ucc38\uace0\ud558\uc154\uc11c \ub9ac\uc18c\uc2a4 \ud329\uc744 \ub9cc\ub4dc\ub294 \ubc95\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uac00 \uc790\ub8cc: \ub9ac\uc18c\uc2a4 \uc704\uce58\ub780?","title":"\ub9ac\uc18c\uc2a4 \ud329 \ub9cc\ub4e4\uae30"},{"location":"resources/client/models/","text":"Models The model system is Minecraft\u2019s way of giving blocks and items their shapes. Through the model system, blocks and items are mapped to their models, which define how they look. One of the main goals of the model system is to allow not only textures but the entire shape of a block/item to be changed by resource packs. Indeed, any mod that adds items or blocks also contains a mini-resource pack for their blocks and items. Model Files Models and textures are linked through ResourceLocation s but are stored in the ModelManager using ModelResourceLocation s. Models are referenced in different locations through the block or item\u2019s registry name depending on whether they are referencing block states or item models . Blocks will have their ModelResourceLocation represent their registry name along with a stringified version of its current BlockState while items will use their registry name followed by inventory . Note JSON models only support cuboid elements; there is no way to express a triangular wedge or anything like it. To have more complicated models, another format must be used. Textures Textures, like models, are contained within resource packs and are referred to with ResourceLocation s. In Minecraft, the UV coordinates (0,0) are taken to mean the top-left corner. UVs are always from 0 to 16. If a texture is larger or smaller, the coordinates are scaled to fit. A texture should also be square, and the side length of a texture should be a power of two, as doing otherwise breaks mipmapping (e.g. 1x1, 2x2, 8x8, 16x16, and 128x128 are good. 5x5 and 30x30 are not recommended because they are not powers of 2. 5x10 and 4x8 are completely broken as they are not square.). Textures should only ever be not a square if it is animated .","title":"\ubaa8\ub378 \uc18c\uac1c"},{"location":"resources/client/models/#models","text":"The model system is Minecraft\u2019s way of giving blocks and items their shapes. Through the model system, blocks and items are mapped to their models, which define how they look. One of the main goals of the model system is to allow not only textures but the entire shape of a block/item to be changed by resource packs. Indeed, any mod that adds items or blocks also contains a mini-resource pack for their blocks and items.","title":"Models"},{"location":"resources/client/models/#model-files","text":"Models and textures are linked through ResourceLocation s but are stored in the ModelManager using ModelResourceLocation s. Models are referenced in different locations through the block or item\u2019s registry name depending on whether they are referencing block states or item models . Blocks will have their ModelResourceLocation represent their registry name along with a stringified version of its current BlockState while items will use their registry name followed by inventory . Note JSON models only support cuboid elements; there is no way to express a triangular wedge or anything like it. To have more complicated models, another format must be used.","title":"Model Files"},{"location":"resources/client/models/#textures","text":"Textures, like models, are contained within resource packs and are referred to with ResourceLocation s. In Minecraft, the UV coordinates (0,0) are taken to mean the top-left corner. UVs are always from 0 to 16. If a texture is larger or smaller, the coordinates are scaled to fit. A texture should also be square, and the side length of a texture should be a power of two, as doing otherwise breaks mipmapping (e.g. 1x1, 2x2, 8x8, 16x16, and 128x128 are good. 5x5 and 30x30 are not recommended because they are not powers of 2. 5x10 and 4x8 are completely broken as they are not square.). Textures should only ever be not a square if it is animated .","title":"Textures"},{"location":"resources/client/models/itemproperties/","text":"Item Properties Item properties are a way for the \u201cproperties\u201d of items to be exposed to the model system. An example is the bow, where the most important property is how far the bow has been pulled. This information is then used to choose a model for the bow, creating an animation for pulling it. An item property assigns a certain float value to every ItemStack it is registered for, and vanilla item model definitions can use these values to define \u201coverrides\u201d, where an item defaults to a certain model, but if an override matches, it overrides the model and uses another. They are useful mainly because they are continuous. For example, bows use item properties to define their pull animation. The item models are decided by the \u2018float\u2019 number predicates, it is not limited but generally between 0.0F and 1.0F . This allows resource packs to add as many models as they want for the bow pulling animation along that spectrum, instead of being stuck with four \u201cslots\u201d for their models in the animation. The same is true of the compass and clock. Adding Properties to Items ItemProperties#register is used to add a property to a certain item. The Item parameter is the item the property is being attached to (e.g. ExampleItems#APPLE ). The ResourceLocation parameter is the name given to the property (e.g. new ResourceLocation(\"pull\") ). The ItemPropertyFunction is a functional interface that takes the ItemStack , the ClientLevel it is in (may be null), the LivingEntity that holds it (may be null), and the int containing the id of the holding entity (may be 0 ), returning the float value for the property. For modded item properties, it is recommended that the modid of the mod is used as the namespace (e.g. examplemod:property and not just property , as that really means minecraft:property ). These should be done in FMLClientSetupEvent . There\u2019s also another method ItemProperties#registerGeneric that is used to add properties to all items, and it does not take Item as its parameter since all items will apply this property. Important Use FMLClientSetupEvent#enqueueWork to proceed with the tasks, since the data structures in ItemProperties are not thread-safe. Note ItemPropertyFunction is deprecated by Mojang in favor of using the subinterface ClampedItemPropertyFunction which clamps the result between 0 and 1 . Using Overrides The format of an override can be seen on the wiki , and a good example can be found in model/item/bow.json . For reference, here is a hypothetical example of an item with an examplemod:power property. If the values have no match, the default is the current model, but if there are multiple matches, the last match in the list will be selected. Important A predicate applies to all values greater than or equal to the given value. { \"parent\": \"item/generated\", \"textures\": { // Default \"layer0\": \"examplemod:items/example_partial\" }, \"overrides\": [ { // power >= .75 \"predicate\": { \"examplemod:power\": 0.75 }, \"model\": \"examplemod:item/example_powered\" } ] } And here is a hypothetical snippet from the supporting code. Unlike the older versions (lower than 1.16.x), this needs to be done on client side only because ItemProperties does not exist on server. private void setup(final FMLClientSetupEvent event) { event.enqueueWork(() -> { ItemProperties.register(ExampleItems.APPLE, new ResourceLocation(ExampleMod.MODID, \"pulling\"), (stack, level, living, id) -> { return living != null && living.isUsingItem() && living.getUseItem() == stack ? 1.0F : 0.0F; }); }); }","title":"\uc544\uc774\ud15c \uc18d\uc131"},{"location":"resources/client/models/itemproperties/#item-properties","text":"Item properties are a way for the \u201cproperties\u201d of items to be exposed to the model system. An example is the bow, where the most important property is how far the bow has been pulled. This information is then used to choose a model for the bow, creating an animation for pulling it. An item property assigns a certain float value to every ItemStack it is registered for, and vanilla item model definitions can use these values to define \u201coverrides\u201d, where an item defaults to a certain model, but if an override matches, it overrides the model and uses another. They are useful mainly because they are continuous. For example, bows use item properties to define their pull animation. The item models are decided by the \u2018float\u2019 number predicates, it is not limited but generally between 0.0F and 1.0F . This allows resource packs to add as many models as they want for the bow pulling animation along that spectrum, instead of being stuck with four \u201cslots\u201d for their models in the animation. The same is true of the compass and clock.","title":"Item Properties"},{"location":"resources/client/models/itemproperties/#adding-properties-to-items","text":"ItemProperties#register is used to add a property to a certain item. The Item parameter is the item the property is being attached to (e.g. ExampleItems#APPLE ). The ResourceLocation parameter is the name given to the property (e.g. new ResourceLocation(\"pull\") ). The ItemPropertyFunction is a functional interface that takes the ItemStack , the ClientLevel it is in (may be null), the LivingEntity that holds it (may be null), and the int containing the id of the holding entity (may be 0 ), returning the float value for the property. For modded item properties, it is recommended that the modid of the mod is used as the namespace (e.g. examplemod:property and not just property , as that really means minecraft:property ). These should be done in FMLClientSetupEvent . There\u2019s also another method ItemProperties#registerGeneric that is used to add properties to all items, and it does not take Item as its parameter since all items will apply this property. Important Use FMLClientSetupEvent#enqueueWork to proceed with the tasks, since the data structures in ItemProperties are not thread-safe. Note ItemPropertyFunction is deprecated by Mojang in favor of using the subinterface ClampedItemPropertyFunction which clamps the result between 0 and 1 .","title":"Adding Properties to Items"},{"location":"resources/client/models/itemproperties/#using-overrides","text":"The format of an override can be seen on the wiki , and a good example can be found in model/item/bow.json . For reference, here is a hypothetical example of an item with an examplemod:power property. If the values have no match, the default is the current model, but if there are multiple matches, the last match in the list will be selected. Important A predicate applies to all values greater than or equal to the given value. { \"parent\": \"item/generated\", \"textures\": { // Default \"layer0\": \"examplemod:items/example_partial\" }, \"overrides\": [ { // power >= .75 \"predicate\": { \"examplemod:power\": 0.75 }, \"model\": \"examplemod:item/example_powered\" } ] } And here is a hypothetical snippet from the supporting code. Unlike the older versions (lower than 1.16.x), this needs to be done on client side only because ItemProperties does not exist on server. private void setup(final FMLClientSetupEvent event) { event.enqueueWork(() -> { ItemProperties.register(ExampleItems.APPLE, new ResourceLocation(ExampleMod.MODID, \"pulling\"), (stack, level, living, id) -> { return living != null && living.isUsingItem() && living.getUseItem() == stack ? 1.0F : 0.0F; }); }); }","title":"Using Overrides"},{"location":"resources/client/models/tinting/","text":"Coloring Textures Many blocks and items in vanilla change their texture color depending on where they are or what properties they have, such as grass. Models support specifying \u201ctint indices\u201d on faces, which are integers that can then be handled by BlockColor s and ItemColor s. See the wiki for information on how tint indices are defined in vanilla models. BlockColor / ItemColor Both of these are single-method interfaces. BlockColor takes a BlockState , a (nullable) BlockAndTintGetter , and a (nullable) BlockPos . ItemColor takes an ItemStack . Both of them take an int parameter tintIndex , which is the tint index of the face being colored. Both of them return an int , a color multiplier. This int is treated as 4 unsigned bytes, alpha, red, green, and blue, in that order, from most significant byte to least. For each pixel in the tinted face, the value of each color channel is (int)((float) base * multiplier / 255.0) , where base is the original value for the channel, and multiplier is the associated byte from the color multiplier. Note that blocks do not use the alpha channel. For example, the grass texture, untinted, looks white and gray. The BlockColor and ItemColor for grass return color multipliers with low red and blue components, but high alpha and green components, (at least in warm biomes) so when the multiplication is performed, the green is brought out and the red/blue diminished. If an item inherits from the builtin/generated model, each layer (\u201clayer0\u201d, \u201clayer1\u201d, etc.) has a tint index corresponding to its layer index. Creating Color Handlers BlockColor s need to be registered to the BlockColors instance of the game. BlockColors can be acquired through ColorHandlerEvent$Block , and an BlockColor can be registered by BlockColors#register . Note that this does not cause the BlockItem for the given block to be colored. BlockItem s are items and need to be colored with an ItemColor . @SubscribeEvent public void registerBlockColors(ColorHandlerEvent.Block event){ event.getBlockColors().register(myBlockColor, coloredBlock1, coloredBlock2, ...); } ItemColor s need to be registered to the ItemColors instance of the game. ItemColors can be acquired through ColorHandlerEvent$Item , and an ItemColor can be registered by ItemColors#register . This method is overloaded to also take Block s, which simply registers the color handler for the item Block#asItem (i.e. the block\u2019s BlockItem ). @SubscribeEvent public void registerItemColors(ColorHandlerEvent.Item event){ event.getItemColors().register(myItemColor, coloredItem1, coloredItem2, ...); }","title":"\ud14d\uc2a4\uccd0 \uc5fc\uc0c9"},{"location":"resources/client/models/tinting/#coloring-textures","text":"Many blocks and items in vanilla change their texture color depending on where they are or what properties they have, such as grass. Models support specifying \u201ctint indices\u201d on faces, which are integers that can then be handled by BlockColor s and ItemColor s. See the wiki for information on how tint indices are defined in vanilla models.","title":"Coloring Textures"},{"location":"resources/client/models/tinting/#blockcoloritemcolor","text":"Both of these are single-method interfaces. BlockColor takes a BlockState , a (nullable) BlockAndTintGetter , and a (nullable) BlockPos . ItemColor takes an ItemStack . Both of them take an int parameter tintIndex , which is the tint index of the face being colored. Both of them return an int , a color multiplier. This int is treated as 4 unsigned bytes, alpha, red, green, and blue, in that order, from most significant byte to least. For each pixel in the tinted face, the value of each color channel is (int)((float) base * multiplier / 255.0) , where base is the original value for the channel, and multiplier is the associated byte from the color multiplier. Note that blocks do not use the alpha channel. For example, the grass texture, untinted, looks white and gray. The BlockColor and ItemColor for grass return color multipliers with low red and blue components, but high alpha and green components, (at least in warm biomes) so when the multiplication is performed, the green is brought out and the red/blue diminished. If an item inherits from the builtin/generated model, each layer (\u201clayer0\u201d, \u201clayer1\u201d, etc.) has a tint index corresponding to its layer index.","title":"BlockColor/ItemColor"},{"location":"resources/client/models/tinting/#creating-color-handlers","text":"BlockColor s need to be registered to the BlockColors instance of the game. BlockColors can be acquired through ColorHandlerEvent$Block , and an BlockColor can be registered by BlockColors#register . Note that this does not cause the BlockItem for the given block to be colored. BlockItem s are items and need to be colored with an ItemColor . @SubscribeEvent public void registerBlockColors(ColorHandlerEvent.Block event){ event.getBlockColors().register(myBlockColor, coloredBlock1, coloredBlock2, ...); } ItemColor s need to be registered to the ItemColors instance of the game. ItemColors can be acquired through ColorHandlerEvent$Item , and an ItemColor can be registered by ItemColors#register . This method is overloaded to also take Block s, which simply registers the color handler for the item Block#asItem (i.e. the block\u2019s BlockItem ). @SubscribeEvent public void registerItemColors(ColorHandlerEvent.Item event){ event.getItemColors().register(myItemColor, coloredItem1, coloredItem2, ...); }","title":"Creating Color Handlers"},{"location":"resources/server/","text":"\ub370\uc774\ud130\ud329 \ubaa8\uc7a5\uc740 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 1.13\uc5d0 \ub370\uc774\ud130\ud329 \uc744 \ucd94\uac00\ud558\uc600\uc2b5\ub2c8\ub2e4. \uc774\ub294 data \ud3f4\ub354\ub97c \ud1b5\ud558\uc5ec \ub17c\ub9ac \uc11c\ubc84\ub97c \ubcf4\ub2e4 \uc27d\uac8c \uc218\uc815\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc8fc\uc5c8\uc2b5\ub2c8\ub2e4. \uc218\uc815\uac00\ub2a5\ud55c \ud56d\ubaa9\ub4e4\uc5d0\ub294, \ub3c4\uc804\uacfc\uc81c, \ub178\ud68d\ubb3c \ubaa9\ub85d, \uad6c\uc870\ubb3c, \uc870\ud569\ubc95, \ud0dc\uadf8 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub2f9\uc2e0\uc774 \uac1c\ubc1c\ud558\ub294 \ubaa8\ub4dc\uc640 \ud3ec\uc9c0 \ub610\ud55c \uc790\uae30\ub9cc\uc758 \ub370\uc774\ud130\ud329\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \ub370\uc774\ud130\ud329\uc744 \uc774\uc6a9\ud558\uba74 \ub204\uad6c\ub098 \ub2e4\ub978 \ubaa8\ub4dc\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \uac83\ub4e4\uc744 \ud3ec\ud568\ud55c \ubaa8\ub4e0 \uc870\ud569\ubc95, \ub178\ud68d\ubb3c \ubaa9\ub85d, \uadf8\ub9ac\uace0 \ub2e4\ub978 \ub370\uc774\ud130\ub4e4\uc744 \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ud329 \ub9cc\ub4e4\uae30 \ub370\uc774\ud130\ud329\ub4e4\uc740 \ubaa8\ub4dc \ud504\ub85c\uc81d\ud2b8\uc758 \ub9ac\uc18c\uc2a4 \ud3f4\ub354\uc5d0 \uc788\ub294 data \uc5d0 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\ub97c \ub9cc\ub4e4\uba74\uc11c \ubaa8\ub4dc\uc5d0 \uc801\uc6a9\ub420 \ub370\uc774\ud130\ud329 \ub9d0\uace0, \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8, \ud3ec\uc9c0, \ub610\ub294 \ub2e4\ub978 \ubaa8\ub4dc\uc5d0 \uc801\uc6a9\ub420 \ub370\uc774\ud130 \ud329 \ub610\ud55c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uacf3 \uc5d0\uc11c \ub370\uc774\ud130\ud329\uc744 \ub9cc\ub4dc\ub294 \uacfc\uc815\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uac00\ub85c \uc54c\uc544\ub450\uc2e4 \ub9cc\ud55c \uac83: \ub9ac\uc18c\uc2a4 \uc704\uce58","title":"\uc18c\uac1c"},{"location":"resources/server/#_1","text":"\ubaa8\uc7a5\uc740 \ub9c8\uc778\ud06c\ub798\ud504\ud2b8 \ubc84\uc804 1.13\uc5d0 \ub370\uc774\ud130\ud329 \uc744 \ucd94\uac00\ud558\uc600\uc2b5\ub2c8\ub2e4. \uc774\ub294 data \ud3f4\ub354\ub97c \ud1b5\ud558\uc5ec \ub17c\ub9ac \uc11c\ubc84\ub97c \ubcf4\ub2e4 \uc27d\uac8c \uc218\uc815\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc8fc\uc5c8\uc2b5\ub2c8\ub2e4. \uc218\uc815\uac00\ub2a5\ud55c \ud56d\ubaa9\ub4e4\uc5d0\ub294, \ub3c4\uc804\uacfc\uc81c, \ub178\ud68d\ubb3c \ubaa9\ub85d, \uad6c\uc870\ubb3c, \uc870\ud569\ubc95, \ud0dc\uadf8 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub2f9\uc2e0\uc774 \uac1c\ubc1c\ud558\ub294 \ubaa8\ub4dc\uc640 \ud3ec\uc9c0 \ub610\ud55c \uc790\uae30\ub9cc\uc758 \ub370\uc774\ud130\ud329\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30\uc5d0 \ub370\uc774\ud130\ud329\uc744 \uc774\uc6a9\ud558\uba74 \ub204\uad6c\ub098 \ub2e4\ub978 \ubaa8\ub4dc\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \uac83\ub4e4\uc744 \ud3ec\ud568\ud55c \ubaa8\ub4e0 \uc870\ud569\ubc95, \ub178\ud68d\ubb3c \ubaa9\ub85d, \uadf8\ub9ac\uace0 \ub2e4\ub978 \ub370\uc774\ud130\ub4e4\uc744 \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub370\uc774\ud130\ud329"},{"location":"resources/server/#_2","text":"\ub370\uc774\ud130\ud329\ub4e4\uc740 \ubaa8\ub4dc \ud504\ub85c\uc81d\ud2b8\uc758 \ub9ac\uc18c\uc2a4 \ud3f4\ub354\uc5d0 \uc788\ub294 data \uc5d0 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\ub97c \ub9cc\ub4e4\uba74\uc11c \ubaa8\ub4dc\uc5d0 \uc801\uc6a9\ub420 \ub370\uc774\ud130\ud329 \ub9d0\uace0, \ubc14\ub2d0\ub77c \ub9c8\uc778\ud06c\ub798\ud504\ud2b8, \ud3ec\uc9c0, \ub610\ub294 \ub2e4\ub978 \ubaa8\ub4dc\uc5d0 \uc801\uc6a9\ub420 \ub370\uc774\ud130 \ud329 \ub610\ud55c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uacf3 \uc5d0\uc11c \ub370\uc774\ud130\ud329\uc744 \ub9cc\ub4dc\ub294 \uacfc\uc815\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uac00\ub85c \uc54c\uc544\ub450\uc2e4 \ub9cc\ud55c \uac83: \ub9ac\uc18c\uc2a4 \uc704\uce58","title":"\ub370\uc774\ud130\ud329 \ub9cc\ub4e4\uae30"},{"location":"resources/server/advancements/","text":"Advancements Advancements are tasks that can be achieved by the player which may advance the progress of the game. Advancements can trigger based on any action the player may be directly involved in. All advancement implementations within vanilla are data driven via JSON. This means that a mod is not necessary to create a new advancement, only a data pack . A full list on how to create and put these advancements within the mod\u2019s resources can be found on the Minecraft Wiki . Additionally, advancements can be loaded conditionally and defaulted depending on what information is present (mod loaded, item exists, etc.). Advancement Criteria To unlock an advancement, the specified criteria must be met. Criteria are tracked through triggers which execute when a certain action is performed: killing an entity, changing an inventory, breading animals, etc. Any time an advancement is loaded into the game, the criteria defined are read and added as listeners to the trigger. Afterwards a trigger function is called (usually named #trigger ) which checks all listeners as to whether the current state meets the conditions of the advancement criteria. The criteria listeners for the advancement are only removed once the advancement has been obtained by completing all requirements. Requirements are defined as an array of string arrays representing the name of the criteria specified on the advancement. An advancement is completed once one string array of criteria has been met: // In some advancement JSON // List of defined criteria to meet \"criteria\": { \"example_criterion1\": { /*...*/ }, \"example_criterion2\": { /*...*/ }, \"example_criterion3\": { /*...*/ }, \"example_criterion4\": { /*...*/ } }, // This advancement is only unlocked once // - Criteria 1 AND 2 have been met // OR // - Criteria 3 and 4 have been met \"requirements\": [ [ \"example_criterion1\", \"example_criterion2\" ], [ \"example_criterion3\", \"example_criterion4\" ] ] A list of criteria triggers defined by vanilla can be found in CriteriaTriggers . Additionally, the JSON formats are defined on the Minecraft Wiki . Custom Criteria Triggers Custom criteria triggers can be created by implementing SimpleCriterionTrigger for the created AbstractCriterionTriggerInstance subclass. AbstractCriterionTriggerInstance Subclass The AbstractCriterionTriggerInstance represents a single criteria defined in the criteria object. Trigger instances are responsible for holding the defined conditions, returning whether the inputs match the condition, and writing the instance to JSON for data generation. Conditions are usually passed in through the constructor. The AbstractCriterionTriggerInstance super constructor requires the instance to define the registry name of the trigger and the conditions the player must meet as an EntityPredicate$Composite . The registry name of the trigger should be supplied to the super directly while the conditions of the player should be a constructor parameter. // Where ID is the registry name of the trigger public ExampleTriggerInstance(EntityPredicate.Composite player, ItemPredicate item) { super(ID, player); // Store the item condition that must be met } Note Typically, trigger instances have a static constructor which allow these instances to be easily created for data generation. These static factory methods can also be statically imported instead of the class itself. public static ExampleTriggerInstance instance(EntityPredicate.Builder playerBuilder, ItemPredicate.Builder itemBuilder) { return new ExampleTriggerInstance(EntityPredicate.Composite.wrap(playerBuilder.build()), itemBuilder.build()); } Additionally, the #serializeToJson method should be overridden. The method should add the conditions of the instance to the other JSON data. @Override public JsonObject serializeToJson(SerializationContext context) { JsonObject obj = super.serializeToJson(context); // Write conditions to json return obj; } Finally, a method should be added which takes in the current data state and returns whether the user has met the necessary conditions. The conditions of the player are already checked through SimpleCriterionTrigger#trigger(ServerPlayer, Predicate) . Most trigger instances call this method #matches . // This method is unique for each instance and is as such not overridden public boolean matches(ItemStack stack) { // Since ItemPredicate matches a stack, a stack is the input return this.item.matches(stack); } SimpleCriterionTrigger The SimpleCriterionTrigger<T> subclass, where T is the type of the trigger instance, is responsible for specifying the registry name of the trigger, creating a trigger instance, and a method to check trigger instances and run attached listeners on success. The registry name of the trigger is supplied to #getId . This should match the registry name supplied to the trigger instance. A trigger instance is created via #createInstance . This method reads a criteria from JSON. @Override public ExampleTriggerInstance createInstance(JsonObject json, EntityPredicate.Composite player, DeserializationContext context) { // Read conditions from JSON: item return new ExampleTriggerInstance(player, item); } Finally, a method is defined to check all trigger instances and run the listeners if their condition is met. This method takes in the ServerPlayer and whatever other data defined by the matching method in the AbstractCriterionTriggerInstance subclass. This method should internally call SimpleCriterionTrigger#trigger to properly handle checking all listeners. Most trigger instances call this method #trigger . // This method is unique for each trigger and is as such not overridden public void trigger(ServerPlayer player, ItemStack stack) { this.trigger(player, // The condition checker method within the AbstractCriterionTriggerInstance subclass triggerInstance -> triggerInstance.matches(stack) ); } Afterwards, an instance should be registered using CriteriaTriggers#register during FMLCommonSetupEvent . Important CriteriaTriggers#register must be enqueued to the synchronous work queue via FMLCommonSetupEvent#enqueueWork as the method is not thread-safe. Calling the Trigger Whenever the action being checked is performed, the #trigger method defined by the SimpleCriterionTrigger subclass should be called. // In some piece of code where the action is being performed // Where EXAMPLE_CRITERIA_TRIGGER is the custom criteria trigger public void performExampleAction(ServerPlayer player, ItemStack stack) { // Run code to perform action EXAMPLE_CRITERIA_TRIGGER.trigger(player, stack); } Advancement Rewards When an advancement is completed, rewards may be given out. These can be a combination of experience points, loot tables, recipes for the recipe book, or a function executed as a creative player. // In some advancement JSON \"rewards\": { \"experience\": 10, \"loot\": [ \"minecraft:example_loot_table\", \"minecraft:example_loot_table2\" // ... ], \"recipes\": [ \"minecraft:example_recipe\", \"minecraft:example_recipe2\" // ... ], \"function\": \"minecraft:example_function\" }","title":"\ub3c4\uc804\uacfc\uc81c"},{"location":"resources/server/advancements/#advancements","text":"Advancements are tasks that can be achieved by the player which may advance the progress of the game. Advancements can trigger based on any action the player may be directly involved in. All advancement implementations within vanilla are data driven via JSON. This means that a mod is not necessary to create a new advancement, only a data pack . A full list on how to create and put these advancements within the mod\u2019s resources can be found on the Minecraft Wiki . Additionally, advancements can be loaded conditionally and defaulted depending on what information is present (mod loaded, item exists, etc.).","title":"Advancements"},{"location":"resources/server/advancements/#advancement-criteria","text":"To unlock an advancement, the specified criteria must be met. Criteria are tracked through triggers which execute when a certain action is performed: killing an entity, changing an inventory, breading animals, etc. Any time an advancement is loaded into the game, the criteria defined are read and added as listeners to the trigger. Afterwards a trigger function is called (usually named #trigger ) which checks all listeners as to whether the current state meets the conditions of the advancement criteria. The criteria listeners for the advancement are only removed once the advancement has been obtained by completing all requirements. Requirements are defined as an array of string arrays representing the name of the criteria specified on the advancement. An advancement is completed once one string array of criteria has been met: // In some advancement JSON // List of defined criteria to meet \"criteria\": { \"example_criterion1\": { /*...*/ }, \"example_criterion2\": { /*...*/ }, \"example_criterion3\": { /*...*/ }, \"example_criterion4\": { /*...*/ } }, // This advancement is only unlocked once // - Criteria 1 AND 2 have been met // OR // - Criteria 3 and 4 have been met \"requirements\": [ [ \"example_criterion1\", \"example_criterion2\" ], [ \"example_criterion3\", \"example_criterion4\" ] ] A list of criteria triggers defined by vanilla can be found in CriteriaTriggers . Additionally, the JSON formats are defined on the Minecraft Wiki .","title":"Advancement Criteria"},{"location":"resources/server/advancements/#custom-criteria-triggers","text":"Custom criteria triggers can be created by implementing SimpleCriterionTrigger for the created AbstractCriterionTriggerInstance subclass.","title":"Custom Criteria Triggers"},{"location":"resources/server/advancements/#abstractcriteriontriggerinstance-subclass","text":"The AbstractCriterionTriggerInstance represents a single criteria defined in the criteria object. Trigger instances are responsible for holding the defined conditions, returning whether the inputs match the condition, and writing the instance to JSON for data generation. Conditions are usually passed in through the constructor. The AbstractCriterionTriggerInstance super constructor requires the instance to define the registry name of the trigger and the conditions the player must meet as an EntityPredicate$Composite . The registry name of the trigger should be supplied to the super directly while the conditions of the player should be a constructor parameter. // Where ID is the registry name of the trigger public ExampleTriggerInstance(EntityPredicate.Composite player, ItemPredicate item) { super(ID, player); // Store the item condition that must be met } Note Typically, trigger instances have a static constructor which allow these instances to be easily created for data generation. These static factory methods can also be statically imported instead of the class itself. public static ExampleTriggerInstance instance(EntityPredicate.Builder playerBuilder, ItemPredicate.Builder itemBuilder) { return new ExampleTriggerInstance(EntityPredicate.Composite.wrap(playerBuilder.build()), itemBuilder.build()); } Additionally, the #serializeToJson method should be overridden. The method should add the conditions of the instance to the other JSON data. @Override public JsonObject serializeToJson(SerializationContext context) { JsonObject obj = super.serializeToJson(context); // Write conditions to json return obj; } Finally, a method should be added which takes in the current data state and returns whether the user has met the necessary conditions. The conditions of the player are already checked through SimpleCriterionTrigger#trigger(ServerPlayer, Predicate) . Most trigger instances call this method #matches . // This method is unique for each instance and is as such not overridden public boolean matches(ItemStack stack) { // Since ItemPredicate matches a stack, a stack is the input return this.item.matches(stack); }","title":"AbstractCriterionTriggerInstance Subclass"},{"location":"resources/server/advancements/#simplecriteriontrigger","text":"The SimpleCriterionTrigger<T> subclass, where T is the type of the trigger instance, is responsible for specifying the registry name of the trigger, creating a trigger instance, and a method to check trigger instances and run attached listeners on success. The registry name of the trigger is supplied to #getId . This should match the registry name supplied to the trigger instance. A trigger instance is created via #createInstance . This method reads a criteria from JSON. @Override public ExampleTriggerInstance createInstance(JsonObject json, EntityPredicate.Composite player, DeserializationContext context) { // Read conditions from JSON: item return new ExampleTriggerInstance(player, item); } Finally, a method is defined to check all trigger instances and run the listeners if their condition is met. This method takes in the ServerPlayer and whatever other data defined by the matching method in the AbstractCriterionTriggerInstance subclass. This method should internally call SimpleCriterionTrigger#trigger to properly handle checking all listeners. Most trigger instances call this method #trigger . // This method is unique for each trigger and is as such not overridden public void trigger(ServerPlayer player, ItemStack stack) { this.trigger(player, // The condition checker method within the AbstractCriterionTriggerInstance subclass triggerInstance -> triggerInstance.matches(stack) ); } Afterwards, an instance should be registered using CriteriaTriggers#register during FMLCommonSetupEvent . Important CriteriaTriggers#register must be enqueued to the synchronous work queue via FMLCommonSetupEvent#enqueueWork as the method is not thread-safe.","title":"SimpleCriterionTrigger"},{"location":"resources/server/advancements/#calling-the-trigger","text":"Whenever the action being checked is performed, the #trigger method defined by the SimpleCriterionTrigger subclass should be called. // In some piece of code where the action is being performed // Where EXAMPLE_CRITERIA_TRIGGER is the custom criteria trigger public void performExampleAction(ServerPlayer player, ItemStack stack) { // Run code to perform action EXAMPLE_CRITERIA_TRIGGER.trigger(player, stack); }","title":"Calling the Trigger"},{"location":"resources/server/advancements/#advancement-rewards","text":"When an advancement is completed, rewards may be given out. These can be a combination of experience points, loot tables, recipes for the recipe book, or a function executed as a creative player. // In some advancement JSON \"rewards\": { \"experience\": 10, \"loot\": [ \"minecraft:example_loot_table\", \"minecraft:example_loot_table2\" // ... ], \"recipes\": [ \"minecraft:example_recipe\", \"minecraft:example_recipe2\" // ... ], \"function\": \"minecraft:example_function\" }","title":"Advancement Rewards"},{"location":"resources/server/conditional/","text":"Conditionally-Loaded Data There are times when modders may want to include data-driven objects using information from another mod without having to explicitly make that mod a dependency. Other cases may be to swap out certain objects with other modded entries when they are present. This can be done through the conditional subsystem. Implementations Currently, conditional loading is implemented for recipes and advancements. For any conditional recipe or advancement, a list of conditions to datum pair is loaded. If the conditions specified for a datum in the list is true, then that datum is returned. Otherwise, the datum is discarded. { // The type needs to be specified for recipes as they can have custom serializers // Advancements do not need this type \"type\": \"forge:conditional\", \"recipes\": [ // Or 'advancements' for Advancements { // The conditions to check \"conditions\": [ // Conditions in the list are ANDed together { // Condition 1 }, { // Condition 2 } ], \"recipe\": { // Or 'advancement' for Advancements // The recipe to use if all conditions succeed } }, { // Next condition to check if the previous fails }, ] } Conditionally-loaded data additionally have wrappers for data generation through ConditionalRecipe$Builder and ConditionalAdvancement$Builder . Conditions Conditions are specified by setting type to the name of the condition as specified by IConditionSerializer#getID . True and False Boolean conditions consist of no data and return the expected value of the condition. They are represented by forge:true and forge:false . // For some condition { // Will always return true (or false for 'forge:false') \"type\": \"forge:true\" } Not, And, and Or Boolean operator conditions consist of the condition(s) being operated upon and apply the following logic. They are represented by forge:not , forge:and , and forge:or . // For some condition { // Inverts the result of the stored condition \"type\": \"forge:not\", \"value\": { // A condition } } // For some condition { // ANDs the stored conditions together (or ORs for 'forge:or') \"type\": \"forge:and\", \"values\": [ { // First condition }, { // Second condition to be ANDed (or ORed for 'forge:or') } ] } Mod Loaded ModLoadedCondition returns true whenever the specified mod with the given id is loaded in the current application. This is represented by forge:mod_loaded . // For some condition { \"type\": \"forge:mod_loaded\", // Returns true if 'examplemod' is loaded \"modid\": \"examplemod\" } Item Exists ItemExistsCondition returns true whenever the given item has been registered in the current application. This is represented by forge:item_exists . // For some condition { \"type\": \"forge:item_exists\", // Returns true if 'examplemod:example_item' has been registered \"item\": \"examplemod:example_item\" } Tag Empty TagEmptyCondition returns true whenever the given item tag has no items within it. This is represented by forge:tag_empty . // For some condition { \"type\": \"forge:tag_empty\", // Returns true if 'examplemod:example_tag' is an item tag with no entries \"tag\": \"examplemod:example_tag\" } Creating Custom Conditions Custom conditions can be created by implementing ICondition and its associated IConditionSerializer . ICondition Any condition only need to implement two methods: Method Description getID The registry name of the condition. Must be equivalent to IConditionSerializer#getID . Used only for data generation . test Returns true if the condition has been satisfied. Note Every #test has access to some IContext representing the state of the game. Currently, only tags can be obtained from a registry. IConditionSerializer Serializers need to implement three methods: Method Description getID The registry name of the condition. Must be equivalent to ICondition#getID . read Reads the condition data from JSON. write Writes the given condition data to JSON. Note Condition serializers are not responsible for writing or reading the type of the serializer, similar to other serializer implementations in Minecraft. Afterwards, a static instance should be declared to hold the initialized serializer and then registered using CraftingHelper#register either during the RegistryEvent$Register for RecipeSerializer s or during FMLCommonSetupEvent . // In some serializer class public static final ExampleConditionSerializer INSTANCE = new ExampleConditionSerializer(); // In some handler class public void registerSerializers(RegistryEvent.Register<RecipeSerializer<?>> event) { CraftingHelper.register(INSTANCE); } Important If using FMLCommonSetupEvent to register a condition serializer, it must be enqueued to the synchronous work queue via FMLCommonSetupEvent#enqueueWork as CraftingHelper#register is not thread-safe.","title":"\uc870\uac74\uc801\uc73c\ub85c \ubd88\ub7ec\uc640\uc9c0\ub294 \ub370\uc774\ud130"},{"location":"resources/server/conditional/#conditionally-loaded-data","text":"There are times when modders may want to include data-driven objects using information from another mod without having to explicitly make that mod a dependency. Other cases may be to swap out certain objects with other modded entries when they are present. This can be done through the conditional subsystem.","title":"Conditionally-Loaded Data"},{"location":"resources/server/conditional/#implementations","text":"Currently, conditional loading is implemented for recipes and advancements. For any conditional recipe or advancement, a list of conditions to datum pair is loaded. If the conditions specified for a datum in the list is true, then that datum is returned. Otherwise, the datum is discarded. { // The type needs to be specified for recipes as they can have custom serializers // Advancements do not need this type \"type\": \"forge:conditional\", \"recipes\": [ // Or 'advancements' for Advancements { // The conditions to check \"conditions\": [ // Conditions in the list are ANDed together { // Condition 1 }, { // Condition 2 } ], \"recipe\": { // Or 'advancement' for Advancements // The recipe to use if all conditions succeed } }, { // Next condition to check if the previous fails }, ] } Conditionally-loaded data additionally have wrappers for data generation through ConditionalRecipe$Builder and ConditionalAdvancement$Builder .","title":"Implementations"},{"location":"resources/server/conditional/#conditions","text":"Conditions are specified by setting type to the name of the condition as specified by IConditionSerializer#getID .","title":"Conditions"},{"location":"resources/server/conditional/#true-and-false","text":"Boolean conditions consist of no data and return the expected value of the condition. They are represented by forge:true and forge:false . // For some condition { // Will always return true (or false for 'forge:false') \"type\": \"forge:true\" }","title":"True and False"},{"location":"resources/server/conditional/#not-and-and-or","text":"Boolean operator conditions consist of the condition(s) being operated upon and apply the following logic. They are represented by forge:not , forge:and , and forge:or . // For some condition { // Inverts the result of the stored condition \"type\": \"forge:not\", \"value\": { // A condition } } // For some condition { // ANDs the stored conditions together (or ORs for 'forge:or') \"type\": \"forge:and\", \"values\": [ { // First condition }, { // Second condition to be ANDed (or ORed for 'forge:or') } ] }","title":"Not, And, and Or"},{"location":"resources/server/conditional/#mod-loaded","text":"ModLoadedCondition returns true whenever the specified mod with the given id is loaded in the current application. This is represented by forge:mod_loaded . // For some condition { \"type\": \"forge:mod_loaded\", // Returns true if 'examplemod' is loaded \"modid\": \"examplemod\" }","title":"Mod Loaded"},{"location":"resources/server/conditional/#item-exists","text":"ItemExistsCondition returns true whenever the given item has been registered in the current application. This is represented by forge:item_exists . // For some condition { \"type\": \"forge:item_exists\", // Returns true if 'examplemod:example_item' has been registered \"item\": \"examplemod:example_item\" }","title":"Item Exists"},{"location":"resources/server/conditional/#tag-empty","text":"TagEmptyCondition returns true whenever the given item tag has no items within it. This is represented by forge:tag_empty . // For some condition { \"type\": \"forge:tag_empty\", // Returns true if 'examplemod:example_tag' is an item tag with no entries \"tag\": \"examplemod:example_tag\" }","title":"Tag Empty"},{"location":"resources/server/conditional/#creating-custom-conditions","text":"Custom conditions can be created by implementing ICondition and its associated IConditionSerializer .","title":"Creating Custom Conditions"},{"location":"resources/server/conditional/#icondition","text":"Any condition only need to implement two methods: Method Description getID The registry name of the condition. Must be equivalent to IConditionSerializer#getID . Used only for data generation . test Returns true if the condition has been satisfied. Note Every #test has access to some IContext representing the state of the game. Currently, only tags can be obtained from a registry.","title":"ICondition"},{"location":"resources/server/conditional/#iconditionserializer","text":"Serializers need to implement three methods: Method Description getID The registry name of the condition. Must be equivalent to ICondition#getID . read Reads the condition data from JSON. write Writes the given condition data to JSON. Note Condition serializers are not responsible for writing or reading the type of the serializer, similar to other serializer implementations in Minecraft. Afterwards, a static instance should be declared to hold the initialized serializer and then registered using CraftingHelper#register either during the RegistryEvent$Register for RecipeSerializer s or during FMLCommonSetupEvent . // In some serializer class public static final ExampleConditionSerializer INSTANCE = new ExampleConditionSerializer(); // In some handler class public void registerSerializers(RegistryEvent.Register<RecipeSerializer<?>> event) { CraftingHelper.register(INSTANCE); } Important If using FMLCommonSetupEvent to register a condition serializer, it must be enqueued to the synchronous work queue via FMLCommonSetupEvent#enqueueWork as CraftingHelper#register is not thread-safe.","title":"IConditionSerializer"},{"location":"resources/server/glm/","text":"Global Loot Modifiers Global Loot Modifiers are a data-driven method of handling modification of harvested drops without the need to overwrite dozens to hundreds of vanilla loot tables or to handle effects that would require interactions with another mod\u2019s loot tables without knowing what mods may be loaded. Global Loot Modifiers are also stacking, rather than last-load-wins, similar to tags. Registering a Global Loot Modifier You will need 4 things: Create a global_loot_modifiers.json . * This will tell Forge about your modifiers and works similar to tags . A serialized json representing your modifier. * This will contain all of the data about your modification and allows data packs to tweak your effect. A class that extends IGlobalLootModifier . * The operational code that makes your modifier work. Most modders can extend LootModifier as it supplies base functionality. Finally, a class that extends GlobalLootModifierSerializer for your operational class. * This is registered as any other IForgeRegistryEntry . The global_loot_modifiers.json The global_loot_modifiers.json represents all loot modifiers to be loaded into the game. This file MUST be placed within data/forge/loot_modifiers/global_loot_modifiers.json . Important global_loot_modifiers.json will only be read in the forge namespace. The file will be neglected if it is under the mod\u2019s namespace. entries is an ordered list of the modifiers that will be loaded. The ResourceLocation s specified points to their associated entry within data/<namespace>/loot_modifiers/<path>.json . This is primarily relevant to data pack makers for resolving conflicts between modifiers from separate mods. replace , when true , changes the behavior from appending loot modifiers to the global list to replacing the global list entries entirely. Modders will want to use false for compatibility with other mod implementations. Datapack makers may want to specify their overrides with true . { \"replace\": false, // Must be present \"entries\": [ // Represents a loot modifier in 'data/examplemod/loot_modifiers/example_glm.json' \"examplemod:example_glm\", \"examplemod:example_glm2\" // ... ] } The Serialized JSON This file contains all of the potential variables related to your modifier, including the conditions that must be met prior to modifying any loot. Avoid hard-coded values wherever possible so that data pack makers can adjust balance if they wish to. type represents the registry name of the GlobalLootModifierSerializer used to read the associated JSON file. This must always be present. conditions should represent the loot table conditions for this modifier to activate. Conditions should avoid being hardcoded to allow datapack creators as much flexibility to adjust the criteria. This must also be always present. Important Although conditions should represent what is needed for the modifier to activate, this is only the case if using the bundled Forge classes. If using LootModifier as a subclass, all conditions will be ANDed together and checked to see if the modifier should be applied. Any additional properties read by the serializer and defined by the modifier can also be specified. // Within data/examplemod/loot_modifiers/example_glm.json { \"type\": \"examplemod:example_loot_modifier\", \"conditions\": [ // Normal loot table conditions // ... ], \"prop1\": \"val1\", \"prop2\": 10, \"prop3\": \"minecraft:dirt\" } IGlobalLootModifier To supply the functionality a global loot modifier specifies, a IGlobalLootModifier implementation must be specified. These are instances generated each time a serializer decodes the information from JSON and supplies it into this object. There is only one method that needs to be defined in order to create a new modifier: #apply . This takes in the current loot that will be generated along with the context information such as the currently level or additional defined parameters. It returns the list of drops to generate. Note The returned list of drops from any one modifier is fed into other modifiers in the order they are registered. As such, modified loot can be modified by another loot modifier. The LootModifier Subclass LootModifier is an abstract implementation of IGlobalLootModifier to provide the base functionality which most modders can easily extend and implement. This expands upon the existing interface by defining the #apply method to check the conditions to determine whether or not to modify the generated loot. There are two things of note within the subclass implementation: the constructor which must take in an array of LootItemCondition s and the #doApply method. The array of LootItemCondition s define the list of conditions that must be true before the loot can be modified. The supplied conditions are ANDed together, meaning that all conditions must be true. The #doApply method works the same as the #apply method except that it only executes once all conditions return true. public class ExampleModifier extends LootModifier { public ExampleModifier(LootItemCondition[] conditionsIn, String prop1, int prop2, Item prop3) { super(conditionsIn); // Store the rest of the parameters } @Nonnull @Override protected List<ItemStack> doApply(List<ItemStack> generatedLoot, LootContext context) { // Modify the loot and return the new drops } } GlobalLootModifierSerializer The connector between the JSON and the IGlobalLootModifier instance is the GlobalLootModifierSerializer<T> implementation, where T represents the type of the IGlobalLootModifier to use. Two methods must be defined within the serializer implementation: #read and #write . #read takes in the registry name of the JSON, the serialized JsonObject , and the array of conditions that, by most implementations, must be true to allow the loot modifier to execute. The only data that should be deserialized from the JsonObject are the custom properties specified for use by the implemented loot modifier. If no custom properties are needed, then no data should be deserialized from the JsonObject as the conditions are supplied as a parameter. #write is responsible for turning the defined loot modifier and writing it to a JsonObject . This requires that all conditions along with any custom properties must be written. For ease of convenience, #makeConditions can be called to create a new JsonObject with the conditions already serialized within. Any additional properties to be serialized can then be added to this JsonObject . This is utilized for data generation of the associated loot modifier. public ExampleModifierSerializer extends GlobalLootModifierSerializer<ExampleModifier> { @Override public ExampleModifier read(ResourceLocation location, JsonObject object, LootItemCondition[] conditions) { String prop1 = GsonHelper.getAsString(object, \"prop1\"); // Deserializer other properties return new ExampleModifier(conditions, prop1, prop2, prop3); } @Override public JsonObject write(ExampleModifier instance) { // Create json object with conditions in modifier JsonObject res = this.makeConditions(instance.conditionsIn); res.addProperty(\"prop1\", instance.prop1); // Add other properties in modifier return res; } } Examples can be found on the Forge Git repository, including silk touch and smelting effects.","title":"\uc804\uccb4 \uc804\ub9ac\ud488 \uc218\uc815\ud558\uae30"},{"location":"resources/server/glm/#global-loot-modifiers","text":"Global Loot Modifiers are a data-driven method of handling modification of harvested drops without the need to overwrite dozens to hundreds of vanilla loot tables or to handle effects that would require interactions with another mod\u2019s loot tables without knowing what mods may be loaded. Global Loot Modifiers are also stacking, rather than last-load-wins, similar to tags.","title":"Global Loot Modifiers"},{"location":"resources/server/glm/#registering-a-global-loot-modifier","text":"You will need 4 things: Create a global_loot_modifiers.json . * This will tell Forge about your modifiers and works similar to tags . A serialized json representing your modifier. * This will contain all of the data about your modification and allows data packs to tweak your effect. A class that extends IGlobalLootModifier . * The operational code that makes your modifier work. Most modders can extend LootModifier as it supplies base functionality. Finally, a class that extends GlobalLootModifierSerializer for your operational class. * This is registered as any other IForgeRegistryEntry .","title":"Registering a Global Loot Modifier"},{"location":"resources/server/glm/#the-global_loot_modifiersjson","text":"The global_loot_modifiers.json represents all loot modifiers to be loaded into the game. This file MUST be placed within data/forge/loot_modifiers/global_loot_modifiers.json . Important global_loot_modifiers.json will only be read in the forge namespace. The file will be neglected if it is under the mod\u2019s namespace. entries is an ordered list of the modifiers that will be loaded. The ResourceLocation s specified points to their associated entry within data/<namespace>/loot_modifiers/<path>.json . This is primarily relevant to data pack makers for resolving conflicts between modifiers from separate mods. replace , when true , changes the behavior from appending loot modifiers to the global list to replacing the global list entries entirely. Modders will want to use false for compatibility with other mod implementations. Datapack makers may want to specify their overrides with true . { \"replace\": false, // Must be present \"entries\": [ // Represents a loot modifier in 'data/examplemod/loot_modifiers/example_glm.json' \"examplemod:example_glm\", \"examplemod:example_glm2\" // ... ] }","title":"The global_loot_modifiers.json"},{"location":"resources/server/glm/#the-serialized-json","text":"This file contains all of the potential variables related to your modifier, including the conditions that must be met prior to modifying any loot. Avoid hard-coded values wherever possible so that data pack makers can adjust balance if they wish to. type represents the registry name of the GlobalLootModifierSerializer used to read the associated JSON file. This must always be present. conditions should represent the loot table conditions for this modifier to activate. Conditions should avoid being hardcoded to allow datapack creators as much flexibility to adjust the criteria. This must also be always present. Important Although conditions should represent what is needed for the modifier to activate, this is only the case if using the bundled Forge classes. If using LootModifier as a subclass, all conditions will be ANDed together and checked to see if the modifier should be applied. Any additional properties read by the serializer and defined by the modifier can also be specified. // Within data/examplemod/loot_modifiers/example_glm.json { \"type\": \"examplemod:example_loot_modifier\", \"conditions\": [ // Normal loot table conditions // ... ], \"prop1\": \"val1\", \"prop2\": 10, \"prop3\": \"minecraft:dirt\" }","title":"The Serialized JSON"},{"location":"resources/server/glm/#igloballootmodifier","text":"To supply the functionality a global loot modifier specifies, a IGlobalLootModifier implementation must be specified. These are instances generated each time a serializer decodes the information from JSON and supplies it into this object. There is only one method that needs to be defined in order to create a new modifier: #apply . This takes in the current loot that will be generated along with the context information such as the currently level or additional defined parameters. It returns the list of drops to generate. Note The returned list of drops from any one modifier is fed into other modifiers in the order they are registered. As such, modified loot can be modified by another loot modifier.","title":"IGlobalLootModifier"},{"location":"resources/server/glm/#the-lootmodifier-subclass","text":"LootModifier is an abstract implementation of IGlobalLootModifier to provide the base functionality which most modders can easily extend and implement. This expands upon the existing interface by defining the #apply method to check the conditions to determine whether or not to modify the generated loot. There are two things of note within the subclass implementation: the constructor which must take in an array of LootItemCondition s and the #doApply method. The array of LootItemCondition s define the list of conditions that must be true before the loot can be modified. The supplied conditions are ANDed together, meaning that all conditions must be true. The #doApply method works the same as the #apply method except that it only executes once all conditions return true. public class ExampleModifier extends LootModifier { public ExampleModifier(LootItemCondition[] conditionsIn, String prop1, int prop2, Item prop3) { super(conditionsIn); // Store the rest of the parameters } @Nonnull @Override protected List<ItemStack> doApply(List<ItemStack> generatedLoot, LootContext context) { // Modify the loot and return the new drops } }","title":"The LootModifier Subclass"},{"location":"resources/server/glm/#globallootmodifierserializer","text":"The connector between the JSON and the IGlobalLootModifier instance is the GlobalLootModifierSerializer<T> implementation, where T represents the type of the IGlobalLootModifier to use. Two methods must be defined within the serializer implementation: #read and #write . #read takes in the registry name of the JSON, the serialized JsonObject , and the array of conditions that, by most implementations, must be true to allow the loot modifier to execute. The only data that should be deserialized from the JsonObject are the custom properties specified for use by the implemented loot modifier. If no custom properties are needed, then no data should be deserialized from the JsonObject as the conditions are supplied as a parameter. #write is responsible for turning the defined loot modifier and writing it to a JsonObject . This requires that all conditions along with any custom properties must be written. For ease of convenience, #makeConditions can be called to create a new JsonObject with the conditions already serialized within. Any additional properties to be serialized can then be added to this JsonObject . This is utilized for data generation of the associated loot modifier. public ExampleModifierSerializer extends GlobalLootModifierSerializer<ExampleModifier> { @Override public ExampleModifier read(ResourceLocation location, JsonObject object, LootItemCondition[] conditions) { String prop1 = GsonHelper.getAsString(object, \"prop1\"); // Deserializer other properties return new ExampleModifier(conditions, prop1, prop2, prop3); } @Override public JsonObject write(ExampleModifier instance) { // Create json object with conditions in modifier JsonObject res = this.makeConditions(instance.conditionsIn); res.addProperty(\"prop1\", instance.prop1); // Add other properties in modifier return res; } } Examples can be found on the Forge Git repository, including silk touch and smelting effects.","title":"GlobalLootModifierSerializer"},{"location":"resources/server/loottables/","text":"Loot Tables Loot tables are logic files which dictate what should happen when various actions or scenarios occur. Although the vanilla system deals purely with item generation, the system can be expanded to perform any number of defined actions. Data-Driven Tables Most loot tables within vanilla are data driven via JSON. This means that a mod is not necessary to create a new loot table, only a Data pack . A full list on how to create and put these loot tables within the mod\u2019s resources folder can be found on the Minecraft Wiki . Using a Loot Table A loot table is referenced by its ResourceLocation which points to data/<namespace>/loot_tables/<path>.json . The LootTable associated with the reference can be obtained using LootTables#get , where LootTables can be obtained via MinecraftServer#getLootTables . A loot table is always generated within a given context. The LootContext defines the level the table is generated in, a specific randomizer and seed if desired, luck for better generation, the LootContextParam s which define scenario context, and any dynamic information that should occur on activation. A loot context can be created using the constructor for LootContext$Builder and built using LootContext$Builder#create . The created LootContext adheres to some LootContextParamSet . The param set defines which LootContextParam s are required or optional in context for generation. A loot table generated within a given param set must only use contexts that are defined. A loot table can be generated using one of the available methods: Method Description getRandomItemsRaw Consumes the items generated by the loot table. getRandomItems Returns the items generated by the loot table. fill Fills a container with the generated loot table. Note Loot tables were built for generating items, so the methods expect some handling for the ItemStack s. Additional Features Forge provides some additional behavior to loot tables for greater control of the system. LootTableLoadEvent LootTableLoadEvent is an event fired on the Forge event bus which is fired whenever a loot table is loaded. If the event is canceled, then an empty loot table will be loaded instead. Important Do not modify a loot table\u2019s drops through this event. Those modifications should be done using global loot modifiers . Loot Pool Names Loot pools can be named using the name key. Any non-named loot pool will be the hash code of the pool prefixed by custom# . // For some loot pool { \"name\": \"example_pool\", // Pool will be named 'example_pool' \"rolls\": { // ... }, \"entries\": { // ... } } Looting Modifiers Loot tables are now affected by the LootingLevelEvent , on the Forge event bus, in addition to the looting enchantment. Additional Context Parameters Forge extends certain parameter sets to account for missing contexts which may be applicable. LootContextParamSets#CHEST now allows for a LootContextParams#KILLER_ENTITY as chest minecarts are entities which can be broken (or \u2018killed\u2019). LootContextParamSets#FISHING also allows for a LootContextParams#KILLER_ENTITY since the fishing hook is also an entity which is retracted (or \u2018killed\u2019) when the player retrieves it. Multiple Items on Smelting When using the SmeltItemFunction , a smelted recipe will now return the actual number of items from the result instead of a single smelted item (e.g. if a smelting recipe returns 3 items and there are 3 drops, then the result would be 9 smelted items instead of 3). Loot Table Id Condition Forge adds an additional LootItemCondition which allows certain items to generate for a specific table. This is typically used within global loot modifiers . // In some loot pool or pool entry { \"conditions\": [ { \"condition\": \"forge:loot_table_id\", // Will apply when the loot table is for dirt \"loot_table_id\": \"minecraft:blocks/dirt\" } ] } Can Tool Perform Action Condition Forge adds an additional LootItemCondition which checks whether the given LootContextParams#TOOL can perform the specified ToolAction . // In some loot pool or pool entry { \"conditions\": [ { \"condition\": \"forge:can_tool_perform_action\", // Will apply when the tool can strip a log like an axe \"action\": \"axe_strip\" } ] }","title":"\ucee8\ud14c\uc774\ub108 \uc804\ub9ac\ud488 \ud14c\uc774\ube14"},{"location":"resources/server/loottables/#loot-tables","text":"Loot tables are logic files which dictate what should happen when various actions or scenarios occur. Although the vanilla system deals purely with item generation, the system can be expanded to perform any number of defined actions.","title":"Loot Tables"},{"location":"resources/server/loottables/#data-driven-tables","text":"Most loot tables within vanilla are data driven via JSON. This means that a mod is not necessary to create a new loot table, only a Data pack . A full list on how to create and put these loot tables within the mod\u2019s resources folder can be found on the Minecraft Wiki .","title":"Data-Driven Tables"},{"location":"resources/server/loottables/#using-a-loot-table","text":"A loot table is referenced by its ResourceLocation which points to data/<namespace>/loot_tables/<path>.json . The LootTable associated with the reference can be obtained using LootTables#get , where LootTables can be obtained via MinecraftServer#getLootTables . A loot table is always generated within a given context. The LootContext defines the level the table is generated in, a specific randomizer and seed if desired, luck for better generation, the LootContextParam s which define scenario context, and any dynamic information that should occur on activation. A loot context can be created using the constructor for LootContext$Builder and built using LootContext$Builder#create . The created LootContext adheres to some LootContextParamSet . The param set defines which LootContextParam s are required or optional in context for generation. A loot table generated within a given param set must only use contexts that are defined. A loot table can be generated using one of the available methods: Method Description getRandomItemsRaw Consumes the items generated by the loot table. getRandomItems Returns the items generated by the loot table. fill Fills a container with the generated loot table. Note Loot tables were built for generating items, so the methods expect some handling for the ItemStack s.","title":"Using a Loot Table"},{"location":"resources/server/loottables/#additional-features","text":"Forge provides some additional behavior to loot tables for greater control of the system.","title":"Additional Features"},{"location":"resources/server/loottables/#loottableloadevent","text":"LootTableLoadEvent is an event fired on the Forge event bus which is fired whenever a loot table is loaded. If the event is canceled, then an empty loot table will be loaded instead. Important Do not modify a loot table\u2019s drops through this event. Those modifications should be done using global loot modifiers .","title":"LootTableLoadEvent"},{"location":"resources/server/loottables/#loot-pool-names","text":"Loot pools can be named using the name key. Any non-named loot pool will be the hash code of the pool prefixed by custom# . // For some loot pool { \"name\": \"example_pool\", // Pool will be named 'example_pool' \"rolls\": { // ... }, \"entries\": { // ... } }","title":"Loot Pool Names"},{"location":"resources/server/loottables/#looting-modifiers","text":"Loot tables are now affected by the LootingLevelEvent , on the Forge event bus, in addition to the looting enchantment.","title":"Looting Modifiers"},{"location":"resources/server/loottables/#additional-context-parameters","text":"Forge extends certain parameter sets to account for missing contexts which may be applicable. LootContextParamSets#CHEST now allows for a LootContextParams#KILLER_ENTITY as chest minecarts are entities which can be broken (or \u2018killed\u2019). LootContextParamSets#FISHING also allows for a LootContextParams#KILLER_ENTITY since the fishing hook is also an entity which is retracted (or \u2018killed\u2019) when the player retrieves it.","title":"Additional Context Parameters"},{"location":"resources/server/loottables/#multiple-items-on-smelting","text":"When using the SmeltItemFunction , a smelted recipe will now return the actual number of items from the result instead of a single smelted item (e.g. if a smelting recipe returns 3 items and there are 3 drops, then the result would be 9 smelted items instead of 3).","title":"Multiple Items on Smelting"},{"location":"resources/server/loottables/#loot-table-id-condition","text":"Forge adds an additional LootItemCondition which allows certain items to generate for a specific table. This is typically used within global loot modifiers . // In some loot pool or pool entry { \"conditions\": [ { \"condition\": \"forge:loot_table_id\", // Will apply when the loot table is for dirt \"loot_table_id\": \"minecraft:blocks/dirt\" } ] }","title":"Loot Table Id Condition"},{"location":"resources/server/loottables/#can-tool-perform-action-condition","text":"Forge adds an additional LootItemCondition which checks whether the given LootContextParams#TOOL can perform the specified ToolAction . // In some loot pool or pool entry { \"conditions\": [ { \"condition\": \"forge:can_tool_perform_action\", // Will apply when the tool can strip a log like an axe \"action\": \"axe_strip\" } ] }","title":"Can Tool Perform Action Condition"},{"location":"resources/server/tags/","text":"Tags Tags are generalized sets of objects in the game used for grouping related things together and providing fast membership checks. Declaring Your Own Groupings Tags are declared in your mod\u2019s datapack . For example, a TagKey<Block> with a given identifier of modid:foo/tagname will reference a tag at /data/<modid>/tags/blocks/foo/tagname.json . Tags for Block s, Item s, EntityType s, Fluid s, and GameEvent s use the plural forms for their folder location while all other registries use the singular version ( EntityType uses the folder entity_types while Potion would use the folder potion ). Similarly, you may append to or override tags declared in other domains, such as Vanilla, by declaring your own JSONs. For example, to add your own mod\u2019s saplings to the Vanilla sapling tag, you would specify it in /data/minecraft/tags/blocks/saplings.json , and Vanilla will merge everything into one tag at reload, if the replace option is false. If replace is true, then all entries before the json specifying replace will be removed. Values listed that are not present will cause the tag to error unless the value is listed using an id string and required boolean set to false, as in the following example: { \"replace\": false, \"values\": [ \"minecraft:gold_ingot\", \"mymod:my_ingot\", { \"id\": \"othermod:ingot_other\", \"required\": false } ] } See the Vanilla wiki for a description of the base syntax. There is also a Forge extension on the Vanilla syntax. You may declare a remove array of the same format as the values array. Any values listed here will be removed from the tag. This acts as a finer grained version of the Vanilla replace option. Using Tags In Code Tags for all registries are automatically sent from the server to any remote clients on login and reload. Block s, Item s, EntityType s, Fluid s, and GameEvent s are special cased as they have Holder s allowing for available tags to be accessible through the object itself. Note Intrusive Holder s may be removed in a future version of Minecraft. If they are, the below methods can be used instead to query the associated Holder s. ITagManager Forge wrapped registries provide an additional helper for creating and managing tags through ITagManager which can be obtained via IForgeRegistry#tags . Tags can be created using using #createTagKey or #createOptionalTagKey . Tags or registry objects can also be checked for either or using #getTag or #getReverseTag respectively. Custom Registries Custom registries can create tags when constructing their DeferredRegister via #createTagKey or #createOptionalTagKey respectively. Their tags or registry objects can then checked for either using the IForgeRegistry obtained by calling DeferredRegister#makeRegistry . Referencing Tags There are four methods of creating a tag wrapper: Method For *Tags#create Block , Item , EntityType , Fluid , and Biome where * represents one of these types. ITagManager#createTagKey Forge wrapped vanilla registries, registries can be obtained from ForgeRegistries . DeferredRegister#createTagKey Custom forge registries. TagKey#create Vanilla registries without forge wrappers, registries can be obtained from Registry . Registry objects can check their tags or registry objects either through their Holder or through ITag / IReverseTag for vanilla or forge registry objects respectively. Vanilla registry objects can grab their associated holder using either Registry#getHolder or Registry#getHolderOrThrow and then compare if the registry object has a tag using Holder#is . Forge registry objects can grab their tag definition using either ITagManager#getTag or ITagManager#getReverseTag and then compare if a registry object has a tag using ITag#contains or IReverseTag#containsTag respectively. Tag-holding registry objects contain a method called #is in either their registry object or state-aware class to check whether the object belongs to a certain tag. As an example: public static final TagKey<Item> myItemTag = ItemTags.create(new ResourceLocation(\"mymod\", \"myitemgroup\")); public static final TagKey<Potion> myPotionTag = ForgeRegistries.POTIONS.tags().createTagKey(new ResourceLocation(\"mymod\", \"mypotiongroup\")); public static final TagKey<VillagerType> myVillagerTypeTag = TagKey.create(Registry.VILLAGER_TYPE, new ResourceLocation(\"mymod\", \"myvillagertypegroup\")); // In some method: ItemStack stack = /*...*/; boolean isInItemGroup = stack.is(myItemTag); Potion potion = /*...*/; boolean isInPotionGroup = ForgeRegistries.POTIONS.tags().getTag(myPotionTag).contains(potion); ResourceKey<VillagerType> villagerTypeKey = /*...*/; boolean isInVillagerTypeGroup = Registry.VILLAGER_TYPE.getHolder(villagerTypeKey).map(holder -> holder.is(myVillagerTypeTag)).orElse(false); Conventions There are several conventions that will help facilitate compatibility in the ecosystem: If there is a Vanilla tag that fits your block or item, add it to that tag. See the list of Vanilla tags . If there is a Forge tag that fits your block or item, add it to that tag. The list of tags declared by Forge can be seen on GitHub . If there is a group of something you feel should be shared by the community, use the forge namespace instead of your mod id. Tag naming conventions should follow Vanilla conventions. In particular, item and block groupings are plural instead of singular (e.g. minecraft:logs , minecraft:saplings ). Item tags should be sorted into subdirectories according to their type (e.g. forge:ingots/iron , forge:nuggets/brass , etc.). Migration from OreDictionary For recipes, tags can be used directly in the vanilla recipe format (see below). For matching items in code, see the section above. If you are declaring a new type of item grouping, follow a couple naming conventions: Use domain:type/material . When the name is a common one that all modders should adopt, use the forge domain. For example, brass ingots should be registered under the forge:ingots/brass tag and cobalt nuggets under the forge:nuggets/cobalt tag. Using Tags in Recipes and Advancements Tags are directly supported by Vanilla. See the respective Vanilla wiki pages for recipes and advancements for usage details.","title":"\ud0dc\uadf8"},{"location":"resources/server/tags/#tags","text":"Tags are generalized sets of objects in the game used for grouping related things together and providing fast membership checks.","title":"Tags"},{"location":"resources/server/tags/#declaring-your-own-groupings","text":"Tags are declared in your mod\u2019s datapack . For example, a TagKey<Block> with a given identifier of modid:foo/tagname will reference a tag at /data/<modid>/tags/blocks/foo/tagname.json . Tags for Block s, Item s, EntityType s, Fluid s, and GameEvent s use the plural forms for their folder location while all other registries use the singular version ( EntityType uses the folder entity_types while Potion would use the folder potion ). Similarly, you may append to or override tags declared in other domains, such as Vanilla, by declaring your own JSONs. For example, to add your own mod\u2019s saplings to the Vanilla sapling tag, you would specify it in /data/minecraft/tags/blocks/saplings.json , and Vanilla will merge everything into one tag at reload, if the replace option is false. If replace is true, then all entries before the json specifying replace will be removed. Values listed that are not present will cause the tag to error unless the value is listed using an id string and required boolean set to false, as in the following example: { \"replace\": false, \"values\": [ \"minecraft:gold_ingot\", \"mymod:my_ingot\", { \"id\": \"othermod:ingot_other\", \"required\": false } ] } See the Vanilla wiki for a description of the base syntax. There is also a Forge extension on the Vanilla syntax. You may declare a remove array of the same format as the values array. Any values listed here will be removed from the tag. This acts as a finer grained version of the Vanilla replace option.","title":"Declaring Your Own Groupings"},{"location":"resources/server/tags/#using-tags-in-code","text":"Tags for all registries are automatically sent from the server to any remote clients on login and reload. Block s, Item s, EntityType s, Fluid s, and GameEvent s are special cased as they have Holder s allowing for available tags to be accessible through the object itself. Note Intrusive Holder s may be removed in a future version of Minecraft. If they are, the below methods can be used instead to query the associated Holder s.","title":"Using Tags In Code"},{"location":"resources/server/tags/#itagmanager","text":"Forge wrapped registries provide an additional helper for creating and managing tags through ITagManager which can be obtained via IForgeRegistry#tags . Tags can be created using using #createTagKey or #createOptionalTagKey . Tags or registry objects can also be checked for either or using #getTag or #getReverseTag respectively.","title":"ITagManager"},{"location":"resources/server/tags/#custom-registries","text":"Custom registries can create tags when constructing their DeferredRegister via #createTagKey or #createOptionalTagKey respectively. Their tags or registry objects can then checked for either using the IForgeRegistry obtained by calling DeferredRegister#makeRegistry .","title":"Custom Registries"},{"location":"resources/server/tags/#referencing-tags","text":"There are four methods of creating a tag wrapper: Method For *Tags#create Block , Item , EntityType , Fluid , and Biome where * represents one of these types. ITagManager#createTagKey Forge wrapped vanilla registries, registries can be obtained from ForgeRegistries . DeferredRegister#createTagKey Custom forge registries. TagKey#create Vanilla registries without forge wrappers, registries can be obtained from Registry . Registry objects can check their tags or registry objects either through their Holder or through ITag / IReverseTag for vanilla or forge registry objects respectively. Vanilla registry objects can grab their associated holder using either Registry#getHolder or Registry#getHolderOrThrow and then compare if the registry object has a tag using Holder#is . Forge registry objects can grab their tag definition using either ITagManager#getTag or ITagManager#getReverseTag and then compare if a registry object has a tag using ITag#contains or IReverseTag#containsTag respectively. Tag-holding registry objects contain a method called #is in either their registry object or state-aware class to check whether the object belongs to a certain tag. As an example: public static final TagKey<Item> myItemTag = ItemTags.create(new ResourceLocation(\"mymod\", \"myitemgroup\")); public static final TagKey<Potion> myPotionTag = ForgeRegistries.POTIONS.tags().createTagKey(new ResourceLocation(\"mymod\", \"mypotiongroup\")); public static final TagKey<VillagerType> myVillagerTypeTag = TagKey.create(Registry.VILLAGER_TYPE, new ResourceLocation(\"mymod\", \"myvillagertypegroup\")); // In some method: ItemStack stack = /*...*/; boolean isInItemGroup = stack.is(myItemTag); Potion potion = /*...*/; boolean isInPotionGroup = ForgeRegistries.POTIONS.tags().getTag(myPotionTag).contains(potion); ResourceKey<VillagerType> villagerTypeKey = /*...*/; boolean isInVillagerTypeGroup = Registry.VILLAGER_TYPE.getHolder(villagerTypeKey).map(holder -> holder.is(myVillagerTypeTag)).orElse(false);","title":"Referencing Tags"},{"location":"resources/server/tags/#conventions","text":"There are several conventions that will help facilitate compatibility in the ecosystem: If there is a Vanilla tag that fits your block or item, add it to that tag. See the list of Vanilla tags . If there is a Forge tag that fits your block or item, add it to that tag. The list of tags declared by Forge can be seen on GitHub . If there is a group of something you feel should be shared by the community, use the forge namespace instead of your mod id. Tag naming conventions should follow Vanilla conventions. In particular, item and block groupings are plural instead of singular (e.g. minecraft:logs , minecraft:saplings ). Item tags should be sorted into subdirectories according to their type (e.g. forge:ingots/iron , forge:nuggets/brass , etc.).","title":"Conventions"},{"location":"resources/server/tags/#migration-from-oredictionary","text":"For recipes, tags can be used directly in the vanilla recipe format (see below). For matching items in code, see the section above. If you are declaring a new type of item grouping, follow a couple naming conventions: Use domain:type/material . When the name is a common one that all modders should adopt, use the forge domain. For example, brass ingots should be registered under the forge:ingots/brass tag and cobalt nuggets under the forge:nuggets/cobalt tag.","title":"Migration from OreDictionary"},{"location":"resources/server/tags/#using-tags-in-recipes-and-advancements","text":"Tags are directly supported by Vanilla. See the respective Vanilla wiki pages for recipes and advancements for usage details.","title":"Using Tags in Recipes and Advancements"},{"location":"resources/server/recipes/","text":"Recipes Recipes are a way to transform some number of objects into other objects within a Minecraft world. Although the vanilla system deals purely with item transformations, the system as a whole can be expanded to use any object the programmer creates. Data-Driven Recipes Most recipe implementations within vanilla are data driven via JSON. This means that a mod is not necessary to create a new recipe, only a Data pack . A full list on how to create and put these recipes within the mod\u2019s resources folder can be found on the Minecraft Wiki . A recipe can be obtained within the Recipe Book as a reward for completing an advancement . Recipe advancements always have minecraft:recipes/root as their parent, to not to appear on the advancement screen. The default criteria to gain the recipe advancement is a check if the user has unlocked the recipe from using it once or receiving it through a command like /recipe : // Within some recipe advancement json \"has_the_recipe\": { // Criteria label // Succeeds if examplemod:example_recipe is used \"trigger\": \"minecraft:recipe_unlocked\", \"conditions\": { \"recipe\": \"examplemod:example_recipe\" } } //... \"requirements\": [ [ \"has_the_recipe\" // ... Other criteria labels to be ORed against to unlock recipe ] ] Data-driven recipes and their unlocking advancement can be generated via RecipeProvider . Recipe Manager Recipes are loaded and stored via the RecipeManager . Any operations relating to getting available recipe(s) are handled by this manager. There are two important methods to know of: Method Description getRecipeFor Gets the first recipe that matches the current input. getRecipesFor Gets all recipes that match the current input. Each method takes in a RecipeType , which denotes what method is being applied to use the recipe (crafting, smelting, etc.), a Container which holds the configuration of the inputs, and the current level which is passed to Recipe#matches along with the container. Important Forge provides the RecipeWrapper utility class which extends Container for wrapping around IItemHandler s and passing them to methods which requires a Container parameter. // Within some method with IItemHandlerModifiable handler recipeManger.getRecipeFor(RecipeType.CRAFTING, new RecipeWrapper(handler), level); Additional Features Forge provides some additional behavior to the recipe schema and its implementations for greater control of the system. Recipe ItemStack Result Except for minecraft:stonecutting recipes, all vanilla recipe serializers expand the result tag to take in a full ItemStack as a JsonObject instead of just the item name and amount in some cases. // In some recipe JSON \"result\": { // The name of the registry item to give as a result \"item\": \"examplemod:example_item\", // The number of items to return \"count\": 4, // The tag data of the stack, can also be a string \"nbt\": { // Add tag data here } } Note The nbt tag can alternatively be a string containing a stringified NBT (or SNBT) for data which cannot be properly represented as a JSON object (such as IntArrayTag s). Conditional Recipes Recipes and their unlocking advancement can be loaded conditionally and defaulted depending on what information is present (mod loaded, item exists, etc.). Larger Crafting Grids By default, vanilla declares a maximum width and height for a crafting grid to be a 3x3 square. This can be expanded by calling ShapedRecipe#setCraftingSize with the new width and height in FMLCommonSetupEvent . Warning ShapedRecipe#setCraftingSize is NOT thread-safe. As such, it should be enqueued to the synchronous work queue via FMLCommonSetupEvent#enqueueWork . Larger crafting grids in recipes can be data generated . Ingredient Types A few additional ingredient types are added to allow recipes to have inputs which check tag data or combine multiple ingredients into a single input checker.","title":"\uc870\ud569\ubc95 \uc18c\uac1c"},{"location":"resources/server/recipes/#recipes","text":"Recipes are a way to transform some number of objects into other objects within a Minecraft world. Although the vanilla system deals purely with item transformations, the system as a whole can be expanded to use any object the programmer creates.","title":"Recipes"},{"location":"resources/server/recipes/#data-driven-recipes","text":"Most recipe implementations within vanilla are data driven via JSON. This means that a mod is not necessary to create a new recipe, only a Data pack . A full list on how to create and put these recipes within the mod\u2019s resources folder can be found on the Minecraft Wiki . A recipe can be obtained within the Recipe Book as a reward for completing an advancement . Recipe advancements always have minecraft:recipes/root as their parent, to not to appear on the advancement screen. The default criteria to gain the recipe advancement is a check if the user has unlocked the recipe from using it once or receiving it through a command like /recipe : // Within some recipe advancement json \"has_the_recipe\": { // Criteria label // Succeeds if examplemod:example_recipe is used \"trigger\": \"minecraft:recipe_unlocked\", \"conditions\": { \"recipe\": \"examplemod:example_recipe\" } } //... \"requirements\": [ [ \"has_the_recipe\" // ... Other criteria labels to be ORed against to unlock recipe ] ] Data-driven recipes and their unlocking advancement can be generated via RecipeProvider .","title":"Data-Driven Recipes"},{"location":"resources/server/recipes/#recipe-manager","text":"Recipes are loaded and stored via the RecipeManager . Any operations relating to getting available recipe(s) are handled by this manager. There are two important methods to know of: Method Description getRecipeFor Gets the first recipe that matches the current input. getRecipesFor Gets all recipes that match the current input. Each method takes in a RecipeType , which denotes what method is being applied to use the recipe (crafting, smelting, etc.), a Container which holds the configuration of the inputs, and the current level which is passed to Recipe#matches along with the container. Important Forge provides the RecipeWrapper utility class which extends Container for wrapping around IItemHandler s and passing them to methods which requires a Container parameter. // Within some method with IItemHandlerModifiable handler recipeManger.getRecipeFor(RecipeType.CRAFTING, new RecipeWrapper(handler), level);","title":"Recipe Manager"},{"location":"resources/server/recipes/#additional-features","text":"Forge provides some additional behavior to the recipe schema and its implementations for greater control of the system.","title":"Additional Features"},{"location":"resources/server/recipes/#recipe-itemstack-result","text":"Except for minecraft:stonecutting recipes, all vanilla recipe serializers expand the result tag to take in a full ItemStack as a JsonObject instead of just the item name and amount in some cases. // In some recipe JSON \"result\": { // The name of the registry item to give as a result \"item\": \"examplemod:example_item\", // The number of items to return \"count\": 4, // The tag data of the stack, can also be a string \"nbt\": { // Add tag data here } } Note The nbt tag can alternatively be a string containing a stringified NBT (or SNBT) for data which cannot be properly represented as a JSON object (such as IntArrayTag s).","title":"Recipe ItemStack Result"},{"location":"resources/server/recipes/#conditional-recipes","text":"Recipes and their unlocking advancement can be loaded conditionally and defaulted depending on what information is present (mod loaded, item exists, etc.).","title":"Conditional Recipes"},{"location":"resources/server/recipes/#larger-crafting-grids","text":"By default, vanilla declares a maximum width and height for a crafting grid to be a 3x3 square. This can be expanded by calling ShapedRecipe#setCraftingSize with the new width and height in FMLCommonSetupEvent . Warning ShapedRecipe#setCraftingSize is NOT thread-safe. As such, it should be enqueued to the synchronous work queue via FMLCommonSetupEvent#enqueueWork . Larger crafting grids in recipes can be data generated .","title":"Larger Crafting Grids"},{"location":"resources/server/recipes/#ingredient-types","text":"A few additional ingredient types are added to allow recipes to have inputs which check tag data or combine multiple ingredients into a single input checker.","title":"Ingredient Types"},{"location":"resources/server/recipes/custom/","text":"Custom Recipes Every recipe definition is made up of three components: the Recipe implementation which holds the data and handles the execution logic with the provided inputs, the RecipeType which represents the category or context the recipe will be used in, and the RecipeSerializer which handles decoding and network communication of the recipe data. How one chooses to use the recipe is up to the implementor. Recipe The Recipe interface describes the recipe data and the execution logic. This includes matching the inputs and providing the associated result. As the recipe subsystem performs item transformations by default, the inputs are supplied through a Container subtype. Important The Container s passed into the recipe should be treated as if its contents were immutable. Any mutable operations should be performed on a copy of the input through ItemStack#copy . To be able to obtain a recipe instance from the manager, #matches must return true. This method checks against the provided container to see whether the associated inputs are valid. Ingredient s can be used for validation by calling Ingredient#test . If the recipe has been chosen, it is then built using #assemble which may use data from the inputs to create the result. Tip #assemble should always produce a unique ItemStack . If unsure whether #assemble does so, call ItemStack#copy on the result before returning. Most of the other methods are purely for integration with the recipe book. public record ExampleRecipe(Ingredient input, int data, ItemStack output) implements Recipe<Container> { // Implement methods here } Note While a record is used in the above example, it is not required to do so in your own implementation. RecipeType RecipeType is responsible for defining the category or context the recipe will be used within. For example, if a recipe was going to be smelted in a furnace, it would have a type of RecipeType#SMELTING . Being blasted in a blast furnace would have a type of RecipeType#BLASTING . If none of the existing types match what context the recipe will be used within, then a new RecipeType must be registered . The RecipeType instance must then be returned by Recipe#getType in the new recipe subtype. // For some RecipeType EXAMPLE_TYPE // In ExampleRecipe @Override public RecipeType<?> getType() { return EXAMPLE_TYPE; } RecipeSerializer A RecipeSerializer is responsible for decoding JSONs and communicating across the network for an associated Recipe subtype. Each recipe decoded by the serializer is saved as a unique instance within the RecipeManager . A RecipeSerializer must be registered . Only three methods need to be implemented for a RecipeSerializer : Method Description fromJson Decodes a JSON into the Recipe subtype. toNetwork Encodes a Recipe to the buffer to send to the client. The recipe identifier does not need to be encoded. fromNetwork Decodes a Recipe from the buffer sent from the server. The recipe identifier does not need to be decoded. Tip For ease of convenience, the RecipeSerializer subtype can extend ForgeRegistryEntry to implement the methods within IForgeRegistryEntry . public class ExampleSerializer extends ForgeRegistryEntry<RecipeSerializer<?>> implements RecipeSerializer<ExampleRecipe> { // Implement methods here } The RecipeSerializer instance must then be returned by Recipe#getSerializer in the new recipe subtype. // For some RecipeSerializer EXAMPLE_SERIALIZER // In ExampleRecipe @Override public RecipeSerializer<?> getSerializer() { return EXAMPLE_SERIALIZER; } Tip There are some useful methods to make reading and writing data for recipes easier. Ingredient s can use #fromJson , #toNetwork , and #fromNetwork while ItemStack s can use CraftingHelper#getItemStack , FriendlyByteBuf#writeItem , and FriendlyByteBuf# readItem . Building the JSON Custom Recipe JSONs are stored in the same place as other recipes . The specified type should represent the registry name of the recipe serializer . Any additional data is specified by the serializer during decoding. { // The custom serializer registry name \"type\": \"examplemod:example_serializer\", \"input\": { // Some ingredient input }, \"data\": 0, // Some data wanted for the recipe \"output\": { // Some stack output } } Non-Item Logic If items are not used as part of the input or result of a recipe, then the normal methods provided in RecipeManager will not be useful. Instead, an additional method for testing a recipe\u2019s validity and/or supplying the result should be added to the custom Recipe instance. From there, all the recipes for that specific RecipeType can be obtained via RecipeManager#getAllRecipesFor and then checked and/or supplied the result using the newly implemented methods. // In some Recipe subimplementation ExampleRecipe // Checks the block at the position to see if it matches the stored data boolean matches(Level level, BlockPos pos); // Creates the block state to set the block at the specified position to BlockState assemble(); // In some manager class public Optional<ExampleRecipe> getRecipeFor(Level level, BlockPos pos) { return level.getRecipeManager() .getAllRecipesFor(exampleRecipeType) // Gets all recipes .stream() // Looks through all recipes for types .filter(recipe -> recipe.matches(level, pos)) // Checks if the recipe inputs are valid .findFirst(); // Finds the first recipe whose inputs match } Data Generation All custom recipes, regardless of input or output data, can be created into a FinishedRecipe for data generation using the RecipeProvider .","title":"\uc0ac\uc6a9\uc790\uc9c0\uc815 \uc870\ud569\ubc95"},{"location":"resources/server/recipes/custom/#custom-recipes","text":"Every recipe definition is made up of three components: the Recipe implementation which holds the data and handles the execution logic with the provided inputs, the RecipeType which represents the category or context the recipe will be used in, and the RecipeSerializer which handles decoding and network communication of the recipe data. How one chooses to use the recipe is up to the implementor.","title":"Custom Recipes"},{"location":"resources/server/recipes/custom/#recipe","text":"The Recipe interface describes the recipe data and the execution logic. This includes matching the inputs and providing the associated result. As the recipe subsystem performs item transformations by default, the inputs are supplied through a Container subtype. Important The Container s passed into the recipe should be treated as if its contents were immutable. Any mutable operations should be performed on a copy of the input through ItemStack#copy . To be able to obtain a recipe instance from the manager, #matches must return true. This method checks against the provided container to see whether the associated inputs are valid. Ingredient s can be used for validation by calling Ingredient#test . If the recipe has been chosen, it is then built using #assemble which may use data from the inputs to create the result. Tip #assemble should always produce a unique ItemStack . If unsure whether #assemble does so, call ItemStack#copy on the result before returning. Most of the other methods are purely for integration with the recipe book. public record ExampleRecipe(Ingredient input, int data, ItemStack output) implements Recipe<Container> { // Implement methods here } Note While a record is used in the above example, it is not required to do so in your own implementation.","title":"Recipe"},{"location":"resources/server/recipes/custom/#recipetype","text":"RecipeType is responsible for defining the category or context the recipe will be used within. For example, if a recipe was going to be smelted in a furnace, it would have a type of RecipeType#SMELTING . Being blasted in a blast furnace would have a type of RecipeType#BLASTING . If none of the existing types match what context the recipe will be used within, then a new RecipeType must be registered . The RecipeType instance must then be returned by Recipe#getType in the new recipe subtype. // For some RecipeType EXAMPLE_TYPE // In ExampleRecipe @Override public RecipeType<?> getType() { return EXAMPLE_TYPE; }","title":"RecipeType"},{"location":"resources/server/recipes/custom/#recipeserializer","text":"A RecipeSerializer is responsible for decoding JSONs and communicating across the network for an associated Recipe subtype. Each recipe decoded by the serializer is saved as a unique instance within the RecipeManager . A RecipeSerializer must be registered . Only three methods need to be implemented for a RecipeSerializer : Method Description fromJson Decodes a JSON into the Recipe subtype. toNetwork Encodes a Recipe to the buffer to send to the client. The recipe identifier does not need to be encoded. fromNetwork Decodes a Recipe from the buffer sent from the server. The recipe identifier does not need to be decoded. Tip For ease of convenience, the RecipeSerializer subtype can extend ForgeRegistryEntry to implement the methods within IForgeRegistryEntry . public class ExampleSerializer extends ForgeRegistryEntry<RecipeSerializer<?>> implements RecipeSerializer<ExampleRecipe> { // Implement methods here } The RecipeSerializer instance must then be returned by Recipe#getSerializer in the new recipe subtype. // For some RecipeSerializer EXAMPLE_SERIALIZER // In ExampleRecipe @Override public RecipeSerializer<?> getSerializer() { return EXAMPLE_SERIALIZER; } Tip There are some useful methods to make reading and writing data for recipes easier. Ingredient s can use #fromJson , #toNetwork , and #fromNetwork while ItemStack s can use CraftingHelper#getItemStack , FriendlyByteBuf#writeItem , and FriendlyByteBuf# readItem .","title":"RecipeSerializer"},{"location":"resources/server/recipes/custom/#building-the-json","text":"Custom Recipe JSONs are stored in the same place as other recipes . The specified type should represent the registry name of the recipe serializer . Any additional data is specified by the serializer during decoding. { // The custom serializer registry name \"type\": \"examplemod:example_serializer\", \"input\": { // Some ingredient input }, \"data\": 0, // Some data wanted for the recipe \"output\": { // Some stack output } }","title":"Building the JSON"},{"location":"resources/server/recipes/custom/#non-item-logic","text":"If items are not used as part of the input or result of a recipe, then the normal methods provided in RecipeManager will not be useful. Instead, an additional method for testing a recipe\u2019s validity and/or supplying the result should be added to the custom Recipe instance. From there, all the recipes for that specific RecipeType can be obtained via RecipeManager#getAllRecipesFor and then checked and/or supplied the result using the newly implemented methods. // In some Recipe subimplementation ExampleRecipe // Checks the block at the position to see if it matches the stored data boolean matches(Level level, BlockPos pos); // Creates the block state to set the block at the specified position to BlockState assemble(); // In some manager class public Optional<ExampleRecipe> getRecipeFor(Level level, BlockPos pos) { return level.getRecipeManager() .getAllRecipesFor(exampleRecipeType) // Gets all recipes .stream() // Looks through all recipes for types .filter(recipe -> recipe.matches(level, pos)) // Checks if the recipe inputs are valid .findFirst(); // Finds the first recipe whose inputs match }","title":"Non-Item Logic"},{"location":"resources/server/recipes/custom/#data-generation","text":"All custom recipes, regardless of input or output data, can be created into a FinishedRecipe for data generation using the RecipeProvider .","title":"Data Generation"},{"location":"resources/server/recipes/incode/","text":"Non-Datapack Recipes Not all recipes are simplistic enough or migrated to using data-driven recipes. Some subsystems still need to be patched within the codebase to provide support for adding new recipes. Brewing Recipes Brewing is one of the few recipes that still exist in code. Brewing recipes are added as part of a bootstrap within PotionBrewing for their containers, container recipes, and potion mixes. To expand upon the existing system, Forge allows brewing recipes to be added by calling BrewingRecipeRegistry#addRecipe in FMLCommonSetupEvent . Warning BrewingRecipeRegistry#addRecipe must be called within the synchronous work queue via #enqueueWork as the method is not thread-safe. The default implementation takes in an input ingredient, a catalyst ingredient, and a stack output for a standard implementation. Additionally, an IBrewingRecipe instance can be supplied instead to do the transformations. IBrewingRecipe IBrewingRecipe is a pseudo- Recipe interface that checks whether the input and catalyst is valid and provides the associated output if so. This is provided through #isInput , #isIngredient , and #getOutput respectively. The output method has access to the input and catalyst stacks to construct the result. Important When copying data between ItemStack s or CompoundTag s, make sure to use their respective #copy methods to create unique instances. There is no wrapper for adding additional potion containers or potion mixes similar to vanilla. A new IBrewingRecipe implementation will need to be added to replicate this behavior. Anvil Recipes Anvils are responsible for taking a damaged input and given some material or a similar input, remove some of the damage on the input result. As such, its system is not easily data-driven. However, as anvil recipes are an input with some number of materials equals some output when the user has the required experience levels, it can be modified to create a pseudo-recipe system via AnvilUpdateEvent . This takes in the input and materials and allows the modder to specify the output, experience level cost, and number of materials to use for the output. The event can also prevent any output by canceling it. // Checks whether the left and right items are correct // When true, sets the output, level experience cost, and material amount public void updateAnvil(AnvilUpdateEvent event) { if (event.getLeft().is(...) && event.getRight().is(...)) { event.setOutput(...); event.setCost(...); event.setMaterialCost(...); } } The update event must be attached to the Forge event bus. Loom Recipes Looms are responsible for applying a dye and pattern (either from the loom or from an item) to a banner. While the banner and the dye must be a BannerItem or DyeItem respectively, custom patterns can be created and applied in the loom. Banner Patterns can be created by calling BannerPattern#create during mod construction. Important BannerPattern s which return true for #hasPatternItem do not appear as an option in the loom. These patterns must have an accompanying BannerPatternItem to be used. // In the main mod class public static final BannerPattern EXAMPLE_PATTERN = BannerPattern.create( \"EXAMPLE_MOD_EXAMPLE_PATTERN\", // Name of the enum constant \"examplemod/example_pattern\", // Texture location (assets/minecraft/textures/entity/(banner|shield)/<texture_location>.png) \"examplemod:ep\", // Pattern name to send over the network false // The pattern is an option in the loom ); Important The enum name supplied to BannerPattern#create should be a valid identifier and prefixed with the mod id followed by an underscore _ (e.g. examplemod:example_pattern should be EXAMPLE_MOD_EXAMPLE_PATTERN ).","title":"\ub370\uc774\ud130\ud329\uc744 \uc4f0\uc9c0 \uc54a\ub294 \uc870\ud569\ubc95"},{"location":"resources/server/recipes/incode/#non-datapack-recipes","text":"Not all recipes are simplistic enough or migrated to using data-driven recipes. Some subsystems still need to be patched within the codebase to provide support for adding new recipes.","title":"Non-Datapack Recipes"},{"location":"resources/server/recipes/incode/#brewing-recipes","text":"Brewing is one of the few recipes that still exist in code. Brewing recipes are added as part of a bootstrap within PotionBrewing for their containers, container recipes, and potion mixes. To expand upon the existing system, Forge allows brewing recipes to be added by calling BrewingRecipeRegistry#addRecipe in FMLCommonSetupEvent . Warning BrewingRecipeRegistry#addRecipe must be called within the synchronous work queue via #enqueueWork as the method is not thread-safe. The default implementation takes in an input ingredient, a catalyst ingredient, and a stack output for a standard implementation. Additionally, an IBrewingRecipe instance can be supplied instead to do the transformations.","title":"Brewing Recipes"},{"location":"resources/server/recipes/incode/#ibrewingrecipe","text":"IBrewingRecipe is a pseudo- Recipe interface that checks whether the input and catalyst is valid and provides the associated output if so. This is provided through #isInput , #isIngredient , and #getOutput respectively. The output method has access to the input and catalyst stacks to construct the result. Important When copying data between ItemStack s or CompoundTag s, make sure to use their respective #copy methods to create unique instances. There is no wrapper for adding additional potion containers or potion mixes similar to vanilla. A new IBrewingRecipe implementation will need to be added to replicate this behavior.","title":"IBrewingRecipe"},{"location":"resources/server/recipes/incode/#anvil-recipes","text":"Anvils are responsible for taking a damaged input and given some material or a similar input, remove some of the damage on the input result. As such, its system is not easily data-driven. However, as anvil recipes are an input with some number of materials equals some output when the user has the required experience levels, it can be modified to create a pseudo-recipe system via AnvilUpdateEvent . This takes in the input and materials and allows the modder to specify the output, experience level cost, and number of materials to use for the output. The event can also prevent any output by canceling it. // Checks whether the left and right items are correct // When true, sets the output, level experience cost, and material amount public void updateAnvil(AnvilUpdateEvent event) { if (event.getLeft().is(...) && event.getRight().is(...)) { event.setOutput(...); event.setCost(...); event.setMaterialCost(...); } } The update event must be attached to the Forge event bus.","title":"Anvil Recipes"},{"location":"resources/server/recipes/incode/#loom-recipes","text":"Looms are responsible for applying a dye and pattern (either from the loom or from an item) to a banner. While the banner and the dye must be a BannerItem or DyeItem respectively, custom patterns can be created and applied in the loom. Banner Patterns can be created by calling BannerPattern#create during mod construction. Important BannerPattern s which return true for #hasPatternItem do not appear as an option in the loom. These patterns must have an accompanying BannerPatternItem to be used. // In the main mod class public static final BannerPattern EXAMPLE_PATTERN = BannerPattern.create( \"EXAMPLE_MOD_EXAMPLE_PATTERN\", // Name of the enum constant \"examplemod/example_pattern\", // Texture location (assets/minecraft/textures/entity/(banner|shield)/<texture_location>.png) \"examplemod:ep\", // Pattern name to send over the network false // The pattern is an option in the loom ); Important The enum name supplied to BannerPattern#create should be a valid identifier and prefixed with the mod id followed by an underscore _ (e.g. examplemod:example_pattern should be EXAMPLE_MOD_EXAMPLE_PATTERN ).","title":"Loom Recipes"},{"location":"resources/server/recipes/ingredients/","text":"Ingredients Ingredient s are predicate handlers for item-based inputs which check whether a certain ItemStack meets the condition to be a valid input in a recipe. All vanilla recipes that take inputs use an Ingredient or a list of Ingredient s, which is then merged into a single Ingredient . Custom Ingredients Custom ingredients can be specified by setting type to the name of the ingredient\u2019s serializer , with the exception of compound ingredients . When no type is specified, type defaults to the vanilla ingredient minecraft:item . Custom ingredients can also easily be used in data generation . Forge Types Forge provides a few additional Ingredient types for programmers to implement. CompoundIngredient Though they are functionally identical, Compound ingredients replaces the way one would implement a list of ingredients would in a recipe. They work as a set OR where the passed in stack must be within at least one of the supplied ingredients. This change was made to allow custom ingredients to work correctly within lists. As such, no type needs to be specified. // For some input [ // At least one of these ingredients must match to succeed { // Ingredient }, { // Custom ingredient \"type\": \"examplemod:example_ingredient\" } ] NBTIngredient NBTIngredient s compare the item, damage, and the share tags (as defined by IForgeItem#getShareTag ) on an ItemStack for exact equivalency. This can be used by specifying the type as forge:nbt . // For some input { \"type\": \"forge:nbt\", \"item\": \"examplemod:example_item\", \"nbt\": { // Add nbt data (must match exactly what is on the stack) } } PartialNBTIngredient PartialNBTIngredient s are a looser version of NBTIngredient as they compare against a single or set of items and only keys specified within the share tag (as defined by IForgeItem#getShareTag ). This can be used by specifying the type as forge:partial_nbt . // For some input { \"type\": \"forge:partial_nbt\", // Either 'item' or 'items' must be specified // If both are specified, only 'item' will be read \"item\": \"examplemod:example_item\", \"items\": [ \"examplemod:example_item\", \"examplemod:example_item2\" // ... ], \"nbt\": { // Checks only for equivalency on 'key1' and 'key2' // All other keys in the stack will not be checked \"key1\": \"data1\", \"key2\": { // Data 2 } } } IntersectionIngredient IntersectionIngredient s work as a set AND where the passed in stack must match all supplied ingredients. There must be at least two ingredients supplied to this. This can be used by specifying the type as forge:intersection . // For some input { \"type\": \"forge:intersection\", // All of these ingredients must return true to succeed \"children\": [ { // Ingredient 1 }, { // Ingredient 2 } // ... ] } DifferenceIngredient DifferenceIngredient s work as a set subtraction (SUB) where the passed in stack must match the first ingredient but must not match the second ingredient. This can be used by specifying the type as forge:difference . // For some input { \"type\": \"forge:difference\", \"base\": { // Ingredient the stack is in }, \"subtracted\": { // Ingredient the stack is NOT in } } Creating Custom Ingredients Custom ingredients can be created by implementing IIngredientSerializer for the created Ingredient subclass. Tip Custom ingredients should subclass AbstractIngredient as it provides some useful abstractions for ease of implementation. Ingredient Subclass There are three important methods to implement for each ingredient subclass: Method Description getSerializer Returns the serializer used to read and write the ingredient. test Returns true if the input is valid for this ingredient. isSimple Returns false if the ingredient matches on the stack\u2019s tag. AbstractIngredient subclasses will need to define this behavior, while Ingredient subclasses return true by default. All other defined methods are left as an exercise to the reader to use as required for the ingredient subclass. IIngredientSerializer IIngredientSerializer subtypes must implement three methods: Method Description parse (JSON) Converts a JsonObject to an Ingredient . parse (Network) Reads the network buffer to decode an Ingredient . write Writes an Ingredient to the network buffer. Additionally, Ingredient subclasses should implement Ingredient#toJson for use with data generation . AbstractIngredient subclasses make #toJson an abstract method requiring the method to be implemented. Afterwards, a static instance should be declared to hold the initialized serializer and then registered using CraftingHelper#register either during the RegistryEvent$Register for RecipeSerializer s or during FMLCommonSetupEvent . The Ingredient subclass return the static instance of the serializer in Ingredient#getSerializer . // In some serializer class public static final ExampleIngredientSerializer INSTANCE = new ExampleIngredientSerializer(); // In some handler class public void registerSerializers(RegistryEvent.Register<RecipeSerializer<?>> event) { CraftingHelper.register(registryName, INSTANCE); } // In some ingredient subclass @Override public IIngredientSerializer<? extends Ingredient> getSerializer() { return INSTANCE; } Tip If using FMLCommonSetupEvent to register an ingredient serializer, it must be enqueued to the synchronous work queue via FMLCommonSetupEvent#enqueueWork as CraftingHelper#register is not thread-safe.","title":"\uc7ac\ub8cc"},{"location":"resources/server/recipes/ingredients/#ingredients","text":"Ingredient s are predicate handlers for item-based inputs which check whether a certain ItemStack meets the condition to be a valid input in a recipe. All vanilla recipes that take inputs use an Ingredient or a list of Ingredient s, which is then merged into a single Ingredient .","title":"Ingredients"},{"location":"resources/server/recipes/ingredients/#custom-ingredients","text":"Custom ingredients can be specified by setting type to the name of the ingredient\u2019s serializer , with the exception of compound ingredients . When no type is specified, type defaults to the vanilla ingredient minecraft:item . Custom ingredients can also easily be used in data generation .","title":"Custom Ingredients"},{"location":"resources/server/recipes/ingredients/#forge-types","text":"Forge provides a few additional Ingredient types for programmers to implement.","title":"Forge Types"},{"location":"resources/server/recipes/ingredients/#compoundingredient","text":"Though they are functionally identical, Compound ingredients replaces the way one would implement a list of ingredients would in a recipe. They work as a set OR where the passed in stack must be within at least one of the supplied ingredients. This change was made to allow custom ingredients to work correctly within lists. As such, no type needs to be specified. // For some input [ // At least one of these ingredients must match to succeed { // Ingredient }, { // Custom ingredient \"type\": \"examplemod:example_ingredient\" } ]","title":"CompoundIngredient"},{"location":"resources/server/recipes/ingredients/#nbtingredient","text":"NBTIngredient s compare the item, damage, and the share tags (as defined by IForgeItem#getShareTag ) on an ItemStack for exact equivalency. This can be used by specifying the type as forge:nbt . // For some input { \"type\": \"forge:nbt\", \"item\": \"examplemod:example_item\", \"nbt\": { // Add nbt data (must match exactly what is on the stack) } }","title":"NBTIngredient"},{"location":"resources/server/recipes/ingredients/#partialnbtingredient","text":"PartialNBTIngredient s are a looser version of NBTIngredient as they compare against a single or set of items and only keys specified within the share tag (as defined by IForgeItem#getShareTag ). This can be used by specifying the type as forge:partial_nbt . // For some input { \"type\": \"forge:partial_nbt\", // Either 'item' or 'items' must be specified // If both are specified, only 'item' will be read \"item\": \"examplemod:example_item\", \"items\": [ \"examplemod:example_item\", \"examplemod:example_item2\" // ... ], \"nbt\": { // Checks only for equivalency on 'key1' and 'key2' // All other keys in the stack will not be checked \"key1\": \"data1\", \"key2\": { // Data 2 } } }","title":"PartialNBTIngredient"},{"location":"resources/server/recipes/ingredients/#intersectioningredient","text":"IntersectionIngredient s work as a set AND where the passed in stack must match all supplied ingredients. There must be at least two ingredients supplied to this. This can be used by specifying the type as forge:intersection . // For some input { \"type\": \"forge:intersection\", // All of these ingredients must return true to succeed \"children\": [ { // Ingredient 1 }, { // Ingredient 2 } // ... ] }","title":"IntersectionIngredient"},{"location":"resources/server/recipes/ingredients/#differenceingredient","text":"DifferenceIngredient s work as a set subtraction (SUB) where the passed in stack must match the first ingredient but must not match the second ingredient. This can be used by specifying the type as forge:difference . // For some input { \"type\": \"forge:difference\", \"base\": { // Ingredient the stack is in }, \"subtracted\": { // Ingredient the stack is NOT in } }","title":"DifferenceIngredient"},{"location":"resources/server/recipes/ingredients/#creating-custom-ingredients","text":"Custom ingredients can be created by implementing IIngredientSerializer for the created Ingredient subclass. Tip Custom ingredients should subclass AbstractIngredient as it provides some useful abstractions for ease of implementation.","title":"Creating Custom Ingredients"},{"location":"resources/server/recipes/ingredients/#ingredient-subclass","text":"There are three important methods to implement for each ingredient subclass: Method Description getSerializer Returns the serializer used to read and write the ingredient. test Returns true if the input is valid for this ingredient. isSimple Returns false if the ingredient matches on the stack\u2019s tag. AbstractIngredient subclasses will need to define this behavior, while Ingredient subclasses return true by default. All other defined methods are left as an exercise to the reader to use as required for the ingredient subclass.","title":"Ingredient Subclass"},{"location":"resources/server/recipes/ingredients/#iingredientserializer","text":"IIngredientSerializer subtypes must implement three methods: Method Description parse (JSON) Converts a JsonObject to an Ingredient . parse (Network) Reads the network buffer to decode an Ingredient . write Writes an Ingredient to the network buffer. Additionally, Ingredient subclasses should implement Ingredient#toJson for use with data generation . AbstractIngredient subclasses make #toJson an abstract method requiring the method to be implemented. Afterwards, a static instance should be declared to hold the initialized serializer and then registered using CraftingHelper#register either during the RegistryEvent$Register for RecipeSerializer s or during FMLCommonSetupEvent . The Ingredient subclass return the static instance of the serializer in Ingredient#getSerializer . // In some serializer class public static final ExampleIngredientSerializer INSTANCE = new ExampleIngredientSerializer(); // In some handler class public void registerSerializers(RegistryEvent.Register<RecipeSerializer<?>> event) { CraftingHelper.register(registryName, INSTANCE); } // In some ingredient subclass @Override public IIngredientSerializer<? extends Ingredient> getSerializer() { return INSTANCE; } Tip If using FMLCommonSetupEvent to register an ingredient serializer, it must be enqueued to the synchronous work queue via FMLCommonSetupEvent#enqueueWork as CraftingHelper#register is not thread-safe.","title":"IIngredientSerializer"}]}